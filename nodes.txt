D]WACWG]Uy{s_{]tYj{{{ZwJ~{|I{@{YEyy{s_{sxZQocQ}Y{ ~{{KqYsUy{sQSwHT{{{]x^RUd
PJ^RU|T~]`YRVMP]dyQEs{ssUy{xHhs{yRQ@JU}U`U~dp^}BYL|tHiAhwtY|lUB|dYJ|k@|JgE~k{KqYsUy{sQP]dyR]QV[|y]_{ssUyVpPVwU[Q{NVxVBScN{YEyy{s_{sxERx{Z][~|cB{YEyy{s_{sxESA{{[bb}g_dEy|{OZ{F}|ULZUU}|{Jw[|y]_{ssUyV`KQI{yV`KQI{AsQs_{ss[Tp^Ohc{yUNP]g[|y]_{ssUyVkQ}Y{Ky_B8F_WCKUE]WqqyUy_t[bqqyXwHvq~KvKJ~HcYtsWUyqsWq_~Bjq{qXay[E{qqyUyqx_ZvyX]YZ_njutFt_ji F[Z\uGRx^q[OyyqsWqqrBjq{qXi jX^]af[J|fQIvvqF~vQ uq	ZifUte~ZifxYbXnXiXwu[qAs[sWqqy[R_d qXW[TYtsWUyqsWq\zZTuUYw[qDi_d^YeDy[E{qqyUyqxGZryX]YvviHy[E{qqyUyqxG[KqyY`jwmU}fwqvqE}X{Duv_F}XUWuvq}HwYtsWUyqsWq\jASK{q\jASK{C{[yUyqsY\zTEja{q_DR_gYtsWUyqsWq\a[[{IqUH:D_UKAWE__{{sW{_vSh{{{Xu@|{ |K@|cEfq@{QE{{qq_{{xXSeaQ}Q{|qyKqQsW{qqQSJVqy{VV\k_bPPA[Ve~JhJ~_	AhA{Cq[q_{{sYSeaQ}Qx] ~SRw}qU|ZX~fa
|QD}ey	|QJhevQ|
g}fyhlUY~s__{{sW{_TV{{{\TB{QE{{qq_{{xGkjbW{R]Y~zTk
d@QzaN{QE{{qq_{{xGPz{R]Y|vaB{QE{{qq_{{xGQKy{S``we_lwJ{vyOR{DvWLRUWvyBwY~s__{{sW{\bKQA{{\bKQA{Cq[q_{{sYVz\Ohk{{_NPUgY~s__{{sW{\iQ}Q{I{U@8N^UAA

QVW
]S


	]PP Q^ QWrHQPM\UC
U\QBABL[_\^W\]CWQEJ[LKF^CFABUFSHPWQVWBlKHW\]^]WPVPZUQ
WZQQmU YPT]R
W	PR]qgW
 SQWPRU^ZQS]PWSQ]S W	
UTR[SXFF@KS T
TL]W^QVZE_S^J[_ZD:N^]ACZ^TPU
 
]PS P [pQZYVSPG]S\B_T]\[@IBFYW\\_\WKW[GB[FIFTAFK@]LQ@ZUYV]@dKBU\W\UUZTPP]S	WRQ	YmWSU	[YQmU  SS]
PP	W^RQ	Y]ZW
QSUQ
W WVP[	SZDLBKS^
TD_U ^Q^ZG]Y\J[WZF	8L@_XS^V
T	QQWVP
V\S
W
p__]U]W]TUZTPP]S	WRQ	YmWSU	[YQmU  SS]
PP	W^RQ	Y]ZW
QSUQ
W WVP[	SZDLBKS^
TD_U ^Q^ZG]Y\J[WZF	8N^UAA
YRW	
	T	]PQ  SVr]Q^SU_U]_SUVQJK@F[_VV]^WC]QM@YFKL^KDKBUF[BZWQ\WJfIBWV]VWWP^RPUY ]PSQg]YWSS[oW
QSU ZP]TPSQW	R]
SYW	S	U	WTZQQZFDHAQ V ^F_W
T[\XG_QV@QUXF	2DTWCA
VPP] 
	WZRT	 	[TQrQXQ\YZBQVW\SJKHFY]\V]VWAWSM@QFIF\KLK@WD[BZUSVUJfABU\_VWUR^ZPWY 	WP[	Sm]SW	QQ[	mW
 SQWPRU^ZQ
Q]PWSQ]S W	
UTR[SXFF@KS T
TL]W^QVZE_S^J[_ZD:N^]ACYVSQP
T]P
 W PSpU_U__]DYW^Q@IHFQ]^\_VWAUQGBQFAD^ALKHWFQ@Z]STW@dAB]^]\U]PTZPWSUR[SoWQUQSQg]

YSWPPUTR[SWPW
YQUY ]
W^RQ	YZLF@AY
T TD_]TQ^PGUS^@[WPF:D^UKA
UZ Q 
 WP W P	r\]WWV__WQV]\S@K@L[W\\]^]KWSG@YLKF\ADAB]DQBPWYVU@fIHW\_\WWRTRZ]S WPSYmWZRW\UTPoW QY]
PZWVPSYU	ZW SSW	S
	U ]TPSQPFLBCQ ^TFUW VQ\XM_Y\B[UXL8F^WCKTW 	S

	UP\ 	PxUUWW_W_CUVQJK@F[_VV]^WC]QM@YFKL^KDKBUF[BZWQ\WJfIBWV]VWWP^RPUY ]PSQg]PPWT
U	^Zoej]
T WQQR]]
PYVWP	Pm  ^ T]TPQSWPUYYWY W	
		U^ZQSXLFHAS
T VF]]
TS\ZEUSV@YUZD2D]WACWGyy{sQVY{y{{A{YE|sQs_{^pHyR]_{EWEeQ_Ua
]TH\\^]j[zAM[Gcv\\tjU[AjB_HzHUjbDFrBWVx`ESB]N~cGRogNk]ToPP^xBj
Z}dY[|ys{ss[io`S{Z]UyUVLhgVFjkVkc{Ati]_{sxERx{Z]UyRcI{Ati]_{sxBj{{{s{J~RpRhdxX}{}gcK|lw@hg{FiodUI~RsOt}RdQkgk[|ys{ss[io^S{Z]UyRwA{YE|sQs_{^|XUk{{sxZT``N{YE|sQs_{]^T{{{sxSA{Kva]Uy{xWhp^yR]_{]DRUgQ~qyy{sQSwHT{{{sx\RodVPggGj
wQ~qyy{sQQwtQ{{{s{DUVV`Qx`eUUN{YE|sQs_{^`ASA{{sxRpQ~qyy{sQQByR]_{Y{|sV8F_WCKUE{qqy[T[{qqqKy[E~{[yUy\pJqXWUyGWMo[]WaU^B^\\Uh[xIGQEasWk]C\Ss`kudASQz` [zu|K t_	^| |EYznFieIYe\]TvYq[O|s[sWq_~Yjq{qqr[QeVJ\jqGi kYtsyyqsY[uKTq{qqq~vYtsyyqsYYei[[sYvfjY~vZYu mFv^]vaJ}edYte}~ cDvfaE}vsJvvq i_`Zq[O|s[sWq_~Bjq{qqqJ}[{C|cWUyqxJaS[[sYajnRK{C|cWUyqxEbji[[sY\u[|s{qqy[Tz^GbaqyqxEZ ^y[E~{[yUy_ZF[i[[sYa_T\SdIt_v_y[E~{[yUy\pX\u_[[sYt\a ivgjX|K{C|cWUyqx Zzu[[sY\u@Hy[E~{[yUy\|EYaqyq{Y|cH:F@_RSV	Q\P
TQP  ZVV
QxFB]FBWU^
]PTZPWSUR[SoW	^QUPPVg]

YSWPPWPW
YQUY ]
W^RQ	Y]TPQSPFDBAS V VLUW TSVZM_Q\@Y_ZL	8D\]AKSQZT 
WRW	\xTEQYHQSWTU\Z_VUUQ]\S@K@L[W\\]^]KWSG@YLKF\ADAB]DQBPWYVU@fIHW\_\WWRTRZ]S WPSYmD]YIWm	mW
 SQWPRU^ZQS]PWSQ]S W	
UTR[SXFF@KS T
TL]W^QVZE_S^J[_ZD:N^]ACTQ
  
VT]P P]pTGSSJQXY\BYVUQV]\S@K@L[W\\]^]KWSG@YLKF\ADAB]DQBPWYVU@fIHW\_\WWRTRZ]S WPSYmCW]ETmmW
 SQWPRW S
]
 ZWRPU	ZWTZQQWRU SS]SW	]TPQSPFDBAS V VLUW TSVZM_Q\@Y_ZL	8FBWXY\
 WS^VQS\ZW\TVRW
Q\^rVGQ[@[R[^B[^__S
]PTZPWSUR[SoAW_M^g oW
QSU ZP]TPSQW	R]
SYW	S	U	WTZQQZFDHAQ V ^F_W
T[\XG_QV@QUXF	2DTWCAUSTY V	WZP  
VrJYZGVWSW^Q@IHFQ]^\_VWAUQGBQFAD^ALKHWFQ@Z]STW@dAB]^]\U]PTZPWSUR[SoAW_M^goW
QSU ZP]TPSQW	R]
SYW	S	U	WTZQQZFDHAQ V ^F_W
T[\XG_QV@QUXF	28