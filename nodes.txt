D]WACWG]Uy{p_{]tYj{x{ZkJ|RxA|I }{
|Y{AsQp_{ss[io]S{Z][~R`Q~q]Uy{p_{]ZDS`Q}Yxjo{Skg
GjcMQIGj``Q~q]Uy{p_{]^YyR^QtYHl|kJgF|p|Y}R|~gwEio|LhgtX}Ux}d`^lp{YEyy{p_{sxGj``Q}YxSAxKqYsUy{pQQwtQ{x{Y\SUwBQI
[|y^_{ssUyVsNQ^c[Qx|t[|y^_{ssUyVsB{Z][dS}`csJ}lR_ZsK}QO}sJ{p@}t]E}kxKqYsUy{pQVwJHyR^QVwJHyQFs{ssUy{{Whp^yR^QP]GjkxKqYsUy{pQVY{yRxQq^:N\]AC]FWUyqsWq\~Yjq{q[}J~q vH}KHuKu[|s]WqryUy_t@brqyXk qXOyyqsWqrr]R| q[W[R_d bv~D|_`aLYR\EZr\y[E{qryUyqx@brqyXVYuj^jvQtemjfQDvuvXqbe~X|fkwuS}X^\u[mH}a{C{XyUyqsYZ\nyX]Y\u[|s]WqryUy\pX\v_[[{F\\Bi gFqXOyyqsWqrrERx q[W[~vcJqXOyyqsWqrrESK{qZbbwgWue}yv{Gu[qF}vUDue_U}fUuu}[|s]WqryUy\`C[Hqy\`C[HqAs[sWqry[Tz^Gbbqy_FZ\m[|s]WqryUy\kYwXqKyUB	2GUWCATO]W{qq_xUt[hqyxRwH|qA|KA|sY~s__x{sW{_vHk{{{XixQE{{qq_x{x_P~xR]YV fQktF~_b	h
F[P\}MSx^{[Gsx{sW{qzHk{{{XbSkokGhfrU}oxZ}eyL{}q k|kI~e~T|U|HfR|U{GkKyKrQsW{qqQSUd {X_QUY~s__x{sW{\rPUUY}[yNk`ZGPuvHSQ
Y~s__x{sW{\rNRVcY}[y|Y~s__x{sW{\rBxR]YfY	}cksHf}_|RsI[ O~{H}qq@~|]GayKrQsW{qqQUJJ{X_QUJJ{[Gsx{sW{qzT`p\{X_QSUEhayKrQsW{qqQUQ{{XyQrV8D]]BKWGWVqqqU{]~Zbqy{ZaItXyK|IIv[JduXts_U{syVq_vBhsqqXi{YOzqqqU{sr^Z~{ZWXa_fGhhbGZufGkmDbubGQIDbja[~qWVqqqU{]TZqX_[hgqFvHeJkZuEbX\_kIbXW~dP[ve}FhtywveEh]maXy{YOzqqqU{srDbja[}Yr[KyAqYyVqqq[Qw~Yqy{YHZ 	_~IqB{[qU{syX[u	KVsqqXaIqB{[qU{syX[z}[}Yr~lbt{t}KuqqKtqHtfq~d}qvu}ZyIq[Gy{syVqqzPxuXw[zPxuXts_U{syVq\bQwmXw[zGP]q[Gy{syVqqz {ZWXu[yyTa2D\WAC STW
TY

 	WRPYW 	SWp@XZG^UAW\SJHHFY]\V^VWAWSMCQFIF\KLK@WD[AZUSVUJeABU\_VTUR^ZPWY	WS[	Sm]	SPVT	P]PZT{mW	QSU ZP]WPSQT	R]
SYW	S	U	WTZRQZFDHBQ V^F_W
W[\XG_QVCQUXF	2GTWCASTVR] 
	TZQP 	QrQXQ_YZE_S^JU^
TVQBKBDQ^V^]\UB]QE@[DAL^CFIHTFSBX]P\WBfK@]V]^W]PVPRTQ 	]PQPgU	YWRSSm]	
SQT RR]TPQPWSUYYWYW				U^ZQSXLEHAS
W VF]]
TS\ZEUPV@YUZD2FB]XQVT

^SQ	UTRVUY 
WxVUWW_WU]]PVPRTQ 	]PQPgU	YWRSSm]	
SQT RR]TPQPWSUYYWYW				U^ZQSXLEHAS
W VF]]
TS\ZEUPV@YUZD2D\WACS PW	T 	WRY 
QVpUXTYW]U_VY]_[@IBFYW_\_\WKT[GB[FIETAFK@]LQ@ZUYU]@dKBU_W\UUZTPP]S	TRQ	YnWPU	[YQmU  SS]	PP	T^RQ	Y]ZW
QPUQ
W  WVS[	SZDLAKS^
TD_U^Q^ZG]Y_J[WZF	;N^UAA
	 TPR
T

	 ]PPT   QVSrSPXVSX@S^W^[CABD[]^_W\UAU[DJ[DKDTBFIBWLRHXWST]ClK@W^W_]WZWPRWP
	UZQSoT	Q]QYR	oW	QSU ZP]WPS
ST	R]
SYW	S	U	WTZRQZFDHBQ V^F_W
W[\XG_QVCQUXF	2GTWCAP\	QQR V	TZW 
ZQrU]]VUWFY
U\QBAAL[_\^W_]CWQEJXLKF^CEABUFSHPWQVWBlHHW\]^]WPVSZUQ
WZRQmUS]SSS	nW
PYU
RZWTZRQWRU SS]ST	]TPQPPFDBAP V VLUW TSVYM_Q\@Y_YL	8D\]BK]S
S 	WR	]RxV_UWTWV]STW^Q@IHEQ]^\_VTAUQGBQEAD^ALHHWFQ@Y]STW@dAA]^]\U]PTZSWSUR[SoWS	PUV
]VPg]

YPWPSUTR[SWPW	YQUY ]
T^RQ	YYLF@AY
T TD\]TQ^PDUS^@[WPE:D^UKBTUQ
 WP V P q__UU_UVI]_[@IBFYW_\_\WKT[GB[FIETAFK@]LQ@ZUYU]@dKBU_W\UUZTPP]S	TRQ	YnWPZU	\ WWPmehTV	]SQZTWPP\URZo 	
T V
WVPSYU	ZW PSW	P
	U ]WPSQPELBCQ^TFUT VQ\XM\Y\B[UXL8F_WCKUE{qry[T[{qrqKy[E~{XyUy\pJq[WUyGWMo[]WaU]B^\\Uh[xIDQEav^T}`_YCj@WApBWhbFN{H]Tz`G[KWD|cEZfmDi _\f	ZR\x@bPfYYtpyyqsYafjYyX]Wq\\FjeVDbb\ia{C|`WUyqxGZryX]Wq[i}K{C|`WUyqx@brqyq{Hv[zXjfxZurecIte}Jje{Dafn_}Kv[yE}v u[n[iekYtpyyqsYafTYyX]Wq[}Ky[E~{XyUy\|Z]bqyqxX\ijDy[E~{XyUy_\\rqyqx[HqAtc]WqrrUjp\q[WUy_FZ\m[|s{qry[QuJ\rqyqx^Zfn\RegEb}[|s{qry[Sut Yrqyq{F]_\jSz`g]v_Dy[E~{XyUy\`C[Hqyqx Zyu[|s{qry[S @q[WUy[{~{_:D_UKBWE sx{sYV[yx{{I{[GvrQsW{\rBxR]W{GUDeY_Wc \T@\^T\jYp@M[ Gaq_a]ATYybkwlKQSzbRp~K	}U\~ ~MPpdDkeAPoV_Vv[xQE~q[q_xUt[hqyx{xYSeTBU`{Ek iQ}y{{qqQRIVqyx{{ |v}Q}y{{qqQPocY}[qQl`[|vXQ|
gD}v\UkHefQ}ow| aLlkGvqB|{k_bRxQE~q[q_xUt@hqyx{{H[yKui]W{qzBhYY}[qQh`d PKyKui]W{qzMk`cY}[qQUY~s sx{sYVz\Okk{{qzMS
\{[GvrQsW{_XNRcY}[qQhU^^QfA}U|]{[GvrQsW{\rPUUY}[qQ}Vc am`Z~KyKui]W{qzSpY}[qQUJJ{[GvrQsW{\~MPk{{qyQuiB	8FBW[Y\
	S
VZ VSR		PVT[rD@]DJ^_\WPVSZUQ
WZRQmUTS]RPTnW
PYU
RZWRU SS]ST	]TPQPWVPSYZDFBCYT^E_U V[_PG]S\BQVPF	8FTTKA
QYSV 	 UZU	UrVGQ[@XY]VW\XW__WSW^Q@IHEQ]^\_VTAUQGBQEAD^ALHHWFQ@Y]STW@dAA]^]\U]PTZSWSUR[SoF][A^goW	QSU ZP]WPSQT	R]
SYW	S	U	WTZRQZFDHBQ V^F_W
W[\XG_QVCQUXF	2GTWCAVS
 TV	TZ	 
ZWrTE[Z@[Z[\@Q__STW^Q@IHEQ]^\_VTAUQGBQEAD^ALHHWFQ@Y]STW@dAA]^]\U]PTZSWSUR[SoAW_M]goW	QSU ZP]

S W
SU	ZZWP WVS[	SUP]
QSTQ 		]
WVPSYZDFBCYT^E_U V[_PG]S\BQVPF	8DJ^RS^	WQW\S[UPU U^TPWYUTpTGSSIQXY\BYVVUQWPVSZUQ
WZRQmAUWDTmmU  SS]	PP	T^RQ	Y]ZW
QPUQ
W  WVS[	SZDLAKS^
TD_U^Q^ZG]Y_J[WZF	;N^UAA
WSVP
	T	 ]P
R TrHQSM\US
U\QBAAL[_\^W_]CWQEJXLKF^CEABUFSHPWQVWBlHHW\]^]WPVSZUQ
WZRQmAUWDTmmU  SS]	PP	T^RQ	Y]ZW
QPUQ
W  WVS[	SZDLAKS^
TD_U^Q^ZG]Y_J[WZF	;2