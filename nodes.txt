D]W@CWG]TyqsW{]tXjq{{ZkK|X{I|ID|Xw s{@s[sW{ssZie^[{Z]Z~XcY~q]TyqsW{]ZEScY}YxZje\V]@jeZhcXjuJ~]_Tq{CqYsTyqsYSgcZ[x[}dpY}XIXiXc~dciegD}twIj[IhgkJ}HwJwvcY~q]TyqsW{]_Tq{{^VIy[E{{ssTyqxGkh`\yX]Y~pCRugF{YExyqsW{sxDRx {Z]Z~vcJ{YExyqsW{sxDSK{{[cbwgWdDyv{GZG}v{DZsT}vgtwZ|s]W{ssTy\`CQI{y\`CQI{@s[sW{ssZTz^Ghc{y_FP]gZ|s]W{ssTy\kY}Y{JyUB	8F_VCAUE\W{qqUy_u[hqyyXjH~XyK~K|[J~vXY~s_UyqrW{_vBjqz{Xiy[D{{qqUyqy_P~yX\YV f[juuF~_bi G[P\}GRy^{[GyyqrW{qzBjqz{_i i_fIkH~_|fzh_eF~uvG}q ~ jJ~f[Jj_jJXXX}vT}qyAs[rW{qq[R_e {X_[T~Y~s_UyqrW{\rZTuTY}[yDju_Jk \ERu_Eha[|s\W{qqUy\qFQ\a[[z |v}[|s\W{qqUy\qJ{X_[dY
u`aqJ}f~WXqK}KG[ K}qrG|f_E}azCq[qUyqrYVuHHyX\YVuHHy[D{{qqUyqy Wjr^yX\YP_	GjazCq[qUyqrYV[yyXzYq\ :D^UAA
WD_U{ssW{^vYhs{{YiJ~Z{I|JHcHIS[~q]W{pqU{]t@hpy{Zk {ZGy{ssW{pz]P| {Y_[VxxVtX_VgJEhk~H~]`kDYP^EP z\{YE{{pqU{sx@hpy{ZJ}wr_|]x[~gX_}ggD|tuIhdv^~dpZkahdYeKY{CqZqU{ssYP^f{Z]YV }[~q]W{pqU{^pXVtW[}Y{Fkd~I{CqZqU{ssYQt	KVs{{YaI{CqZqU{ssYQ{}[}Yxfbt{twH`qKt{J~gqK~d{G{wq}ZsH{ZGy{ssW{pzPxY}ZzPxY~r_U{ssW{]bQwgY}ZzGP\{ZGy{ssW{pz {Z]YZyyTa8E]WACVG]UyqqUz]tYjqyzZwJ~q}I}qJ}JQ[|s_UzssUy_vBis{yXizYEyyqqUzsx]R~zZ][R_fiwtD|_bjFYR\}GQx\y[GyzssUyqzBis{yX[H~tx[~HfYdhZjfyF}w{}a[idQ|ea jZgJ}ei ithYiayApYsUyqq[Q]dyX_[W[|s_UzssUy\rZWwU[[yDP|]R 	AI{As[qUzss[Su	KWs{yXa~I{As[qUzss[Sz}[|Yx}dbtztwJ~aqK~t{H|fqKd{Eyvq|ZsJy[GyzssUyqzQx[[zQx[|s_UzssUy\bPwg[[zGQ^y[GyzssUyqz zZ][}[yyUa:D\W@C STV WQ
WRQST SVpJ[RG^TAW]S@K@FY]]\]^WAVSG@YFIG\ADK@WDQBZUSWU@fIBU]_\WURTRPWS 	VPS	SlW
SQVW		PUQPWsmV
QSU
RP
WTPS
QW	RU
RSW	RU	WUPQQZGDBAQV VF_V TS\XG^Q\@YUXF
	8D\WCA	P	TVRW
WRQQ  QrPX[\QZE_R^@]^
W^QBKCD[]^^]]UAUQE@ZDKD^CGIBWFSBXWSTWBfJ@W^]^WWPVQRWQ 	UPPSoU	QWQSSlW

RQWRRUTPPSW
PUSQW
S V	
	UTRQRXFF@AR T VF]WTS\[E_S^@YU[D:FB]YQ\T VSPUTR WVQ 
VrU]WW_V_^
WPVQRWQ 	UPPSoU	QWQSSlW

RQWRRUTPPSW
PUSQW
S V	
	UTRQRXFF@AR T VF]WTS\[E_S^@YU[D:D\W@CS PV	 UWR
S QWp_[\YW]T_UQ W\S@IBGY]\\_\VAWSGB[GIF\AFJ@WDQ@[USVU@dKCU\_\UURTPQWS
	WRQ	SmW
SU	QQQmU
SRW
PQ	WVRQ	SUPWQSUQ 	W

VVPS	S[DFBCSTTD^U VQ^ZF]S\B[WZG	8F^UA@
 TQR W


UPPU  	QVSsSZ[^SX@STV^Q@IBD[\^\_\U@UQGB[DKD^AFIBVFQ@XWRTW@dK@W^]\UWPTPRVS	URQRoW	QUPSQoV
QSU
RP
WTPSSW	RU
RSW	RU	WUPQQZGDBAQV VF_V TS\XG^Q\@YUXF
	8D\WCA	ST	QPRVWRV   RQrT]WU]WFX
U\PBKBD[_\^]\UCWPE@[DKF_CFIBUGSBXWQVVBfK@W\\^WWQVPRUQ 	WPQQmU	SWSRSmWSQU
RRWUPQQVRUSSWS
W		UTPPSXFDB@S VVF]W US\ZE_Q\AYUZD	8E\WAC WP
S

VR
U 
RpV_UVT]UUST	W^QAIBFY]^]_\WAUQFB[FID^@FK@WFP@ZUSTWAdKBU^]]UUPUPPWR	URQ	SoVP	PU	V

WVQmU

SSWQP	UTRQ	SWPV
QQUQ W

WVRQ	SZDF@AST UD_UTP^ZG]S^@ZWZF	:D_UAA
UU Q
WQ
V Q rW_UU^UUA W\S@IBGY]\\_\VAWSGB[GIF\AFJ@WDQ@[USVU@dKCU\_\UURTPQWS
	WRQ	SmWQRU	VWTPmdhWV	USPPWWQSTURRo TV WVQSQU	RW
SSV	S	U WTPS
QZFDBC Q VTG_W VQ]XG_Q\B[TXF	8F_VCAUE{{qq[T[z{qyKy[D~q[qUy\qJ{X_UyGVGg[]W`_^B^]\_ hZxCGYEaw^^~h_YCk@]BxBWhcFDx@]TzaGQH_D|bEPeeDi _VeZR\y@h XfXY~s yyqrYkebYyX\W{_TFjeWDha\iazCvc_UyqyGPzyX\W{Xa}KzCvc_Uyqy@hqyyqzH|XrXjfyZq ebI~fuJjezDkef_}K|XqE}v~ Xf[iejY~s yyqrYke\YyX\W{XuKy[D~q[qUy\}ZWayyqyXVjbDy[D~q[qUy_\VqyyqyQKyAtc\W{qzUjq\{X_Uy_FP_e[|s{{qq[Qu
JVqyyqy^Pef\RefEh u[|s{{qq[Suu SqyyqzFW\TjSzagWuWDy[D~q[qUy\aCQKyyqy Pz}[|s{{qq[S @{X_Uy[z~q\ :D^UAA
WD y{ssYVZy{s{I{ZG|qYsW{]rH{Z]W{FUGeY_Vc
_\@\^^_jYzCE[ G`qUa\A^QybjwfKQS{bQx~J	~]\~~GSxdDkdKSgV_Vw[{YE~qZqU{]t[hpy{sxYSdTHVh{Eki[~q{{pq[QwIVpy{s{ |w}[~q{{pq[SgcY}Zq[|d`[|wX[gD}w\_|cHdf[~gw|aF|dkGwqH|t{k^bX{YE~qZqU{]t@hpy{s{HZyAva]W{pzHkYY}Zq[khd PJyAva]W{pzGhhcY}Zq[VY~r y{ssYV{\Ehc{{pzGP\{ZG|qYsW{^XDQcY}Zq[k]^^Q fK~]|]{ZG|qYsW{]rZVwUY}Zq[~Vck|e`Z~JyAva]W{pzPxY}Zq[VwJJ{ZG|qYsW{]~GSc{{py[vaB	8GB]XQ\
S
 VR VSR
PWT SrD@\D@]_\WQVPRUQ 	WPQQmU	TS
WRQTmWSQU
RRVRUSSWS
W		UTPPSWVQSQZDFCCQTTF_UVQ\XG]S]B[UXF	9F^WCA
QSP V

UP	U 	VrVGP[J[Q]VW]X]\WWS	W^QAIBFY]^]_\WAUQFB[FID^@FK@WFP@ZUSTWAdKBU^]]UUPUPPWR	URQ	SoF\[K]ooV
QSU
RP
WTPS
QW	RU
RSW	RU	WUPQQZGDBAQV VF_V TS\XG^Q\@YUXF
	8D\WCA	VSTVWR	   RWrUEQYH[Z[]@[\WST	W^QAIBFY]^]_\WAUQFB[FID^@FK@WFP@ZUSTWAdKBU^]]UUPUPPWR	URQ	SoAV_G^ooV
QSU
RP
U

R
 WP	U	PRWP VVPS	SU	PW
QRW	Q 	U
WVQSQZDFCCQTTF_UVQ\XG]S]B[UXF	9D@]ZS^
	VQTTSQVPU VVTPVSVTpTFSYJYXY\CY\UUQWQVPRUQ 	WPQQm@U]G\mmU
SRW
PQ	WVRQ	SUPWQSUQ 	W

VVPS	S[DFBCSTTD^U VQ^ZF]S\B[WZG	8F^UA@
WRVS
	TUP
R  TsH[PE\UR
U\PBKBD[_\^]\UCWPE@[DKF_CFIBUGSBXWQVVBfK@W\\^WWQVPRUQ 	WPQQm@U]G\mmU
SRW
PQ	WVRQ	SUPWQSUQ 	W

VVPS	S[DFBCSTTD^U VQ^ZF]S\B[WZG	8: