D]WABWG]UxqsQ{]tYkq{ {ZwJq|IaNJ{[}s]Q{ssUx_tFhs{xXk{YEyxqsQ{sx]S|{Z][S_dhwtD}_`kFYS\CPx\x[E}{ssUxqxFhs{xXYk]h^hec~d^XkuwB|tc~ahgxY}ewA|h[kX{O}d`_k[{EqYsUxqs_P]dxX]_V[}s]Q{ssUx\p^VwU[~[{@kg|S{@{YEyxqsQ{sxESx{Z][vcL{YEyxqsQ{sxERK{ {[bcwgQdwxv{AZ{F|f{BZkU|vw Jw[}s]Q{ssUx\`EQI{x\`EQI{Ar[sQ{ss[Uz^Ahc{x_@P]g[}s]Q{ssUx\k_}Y{KxUB8F_WBAUE]V{qwUy_tZhqyXkI~XK~K [K}vkX~sYUyqsV{_pBjq{{Xoy[Ez{qwUyqx^PxyX]XV `[jutG~_di FZP\{GRx_{[AyyqsV{q|Bjq{{_`_}v hecE|fZ\HwF~vcajX`]~e`_edZ|v|YiXQaAs[sV{qw[R_d{XY[TX~sYUyqsV{\tZTuUX}[DTu^F~KAs[sV{qw[SuHVqyXcKAs[sV{qw[SzX}[|}d`w{vsJ}KsHvK|fwH~f yvsI}X{Jy[Ez{qwUyqxPz{[[xPz{[|s]V{qwUy\`Quc[[xDP ^y[Ez{qwUyqx{XY[}[{zTc:D_TAAWE^U{usW{_wYhu{{XtJ|u |KeIHh[~w]W{qpU{[t@hqx{\k {[Fy{usW{q{]P| {X^[k[dEhjkDPqdEk dGhq`EQKGhncY~s^U{usW{_]Y{\]YhugXrsHkH`FLsH|[k[~fVh\sD|Xt|LU|u`J|[{{[Fy{usW{q{GhncY}[{QO{Cq[pU{usYQuwSu{{[HhaJC~KxAq_sW{qp[QqIVqx{\c KxAq_sW{qp[Q~Y}[{}f`v{vtHusIvxK~bwI~fx {rsH}X|J{_E{{qpU{ux Pz|[}_x Pz|[~w]W{qpU{X`Qud[}_xEP ^{_E{{qpU{ux{X^[_{{Tc8@_UAASE_U{rsU_vYhr{XuJ|rxK|b{qyAqXsUqq[kf^YX_[|[c[zs_U{rsU_XDQc[y[zQ_dWujPv^U}GhydXW bGQHDU_S[~p]UqqU{\^YX_[kd_lvbX|[YFoevZkHx aH~eUxXaFkeUKxvS |KQE{eaK{XEyqqU{rxGlja[}XxUKyAqXsUqq[QvtWqy{X_U_\^P\`HWu\E~H{Au[qU{rs[Uu	KVr{XaH{Au[qU{rs[Uz}[}Xx}bbt{uwJ{aqKu{KzfuK~e{ vqJ}[J[Gy{rsUqzPy[y[zPy[zs_U{rsU\bQvg[y[zGP^[Gy{rsUqz {[][{[yyT`<D\WAB STW	 WW

	WRPSTSWqJ[TG^U@W\R@KFFY]\\]XWAWRG@_FIF]ABK@WEQBZUSVT@fOBU\^\WUSTTPWS 	WPU	SmW
SPWW	P	SPPWumW	
QST
TPWTPSPW	SS
SSW	SU	WTPQQZFEBAQ W PF_W TU\XG_P\@_UXF8DZWCAPTVSW
 WTQP   QrQY[\WZE_S_@[^
WXQBKBE[]X^]\TASQE@[EKB^CFHBWFSBYWSRWBfKAWX]^WWPVPSWQ SPQSiUWWQSSmW

SPWRSSTPQSWPU	SWWS W
	TTTQSYFFFAS T VF\WTS\ZD_SX@YUZE<FB]XP\T
 PSQUTS VVW 
W	rU[WW_W_^WPVPSWQ SPQSiUWWQSSmW

SPWRSSTPQSWPU	SWWS W
	TTTQSYFFFAS T VF\WTS\ZD_SX@YUZE<D\WABS PWT WRSQVq_[ZYW]U^UWW\U@IBFX]\\_\WAWUGB[FHFZAFKAWBQ@ZTSVS@dKBT\Y\UTTTPPWSWRQSmWSUQWQmT
SSW
PPWPRQSSPW
PSUP W
WWPU	SZEFBESTTD_T PQ^ZG\S\D[WZF8@^UAA TPS W

SPPT QVSrRZ[XSX@RTW_Q@OBD[]_\Y\UATQGD[DKE^AFIBWFQFXWSUW@bK@W_]\SWPTPRWS	TTQSnW 	PSQSQoW	
QST
TPWTPS
RW	SS
SSW	SU	WTPQQZFEBAQ W PF_W TU\XG_P\@_UXF8DZWCASR	QQSV WTW   TQrU\WU[WFYU\QCKBB[_\_]\SCWQD@[BKF^BFOBUFRB^WQVWCfKFW\]_WWPWPTUP WPQQmTSWSSRmW
SWU
STWTPQQWRTSSWS WSTPQS^FDBAS V WF[W TR\ZC_Q\@XUZB	8D]WAE	WP
S	

WS
SSvV_UWU]USST	W^Q@HBF_]^\^\WAUQGC[FOD^AFKFWFQAZSSTW@eKBS^]\TSPTPPWSUSQSoWP	PTV
WVPmS

SSWPPUTSQSWPW
WQTW W
WPRQSZBF@AST TE_STQ_ZG[S^@[VZF:D^TAATTQ
	
WP
VPrQ_UU_TUGW\U@IBFX]\\_\WAWUGB[FHFZAFKAWBQ@ZTSVS@dKBT\Y\UTTTPPWSWRQSmWPTUVWTPmeiW VSSQPWWPSRUSTo T W WVPRWUTW
SSWS	TWTPSPZFBBCP PTF_W VQ\YG_W\B[UYF8F_WBAUEz{qw[T[{{qKy[Eq[wUy\pK{XYUyGWGa[]Wa	_^B^\]_h[yCG_Eav_^~n_YCjA]B~BWhbGDxF]Tz`FQHYD|cDPecDi ^VeZR\xAh ^fYX~syyqsXkedYyX]V{_RFjeVEha\ia{BvcYUyqxFP|yX]V{Xg}K{BvcYUyqxAhqyq{I|XtXjfx[qecH~fsJje{Eke`_}K |XwE}vX`[iekX~syyqsXkeZYyX]V{XsKy[Eq[wUy\|[WayqxYVjdDy[Eq[wUy_]VqyqxQKAtc]V{q|Ujp]{XYUy_GP_c[|sz{qw[QuKVqyqx_Pe`\RegDh s[|sz{qw[SutSqyq{GW\RjSz`fWuQDy[Eq[wUy\`BQKyqxPz{[|sz{qw[S A{XYUy[{q\:D_TAAWEy{usYV[x{u{I{[F|q_sW{\sH{\]W{GTGeY_Wb
_Z@\_^_jXzCC[ GapUa]@^WybkvfKQSzcQ~~K~[\~ GS~dDkeKSaV_VvZ{_E~q[pU{[t[hqx{uxYSeUHVn{Ek h[~w{{qp[QqIVqx{u{ |v|[~w{{qp[SacY}[p[|b`[|vY[gD}v]_|eHeg[~aw| `F|bkGvpH|r{k_cX{_E~q[pU{[t@hqx{u{H[xAvg]W{q{HkYY}[p[knd PKxAvg]W{q{GhncY}[p[VY~sy{usYVz]Ehe{{q{GP\{[F|q_sW{_YDQcY}[p[k[^^QgK~[|]{[F|q_sW{\sZVqUY}[p[~Vc k|c`Z~KxAvg]W{q{P~Y}[p[VqJJ{[F|q_sW{\GSe{{qx[vgB	8FC]XW\
S VT VSS
PVU UrD@]E@]_\WPWPTUP WPQQmTTSWRPUmW
SWU
STWRTSSWS WSTPQSWVPRWZDFBBWTTF_U WQ\^G]S\C[U^F	8G^WEA
PSPV

TPUV rVGQZJ[W]VW\Y]\QWS	W^Q@HBF_]^\^\WAUQGC[FOD^AFKFWFQAZSSTW@eKBS^]\TSPTPPWSUSQSoF]ZK]ioW	
QST
TPWTPSPW	SS
SSW	SU	WTPQQZFEBAQ W PF_W TU\XG_P\@_UXF8DZWCAVS
TV WT	   TWrTDQYN[Z[\A[\QST	W^Q@HBF_]^\^\WAUQGC[FOD^AFKFWFQAZSSTW@eKBS^]\TSPTPPWSUSQSoAW^G^ioW	
QST
TPS

S
 W
PUPTWP WWPU	STPW
QSWQ S
WVPRWZDFBBWTTF_U WQ\^G]S\C[U^F	8E@]\S^
WPTRRQVPU VPTPW	SVTpTGRYJ_XY\BX\UUQWPWPTUP WPQQmAT]GZmmT
SSW
PPWPRQSSPW
PSUP W
WWPU	SZEFBESTTD_T PQ^ZG\S\D[WZF8@^UAAWSWS
	TSP
S   TrI[PC\USU\QCKBB[_\_]\SCWQD@[BKF^BFOBUFRB^WQVWCfKFW\]_WWPWPTUP WPQQmAT]GZmmT
SSW
PPWPRQSSPW
PSUP W
WWPU	SZEFBESTTD_T PQ^ZG\S\D[WZF8<