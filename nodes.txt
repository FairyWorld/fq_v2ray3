D]WACWG]UyzsW{]tYjz{{ZkJ|S{I|IjI}c{AsPsW{ss[in^[{Z][~ScY~q]UyzsW{]ZDS
cY}YxGja`[kg
GjqdZS`GS@FQ]Q[|x]W{ssUyT^[{Z][j}h[hg{Hj}sD|]g ~j |]kE|nw ZgF}tZtcjmw}dQyPE{{ssUyzxEhhc[PxQI{AsPsW{ss[S~t Ss{yP@Pg^j~^XVwgDyPE{{ssUyzxGPxyS]Y|tcHyPE{{ssUyzxGQI{yR``ugU}mw{t{E}S{DtYF}SsWtg}}wY~q]UyzsW{^`AS@{{^`AS@{CqYsUyzsYVx^Ejj{{]DRTgY~q]UyzsW{^k[P{I{WB:O_UAC\E_UyqsWp_vYjq{pXiJ|X{IwK~aHwXu[|s]WpqqUy_t@cqyyXk p[GyyqsWpqz]R| pX_[T dYcuvD|_`` DYR\E[z\y[E{pqqUyqx@cqyy_`\`faHju{ufjX~egDwvS}[cvv^|f{`eujvpYcvy~q{Cz[qUyqsY[_fyX]Y]}[|s]WpqqUy\pX]uW[[{FZbBS[
Yus_UyqsWp\rDS\cYv[y~vYus_UyqsWp\rHyX]YmY	wbasHtf}U}XsIt[ EaItqqE~f]GtayAs[sWpqq[TuJJpX_[TuJJp[GyyqsWpqzUjp\pX_[R_EcayAs[sWpqq[T[{pXy[s\3D]WCAWG]W{qq^{]t[hqy{ZkH~Xy@|I[A}tQY~s_^{ssW{_vIhs{{Xi	{YE{{qq^{sx_P~	{Z]YVzzVwZ]VeHLhh|J~_bkF[P\}LPx^{[Gr{ssW{qzIhs{{_ukt[}ee
~d |fiM|wt\k[P}tdZ~eiZwhfWJZZKyJqYsW{qqPP]d {X_PVY~s_^{ssW{\rQVwUY}[yOQp@PuGO{YE{{qq^{sxGPz	{Z]Y|vaC{YE{{qq^{sxGQKy{[``we^dwH{vyNZ{Dv[MZsWvetwY~s_^{ssW{\bJQI{{\bJQI{Cq[q^{ssYVz\Nhc{{_OP]gY~s_^{ssW{\iP}Y{I{U@ 8F_UAA
UE_U{sxUy_vYhspyXiJ~ZpK~K }sK}vS[~qVUyqqU{]Bjqy{Z`y[Gy{sxUyqz]PwyX_[k]oGjjjDPwoGi eGhwkGSKGhhh[|s_U{sxUy_\Y{ZV[}HaEhthJ}eiFkg`}q kJkY|f\Y|w`Fuj_kdtHjfqZxKy[Gy{sxUyqzGhhh[[zQIpAs[qU{sx[SuvSspy[	KVgZDy[Gy{sxUyqzEPsyX_[|thHy[Gy{sxUyqzEQIpyYb`ulU}f}E{tpE}XyFtRF}XqUtl}vu[~qVUyqqU{^kASKy{^kASKyAqYxUyqq[VxUEjay{]DR_e[~qVUyqqU{^`[[yK{WI:D\WAC STWWQ

WRPXT 
SWpA[RG^UAW\SKK@FY]\W]^WAWSL@YFIF\JDK@WDZBZUSVUKfIBU\_WWUR_RPWX 	WPS	Sm\
SPVW		PUP[WsmW
QSURP\TPSQW	RU
SXW	SU	WT[QQZFDIAQ V VF_WTS\XG_QW@YUXF	3D\WCAP	TVR\
WRQP QrQXP\QZE_S^K]^
W^QBKBDP]^^]\UAUQE@[D@D^CFIIWFSBX\STWBfK@\^]^W\PVPRWQ 	 UPQ SoU	QW QSSm\

SQWRR UTPQ SWPUXQWX W	
	U_RQSXMF@AST VF]\TS\ZETS^@YUZD :FB]XQWT
VSQUTR
 V
VQ 
WyU]WW_WT^
\PVPRWQ 	 UPQ SoU	QW QSSm\

SQWRR UTPQ SWPUXQWX W	
	U_RQSXMF@AST VF]\TS\ZETS^@YUZD :D\WACS PW	  TWRX 
QVpT[\YW]U_UQ\\S@IBFYV\\_\WJWSGB[FIF\AFK@\DQ@ZUXVU@dKBU\_\UURTPP\S	WRQ	XmWSU	ZQQmUSS\
PP	WVRQ	XU[W
QSUQ	WWVPS	SZDMBCS_TD_U VQ^ZG]X\B[WZF	 8F^UAA
 TPRW

UPPT   	QVSrSQ[^SX@S_W^Z@IBD[]^\_\UAUZGB[DKDUAFIBWMQ@XWST\@dK@W^V\UW[TPRWS	URQSoW	QUQXQoW
QSURP\TPS
SW	RU
SXW	SU	WT[QQZFDIAQ V VF_WTS\XG_QW@YUXF	3D\WCAST	QQRVWRW RQrU]\U]WFY
U\QB@BD[_\^V\UCWQEK[DKF^CFIBUFSIXWQVWBmK@W\]^\WPVPRUQ	W[QQmU	S\SSSmW
SQU
RRWT[QQWRUSS\SW		
UTPQ SXFDBA
S V VM]W TSWZE_Q\@Y^ZD	8D\\AC\P
S
WR
U	 R pV_UWTVUUSTW^Q@IIFY]^\_WWAUQGBPFID^AMK@WFQ@ZUSTW@d@BU^]\UUPT[PWS	URZ	SoWP	PU	V
\VPfU

XSWPP	UTRZ	SW PW
QQU Q \
WVRQ	XZDF@AXT TD_UTQ^QG]S^@[WQF	:D^UJA
TU	 Q
WPV 	P rW_UU_UUA\\S@IBFYV\\_\WJWSGB[FIF\AFK@\DQ@ZUXVU@dKBU\_\UURTPP\S	WRQ	XmWPRU	]W TPmehWV		USQ[WWPSTUR Ro T VWVPSQU	RWSSW	S	U \TPSQQFDBCQ VTFTW VQ\XL_Q\B[UXM	8F_WCJUE{pqq[T[{pqyKy[E~z[qUy\pJpX_UyGWLg[]WaT^B^\\T h[xHGYEav^U~h_YCj@VBxBWhbFOx@]Tz`GZH_D|cE[eeDi _]eZR\x@c XfYYus yyqsY`ebYyX]Wp_TFjeVDca\ia{C}c_UyqxG[zyX]WpXa}K{C}c_Uyqx@cqyyq{HwXrXjfxZtq ecIufuJje{D`ef_}KwXqE}v tXf[iekYus yyqsY`e\YyX]WpXuKy[E~z[qUy\|Z\ayyqxX]jbDy[E~z[qUy_\]qyyqxZKyAtc]WpqzUjp\pX_Uy_F[_e[|s{pqq[QuJ]qyyqx^[ef\RegEc u[|s{pqq[Sut Xqyyq{F\\TjSz`g\uWDy[E~z[qUy\`CZKyyqx [z}[|s{pqq[S @pX_Uy[{~z\ :D_UJA
WE r{ssYV[y{s{I{[GwqYsW{\rC{Z]W{GUGeY_Wc_\@\^U_jYqCE[ Gaq^a]AUQybkwmKQSzb	Qx~K		~]\~ ~LSxdDke@SgV_Vv[{YE~q[q^{]t[hqy{sxYSeTCVh{Ek iP~q{{qqPQwIVqy{s{ |v}P~q{{qqPSgcY}[qP|d`[|vXPgD}v\T|cHefP~gw| aM|dkGvqC|t{k_bS{YE~q[q^{]t@hqy{s{H[yJva]W{qzCkYY}[qPkhd PKyJva]W{qzLhhcY}[qPVY~s r{ssYVz\Nhc{{qzLP\{[GwqYsW{_XOQcY}[qPk]^^Qf@~]|]{[GwqYsW{\rQVwUY}[qP~Vc `|e`Z~KyJva]W{qz	PxY}[qPVwJJ{[GwqYsW{\~LSc{{qyPvaB	8FBVXQ\
 SV
R VSR	
PVT SrD@]DK]_\
WPVPRUQ	W[QQmU 	TS\RPT
mW
SQU
RRWRUSS\SW		
UTPQ SWVPSQZDFBCQT_F_U VZ\XG]S\BPUXF	8FUWCA
QXP V
U[	U 	 VrVGQ[A[Q]VW\XV\WWSW^Q@IIFY]^\_WWAUQGBPFID^AMK@WFQ@ZUSTW@d@BU^]\UUPT[PWS	URZ	SoF][@]ooW
QSURP\TPSQW	RU
SXW	SU	WT[QQZFDIAQ V VF_WTS\XG_QW@YUXF	3D\WCAVS
	TVWR	 RWrTEZYH[Z[\@P\WSTW^Q@IIFY]^\_WWAUQGBPFID^AMK@WFQ@ZUSTW@d@BU^]\UUPT[PWS	URZ	SoAW_L^ooW
QSURPU

S W
P	U	[RW P WVPS	SU	P\
QSW	Q 	U
 WVPSQZDFBCQT_F_U VZ\XG]S\BPUXF	8DK]ZS^

	WQTTSZVPU VVTPWXVTpTGSRJYXY\BYWUUQ
WPVPRUQ	W[QQmAUVG\mmUSS\
PP	WVRQ	XU[W
QSUQ	WWVPS	SZDMBCS_TD_U VQ^ZG]X\B[WZF	 8F^UAA
WSVS
	TUP
R	  TrHPPE\US
U\QB@BD[_\^V\UCWQEK[DKF^CFIBUFSIXWQVWBmK@W\]^\WPVPRUQ	W[QQmAUVG\mmUSS\
PP	WVRQ	XU[W
QSUQ	WWVPS	SZDMBCS_TD_U VQ^ZG]X\B[WZF	 8: