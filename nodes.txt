D]WABWG]UxqsW{]tYkq{{ZwJq |I~qH|tY[}s]W{ssUx_t@hs{xXk {YEyxqsW{sx]S| {Z][U dYhwtD}_`kFYS\EPx\x[E{{ssUxqx@hs{x_g hdskvU~dY~vUD|t{~qXhtZ[}fpXhZZYkXchdUK~q{CqYsUxqsYP]dxX]YV[}s]W{ssUx\pXVwU[~[{FQ^dHUq
Y~q]UxqsW{^pDR\cY}Y{vY~q]UxqsW{^pHxX]Yf[wcasHdU|XsIYJ|[IssE|f]Gc{Ar[sW{ss[UuJJ{Z][UuJJ{YEyxqsW{sxTjp\{Z][S_Ehc{Ar[sW{ss[U[{{Z{[r\8F_WBAUE]V{qqUy_tZhqyyXkI~XyK~K|aH~q{Bq[qUyqsXke\YyX]X|Xa[|s]V{qqUy_ZGQa[[xQ\fQuh Pu^SDhzfXQ `DQKDS_QX~s_UyqsV{_\YyX]XkHW~ecH[F}vkK jfVY~fW}ekE|vWi_wH}fyEux]{[GyyqsV{qzGjjcX}[zSK{Bq[qUyqsXQuvQq{{[	ETjcG{[GyyqsV{qzERx{X_[~vcK{[GyyqsV{qzESK{{YbbwgVfuJyv{FXyF}f{EXqU}vwvu[|s]V{qqUy\`BQKyy\`BQKyAs[sV{qq[Tz^Fhayy_GP_e[|s]V{qqUy\kX}[yKyUB8D]WCAWG]W{qpU{]t[hqx{ZwH|q|I}qs{Cq[pU{ssYke]Y{Z]Y|X`[~q]W{qpU{]ZFQ`[}YxEhjcYkg
EhzgXS`EQKDQ]QY~s^U{ssW{_]Y{Z]YX|tVZ|fhF|ww}a|c~fZtkD}e{YkcIhuc_|gt[{[Fy{ssW{q{GhhcY}[{QI{Cq[pU{ssYQuwSs{{[\hhcF{[Fy{ssW{q{EPx {X^[|tcJ{[Fy{ssW{q{EQI{{Yb`ugWft{t{GXxFd{DXpUtwvt[~q]W{qpU{^`CQKx{^`CQKxAqYsW{qp[Vx^Ghax{]FP_d[~q]W{qpU{^kY}[xK{WB	8D\WACWF]UyqqU{\tYjqy{[kJ|XyK|H ~[}b{As[qU{rs[ie\Y{[][~Xa[~p]UyqqU{\ZDSa[}Xx[je^V\AjeXhbYjuH~\^TqyAqXsUyqq[Sfc[[y k\wjua|rY}XaK~e`[i yF}uh_iK Kk\t[fjY|v{Ei }[~p]UyqqU{\^Tqy{_VHy[Gy{rsUyqzEki`]yX_[~tBRa[~p]UyqqU{_pDS\a[}X{~v}[~p]UyqqU{_pHyX_[fZwbaqJKsU}XqKXJ}[ KrsE}f_Eb{As[qU{rs[TuHH{[][TuHH{XEyyqqU{rxUjr^{[][R_	Ghb{As[qU{rs[T[y{[{[s\ 8G^WCA
QTU
WS


TPR QT QUrH[PD\WC
W^QBKBE[]^^]\TAUQE@[EKD^CFHBWFSBYWSTWBfKAW^]^WWPVPSWQ UPQSoU
PRTWP
WRRWqnU

SSWPP	UTSQ	SWPW
QQTQ W
WVRQSZDF@AST TE_UTQ_ZG]S^@[VZF	:D^TAA
PWTPU
	
WPSRRrSZY\SYG_Q\B_]W\R@K@FY]\\]^WAWRG@YFIF]ADK@WEQBZUSVT@fIBU\^\WUSTRPWS 	WPS	SmWSW	QPQoU
	QSW
PP	WWPS	ST	PW
QSW	Q U
WVPRQZDFBBQTTF_U WQ\XG]S\C[UXF	8E@]ZS^VT SSWTP TVS
U
pU_TU_U]^USTRPWS 	WPS	SmWSW	QPQoU
	QSW
PP	WWPS	ST	PW
QSW	Q U
WVPRQZDFBBQTTF_U WQ\XG]S\C[UXF	8G^WCA
PPU	
VTP	Q  STr][^ZU]W]USU\QCKBD[_\_]\UCWQD@[DKF^BFIBUFRBXWQVWCfK@W\]_WWPWPRUP 	WPQQmT	SWSSRmW
SQU
SRWTPQQWRTSSWS W	UTPQSXFDBAS V WF]W TR\ZE_Q\@XUZD	8D]WACTRPW	

	WSPV	 RTSpQX[\PZ@QVU\S@KAF[_\\]_WCWSG@XFKF\AEKBUDQBZWQVU@fHBW\_\WWRTSPUS WPRQmWSWSQQ mU

SSWPP	UTSQQWPW
QQTQ W
WVRQSZDF@AST TE_UTQ_ZG]S^@[VZF	:D^TAA
SVQSP
TWP
UPSrW_UU_TF[W\S@IBFX]\\_\WAWSGB[FHF\AFKAWDQ@ZTSVU@dKBT\_\UTRTPPWSWRQSmWSUQQQmT
SSW
PPWVRQSUPW
PSUP 	W
WWPS	SZEFBCSTTD_T VQ^ZG\S\B[WZF8F^UAA
UP	Q

UP
W 	P	rU]UUV_UWQT
T\QBK@F[^\^]^WBWQE@YFKF^CDKBTFSBZWPVWBfIBW\]^WWPVRPTQ WPSPmUPPWU
	UTRoW	
QST
RPWTPSPW	SU
SSW	SU		WTPQQZFEBAQ W VF_W TS\XG_P\@YUXF8D\WCAVW  S
 WRU RrU\WU]WUCU\QCKBD[_\_]\UCWQD@[DKF^BFIBUFRBXWQVWCfK@W\]_WWPWPRUP 	WPQQmTRPWT
W	TSmgjW
V WSSRWT
RSVWP	Pm    WTTTRQSWPWSPUS W	
 UTSQ	SXFFAAS T TD]WTQ^ZE_S_@[WZD;D_UACWE yyqsXV[yyq{H{[G|s[sV{\rHyX]V{GUEeX_Wc
]^A\^^]jYzAG[Gat\\~j\[ChB_BzAUh`DFxB^VzbESH]G~aGRegGk ]TeYP\zBj Z}f[[|sz{qq[ie`Z{X_Uy_VEheTFja_kayAtc]V{qzERx{X_UyXcKyAtc]V{qzBjq{{qyJ~Xp[hfzX}q}eaK|fwIheyFied\K ~XsFv}}XdXkei[|sz{qq[ie^Z{X_UyXwH{[G|s[sV{\~XUa{{qzZTj`G{[G|s[sV{_^Tq{{qzSK{Bvc_UyqxWjr^yX]V{_DR_gX~s yyqsXSu	HTq{{qz\Red_PeeGj wX~s yyqsXQuvQq{{qyDU\ViQzbeUuUG{[G|s[sV{\bASK{{qzRzX~s yyqsXQ ByX]V{[y|s\8D]WCAWG{{qp[VY{{qxK{YE~q[pU{^pJ{X^U{EWGf[_Ua_^B\\\_j[xCGXGcsWb_C\Sz`iudHSSx` Qz|~I ~_ ^~|ESzgFkgISeU]VtY{[F|qYsW{_wYhs{{q{[SgVJVjxGkkY~sy{ssYQuKVs{{qx|tY~sy{ssYSe`[}YsY|fcY|tZY dF}t^]|aJgdY~et|cD|fhEtsJ|vx k]`Z{[F|qYsW{_wBhs{{qxJY{Cvc^U{sxJkZ[}YsYkjgPI{Cvc^U{sxEhj`[}YsYV|[~q{{qp[Vx^Ghax{sxEP ^{YE~q[pU{]ZFQ`[}YsYk_]\QdI~__{YE~q[pU{^pXVuV[}YsY~Uci|gcX~I{Cvc^U{sx Pz|[}YsYVuIH{YE~q[pU{^|ESax{s{YvcA8D@_XS_	Q	U PTSP 
STV QqF@_FB]\^TRTPPWSWRQSmW	WS	UPRVmT
SSW
PPUPW
PSUP 	W
WWPS	STTRQSYFF@AS T VF\WTS\ZD_S^@YUZE:D\WABSQPV 

WRW	VqTGSYH[S^TW^Z_\UUS
T\QBK@F[^\^]^WBWQE@YFKF^CDKBTFSBZWPVWBfIBW\]^WWPVRPTQ WPSPmF_YI]m mU

SSWPP	UTSQ	SWPW
QQTQ W
WVRQSZDF@AST TE_UTQ_ZG]S^@[VZF	:D^TAA
TS  
VVWP PTrVGSYJXX[^BY\UQT
T\QBK@F[^\^]^WBWQE@YFKF^CDKBTFSBZWPVWBfIBW\]^WWPVRPTQ WPSPmAU]E^mmU

SSWPP	W	
Q T PWRPW	SUTPQSWPU	SQWS W
	TTRQSYFF@AS T VF\WTS\ZD_S^@YUZE:FB]XP\
USTVQSVSW VTVPU
QVWrTEQ[J[[[\@[^UVSTRTPPWSWRQSmCW_G^n mW
SQU
SRWTPQQWRTSSWS W	UTPQSXFDBAS V WF]W TR\ZE_Q\@XUZD	8D]WACWQTS	T WS
P   VpJYPG_UQW\S@IBFX]\\_\WAWSGB[FHF\AFKAWDQ@ZTSVU@dKBT\_\UTRTPPWSWRQSmCW_G^nmW
SQU
SRWTPQQWRTSSWS W	UTPQSXFDBAS V WF]W TR\ZE_Q\@XUZD	88