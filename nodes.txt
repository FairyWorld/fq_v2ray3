D]WACWG]UyzsT{]tYjz{{ZwJ~z|I}@K}dc[|x]T{ssUyTtChs{ySk{YEyyzsT{sx]R
|{Z][RTdhwtD|T`kFYRWFPx\yPEx{ssUyzxChs{yS`_ggEiTkJ~dhY}SQG|twK~@kJU|ngwtYimpY|tcHjj{@qYsUyzsZP]dyS]ZV[|x]T{ssUyWp[VwU[P{EkFRntFhs
[|x]T{ssUyWpEQ^c[P{|t[|x]T{ssUyWpI{Z][dRv`csJ}mgTZsK}PD}cK}@sD}d]E}j{@qYsUyzsZVwJHyS]ZVwJHyPEx{ssUyzxWhp^yS]ZP]Gjj{@qYsUyzsZVY{yS{Zq^:O_VAC\E\UyqsWp_uYjq{pXvJ~q wK}aHwXX[|s]WpqrUy_t@cqzyXk p[DyyqsWpqy]R| pX\[i_dEcjiDRudE` fGju`EZKGjjcYus\UyqsWp__YyX]Ycf[^~ kwXfF}H^Ycq~ecGuf_[~XkDtHuYju`[wfvJ}Hsp[DyyqsWpqyGjjcYv[ySK{Cz[rUyqsYZuuQq{p[
XS_dX]zeKja
Yus\UyqsWp\qDS\cYv[z~vYus\UyqsWp\qHyX]YmY
wbasHtHrU}XsIt[EaItKrEf]GtazAs[sWpqr[TuJJpX\[TuJJp[DyyqsWpqyUjp\pX\[R_EcazAs[sWpqr[T[{pXz[s\3D^WCAWD]W{qq^{^t[hqy{YwH|q	|J|a@wcY~s_^{psW{_vIhp{{Xi	{ZE{{qq^{px_P~	{Y]YVzzVtZ]VeHLhk|J~_bkF[P\}LP x^{[Gr{psW{qzIhp{{_it`\kfbU~gYkHiM|tk|K kdk~ffSk^kHhuykIYG|KyJqZsW{qqPP^d {X_PV Y~s_^{psW{\rQVtUY}[yOVd@V_f@QtC~KyJqZsW{qqPQtIVqy{Yc KyJqZsW{qqPQ{Y}[zvf`v{vuA`sIvy@~gs~fyC{ws}XqA{ZE{{qq^{px Pz}P}Zx Pz}P~r]W{qq^{]`QueP}ZxEP U{ZE{{qq^{px{X_PZ{{Tc8E_UAA
VE_U{sxUz_vYhspzXuJ|s}KJt|G~Xa {YNyzqqU{ssZRea[}Yp }qyAqYxUzqq[Sw HWqy{^]^j_bZPIYWe~@hwH_	KhIpAp[qU{sx[Rea[}YpHivrZkgt|a^kZk_fbZ|t`F|vXX}c[~fqHJZJivuH||[s_U{sxUz_^Vspz\TH{YNyzqqU{ssEjjb]{ZV[ BPwJDz[Gy{sxUzqzEPszX_[|thHz[Gy{sxUzqzEQIpzYb`ulU~fuH{tpE~XyFtRF~X}UtR~vu[~qVUzqqU{^kAPKy{^kAPKyAqYxUzqq[VxUEiay{]DQ_e[~qVUzqqU{^`[|[yK{WI9D\WAC STWWR

WRPXT 
SWpA[QG^UAW\SKKCFY]\W]]WAWSL@ZFIF\JGK@WDZBZUSVUKfJBU\_WWUR_QPWX 	WPP	Sm\
SPVW
	PVP[WpmW
QSUQP\TPSQW	RV
SXW	SU
WT[QQZFDIAQ V UF_WTP\XG_QW@ZUXF	3D_WCAP
TVR\
WQQP QrQXP\RZE_S^K^^
W]QBKBDP]]^]\UAVQE@[D@G^CFIIWFSBX\SWWBfK@\]]^W\PVPRWQ 	 VPQ SlU	RW QSSm\

SQWRR VTPQ SWPUXRWX W	
	U_QQSXMFCAST VF]\TS\ZETS]@YUZD 9FB]XQWT
USQUTR
 V
VR 
WyU^WW_WT^	\PVPRWQ 	 VPQ SlU	RW QSSm\

SQWRR VTPQ SWPUXRWX W	
	U_QQSXMFCAST VF]\TS\ZETS]@YUZD 9D\WACS PW	 TWRX 
QVpT[_YW]U_UR\\P@IBFYV\\_\WJWPGB[FIF_AFK@\GQ@ZUXVV@dKBU\\\UUQTPP\S	WRQ	XmWSU	ZRQmUSS\
PP	WURQ	XV[W
QSUQ
WWVPP	SZDMB@S_TD_U UQ^ZG]X\A[WZF	 8E^UAA
 TPRW

VPPT   
QVSrSQ[]SX@S_W^Z@JBD[]^\\\UAUZGA[DKDUAFIBWMQCXWST\@gK@W^V\VW[TPRWS	UQQSoW	QVQXQoW
QSUQP\TPS
SW	RV
SXW	SU
WT[QQZFDIAQ V UF_WTP\XG_QW@ZUXF	3D_WCASW	QQRVWQW QQrU]\U^WFY
 U\QB@BG[_\^V\VCWQEK[GKF^CFJBUFSI[WQVWBmKCW\]^\WPVPQUQ
W[QQmU
S\SSSmW
SRU
RQWT[QQWRUSS\SW
	
VTPQ S[FDBA
S V VM^W TSWZF_Q\@Y^ZG	8D\\A@\P
S
WR
V	R sV_UWTVUVSTW^Q@IIFZ]^\_WWAUQGBPFJD^AMKCWFQ@ZVSTW@d@BV^]\UVPT[PWS
URZ
SoWP	PU
V
\VPfV

XSWPP
UTRZ
SW PW
RQU R \
WURQ	XZGF@AXT TD_VTQ^QG^S^@[WQF
:D^UJA	TU	Q
WPV 	 P rT_UU_UUB\\P@IBFYV\\_\WJWPGB[FIF_AFK@\GQ@ZUXVV@dKBU\\\UUQTPP\S	WRQ	XmWPQU	]W TPmehWV		VSQ[WWPSWUR Qo T VWVPSRU	QWSSW	S	U \TPSQQFGBCQ UTFTW VQ\XL_R\B[UXM
8F_WCJUE{pqr[T[{pqzKy[E~z[rUy\pJpX\UyGWLd[]WaT^B^\\Th[xHGZEav^U~k_YCj@VB{BWhbFOxC]Tz`GZH\D|cE[efDi _]eZR\x@c [fYYusyyqsY`eaYyX]Wp_WFjeVDca\ia{C}c\UyqxG[yyX]WpXb}K{C}c\Uyqx@cqzyq{HwXqXjfxZtqecIufvJje{D`ee_}KwXrE}v tXe[iekYusyyqsY`e_YyX]WpXvKy[E~z[rUy\|Z\azyqxX]jaDy[E~z[rUy_\]qzyqxZKzAtc]WpqyUjp\pX\Uy_F[_f[|s{pqr[QuJ]qzyqx^[ee\RegEc v[|s{pqr[Sut Xqzyq{F\\WjSz`g\uTDy[E~z[rUy\`CZKzyqx [z~[|s{pqr[S @pX\Uy[{~z\:D_UJA	WE r{psYV[y{p{I{[GwqZsW{\rC{Y]W{GUGeY_Wc__@\^U_jYqCF[ Gaq^a]AURybkwmKQSzb	Q{~K		~^\~ ~LS{dDke@SdV_Vv[{ZE~q[q^{^t[hqy{pxYSeTCVk{Ek iP~r{{qqPQtIVqy{p{ |v}P~r{{qqPSdcY}[qP|g`[|vXPgD}v\T|`HefP~dw| aM|gkGvqC|w{k_bS{ZE~q[q^{^t@hqy{p{H[yJvb]W{qzCk YY}[qPkkd PKyJvb]W{qzLhkcY}[qPV Y~s r{psYVz\Nh`{{qzLP\{[GwqZsW{_XOQ cY}[qPk^^^Qf@~^|]{[GwqZsW{\rQVtUY}[qP~ Vc `|f`Z~KyJvb]W{qz	P{Y}[qPVtJJ{[GwqZsW{\~LS`{{qyPvbB	8FBVXR\
 SV
Q VSR	
PVT PrD@]DK]_\
WPVPQUQ
W[QQmU 
TS\RPT
mW
SRU
RQWRUSS\SW
	
VTPQ SWVPSRZDFBCRT_F_U VZ\[G]S\BPU[F	8FUW@A
QXPV
U[
U	 VrVGQ[A[R]VW\XV\TWSW^Q@IIFZ]^\_WWAUQGBPFJD^AMKCWFQ@ZVSTW@d@BV^]\UVPT[PWS
URZ
SoF][@]loW
QSUQP\TPSQW	RV
SXW	SU
WT[QQZFDIAQ V UF_WTP\XG_QW@ZUXF	3D_WCAVS
	TVWQ	 QWrTEZYK[Z[\@P\TSTW^Q@IIFZ]^\_WWAUQGBPFJD^AMKCWFQ@ZVSTW@d@BV^]\UVPT[PWS
URZ
SoAW_L^loW
QSUQPV

S W
P
U	[QW P WVPP	SU
P\
QSW
Q 	V
 WVPSRZDFBCRT_F_U VZ\[G]S\BPU[F	8DK]YS^


WQTWSZVPU VUTPWXVTpTGSRJZXY\BYWUUQ
WPVPQUQ
W[QQmAUVG_mmUSS\
PP	WURQ	XV[W
QSUQ
WWVPP	SZDMB@S_TD_U UQ^ZG]X\A[WZF	 8E^UAA
WSVS
	TVP
R	  TrHPPF\US
 U\QB@BG[_\^V\VCWQEK[GKF^CFJBUFSI[WQVWBmKCW\]^\WPVPQUQ
W[QQmAUVG_mmUSS\
PP	WURQ	XV[W
QSUQ
WWVPP	SZDMB@S_TD_U UQ^ZG]X\A[WZF	 89