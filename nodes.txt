D]WACWG]UyzrW{]tYjzz{ZkJ|SzI|I~@IZY[|x\W{ssUyTu@hs{ySj {YEyyzrW{sx]R
} {Z][TeYhwtD|TakFYRW~EPx\yPD{{ssUyzy@hs{yTv htp^iTiZ~gg}CvD|w`_iPYkd{K|nz kZ{K}ni]J{jPzCqYsUyzrYP]dyS\YV[|x\W{ssUyWqXVwU[PzFhhh^STKXQ`BRTPF{YEyyzrW{sxER
y {Z][~}bJ{YEyyzrW{sxES@z{[bb|fWdwHy}zGZ{F}}XDJsU}}jJw[|x\W{ssUyWaCQI{yWaCQI{AsPrW{ss[Tq_Ghc{yTFP]g[|x\W{ssUyWjY}Y{Ky^C	8F_WCJ	UE]WppqUy_t[cpyyXkHuYyK~KwJy[E{ppqUyqxXXda[[{wpyAs[sWppq[QuJ]pyy_x\[^f R J\[^~^|_`[[]}GR_d pZGyyqsWppzBjq{pYeifcGtIvY|f{ `Y[F~vc wp }vgJudvZ}ukvg~[~XkH`JyAs[sWppq[R_d pY_[TYur_UyqsWp]rZTuUYvZyDi\d@[taDy[E{ppqUyqxG[ zyX]YwwaHy[E{ppqUyqxGZJyyY`kveU}fGpwyE}X{Dtw[F}HsWtwi}HwYur_UyqsWp]bASK{p]bASK{CzZqUyqsY]{\Eja{p^DR_gYur_UyqsWp]i[[{IpT@:D_UJ@
WE_^zssW{_vRis{{XiAZ{I|K
~s|[yJpYsW{qqPjg^[{X_P}ZcY~s_^zssW{_XOPcY}[z	P^d SujQw\Q}LixdZS bLPIFQ_SPq]W{qq^z]^[{X_P~]h]kfe|dQDf\Q|c _uAdUkfuM~khXi~]kkXizYE{{qq^zsxEhjaP|YxQKyJpYsW{qqPPwt SqyzYGSjbI{Cq[q^zssYQu	@Ws{{Xa	~I{Cq[q^zssYQz}P|YxfbztwHaq@~t{I~fqdG{vq|ZH{[GrzssW{qz	QxY}[z	QxY~s_^zssW{\bPwgY}[zLQ\{[GrzssW{qzzZ]Y[yrUa8D]\@CWGVTyqqU{]Xjqy{Z|K~q|I}KJ|JtZ|s_U{sxTy_vBhspyXi{YNxyqqU{ss\R~{ZVZR_fhwE|_bkMXR\}GPs]y[Gy{sxTyqzBhspyXW|h}ej^~ghJiXSF|twZ~K hg`I|ev^}tlJiejX|]`DiayAqYxTyqq[P]oyX_[VtZ|s_U{sxTy\rZVw^Z[yDk^oYQ f~Ip@s[qU{sxZSu	KVspyXaIp@s[qU{sxZSz}[}Ys|dbt{t|K~aqKtpJ|fq~dtDyvq }ZtKy[Gy{sxTyqzPxtZ[zPxtZ|s_U{sxTy\bQwlZ[zGP_y[Gy{sxTyqz {ZVZ}[yyTa:D\WAC STWVQ

WRPXU 
SWpAZRG^UAW\SKJ@FY]\W\^WAWSLAYFIF\JDK@WDZCZUSVUKgIBU\_WVUR_RPWX	WQS	Sm\SPVV		PUP[VsmWQSURP\UPSQV	RU
SXW	S
U	WT[PQZFDI@Q VVF_WUS\XG_QWAYUXF	3E\WCAQ	TVR\
VRQP 
QrQXP]QZE_S^K]^
V^QBKBDP\^^]\U@UQE@[D@D^CFIIVFSBX\RTWBfK@\^]^W\PVPRVQ 	 UPQ RoU	QW PSSm\
SQVRR UTPQ RWQUXQWXW		U_RQSXMG@ASU VF]\TS\ZETR^@YUZD 
:FB]XQW	T

VSQUTR
V
WQ 
WyT]WW_WT_
\PVPRVQ 	 UPQ RoU	QW PSSm\
SQVRR UTPQ RWQUXQWXW		U_RQSXMG@ASU VF]\TS\ZETR^@YUZD 
:D\WACS PW	   TWRX 
QVpTZ\YW]U_TQ\]S@IBFYV]\_\WJVSGB[FIG\AFK@\DQ@ZUXWU@dKBU]_\UURTPP\S	VRQ	XlWRU	ZQQmUSS\PP	VVRQ	XU[W
QRUQ	WWVQS	SZDMCCS_TD_UVQ^ZG]X]B[WZF	 9F^UAA
 TPRV

UPPT   	QVSrSQZ^SX@S_	W^ZAIBD[]^]_\UAUZFB[DKDU@FIBWMP@XWST\AdK@W^V]UW[UPRWR	URQSoV	QUQXPoWQSURP\UPS
SV	RU
SXW	S
U	WT[PQZFDI@Q VVF_WUS\XG_QWAYUXF	3E\WCART	QQRVVRW RQrU]\T]WFY
U\QB@CD[_\^V]UCWQEKZDKF^CGIBUFSIXWQVWBmJ@W\]^\WPVQRUQ	W[PQmU	S\SSSlW
RQU
RRWT[PQW
RUSS\
SV		
UTPQ RXFDBA
R V VM]W TSW[E_Q\@Y^[D	8D\\@C\Q
SWRU	 R 
pV_UWTVTUST W^Q@IIGY]^\_WVAUQGBPGID^AMJ@WFQ@[USTW@d@CU^]\UUPT[QWS
	URZ	SoWQ	PU	V
\VPfU

XRWPQ	UTRZ	SW PWQQU Q \

VVRQ	X[DF@AXT TD^UTQ^QF]S^@[WQG	:D^UJ@
TU	  Q
WP
V 	P sW_UU_UTA\]S@IBFYV]\_\WJVSGB[FIG\AFK@\DQ@ZUXWU@dKBU]_\UURTPP\S	VRQ	XlWP
RU	]W UPmehVV		USQ[VWPRTUR Ro T VWVPS
QU	RWRSW	R	U \UPSQQGDBCQVTFTV VQ\XL^Q\B[UXM
	8F_WCJ	UE{ppq[T[{ppyKy[E~zZqUy\pJpY_UyGWLg[]WaT_B^\\T h[xHFYEav^Uh_YCj@VCxBWhbFOy@]Tz`GZI_D|cE[deDi _]dZR\x@cXfYYur yyqsY`dbYyX]Wp^TFjeVDc`\ia{C}b_UyqxG[ zyX]WpYa}K{C}b_Uyqx@cpyyq{HwYrXjfxZtp ecIuguJje{D`df_}KwYqE}v tYf[iekYur yyqsY`d\YyX]WpYuKy[E~zZqUy\|Z\`yyqxX]kbDy[E~zZqUy_\]pyyqxZJyAtc]WppzUjp\pY_Uy_F[^e[|s{ppq[QuJ]pyyqx^[df\RegEcu[|s{ppq[Sut Xpyyq{F\]TjSz`g\tWDy[E~zZqUy\`CZJyyqx [{}[|s{ppq[S @pY_Uy[{~z] :D_UJ@
WE rzssYV[yzs{I{[GwpYsW{\rCzZ]W{GUFeY_Wc^\@\^U^jYqBE[ Gaq^a]AUQybkwmKQSzb	Px~K		]\~ ~LRxdDke@RgV_Vv[zYE~q[q^z]t[hqyzsxYSeTCWh{Ek iPq{{qqPPwIVqyzs{ |v}Pq{{qqPRgcY}[qP}d`[|vXP~gD}v\T}cHefPgw| aM}dkGvqC}t{k_bSzYE~q[q^z]t@hqyzs{H[yJwa]W{qzCjYY}[qPjhd PKyJwa]W{qzLihcY}[qPWY~s rzssYVz\Nic{{qzLQ\{[GwpYsW{_XOPcY}[qPj]^^Qf@]|]{[GwpYsW{\rQWwUY}[qPVc `}e`Z~KyJwa]W{qz	QxY}[qPWwJJ{[GwpYsW{\~LRc{{qyPwaB	8FBVYQ\
 SV
R VSR	PVTSrD@]DK\_\
WPVQRUQ	W[PQmU 	TS\RPT
lW
RQU
RRW
RUSS\
SV		
UTPQ RWVPS
QZDFBC QT_G_U VZ]XG]S\BPTXF	8FUVCA
QXQ VU[	U 	 WrVGQ[AZQ]VW\XV]WWS W^Q@IIGY]^\_WVAUQGBPGID^AMJ@WFQ@[USTW@d@CU^]\UUPT[QWS
	URZ	SoF][@\ooWQSURP\UPSQV	RU
SXW	S
U	WT[PQZFDI@Q VVF_WUS\XG_QWAYUXF	3E\WCA VS
	TVVR	 RWrTEZXH[Z[\@P]WST W^Q@IIGY]^\_WVAUQGBPGID^AMJ@WFQ@[USTW@d@CU^]\UUPT[QWS
	URZ	SoAW_L_ooWQSURPU

SW
Q	U	[RW P WVQS	SU	P\
QSV	Q 	U
  WVPS
QZDFBC QT_G_U VZ]XG]S\BPTXF	8DK\ZS^
	WQUTSZWPU WVTPWXWTpTGSRKYXY\BYWTUQ
WPVQRUQ	W[PQmAUVF\mmUSS\PP	VVRQ	XU[W
QRUQ	WWVQS	SZDMCCS_TD_UVQ^ZG]X]B[WZF	 9F^UAA
WSVR
	TUP
R	 TrHPQE\US
U\QB@CD[_\^V]UCWQEKZDKF^CGIBUFSIXWQVWBmJ@W\]^\WPVQRUQ	W[PQmAUVF\mmUSS\PP	VVRQ	XU[W
QRUQ	WWVQS	SZDMCCS_TD_UVQ^ZG]X]B[WZF	 9: