D]WACWG]Uy{pU{]tYj{x{ZwJ~{|Ik}s{AsQpU{ss[io]Y{Z][~R`[~q]Uy{pU{]ZDS`[}Yxjo{Ykg
GjcGQIGj``[~q]Uy{pU{]^YyR^[d^X}Ux}gcF}lcX|I~Uh~gw|F}t|Yo^|ZgJj|wY{YEyy{pU{sxGj``[}YxSAxAqYsUy{p[QwtQ{x{YHSwKhc
[|y^U{ssUyVsDQ^c[Qx|t[|y^U{ssUyVsH{Z][dSw`csJ}lRUZsK}QE}sJ}QpE|t]E}kxAqYsUy{p[VwJHyR^[VwJHyQFy{ssUy{{Whp^yR^[P]GjkxAqYsUy{p[VY{yRx[q^:N\WAC]F]UyqsWq\tYjq{q[kJ|X{IvH~[JvX{As[sWqrs[ie^[q[][~XcYtp]UyqsWq\ZDScYwXx[je\\\AjeZbbYjuJt\^Tq{C{XsUyqsYYfc[[x[aeQ}XsHvHfwte`_~_kDa\{JqYvK^X}uIwv~XsYtp]UyqsWq\^Tq{q_VHy[E{qrsUyqxGai`]yX]YtdAje| [\^X|K{C{XsUyqsY[vKTq{q[c}K{C{XsUyqsY[y[[xl`tyvwJursK}v{Ites|fwIqusXsHqXEyyqsWqrxRzYwXxRzYtp]UyqsWq_`SugYwXxGR \qXEyyqsWqrx yX]YuX{yVc2G_WCATE]W{qq_x_t[hqyxXkH~XyAK|[AK{Cq[q_xqsYke\SxX]Y|XaQ}s]W{qq_x_ZFQaQ~[xEhjbShe
EhzfRP `EQKNR_QY~s__xqsW{_\SxX]YkeyBkX|XvqLk_h[[ ~v|[~eye{DkHS	|etXeyAvsJ{[GsxqsW{qzMkjcY}[zRK{Cq[q_xqsYQuvPq{{[	RS GhjbT}K{Cq[q_xqsYQu	AUq{{Xa|K{Cq[q_xqsYQz}Q~[xfb~xvwH|aqA|v{I~fq}fwI{vq~XsH{[GsxqsW{qzSzY}[zSzY~s__xqsW{\bRugY}[zMS \{[GsxqsW{qz
xX]Y[ysWc8D]]BAWGWV{qqU{]~Zhqy{Z}I|q|IIv}Gd}{[Gy{syV{qzZSgiX}[y |sqBq[qU{syXSu	HVsq{\T^k]jYPKYVgvChuH~]HhKyAqYyV{qq[SgiX}[y|wm|uf^kIHb[~dj\hXWF}t}ha d~\hey |d}HXq[~qWV{qqU{]]Vqy{^\K{[Gy{syV{qzEkhj^{X_[~nBhjr]kg~KyAqYyV{qq[QwHVqy{ZiKyAqYyV{qq[QxuX}[z}f jw{vuJIyHvyK~dy~fuK{ty}XqJ{YOz{qqU{srPz}[}YrPz}[~qWV{qqU{^jQue[}YrDP ^{YOz{qqU{sr{X_[YqzTc8FTTAA
[WW
WS 	

UZP QT	[WrH[PEVUC
T\QBKBDQ^\^]\UBWQE@[DAF^CFIHTFSBX]PVWBfK@]\]^W]PVPRTQ 	WPQPmU
QPTWS
WPRWqoW

YPWPSUTR[SWPW	SQUS ]
TTRQ	YYFF@AY T TD\WTQ^PD_S^@[WPE:D^UKBPV^PU
  WPYP SqQZY\SXM\S\B_\W\SJHBFY]\V^\WAWSMC[FIF\KFK@WD[AZUSVUJeKBU\_VTUR^PPWY	WSQ	Sm]ST	QQ[mU
SSW
ZP	WVSQ	SUP]
QSTQ 		W
WVPSSZDFBCST^E_U V[_ZG]S\BQVZF	8DJ^XS^\
TPQ]WP VVS	W
pU_U_\W]^UR^PPWY	WSQ	Sm]ST	QQ[mU
SSW
ZP	WVSQ	SUP]
QSTQ 		W
WVPSSZDFBCST^E_U V[_ZG]S\BQVZF	8FTTAA
QSW	 TUZQ Y Vr][^[_^U]US
U\QBAAF[_\^W_WCWQEJXFKF^CEKBUFSHZWQVWBlHBW\]^]WPVSPUQ
WZRQmUS]SSSnW
PSU
RPWTZRQWRU
SS]ST	WTPQPZFDBAP V VL_W TSVYG_Q\@Y_YF	8D\]BAWPPW 	WRST	S^PrQX[\QPCQVW\S@K@LX]\\]^]AWSG@YLHF\ADAAWDQBPTSVU@fIHT\_\WTRTRZWS WPSSmWSWQQQgW

YPWPSUTR[
QWPW	SQUS ]
TTRQ	YYFF@AY T TD\WTQ^PD_S^@[WPE:D^UKBSVRQP
	^WP W P	YqU_UU_UEY]_Q@IBFYW_\_\WKTQGB[FIE^AFK@]FQ@ZUYUW@dKBU_]\UUPTPP]S	TRQ	YnWPU	[SQmU 
SS]	PP	TTRQ	YWZW
QPUQ
W  WVSQ	SZDLAAS^ TD_UTQ^ZG]Y_@[WZF	;D^UAA

UP[

	 WP
W  P	rTWVWV_UW[WUVR@K@F[_V\]^WC]RG@YFKL]ADKBUEQBZWQ\T@fIBWV^\WWSTRPUS ]PSQgWPSWT	U	^PoW	QSU PP]WPSQT	RW
SYW	SU	WTZRQZFDHBQ VTF_W
WQ\XG_QVC[UXF	2G^WCA TW Y

	TPT 	PrU]]V_WUC
U\QBAAF[_\^W_WCWQEJXFKF^CEKBUFSHZWQVWBlHBW\]^]WPVSPUQ
WZRQmUPP]T
	T	TRnejW U WPQRWU PSV]P	P g  V TU^PQS]PTSQWS  W	
UTR[SXFF@KS T
WF]W^R\ZE_S^JXUZD:N\WAC]FyyqsY\X{yq{IqXE|s[sWq_pHyX]WqDWEeYUTa
]^@V\^]`[zAG[ Mbv\\~j]Q@jB_Bz@_kbDFxB_\y`ESH]FtcGRegFa]TeXZ_xBj Z weY[|s{qrs[ie`[q[]Uy_VDbfVFja^ab{Atc]WqrxERx q[]UyXc uH{Atc]WqrxBjq{qr{J~XpZbexX}qwfcK|fwHbf{Fied]uH~XsGuu}XdYafk[|s{qrs[ie^[q[]UyXwIqXE|s[sWq_|XUa{qrxZTj`FqXE|s[sWq\^Tq{qrxSK{C|`]Uyqx ]ip^yX]Wq\DR_gYtpyyqsYYvHTq{qrx\Red^ZfgGj wYtpyyqsY[vtQq{qr{DU\Vh[y`eUuUFqXE|s[sWq_`ASK{qrxRzYtpyyqsY[ByX]WqX{|s\2G_WCATE{{qqQU[{{qyAx[E~q[q_x\pJ{X__xGWGgQ\Wa_^H_\\_ i[xCGYDasWc	]C\S{jkudIYPz` Qz}}K ~_T} |ESzfLheISeTWUvY{[Gvr[sW{_vSkq{{qzQPeVJVjyMh kY~s sxqsYQu	AUq{{qyvY~s sxqsYSeaQ~[sY|fbSvZY eL~v^]|a @|edY~eu	 cD|fiO|vsJ|vy
h_`Z{[Gvr[sW{_vHkq{{qy@|[{Cvc__xqxJk[Q~[sYkjfSK{Cvc__xqxEhjaQ~[sYV}Q}s{{qqQUz^GhayxqxEP Tx[E~q[q_x_ZFQaQ~[sYk_\VRdI~_~Ux[E~q[q_x\pXVuWQ~[sY~T` i|gbR}K{Cvc__xqx Pz}Q~[sYVuHBx[E~q[q_x\|ESayxq{Yvc@;F@_XS^	[TP^PP 
RVV QpLC]FB]]TUPTPP]S	TRQ	YnW	VPU	ZPVmU 
SS]	PP	WZW
QPUQ
W  WVSQ	SU^PQSXLEBAS
W VF]] TS\ZEUP\@YUZD8D\WACSQPU

 WR] 	Vp^DQYH[S_^T\Z_\U_PUVR@K@F[_V\]^WC]RG@YFKL]ADKBUEQBZWQ\T@fIBWV^\WWSTRPUS ]PSQgE]YI]mgW

YPWPSUTR[SWPW	SQUS ]
TTRQ	YYFF@AY T TD\WTQ^PD_S^@[WPE:D^UKB	^P
  
	\UWP  PUqTGSYJYRX\BY\U[WUVR@K@F[_V\]^WC]RG@YFKL]ADKBUEQBZWQ\T@fIBWV^\WWSTRPUS ]PSQgBW]E^mgW

YPWPSW	S U
 P]RPT	RWTPQPWSUYSWYW			U^PQSXLEBAS
W VF]] TS\ZEUP\@YUZD8FB]XQV
WSTVQSVR]VT\SW
QVVxWGQ[J[ZQ_B[^UWYUPTPP]S	TRQ	YnAW_G^o
nW
PSU
RPWTZRQWRU
SS]ST	WTPQPZFDBAP V VL_W TSVYG_Q\@Y_YF	8D\]BATSTSWWR	P  	\rJYPG^VS]_Q@IBFYW_\_\WKTQGB[FIE^AFK@]FQ@ZUYUW@dKBU_]\UUPTPP]S	TRQ	YnAW_G^o	nW
PSU
RPWTZRQWRU
SS]ST	WTPQPZFDBAP V VL_W TSVYG_Q\@Y_YF	88