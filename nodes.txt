D]W@CWG]Tyqq^{]tXjqy{ZwK~q	|I~aAJYZ|s_^{ssTy_vIhs{yXi	{YExyqq^{sx\R~	{Z]ZT fPhwtE|_bkFXR\}LPx]y[Gr{ssTyqzIhs{yXjRkJU iebU~d{K~_aM|twqPkdQJ|frQdYDjf}|JV_ayJqYsTyqqPP]dyX_PVZ|s_^{ssTy\rQVwUZ[yOk]Jjuf@~I{@s[q^{ssZSu	@Vs{yXa	I{@s[q^{ssZSz}P}Yx|db{twK}Kq@t{I|fq@~dsyvu
}ZKy[Gr{ssTyqz	PxZ[z	PxZ|s_^{ssTy\bQwgZ[zLP_y[Gr{ssTyqz{Z]Z}[yrTa:D]\ACWGVUyqrW{]Yjqz{Z`J|XzI|I ~qHJ|[|s\W{sxUy_u@hspyXj {YNyyqrW{ss]R} {ZV[R_e hwD|_akMYR\~EPs\y[D{{sxUyqy@hspyXbZoYjfz ~dh~ubD|t|J}Kkdl |f_\hd|E}XrI}tpi[zCqYxUyqrYP]oyX\YVt[|s\W{sxUy\qXVw^[[zFhwo jeKFQs[|s\W{sxUy\qFQ^h[[z |tt[|s\W{sxUy\qJ{ZV[dY
u`cxJ}ffWZxK}KGY	EarH|JVH}azCqYxUyqrYVwAHyX\YVwAHy[D{{sxUyqy Wh{^yX\YP] GjazCqYxUyqrYVYpyXzYq^	:D^UACWD_UyzsW{^vYjz{{YiJ|S{I|J}zIIy[|x]W{pqUyTt@hpyySk {ZGyyzsW{pz]R
| {Y_[iTdEhkjDR~dEkeGj~`EQJGjacY~r_UyzsW{^\YyS]Y|tuKm^XdaFinHh` ~mtX~gX^inkD|YWEjntX}g~_}tZ{ZGyyzsW{pzGjacY}ZzS@{CqZqUyzsYQtvQz{{Z	QnJC~JyAsPsW{pq[S~IVpyySc JyAsPsW{pq[SqY}Zz}d	`v{wuH}zsIwyH|msI~gqy}w}Y}JyPE{{pqUyzx P{}[Px P{}[|x]W{pqUyW`Qte[PxEP^yPE{{pqUyzx{Y_[}P{{Tb:O_UA@
\E_UzssWp_vYis{pXuJ}s wK~sHwfq[q]WpqqUz]t@cqyzZk p[GyzssWpqz]Q| pX_[Wxx]uX_WgJEcj~H]`` DYQ^E[z\zYE{pqqUzsx@cqyz]tZ` vYjJV]ufaEidDwuaiscfSgcce}J~ZsHtfqis{Cz[qUzssY[_fzZ]Y]}[q]WpqqUz^pX]uW[|Y{FZuHP]tCuKyApYsWpqq[PwI]qyzZc tKyApYsWpqq[PxYv[z}g `vpvuJ~csItvyHdsIufqztwvX}KzYE{pqqUzsx [z}[|Yx [z}[q]WpqqUz^`Zue[|YxE[ ^zYE{pqqUzsxpX_[~Y{{_c9F^UJA
QV\
WR

UP[ QT 		Q\rH[QE\^C
UWQBKCD[_W^]]UC\QE@ZDKM^CGIBUFSBXWQ]WBfJ@WW]^WWPVQRUQ 	\PPQfU
Q[TW
R
V	[RWpo\

SQWQR UTRQ SWPVXQUX W	

U_RQ	SXMF@AST UD]\TP^ZETS^@ZWZD :D_UACP
VTPU
WQS [  
SpZZY\RXG]X\B^\W]S@IIFY]]\_WWAVSGBPFIG\AMK@WDQ@ZUSWU@d@BU]_\UURT[PWS	VRZ	SlWRU	QQQfU
XSWPP	VVRZ	SU PW
QRU Q 	\
WVQS	XZDFCCXTTD_UVQ^QG]S]B[WQF	9D@_SS^VUQZWVP ]VR\
pU^UU]\]^	URT[PWS	VRZ	SlWRU	QQQfU
XSWPP	VVRZ	SU PW
QRU Q 	\
WVQS	XZDFCCXTTD_UVQ^QG]S]B[WQF	9F^UJA
QR\	
	_UP Q 	S]r][_[U_^]UR

U\PBK@M[_\^]^\CWPE@YMKF_CD@BUGSBQWQVVBfIIW\\^WWQVR[UQ  WPSQmU SWSRSoWQXU
R[WUPSQV	RUSSW	S
U 	\TPPQQFDB@Q VVFTW US\XL_Q\AYUXM	8E\WCJV[PW
 VRR_	 	
STQyQX[]QZBQV\\S@J@FYV\\\^WJWSGAYFIF\ADK@\DQCZUXVU@gIBU\_\VURTRP\S	WQS	XmWSV	ZQQm\

SQWQR UTRQQWPVXQUX W	

U_RQ	SXMF@AST UD]\TP^ZETS^@ZWZD :D_UACSWSZP	TWQ
 \  
Q	Sp^_UU^UDR W^Z@IBGY]^\_\VAUZGB[GIDUAFJ@WMQ@[UST\@dKCU^V\UU[TPQWS
	URQ	SoW
QU	QXQmU
SRWPQ	U_RQ	S\PWQQUQ  W

VVRZ	S[DF@JSTTD^U_Q^ZF]S^K[WZG	:O^UA@


UPQ 

\P
V  P	sT]W\V_UVQVU\SKK@FZ_\W]^WCWSL@YFJF\JDKCUDZBZVQVUKfIBV\_WWVR_RPUX 
WPS
Qm\PRW
T U	T[oVQSU
[P
WVPS
QU	R\
RSW	R	U WUPSQZGDBCQV_F_V VZ\XG^Q\BPUXF
	8FUWCA	_W S
U[T  	[rT]WWTWUB

U\PBK@M[_\^]^\CWPE@YMKF_CD@BUGSBQWQVVBfIIW\\^WWQVR[UQ  WPSQmU[QWT	U	TRonjW
T VQZRWU
[SWWP	Q m	 VTUT[QRWQUSQ\SW		
UTRQ SXFG@A
S U VM]WTSWZE_R^@Y^ZD
:D]\ACWG	yyqrYVYpyqzI{YN|s[rW{^{HyX\W{E\EdY_Uj
]^@\W^]jPzAGZ Gc}\\~k][AaB_B{@UjiDFxC_VxkESH\F~hGRefFk]TeXP^sBj [ }dR[|s{{sx[iea[{ZVUy_WDhg]Fja^kcpAtc\W{ssERy {ZVUyXb IpAtc\W{ssBjqz{spJ~XqZhdsX}q}ghK|fvHhgpFiee]I	~XrGtt}XeYkg`[|s{{sx[ie_[{ZVUyXvI{YN|s[rW{^wXUaz{ssZTjaF{YN|s[rW{]^Tqz{ssSKzCvaVUyqy Wh{^yX\W{]DR_fY~q	yyqrYSw HTqz{ss\Ree^PglGj vY~q	yyqrYQwQqz{spDU\WhQxkeUuTF{YN|s[rW{^kASKz{ssRz~Y~q	yyqrYQByX\W{Yp|s\8FTWCA	UN{{pq[TP{{pyKyPE~qZqUyWpJ{Y_UyLWGg[]\a__B^\\_ h[xCFYEjsWcVC\R{``udISQq` Q{}|@ ~^^||ES{fFinISdT]T}Y{ZG|sPsW{^vYjz{{pz[QnVJVkyGikY~r yyzsYQt	KTz{{py~}Y~r yyzsYSda[PsY|gbY~}ZYeF}^]|` J}ndY~du~cD|giE}}sJ|wy iT`Z{ZG|sPsW{^vBjz{{pyJ}P{Cvb_UyzxJk [[PsYkkfR@{Cvb_UyzxEhka[PsYV }[|x{{pq[Tq^Gh`yyzxEP^yPE~qZqUyTZFQ a[PsYk^\\S
dI~^~_yPE~qZqUyWpXVtW[PsY~ Tai|fbX|@{Cvb_Uyzx P{}[PsYVtHHyPE~qZqUyW|ES`yyz{Yvb@:M@_XR^	Q T	QTQP 
R]V PpFBVFB]]^
U[TPQWS
	URQ	SoW	
VQ U	P[VmU
SRWPQ	\PWQQUQ  W

VVRZ	SUT[QRXFDIAR V VF]WTS\[E_QW@YU[D	3D\W@CSQPT	
WR
W 	VpTEZYH[R_TUWZ_\TUQU\SKK@FZ_\W]^WCWSL@YFJF\JDKCUDZBZVQVUKfIBV\_WWVR_RPUX 
WPS
QmDVYI]lm\

SQWQR UTRQ SWPVXQUX W	

U_RQ	SXMF@AST UD]\TP^ZETS^@ZWZD :D_UAC	TQ  	VTWQ	  
QUp_GSYKYXYWBY\TQVU\SKK@FZ_\W]^WCWSL@YFJF\JDKCUDZBZVQVUKfIBV\_WWVR_RPUX 
WPS
QmC\]E^lm\

SQWQR VX U P
WRQU	R\TPPQW
RUSXW
SV		UT[QRXFDIAR V VF]WTS\[E_QW@YU[D	3FB]YQ\


\STWQSVRWVUVR\
QVVrVLQ[JZZ[^I[^UWS
U[TPQWS
	URQ	SoJW_G_o oWQXU
R[WUPSQV	RUSSW	S
U 	\TPPQQFDB@Q VVFTW US\XL_Q\AYUXM	8E\WCJUXTSV	VRP  	 	VyJYPF^WX W^Z@IBGY]^\_\VAUZGB[GIDUAFJ@WMQ@[UST\@dKCU^V\UU[TPQWS
	URQ	SoJW_G_ooWQXU
R[WUPSQV	RUSSW	S
U 	\TPPQQFDB@Q VVFTW US\XL_Q\AYUXM	89