D]W@C	WG]Typp_{]tXjpx{ZkK|YxA|IK}ZA|dsZ|r^_{ssTy^wHhs{yYh{YExypp_{sx\R {Z]ZR^ghwtE|^c	kFXR]|MPx]yZFs{ssTyp{Hhs{y^tB|Zd[jgS~g`[~wpL|twK}ZhZh^|d|k]~IsThZkjpxKqYsTyppQP]dyY^QVZ|r^_{ssTy]sPVwUZZxNQ]dX|JxKqYsTyppQQwJTpx{Zc}JxKqYsTyppQQxZZ{wf `uywt@|csJ}wxB~dsI|gt{t{JYp@{YExypp_{sxR{|Q}YxR{|Q~q]Typp_{^`StdQ}YxFRT{YExypp_{sxyY^QY{xVb8F_VC@UE\WzryUy_u[irqyXjH[qK~K[}E~[zCpXyUyqrYjfTYyX\Y}[i[|s\WzryUy_[FPi[[yifrYieEiynXQ aEPHDS_PYpWUyqrWz\TYyX\Y}\a ~XX i\}Fi uY~r~ y[eS}XXD}Kj^if~}e~^~ jzXOyyqrWzrrGjjbY|XrSKzCpXyUyqrYPv~QqzzXHijXFzXOyyqrWzrrERy z[W[~vbJzXOyyqrWzrrESKzzZbbwfW~e}HyvzG~[uF}v~D~e_U}Xz~u}[|s\WzryUy\aCPHqy\aCPHqAs[rWzry[Tz_Gibqy_FQ\m[|s\WzryUy\jY|XqKyUC	9GUWCA	TO]W{pqTxUt[hpyxRkH~YyJAJK~|gY~r_Tx{sW{^vCk{{{YixQE{{pqTx{x_P ~xR]Yk^fFk`hFPtfFh
gEhtbFRAEhkaZ}y]W{pqTxU^[{Y_ZhlQh^i|BgD}wjYhk |wW}otYkuG||tXhYuJ
d\kYb_xQE{{pqTx{xEhkaZ~QxQJy@rQsW{pqZRt SpyxQJP fFk{
Y~r_Tx{sW{]rERVcY}Zy|Y~r_Tx{sW{]rIxR]YfX	vcksHIqT|RsIJ D|AH}pqJ|R]G`y@rQsW{pqZUJJ{Y_ZUJJ{ZGxx{sW{pzT`p\{Y_ZSUEh`y@rQsW{pqZUQ{{YyZrV8E]VBKVG\VqqqUz]uZbqyzZjItXyK}IuqK}tjXts_UzsrVq_vBiszqXizYDzqqqUzsy^Z~zZ\X\zzWw[\\eHGih}Kt_bjGZZ\}GQy_q[GyzsrVqqzBiszqXeiZWXwvv^dPFaX}F}wvaa |wbKtea}dvvHWH}t~aayApYrVqqq[Q]eqX_[W~Xts_UzsrVq\rZWwTXw[yDj]
Y\q[q\VqqqUz^qG[\a[|Yzvv}[q\VqqqUz^qKqX_[g[
tjaqJ~dvVuXqK~IFuK J|srHuX_E~czB{[qUzsrX\uHHzZ\X\uHHzYDzqqqUzsy]jr^zZ\XZ_	GiczB{[qUzsrX\[yzZzX{\ 9F_TKA
PW]
WR	 
UQZ QT	P]rH[QE]_C
TVQBKCDZ^V^]]UB]QE@ZDJL^CGICTFSBXVP\WBfJ@VV]^WVPVQRTQ 	
]PP
PgU
QZTW

S
VZRWpo]

RPWQSUTRPSW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@BP
VUPU WQRZ Sq[ZY\RXF\Y\B^\	W]SAHHFY]]]^VWAVSFCQFIG\@LK@WDPAZUSWUAeABU]_]TURUZPWR	VS[	SlVRT	QQPgU
YSWQP	VVS[	SUPV
QRTQ 	]

WVQSYZDFCCYTUE_UVP_PG]S]BZVPF	9DA^RS^W UP[VWP  \VR	]
pU^UT\]]^	URUZPWR	VS[	SlVRT	QQPgU
YSWQP	VVS[	SUPV
QRTQ 	]

WVQSYZDFCCYTUE_UVP_PG]S]BZVPF	9F_TKA
QS]	^UQQR \r][_[T^_]UR
U\PBJAL[_\^\_]CWPEAXLKF_CEABUGSCPWQVVBgHHW\\^VWQVSZUQWQRQmUSVSRS nWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	8E\VBKWZPW	VRS^	
SUPxQX[]Q[CQV ]\S@J@GXW\\\^VKWSGAYGHF\ADJA]DQC[TYVU@gICT\_\VTRTRQ]S
WQSYmW
SV[QQl]

RPWQSUTRP QW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@BSW
R[P	UWQ] Q	Rq__UU^UES V_[@IBGY\_\_\V@T[GB[GIETAFJ@VLQ@[URU]@dKCU_W\UUZTPQVS
	TRQ	RnW
PU	PYQmU SRV	PQ	T^RQ	R]QWQPUQW
 VVS[	S[DGAKSU
TD^U^Q^ZF]R_J[WZG	
;N^UA@

UPP

 ]P
V   P	sT\V]V_UVPWU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
Ql]P
SW
T	U	UZoV	QSUZP
VWPS
QT	R]
RRW	R	UWUQRQZGDCBQV^F_VW[\XG^Q]CQUXF
	9GTWCA	 ^W R 
TZT  ZrT]VVUWUB
U\PBJAL[_\^\_]CWPEAXLKF_CEABUGSCPWQVVBgHHW\\^VWQVSZUQWQRQmUZQVT	T	TRnojWU VP[RWUZSWVP	Q l V
TUUZQRVQTSQ]S
 W	UTRPSXFG@@S UWL]WURVZE_R^AX_ZD
:E\]ACVFyyqrYWXqyqzIzXO|s[rWz_zHyX\WzD]EdY^Tk
]^@]V^]kQzAGZ Fb|\\~k]Z@`B_B{@TkhDFxC_WyjESH\FiGRefFj]TeXQ_rBj [ |eS[|s{zry[iea[z[WUy_WDif\Fja^jbqAtc\WzrrERy z[WUyXb ~HqAtc\WzrrBjqzzrqJ~XqZierX}q|fiK|fvHifqFiee]~H~XrG~uu}XeYjfa[|s{zry[ie_[z[WUyXvIzXO|s[rWz_vXUazzrrZTjaFzXO|s[rWz\^TqzzrrSKzCw`WUyqy Viz^yX\Wz\DR_fYpyyqrYRvHTqzzrr\Ree^QfmGj vYpyyqrYPv~QqzzrqDU\WhPyjeUuTFzXO|s[rWz_jASKzzrrRz~YpyyqrYPByX\WzXq|s\9GUWCA	TO{{pqZUQ{{pyJxQE~qZqTxVpJ{Y_TxMWGgZ\]a__C_\\_  i[xCFYDksWcWC\R{aaudIRPp` Q{}}A ~^_}
|ES{fGhoISdT\U|Y{ZG}rQsW{^vXk{{{pzZPoVJVkyFh
kY~r xx{sYQt	JU{{{py|Y~r xx{sYSdaZ~QsY|gbX|ZYeG~|^]|` K|odY~du
cD|giD||sJ|wyhU`Z{ZG}rQsW{^vCk{{{pyK|Q{Cvb_Tx{xJk [Z~QsYkkfSA{Cvb_Tx{xEhkaZ~QsYV }Z}y{{pqZUp^Gh`yx{xEP_xQE~qZqTxUZFQ aZ~QsYk^\]RdI~^~^xQE~qZqTxVpXVtWZ~QsY~ T`
i|fbY}A{Cvb_Tx{x P{}Z~QsYVtHIxQE~qZqTxV|ES`yx{{Yvb@
;L@_XR^		PTQUPP 
R \V PpGCWFB]]_UZTPQVS
	TRQ	RnW	
VPU	QZVmU SRV	PQ	]QWQPUQW
 VVS[	SUUZQRXGEHARW VF]V
TS\[E^PV@YU[D
2D\W@C	SQPU
 	WR
V  		VpUD[YH[R_UTVZ_\TTPU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
QlEWYI]ll]

RPWQSUTRPSW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@B	UP   	WUWQ
  QUq^GSYKYYXVBY\TPWU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
QlB]]E^ll]

RPWQSV	Y U  P
VRQT	R]TPP
PW
SURYW
RV				UUZQRXGEHARW VF]V
TS\[E^PV@YU[D
2FB]YQ]

]STWQSVRVVUWS]
QVVsWMQ[JZZZ_H[^UWRUZTPQVS
	TRQ	RnKW_G_onWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	8E\VBK TYTS
WVR	P  	WxJYPF^VY V_[@IBGY\_\_\V@T[GB[GIETAFJ@VLQ@[URU]@dKCU_W\UUZTPQVS
	TRQ	RnKW_G_onWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	89