D]WACWG]Uyzp^{]tYjzx{ZkJ|Sx@|IK}@A}t[|x^^{ssUyTwIhs{ySh	{YEyyzp^{sx]R
	{Z][iTgLhhhDR~gLkgGj~cLQIGja`P~q]Uyzp^{]^YyS^PhtgjT{SkdwF~SgQkc}`~gt^}SZMhZt[in|@|wh[j~wT{YEyyzp^{sxGja`P}YxS@xJqYsUyzpPQwtQzx{Y^U~Vkg\jj	P~q]Uyzp^{^pDSW`P}Y{~}|P~q]Uyzp^{^pHyS^Pf[wbjpAJsU}Sp@YEjA}csJ}S^Cc{AsPp^{ss[T~IC{Z][T~IC{YEyyzp^{sxUasU{Z][RTLhc{AsPp^{ss[TPx{Z{[sW8F_WCJUE]WprxUy_t[crpyXwHwr~KHtuxG}XGpXNyyqsWprsZQecYvXp ~q{CzXxUyqsYXv HTq{p\^Tu`X[HYTe|BcvH|_IcHpAs[sWprx[QecYvXpJ}fYc\wY~a c\pK|f`Xw|Fi_|[wH	~vHte^j_hXtuR[|s]WprxUy_\]rpy\VJpXNyyqsWprsEij`_p[V[| |@Z\wRutIuHpAs[sWprx[SuI]rpyXc tHpAs[sWprx[SzYvXs}d`vpu|J~asItupK|fsue|yvwIv[tJy[E{prxUyqx [yt[[x [yt[|s]WprxUy\`Zvl[[xE[^y[E{prxUyqxp[V[}[{{_`:D_UJBWE_^xzsW{_vRkz{{XuAz |KA|}wEf}P}x]W{qq^xTt@hqyxSk {[GrxzsW{qzVS
| {X_PUqxVuXTUnJEhj~C}T`k DRSWEPzWxPE{{qq^xzx@hqyxTkGh_yhCd]~fihCQD|ufR|jkHe}mQI|H}kSk|fiz{Cq[q^xzsYP_f	xS]YV}P}x]W{qq^xWpXVuWP~P{FV fQU~Z\Q[P}x]W{qq^xWpFQ\aP~P{ |v}P}x]W{qq^xWpJ{X_PeRu`aqA|mwWXq@|PG}a A~jsHX_C|j{Cq[q^xzsYVuHCxS]YVuHCxPE{{qq^xzx WjrUxS]YP_	Lkj{Cq[q^xzsYV[yxS{Yq\ ;O_UAA
\E_U{sxVp_vYhsppXuJ|swKJt|Dwva[~qVVpqqU{]Acqy{Z`p[Gy{sxVpqz]PwpX_[VoXcuvD~]k ` DYP^tD[z\{YNzpqqU{ssAcqy{]c\`_j_dQ]ufuJ|`EwuyI	tuu~gt`Hb[|htuzX|cpBz[qU{sxX[_f{ZVX]}[~qVVpqqU{^{Y]uW[}YpG] XDQlGp[Gy{sxVpqzEPspX_[|thKp[Gy{sxVpqzEQIppYb`ulVtfuH{tpFtXyFtREtf[UdptHu[~qVVpqqU{^kBZKy{^kBZKyAqYxVpqq[VxUFcay{]G[_e[~qVVpqqU{^`Xv[yK{WI3D\WAC STWTX

 WRPXW 
SWpAX[G^UAW\SKHIFY]\W^WWAWSLCPFIF\JMK@WDZAZUSVUKe@BU\_WTUR_[PWX	WSZ	Sm\	SPVT 	P\P[TzmW	QSU[P\WPSQT	R\
SXW	SU WT[RQZFDIBQ V_F_WWZ\XG_QWCPUXF	3GUWCAS TVR\
T[QP QrQXP_XZE_S^KT^
TWQBKBDP^W^]\UB\QE@[D@M^CFIITFSBX\P]WBfK@\W]^W\PVPRTQ 	 \PQ PfU	XW RSSm\	
SQTRR \TPQ PWSUXXWXW			U_[QSXMEIASW VF]\TS\ZETPW@YUZD 3FB]XQWT
_SQUTR
V
UX 
WyVTWW_WT]\PVPRTQ 	 \PQ PfU	XW RSSm\	
SQTRR \TPQ PWSUXXWXW			U_[QSXMEIASW VF]\TS\ZETPW@YUZD 3D\WACS PW	 	T WRX 
QVpTXUYW]U_VX\_Z@IBFYV_\_\WJTZGB[FIEUAFK@\MQ@ZUXU\@dKBU_V\UU[TPP\S	TRQ	XnWPU	ZXQmUSS\	PP	T_RQ	X\[W
QPUQ W WVSZ	SZDMAJS_TD_U_Q^ZG]X_K[WZF	 ;O^UAA
 TPRT

 \PPT     QVSrSQXWSX@S_W^ZC@BD[]^_V\UAUZDK[DKDUBFIBWMRIXWST\CmK@W^V_\W[WPRWP	U[QSoT	Q\QXRoW	QSU[P\WPS
ST	R\
SXW	SU WT[RQZFDIBQ V_F_WWZ\XG_QWCPUXF	3GUWCAP]	QQRVT[W [QrU]\VTWFY

U\QB@AM[_\^V_\CWQEKXMKF^CE@BUFSIQWQVWBmHIW\]^\WPVS[UQ W[RQmU S\SSSnW
PXU
R[WT[RQWRUSS\ST 	
\TPQ PQFDBA
P V VMTW TSWYL_Q\@Y^YM	8D\\BJ\S
S	WR	\		R yV_UWTVV\STW^Q@IIEP]^\_WTAUQGBPE@D^AMHIWFQ@Y\STW@d@A\^]\U\PT[SWS URZ SoWS	PU V
\VPf\

XPWPS UTRZ SW PW	XQU X \
T_RQ	XYMF@AXT TD\\TQ^QDTS^@[WQE :D^UJBTU		Q
WPV 	
P q^_UU_UVH\_Z@IBFYV_\_\WJTZGB[FIEUAFK@\MQ@ZUXU\@dKBU_V\UU[TPP\S	TRQ	XnWP[U	]W WPmehTV		\SQ[TWPP]UR [o T VWVPSXU	[WPSW	P	U \WPSQQEMBCQ_TFTT VQ\XL\X\B[UXM 8F_WCJUE{prx[T[{prpKy[E~zXxUy\pJp[VUyGWLn[]WaT]B^\\T	h[xHDPEav^U}a_YCj@VAqBWhbFO{I]Tz`GZKVD|cE[flDi _]fZR\x@cQfYYup	yyqsY`fkYyX]Wp\]FjeVDcb\ia{C}`VUyqxG[syX]Wp[h}K{C}`VUyqx@crpyq{Hw[{XjfxZtr	ecIue|Jje{D`fo_}Kw[xE}v t[o[iekYup	yyqsY`fUYyX]Wp[|Ky[E~zXxUy\|Z\bpyqxX]ikDy[E~zXxUy_\]rpyqxZHpAtc]WprsUjp\p[VUy_F[\l[|s{prx[QuJ]rpyqx^[fo\RegEc|[|s{prx[Sut Xrpyq{F\_]jSz`g\v^Dy[E~zXxUy\`CZHpyqx [yt[|s{prx[S @p[VUy[{~z_	:D_UJBWE rxzsYV[yxz{I{[GwrPsW{\rCxS]W{GUDeY_Wc\U@\^U\jYq@L[ Gaq^a]AUXybkwmKQSzb	Rq~K		}T\~ ~LPqdDke@PnV_Vv[xPE~q[q^xTt[hqyxzxYSeTCUa{Ek iP}x{{qqPR~IVqyxz{ |v}P}x{{qqPPncY}[qPm`[|vXP|gD}v\TjHefP}nw| aMmkGvqC}{k_bSxPE~q[q^xTt@hqyxz{H[yJuh]W{qzCh
YY}[qPhad PKyJuh]W{qzLkacY}[qPU
Y~s rxzsYVz\Nkj{{qzLS\{[GwrPsW{_XOR
cY}[qPhT^^Qf@}T|]{[GwrPsW{\rQU~UY}[qP}
Vc `l`Z~KyJuh]W{qz	SqY}[qPU~JJ{[GwrPsW{\~LPj{{qyPuhB	8FBV[X\
 SV
[ VSR		PVTZrD@]DK^_\
WPVS[UQ W[RQmU  TS\RPT
nW
PXU
R[WRUSS\ST 	
\TPQ PWVPSXZDFBCXT_E_U VZ_QG]S\BPVQF	8FUTJA
QXS	V	U[ U		 UrVGQ[AXX]VW\XV_^WSW^Q@IIEP]^\_WTAUQGBPE@D^AMHIWFQ@Y\STW@d@A\^]\U\PT[SWS URZ SoF][@^foW	QSU[P\WPSQT	R\
SXW	SU WT[RQZFDIBQ V_F_WWZ\XG_QWCPUXF	3GUWCAVS
	TVT[	 [WrTEZZA[Z[\@P_^STW^Q@IIEP]^\_WTAUQGBPE@D^AMHIWFQ@Y\STW@d@A\^]\U\PT[SWS URZ SoAW_L]foW	QSU[P\

SW
S U	[[W P WVSZ	SU P\
QST Q 	\
 WVPSXZDFBCXT_E_U VZ_QG]S\BPVQF	8DK^SS^
	 WQW]SZUPU U_TPWXUTpTGSRIPXY\BYWVUQ
WPVS[UQ W[RQmAUVDUmmUSS\	PP	T_RQ	X\[W
QPUQ W WVSZ	SZDMAJS_TD_U_Q^ZG]X_K[WZF	 ;O^UAA
WSVP
	T \P
R	 TrHPSL\US

U\QB@AM[_\^V_\CWQEKXMKF^CE@BUFSIQWQVWBmHIW\]^\WPVS[UQ W[RQmAUVDUmmUSS\	PP	T_RQ	X\[W
QPUQ W WVSZ	SZDMAJS_TD_U_Q^ZG]X_K[WZF	 ;3