D]W@CWG]TyqsP{]tXjq{{ZkK|X{N|IJ}[}c{@s[sP{ssZie^\{Z]Z~Xc^~q]TyqsP{]ZESc^}Yx jex\kg
Fjzd]S`FSKAQ]QZ|s]P{ssTy_^\{Z]ZjXZ\wk}vcChZUDqktX|fU@Z{G~ukhd`[~_c|g{ y[E|{ssTyqxBhhcZ[xQI{@s[sP{ssZSutSs{y[@Sx^IQe|_Ps
Z|s]P{ssTy\pAQ^cZ[{|tZ|s]P{ssTy\pM{Z]ZdYr`csK}fPZsJ}K@YJ~Ks@J]D}a{DqYsTyqs^VwJIyX]^VwJIy[E|{ssTyqxWhp_yX]^P]Fja{DqYsTyqs^VY{yX{^q^:D_RACWEXUyqrW{_qYjqz{XrJ~q |K~qHfT[|s\W{qvUy_u@hq~yXj {[@yyqrW{q}]R} {XX[TzyVu__TeKEhjyH|_ak CYR\~EP}\y[D{{qvUyqy@hq~y_e[|Xzi_bJ~ffvzD|vT jq|X~|fqYkH~H~eeYh_m^j[zCq[vUyqrYP_ayX\YVz[|s\W{qvUy\qXVuP[[zFQ_[YjaY~sXUyqrW{\uDS\bY}[~~v~Y~sXUyqrW{\uHyX\YfYwbarHfrU}XrIKE}[I|KvE}H\Ga~As[rW{qv[TuKJ{XX[TuKJ{[@yyqrW{q}Ujq\{XX[R_
Eha~As[rW{qv[T[z{X~[s\8DZWCA	W@]W{pqU{Zt[hpy{]wH|p|N|ZKMwY~r_U{tsW{^vBht{{Yi{^E{{pqU{tx_P ~{]]YP^fhptF~^bkF[P]}GPx^{ZGy{tsW{pzBht{{Y}]hZ|YfZ~cYG|diF|swhZ `tY~gfYk`]}d}k]YIkJyAq^sW{pq[PZd {Y_[VY~r_U{tsW{]rZVpUY}ZyDQYd^~JyAq^sW{pq[QpIVpy{]c JyAq^sW{pq[QY}Zz}f`v{wuJ|dsIwyH~csI~gy{ssJ}YqJ{^E{{pqU{tx P{}[}^x P{}[~v]W{pqU{Y`Qte[}^xEP^{^E{{pqU{tx{Y_[^{{Tb8A_UA@
RE_UzssU~_vYis{~XuJ}syK |sJyvS[q]U~qqUz]tBmqyzZk~[GyzssU~qz]Q|~X_[j]dGmjjDQwdGn eGiw`GTKGihc[{s_UzssU~_\YzZ][nfvY~]gnHaF|tgmq jZY{f[|tcFmvejdYmveK~tY~[GyzssU~qzGihc[x[zPI{At[qUzss[TuvRs{~[	_P]dJSefGjYD~[GyzssU~qzEQx~X_[}tcH~[GyzssU~qzEPI{~YbaugUzf}Ezt{EzX}F~t{FzXSU~tzvu[q]U~qqUz^`ATKyz^`ATKyApYsU~qq[Wx^Emayz]DU_e[q]U~qqUz^k[x[yKzWB=D\W@C STV WV
WRQST SVpJ[UG^TAW]S@KGFY]]\]YWAVSG@^FIG\ACK@WDQBZUSWU@fNBU]_\WURTUPWS 	VPT	SlW
SQVW	PRQPWtmV
 QSU
UP
WTPS
QW 	RR
RSW	RUWUPQQZGDBAQV QF_V TT\XG^Q\@^UXF
	8D[WCA	PTVRW
WUQQ   QrPX[\VZE_R^@Z^
WYQBKCD[]Y^]]UARQE@ZDKC^CGIBW
FSBXWSSWBfJ@WY]^WWPVQRWQ 	RPPShU	VWQSSlW

RQWRRRTPPSW
PUSVW
S V	
	UTUQRXFFGAR T VF]WTS\[E_SY@YU[D=FB]YQ\T QSPUTR WVV 
VrUZWW_V_^WPVQRWQ 	RPPShU	VWQSSlW

RQWRRRTPPSW
PUSVW
S V	
	UTUQRXFFGAR T VF]WTS\[E_SY@YU[D=D\W@CS PV	UWR
S QWp_[[YW]T_UV W\T@IBGY]\
\_\VAWTGB[GIF[AFJ@WCQ@[USVR@dKCU\X\UUUTPQWS
	WRQ	SmW
SU	QVQmU
SRW
PQ	WQRQ	SRPWQSUQ W

VVPT	S[DFBDSTTD^U QQ^ZF]S\E[WZG	8A^UA@
 TQR W


RPPU  QVSsSZ[YSX@STV^Q@NBD[\^\X\U@UQGE[DKD^AFIBVFQGXWRTW@cK@W^]\RWPTPRVS	UUQRoW	QRPSQoV
 QSU
UP
WTPSSW 	RR
RSW	RUWUPQQZGDBAQV QF_V TT\XG^Q\@^UXF
	8D[WCA	SS	QPRVWUV   UQrT]WUZWFX
U\PBKBC[_\^]\RCWPE@[CKF_CFNBUGSB_WQVVBfKGW\\^WWQVPUUQ WPQQmUSWSRSmWSVU
RUWUPQQVRUSSWS
W	RTPPS_FDB@S VVFZW US\ZB_Q\AYUZC	8E\WAD WP 
S

 VR
R
RwV_UVT]URST	W^QAIBF^]^]_\WAUQFB[FND^@FKGWFP@ZRSTWAdKBR^]]URPUPPWRURQSoVP	PUV

WVQmR

SSWQPUTRQSWPV
VQUV W

WQRQ	SZCF@AST UD_RTP^ZGZS^@ZWZF:D_UAAUUQ
WQ
 V Q rP_UU^UUF W\T@IBGY]\
\_\VAWTGB[GIF[AFJ@WCQ@[USVR@dKCU\X\UUUTPQWS
	WRQ	SmWQUU	VWTPmdhWV	RSPPWWQSSURUo TV WVQSVU	UW
SSV	S	U WTPS
QZFCBC Q QTG_W VQ]XG_V\B[TXF8F_VCAUE{{qv[T[z{q~Ky[D~q[vUy\qJ{XXUyGVG`[]W`_^B^]\_hZxCG^Eaw^^~o_YCk@]BBWhcFDxG]TzaGQHXD|bEPebDi _VeZR\y@h _fXY~syyqrYkeeYyX\W{_SFjeWDha\iazCvcXUyqyGP}yX\W{Xf}KzCvcXUyqy@hq~yqzH|XuXjfyZqebI~frJjezDkea_}K|XvE}v~ Xa[iejY~syyqrYke[YyX\W{XrKy[D~q[vUy\}ZWa~yqyXVjeDy[D~q[vUy_\Vq~yqyQK~Atc\W{q}Ujq\{XXUy_FP_b[|s{{qv[Qu
JVq~yqy^Pea\RefEh r[|s{{qv[Suu Sq~yqzFW\SjSzagWuPDy[D~q[vUy\aCQK~yqy Pzz[|s{{qv[S @{XXUy[z~q\:D^UAAWD y{tsYVZy{t{I{ZG|q^sW{]rH{]]W{FUGeY_Vc
_[@\^^_ jYzCB[ G`qUa\A^Vybjwf KQS{bQ~J	~Z\~~GSdDkdKS`V_Vw[{^E~qZqU{Zt[hpy{txYSdTHVo{Eki[~v{{pq[QpIVpy{t{ |w}[~v{{pq[S`cY}Zq[|c`[|wX[gD}w\_|dHdf[~`w|aF|ckGwqH|s{k^bX{^E~qZqU{Zt@hpy{t{HZyAvf]W{pzHkYY}Zq[kod PJyAvf]W{pzGhocY}Zq[VY~r y{tsYV{\Ehd{{pzGP\{ZG|q^sW{^XDQcY}Zq[kZ^^Q fK~Z|]{ZG|q^sW{]rZVpUY}Zq[~Vck|b`Z~JyAvf]W{pzPY}Zq[VpJJ{ZG|q^sW{]~GSd{{py[vfB	8GB]XV\
S
  VU VSR
PWT TrD@\D@]_\WQVPUUQ WPQQmUTS
WRQTmWSVU
RUVRUSSWS
W	RTPPSWVQSVZDFCCVTTF_UVQ\_G]S]B[U_F	9F^WDA
QSPV

UPU	VrVGP[J[V]VW]X]\PWS	W^QAIBF^]^]_\WAUQFB[FND^@FKGWFP@ZRSTWAdKBR^]]URPUPPWRURQSoF\[K]hoV
 QSU
UP
WTPS
QW 	RR
RSW	RUWUPQQZGDBAQV QF_V TT\XG^Q\@^UXF
	8D[WCA	VSTVWU	   UWrUEQYO[Z[]@[\PST	W^QAIBF^]^]_\WAUQFB[FND^@FKGWFP@ZRSTWAdKBR^]]URPUPPWRURQSoAV_G^hoV
 QSU
UP
R

R
 WPU	PUWP VVPT	SUPW
QRWQ 	R
WVQSVZDFCCVTTF_UVQ\_G]S]B[U_F	9D@]]S^
VQTSSQVPU VQTPVSV TpTFSYJ^XY\CY\UUQWQVPUUQ WPQQm@U]G[mmU
SRW
PQ	WQRQ	SRPWQSUQ W

VVPT	S[DFBDSTTD^U QQ^ZF]S\E[WZG	8A^UA@
WRVS
	TRP
R  TsH[PB\UR
U\PBKBC[_\^]\RCWPE@[CKF_CFNBUGSB_WQVVBfKGW\\^WWQVPUUQ WPQQm@U]G[mmU
SRW
PQ	WQRQ	SRPWQSUQ W

VVPT	S[DFBDSTTD^U QQ^ZF]S\E[WZG	8=