D]WABWG]UxqsS{]tYkq{{ZwJq|I|qMd{[}s]S{ssUx_tDhs{xXk{YEyxqsS{sx]S|{Z][h_dAhhhDSudAkgGku`AQIGkjc]~q]UxqsS{]^YxX]]}gw|e|X|JYFku|IhfU~dZ_kv{@kdYhHwhZg |et]{YEyxqsS{sxGkjc]}YxRK{GqYsUxqs]QwtPq{{Y_heX~I{Ar[sS{ss[RuMVs{xXcI{Ar[sS{ss[Rz]}Yx}e`r{twH|qsMt{K}fwM~d{xvsM}ZJx[E{ssUxqxPx[~[xPx[}s]S{ssUx\`Qwg[~[xAP^x[E{ssUxqx{Z][|[{Ta;D_QACWE[UyqsV{_rYjq{{XmJ|X{H|K  q|q}As[sV{qu[ie^Z{X[[~XcX~s[UyqsV{_\DScX}[~jexZkeGjzd[S fGSKGQ_W[|s]V{quUy_^Z{X[[~ {F|Xb[jugE|uyj[hXyJ|ex]|uyF}XsFfyJ~vh\fmHy[Ez{quUyqxDhje[[xQK}As[sV{qu[SutSq}y[HSe\|K{Bq[uUyqsXQuKTq{{Xe}K{Bq[uUyqsXQzy[[x~fftyvwIKuK}v{H~fqK|f{{vuKXI{[CyyqsV{q~RzX}[~RzX~s[UyqsV{\fSugX}[~GR ]{[CyyqsV{q~ yX]X[}yVc8DYWCAWC]W{qpU{Yt[hqx{^kH~XxK|M|aJ}`kY~s^U{wsW{_wBhw{{Xh{]E{{qpU{wx_P{^]YP_ghstF~_ckF[P\|GPx^{[Fy{wsW{q{Bhw{{XVJ|`c HkX~ccf`F|sgka [|NU~fc^h^pXvxswh[xAq]sW{qp[PYd {X^[VY~s^U{wsW{\sZVsUY}[xDhsdXPq	[~u]W{qpU{ZpFQ\`[}]{ |v|[~u]W{qpU{ZpJ{X^[f_u`apJ`gWXpK]H[K|wsGX^Hg{Cq[pU{wsYVuIH{^]YVuIH{]E{{qpU{wx Wjs^{^]YP_Ghg{Cq[pU{wsYV[x{^{Yq\8B_UAAQE_U{rsU}_vYhr{}XuJ|rzK|rJyayAqXsU}qq[kf^Y}X_[|[c[xs_U{rsU}_XDQc[{[zQ_dUujPv^W}GhydXU bGQHDW_S[~p]U}qqU{\^Y}X_[|u|Xz_eKfcFyezZkH{vTY~eU nXeFh\cyv[ h[{fW{XEy}qqU{rxGnja[}XxWKyAqXsU}qq[QvtUqy{XXV  hfBne~H{Aw[qU{rs[Wu	KVr{}XaH{Aw[qU{rs[Wz}[}Xx}`bt{uwJyaqKu{KxfuK~e{}vqK}[J}[Gy{rsU}qzPy[{[zPy[xs_U{rsU}\bQvg[{[zGP^}[Gy{rsU}qz {[][y[yyT`>D\WAB STW	 WU

	WRPSTSWqJ[VG^U@ W\R@KDFY]\\]ZWAWRG@]FIF]A@K@WEQBZUSVT@fMBU\^\WUSTVPWS 	WPW	SmW
SPWW	P	QPPWwmW	
QST
VPWTPSPW	SQ
SSW	SU	WTPQQZFEBAQ W RF_W TW\XG_P\@]UXF8DXWCAPTVSW
 WVQP  QrQY[\UZE_S_@Y^
WZQBKBE[]Z^]\TAQQE@[EK@^CFHBW	FSBYWSPWBfKAWZ]^WWPVPSWQ QPQSkUUWQSSmW

SPWRSQTPQSWPU	SUWS W
	TTVQSYFFDAS T VF\WTS\ZD_SZ@YUZE>FB]XP\T
 RSQ UTS VVU 
W	rUYWW_W_^WPVPSWQ QPQSkUUWQSSmW

SPWRSQTPQSWPU	SUWS W
	TTVQSYFFDAS T VF\WTS\ZD_SZ@YUZE>D\WABS PWT WRSQVq_[XYW]U^UUW\W@IBFX]\	\_\WAWWGB[FHFXAFKAW@Q@ZTSVQ@dKBT\[\UTVTPPWSW RQSmWSUQUQmT
SSW
PPWRRQSQPW
PSUP W
WWPW	SZEFBGSTTD_T RQ^ZG\S\F[WZF8B^UAA TPS W

QPPT QVSrRZ[ZSX@RT W_Q@MBD[]_\[\UATQGF[DKE^AFIBWFQDXWSUW@`K@W_]\QWPTPRWS	TVQSnW	PQQSQoW	
QST
VPWTPS
RW	SQ
SSW	SU	WTPQQZFEBAQ W RF_W TW\XG_P\@]UXF8DXWCASP	QQSV WVW  VQrU\WUYWFYU\QCKB@[_\_]\QCWQD@[@KF^BFMBUFRB\WQVWCfKDW\]_WWPWPVUP WPQQmTSWSSRmW
SUU
SVWTPQQW RTSSWS WQTPQS\FDBAS V WFYW TR\ZA_Q\@XUZ@	8D]WAG	WP
S	

WS
QStV_UWU]UQSTW^Q@HBF]]^\^\WAUQGC[FMD^AFKDWFQAZQSTW@eKBQ^]\TQPTPPWSUSQSoWP 	PTV
WVPmQ

SSWPPUTSQSWPW
UQTU W
WRRQSZ@F@AST TE_QTQ_ZGYS^@[VZF:D^TAATTQ
	
WP
VPrS_UU_TUEW\W@IBFX]\	\_\WAWWGB[FHFXAFKAW@Q@ZTSVQ@dKBT\[\UTVTPPWSW RQSmWPVUVWTPmeiWVQSQPWWPSPUSVo T W WVPRUUVW
SSWS	TWTPSPZF@BCP RTF_W VQ\YG_U\B[UYF8F_WBAUEz{qu[T[{{q}Ky[Eq[uUy\pK{X[UyGWGc[]Wa	_^B^\]_h[yCG]Eav_^~l_YCjA]B|BWhbGDxD]Tz`FQH[D|cDPeaDi ^VeZR\xAh \fYX~syyqsXkefYyX]V{_PFjeVEha\ia{Bvc[UyqxFP~yX]V{Xe}K{Bvc[UyqxAhq}yq{I|XvXjfx[qecH~fqJje{Ekeb_}K |XuE}vXb[iekX~syyqsXkeXYyX]V{XqKy[Eq[uUy\|[Wa}yqxYVjfDy[Eq[uUy_]Vq}yqxQK}Atc]V{q~Ujp]{X[Uy_GP_a[|sz{qu[QuKVq}yqx_Peb\RegDh q[|sz{qu[SutSq}yq{GW\PjSz`fWuSDy[Eq[uUy\`BQK}yqxPzy[|sz{qu[S A{X[Uy[{q\:D_TAAWEy{wsYV[x{w{I{[F|q]sW{\sH{^]W{GTGeY_Wb
_X@\_^_jXzCA[ GapUa]@^UybkvfKQSzcQ|~K~Y\~ GS|dDkeKScV_VvZ{]E~q[pU{Yt[hqx{wxYSeUHVl{Ek h[~u{{qp[QsIVqx{w{ |v|[~u{{qp[SccY}[p[|``[|vY[gD}v]_|gHeg[~cw| `F|`kGvpH|p{k_cX{]E~q[pU{Yt@hqx{w{H[xAve]W{q{HkYY}[p[kld PKxAve]W{q{GhlcY}[p[VY~sy{wsYVz]Ehg{{q{GP\{[F|q]sW{_YDQcY}[p[kY^^QgK~Y|]{[F|q]sW{\sZVsUY}[p[~Vc k|a`Z~KxAve]W{q{P|Y}[p[VsJJ{[F|q]sW{\GSg{{qx[veB	8FC]XU\
S VV VSS
PVU WrD@]E@]_\WPWPVUP WPQQmTTSWRPUmW
SUU
SVW RTSSWS WQTPQSWVPRUZDFBBUTTF_U WQ\\G]S\C[U\F	8G^WGA
PSPV

TPUVrVGQZJ[U]VW\Y]\SWSW^Q@HBF]]^\^\WAUQGC[FMD^AFKDWFQAZQSTW@eKBQ^]\TQPTPPWSUSQSoF]ZK]koW	
QST
VPWTPSPW	SQ
SSW	SU	WTPQQZFEBAQ W RF_W TW\XG_P\@]UXF8DXWCA VS
TV WV	  VWrTDQYL[Z[\A[\SSTW^Q@HBF]]^\^\WAUQGC[FMD^AFKDWFQAZQSTW@eKBQ^]\TQPTPPWSUSQSoAW^G^koW	
QST
VPQ

S
 W
PUPVWP WWPW	STPW
QSWQ Q
WVPRUZDFBBUTTF_U WQ\\G]S\C[U\F	8E@]^S^
WPTPRQVPU VRTPW	SVTpTGRYJ]XY\BX\UUQWPWPVUP WPQQmAT]GXmmT
SSW
PPWRRQSQPW
PSUP W
WWPW	SZEFBGSTTD_T RQ^ZG\S\F[WZF8B^UAAWSWS
	TQP
S  TrI[PA\USU\QCKB@[_\_]\QCWQD@[@KF^BFMBUFRB\WQVWCfKDW\]_WWPWPVUP WPQQmAT]GXmmT
SSW
PPWRRQSQPW
PSUP W
WWPW	SZEFBGSTTD_T RQ^ZG\S\F[WZF8>