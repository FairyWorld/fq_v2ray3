D]WACWG]Uy{pT{]tYj{x{ZwJ~{|Ik {YEyy{pT{sxZQo`Z}Y{ ~{x@qYsUy{pZSwHT{x{]^Tc[PIYToAhwH|UJhI{AsQpT{ss[Qo`Z}YxZ}B{Y|d_{ XhgcJ|l`D|Z{FlUZhc_iRx|}RdJk[|y^T{ssUyU_Vs{yVUI{YEyy{pT{sxEi`c\{Z][|
k[Q]DyQFx{ssUy{{DPxyR^Z|tcHyQFx{ssUy{{DQI{ySc`ugU}lt{t{E}RxGtUF}l|Ttg}BtZ~q]Uy{pT{^`ASAx{^`ASAx@qYsUy{pZVx^Ejkx{]DRUdZ~q]Uy{pT{^k[QxJ{WB:N\VAC]F\UyqsWq\uYjq{q[jJ|X{IvH~qHuev[|s]WqrrUy_t@brzyXk qXDyyqsWqry]R| q[\[i_dEbiiDRudEafGju`E[HGjjcYtp\UyqsWq\_YyX]YbuzK}fUu\zF}fc vHi_dYteXjX{Db[rHfZ]u\fH} `ZqXDyyqsWqryGjjcYwXySK{C{XrUyqsY[vuQq{qX
EQeJ\tHzAs[sWqrr[SuI\rzyXc uHzAs[sWqrr[SzYwXy}d`vquvH}qsIuuzK|fstevHyvsw[~Jy[E{qrrUyqx Zy~[[x Zy~[|s]WqrrUy\`[vf[[xEZ^y[E{qrrUyqxq[\[}[{{^`:D_UKB	WE__xpsW{_vSkp{{Xi@}Y{I|K	|`Hv[Q}r]W{qq_x^t@hqyxYk {[GsxpsW{qzWS | {X_QUdYhuvN}^`[P\}MS^d {[GsxpsW{qzHkp{{Xe~gwkf\S}gsG}vuLwxZk[ |IpZ~fXTkYw}ei|dt[qyKrZsW{qqQS^d {X_QU Y~s__xpsW{\rPUtUY}[yNS p@P_\NSZ
Y~s__xpsW{\rNR]cY}[ywY~s__xpsW{\rBxY]YfY	}c`sHfS_|YsI[ O~pHKqOg]JayKrZsW{qqQUtJJ{X_QUtJJ{[GsxpsW{qzTkp\{X_QS^EhayKrZsW{qqQUZ{{XyQr]8D]]B@WGWVzqqU{]~Ziqy{ZaIXyK|I |aJ|t[Xs_U{syVz_vBhsqzXi{YOzzqqU{sr^Q~{ZWXW f[hw~G_bkLZQ\}GPr_z[Gy{syVzqzBhsqzXbZtS~eeH~ga|eaF|t_~a[|JSfr[k]nY|fX_|Z_H~[yAqYyVzqq[P]nzX_[VuXs_U{syVz\rZVw_X|[yDQwnHi_	KPg~Dj eD{YOzzqqU{srFQz{ZWX}vaH{YOzzqqU{srFPKy{[aaweUd}KzvyEZqE~vWFduV~veJ}Xs_U{syVz\bAQIqz\bAQIqBp[qU{syXWz\Ehcqz_DP]mXs_U{syVz\i[}YqHzU@8FTT@A
[WV
WS 	
UZQ QT	[VrH[PEVTC
T]QBKBDQ^]^]\UBVQE@[DAG^CFIHTFSBX]PWWBfK@]]]^W]PVPRTQ 	VPQPlU
QQTWS
WQRWqoV

YPWPS
UTR[
SWPW	RQUR ]
TURQ	YYGF@AYT TD\VTQ^PD^S^@[WPE
:D^UKB	PV^PU
  WPYQ  SqPZY\SXM\R\B_\W\SJHCFY]\V^]WAWSMCZFIF\KGK@WD[AZUSVUJeJBU\_VTUR^QPWY	WSP	Sm]ST	QQ[lU
RSW
ZP	WVSP	SU
P]
QST
Q 		V
WVPSRZDFBCRT^E_U V[_[G]S\BQV[F	8DJ^YS^\TPP]WP WVS	V
pU_U_\V]^UR^QPWY	WSP	Sm]ST	QQ[lU
RSW
ZP	WVSP	SU
P]
QST
Q 		V
WVPSRZDFBCRT^E_U V[_[G]S\BQV[F	8FTT@A
QSV	 UUZ
Q Y Wr][^[_^T]US
 U\QBAAG[_\^W_VCWQEJXGKF^CEJBUFSH[WQVWBlHCW\]^]WPVSQUQ

WZRQmU
S]SSSnW
PRU
RQWTZRQWRUSS]ST
	VTPQP[FDBAP V VL^W TSVYF_Q\@Y_YG	8D\]B@WQPW 	
WRSU	S^PsQX[\QPCQVV\S@K@LX\\\]^]@WSG@YLHF\ADAAVDQBPTRVU@fIHT\_\WTRTRZVS WPSRmWSWPQQgV

YPWPS
UTR[QWPW	RQUR ]
TURQ	YYGF@AYT TD\VTQ^PD^S^@[WPE
:D^UKB	SVRPP
	^WP V  P	YqT_UU_UEX]_P@IBFYW_\_\WKTPGB[FIE_AFK@]GQ@ZUYUV@dKBU_\\UUQTPP]S	TRQ	YnWPU	[RQmU SS]	PP	TURQ	YVZW
QPUQ

W  WVSP	SZDLA@S^TD_UUQ^ZG]Y_A[WZF	;E^UAA
 
UP[

	 VP
W  
P	rTWVVV_UW[W	UVRAK@F[_V]]^WC]RF@YFKL]@DKBUEPBZWQ\TAfIBWV^]WWSURPUR ]PSQgVPSWT	
U	^QoW	QSU QP]WPSQT	RV
SYW	SU	
WTZRQZFDHBQ VUF_W
WP\XG_QVCZUXF	2G_WCA UW Y
	TQT 	QrU]]V^WUC
 U\QBAAG[_\^W_VCWQEJXGKF^CEJBUFSH[WQVWBlHCW\]^]WPVSQUQ

WZRQmUQP]T
	T	TRndjW U WPPRWU QSV]P	P g  VTU^QQS]PTSQVS  W	
 UTR[
SXFF@K S T
WG]W^R]ZE_S^JXTZD:N\VAC]FyyqsY\Xzyq{IqXD|s[sWq_qHyX]WqDVEeYUT`
]^@V]^]`ZzAG[ Mbw\\~j]Q@kB_Bz@_kcDFxB_\yaESH]FtbGRegFa]TeXZ_yBj Z weX[|s{qrr[ie`[q[\Uy_VDbfWFja^abzAtc]WqryERx q[\UyXc uHzAtc]WqryBjq{qrzJ~XpZbeyX}qwfbK|fwHbfzFied]uH~XsGuu~}XdYafj[|s{qrr[ie^[q[\UyXwIqXD|s[sWq_}XUa{qryZTj`FqXD|s[sWq\^Tq{qrySK{C|`\Uyqx ]iq^yX]Wq\DR_gYtpyyqsYYv
HTq{qry\Red^ZffGj wYtpyyqsY[vuQq{qrzDU\Vh[yaeUuUFqXD|s[sWq_aASK{qryRzYtpyyqsY[ByX]WqXz|s\2G^WCATD{{qqQUZ{{qyAxZE~q[q_x]pJ{X__xFWGgQ\Va_^H_\\_ i[xCGYD`sWc	\C\S{jjudIYP{` Qz}}J ~_T}|ESzfLhdISeTWUwY{[GvrZsW{_vSkp{{qzQPdVJVjyMhkY~s sxpsYQu	AUp{{qywY~s sxpsYSeaQ~ZsY|fbSwZY eL~w^]|a @|ddY~eu	cD|fiO|wsJ|vy
h^`Z{[GvrZsW{_vHkp{{qy@|Z{Cvc__xpxJk[Q~ZsYkjfSJ{Cvc__xpxEhjaQ~ZsYV}Q}r{{qqQU{^GhayxpxEP TxZE~q[q_x^ZFQaQ~ZsYk_\VR dI~_~UxZE~q[q_x]pXVuWQ~ZsY~T`i|gbR}J{Cvc__xpx Pz}Q~ZsYVuHBxZE~q[q_x]|ESayxp{Yvc@;G@_XS^	[
TP^PP 
RWV QpLC\FB]]TUQTPP]S	TRQ	YnW	VP
U	ZQVmU SS]	PP	VZW
QPUQ

W  WVSP	SU^QQSXLECAS
W VF]]TS\ZEUP]@YUZD9D\WACSQPU

 WR] 	Vp^DPYH[S_^T]Z_\U_P	UVRAK@F[_V]]^WC]RF@YFKL]@DKBUEPBZWQ\TAfIBWV^]WWSURPUR ]PSQgE\YI]mgV

YPWPS
UTR[
SWPW	RQUR ]
TURQ	YYGF@AYT TD\VTQ^PD^S^@[WPE
:D^UKB		^P  
	\UWP   PUqUGSYJYRX]BY\U[W	UVRAK@F[_V]]^WC]RF@YFKL]@DKBUEPBZWQ\TAfIBWV^]WWSURPUR ]PSQgBV]E^mgV

YPWPS
W	R U P]RPT	RVTPQPWSUYRWYW			U^QQSXLECAS
W VF]]TS\ZEUP]@YUZD9FB]XQV
VSTVQSVR]VT\SV
QVVxWFQ[J[ZQ_C[^UWYUQTPP]S	TRQ	Yn@W_G^o
nW
PRU
RQWTZRQWRUSS]ST
	VTPQP[FDBAP V VL^W TSVYF_Q\@Y_YG	8D\]B@TRTSWWR	P  	\sJYPG^VR]_P@IBFYW_\_\WKTPGB[FIE_AFK@]GQ@ZUYUV@dKBU_\\UUQTPP]S	TRQ	Yn@W_G^o	nW
PRU
RQWTZRQWRUSS]ST
	VTPQP[FDBAP V VL^W TSVYF_Q\@Y_YG	88