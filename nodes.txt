D]WABWG]Uxqp^{]tYkqx{ZkJ}Xx@|I [}c{Ar[p^{ss[he]R{Z][X`P~q]Uxqp^{]ZDR`P}Yx[keUV]AkeShcYkuC~]^UqxJqYsUxqpPSgc[~[xk]wku`
|sY|X`@~d`[h xM}th_hK@k]t[~fkR|w{Eh |P~q]Uxqp^{]^Uqx{^VHx[Fr{ssUxq{Nkh`]xX^P~tBSa	P~q]Uxqp^{^pDR\`P}Y{v|P~q]Uxqp^{^pHxX^Pf[wcapAJsU|Xp@YJ|[A}csEH^Nc{Ar[p^{ss[UuIC{Z][UuIC{YEyxqp^{sxTjsU{Z][S_Lhc{Ar[p^{ss[U[x{Z{[r\8F_WBAUE]V{rxUy_tZhrpyXkI~[pK~K|XJ~fkX~pVUyqsV{\Bjq{{[`y[Ez{rxUyqx^PwyX]XVysTuZ\VfAGjj|K~\ki FZP_tGRx_{XNyyqsV{rsBjq{{\tvdZ}et|fs|KtF~ugkb	~ft\~eh~uxY[RK}vZXhbpAs[sV{rx[R_d{[V[TX~pVUyqsV{_{ZTuUX}XpDSzd~HpAs[sV{rx[SuHVrpyXcHpAs[sV{rx[SzX}Xs}d`w{u|J}asHupK|fwH~e|yvs}[xJy[Ez{rxUyqxPyt[[xPyt[|s]V{rxUy\`Qvl[[xDP^y[Ez{rxUyqx{[V[}[{zT`:D_TABWE^UxzsW{_wYkz{{XhJ}S{I|KH|zHXZ[}x]W{qpUxTt@hqxxSk {[FyxzsW{q{]S
| {X^[UdYhuwD}T`k EYSWEP{\xPE{{qpUxzx@hqxxTg hfpk}U~fZ~}UD|vx~zXhvY[}mpXhXYYkSchfVK~z{Cq[pUxzsYP_gxS]YV|[}x]W{qpUxWpXVuV[~P{FQ\gHUz
Y~s^UxzsW{\sDRWcY}[x}Y~s^UxzsW{\sHxS]YfYwcjsHf|U|SsI[J|PH}apEC]GaxArPsW{qp[U~JJ{X^[U~JJ{[FyxzsW{q{Tap\{X^[STEhaxArPsW{qp[UP{{Xx[rW8D\WBJWF]VpqqU{\tZcqy{[kIuXyK|HuXu|X{Bz[qU{rsX`e\Y{[]XwXa[~p]VpqqU{\ZGZa[}XxDcjbYkf
DczfXS`DZKDQ\QXus_U{rsVp_\Y{[]XtX}uV[wfiF|vwva |cuf[ukEvezYkcHcub_|ftZp[Gy{rsVpqzGhicXv[zQH{Bz[qU{rsXZuvSr{p[	\hicGp[Gy{rsVpqzEPxpX_[|ucKp[Gy{rsVpqzEQH{pYb`tgVtfu{u{FtXyFe{Etf[UuQtvu[~p]VpqqU{_`BZKy{_`BZKyAqXsVpqq[Vy^Fcay{\G[_e[~p]VpqqU{_kXv[yK{VB3D\WAB STW	 TX

	 WRPSWSWqJX[G^U@W\R@HIFY]\\^WWAWRGCPFIF]AMK@WEQAZUSVT@e@BU\^\TUST[PWS	WSZ	SmW	SPWT 	P	\PPTzmW		QST
[PWWPSPT	S\
SSW	SU	 WTPRQZFEBBQ W_F_W WZ\XG_P\CPUXF8GUWCAS TVSW
 T[QP  QrQY[_XZE_S_@T^
TWQBKBE[^W^]\TB\QE@[EKM^CFHBTFSBYWP]WBfKAWW]^WWPVPSTQ \PQPfUXWRSSmW	
SPTRS\TPQPWSU	SXWSW		TT[QSYFEIAS W VF\WTS\ZD_PW@YUZE3FB]XP\T
 _SQUTSVUX 
W	rVTWW_W_]WPVPSTQ \PQPfUXWRSSmW	
SPTRS\TPQPWSU	SXWSW		TT[QSYFEIAS W VF\WTS\ZD_PW@YUZE3D\WABS PW	T  WRSQVq_XUYW]U^VXW_Z@IBFX]_\_\WATZGB[FHEUAFKAWMQ@ZTSU\@dKBT_V\UT[TPPWSTRQSnWPUQXQmT
SSW	PPT_RQS\PW
PPUP  W
 WWSZ	SZEFAJSTTD_T_Q^ZG\S_K[WZF;O^UAA TPS T

 \PPT   QVSrRZXWSX@RTW_QC@BD[]__V\UATQDK[DKE^BFIBWFRIXWSUWCmK@W_]_\WPWPRWP	T[QSnT	P\QSRoW		QST
[PWWPS
RT	S\
SSW	SU	 WTPRQZFEBBQ W_F_W WZ\XG_P\CPUXF8GUWCAP]	QQSV T[W  [QrU\WVTWFY
U\QCKAM[_\_]_\CWQD@XMKF^BE@BUFRBQWQVWCfHIW\]_WWPWS[UP  WPRQmT SWSSRnW
PXU
S[WTPRQWRTSSWS T \TPQPQFDBAP V WFTW TR\YL_Q\@XUYM	8D]WBJ	WS
S	
	WS	\	SyV_UWU]V\STW^Q@HBEP]^\^\TAUQGC[E@D^AFHIWFQAY\STW@eKA\^]\T\PTPSWS USQ SoWS	PT V
WVPm\

SPWPS UTSQ SWPW	XQTX W
T_RQSYMF@AST TE\\TQ_ZDTS^@[VZE :D^TABTT	Q
	
WP
V
Pq^_UU_TVHW_Z@IBFX]_\_\WATZGB[FHEUAFKAWMQ@ZTSU\@dKBT_V\UT[TPPWSTRQSnWP[UVWWPmeiTV\SQPTWPP]US[o T W WVPRXU[W
PSWP	TWWPSPZEMBCP_TF_T VQ\YG\X\B[UYF 8F_WBAUEz{rx[T[{{rpKy[EqXxUy\pK{[VUyGWGn[]Wa	_]B^\]_	h[yCDPEav_^}a_YCjA]AqBWhbGD{I]Tz`FQKVD|cDPflDi ^VfZR\xAhQfYX~p	yyqsXkfkYyX]V{\]FjeVEhb\ia{Bv`VUyqxFPsyX]V{[h}K{Bv`VUyqxAhrpyq{I|[{Xjfx[r	ecH~e|Jje{Ekfo_}K |[xE}v[o[iekX~p	yyqsXkfUYyX]V{[|Ky[EqXxUy\|[WbpyqxYVikDy[EqXxUy_]VrpyqxQHpAtc]V{rsUjp]{[VUy_GP\l[|sz{rx[QuKVrpyqx_Pfo\RegDh|[|sz{rx[SutSrpyq{GW_]jSz`fWv^Dy[EqXxUy\`BQHpyqxPyt[|sz{rx[S A{[VUy[{q_	:D_TABWEyxzsYV[xxz{I{[F|rPsW{\sHxS]W{GTDeY_Wb
\U@\_^\jXz@L[ GapUa]@^XybkvfKQSzcRq~K}T\~ GPqdDkeKPnV_VvZxPE~q[pUxTt[hqxxzxYSeUHUa{Ek h[}x{{qp[R~IVqxxz{ |v|[}x{{qp[PncY}[p[m`[|vY[|gD}v]_jHeg[}nw| `FmkGvpH}{k_cXxPE~q[pUxTt@hqxxz{H[xAuh]W{q{Hh
YY}[p[had PKxAuh]W{q{GkacY}[p[U
Y~syxzsYVz]Ekj{{q{GS\{[F|rPsW{_YDR
cY}[p[hT^^QgK}T|]{[F|rPsW{\sZU~UY}[p[}
Vc kl`Z~KxAuh]W{q{SqY}[p[U~JJ{[F|rPsW{\GPj{{qx[uhB	8FC][X\
S V[ VSS	PVUZrD@]E@^_\WPWS[UP  WPRQmT TSWRPUnW
PXU
S[WRTSSWS T \TPQPWVPRXZDFBBXTTE_U WQ_QG]S\C[VQF	8G^TJA
PSS	V
	TP U	UrVGQZJXX]VW\Y]_^WSW^Q@HBEP]^\^\TAUQGC[E@D^AFHIWFQAY\STW@eKA\^]\T\PTPSWS USQ SoF]ZK^foW		QST
[PWWPSPT	S\
SSW	SU	 WTPRQZFEBBQ W_F_W WZ\XG_P\CPUXF8GUWCAVS
TV T[	  [WrTDQZA[Z[\A[_^STW^Q@HBEP]^\^\TAUQGC[E@D^AFHIWFQAY\STW@eKA\^]\T\PTPSWS USQ SoAW^G]foW		QST
[P\

S
W
S UP[WP WWSZ	ST PW
QST Q \
WVPRXZDFBBXTTE_U WQ_QG]S\C[VQF	8E@^SS^	 WPW]RQUPU U_TPW	SUTpTGRYIPXY\BX\VUQWPWS[UP  WPRQmAT]DUmmT
SSW	PPT_RQS\PW
PPUP  W
 WWSZ	SZEFAJSTTD_T_Q^ZG\S_K[WZF;O^UAAWSWP
	T \P
S TrI[SL\US
U\QCKAM[_\_]_\CWQD@XMKF^BE@BUFRBQWQVWCfHIW\]_WWPWS[UP  WPRQmAT]DUmmT
SSW	PPT_RQS\PW
PPUP  W
 WWSZ	SZEFAJSTTD_T_Q^ZG\S_K[WZF;3