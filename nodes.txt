D]WACWG]Uy{qU{]tYj{y{ZwJ~{|I{J|J[|y_U{ssUyUvBhs{yRi{YEyy{qU{sx]R~{Z][iUfGhhhDRfGkgGjbGQIGj`a[~q]Uy{qU{]^YyR_[|Zg}b_JkFuc~|u~dYE}oiF||X}|~^w|Z~Be{YEyy{qU{sxGj`a[}YxSAyAqYsUy{q[QwtQ{y{Y_QoHA~I{AsQqU{ss[S	KVs{yRaI{AsQqU{ss[Sp}[}Yx}dbt{twH}{qKt{K|lq~dsKy|qH}ZJyQGy{ssUy{zPx[QzPx[|y_U{ssUyVbQwg[QzGP^yQGy{ssUy{z {Z][}QyyTa:N]WAC]G]UyqsWq]tYjq{qZwJ~q vIaHvJY[|s]WqssUy_t@bs{yXk qYEyyqsWqsx]R| qZ][T dYbwtD|_`aFYR\EZx\y[E{qssUyqx@bs{y_|]vtk}ewtgdXiHsDvtgK~qXwt|e{HvJc~_gaZZX}q{C{YsUyqsYZ]dyX]Y\[|s]WqssUy\pX\wU[[{F\xxZi AFqYEyyqsWqsxERx qZ][~vcJqYEyyqsWqsxESK{q[bbwgWudwHyv{GuZ{F}vUDut{U}vuJw[|s]WqssUy\`C[I{y\`C[I{As[sWqss[Tz^Gbc{y_FZ]g[|s]WqssUy\kYwY{KyUB	2F_WCAUE]W{qq_y_t[hqyyXkH~XyA~KI|[A}[{Cq[q_yqsYke\SyX]Y|XaQ|s]W{qq_y_ZFQaQ[xEhjbSie
EhzfRQ `EQKNS_QY~s__yqsW{_\SyX]Yk_vRjegh_uL}egkK jvH~ezSu{D| uAjvx\}fWA}ft\{[GsyqsW{qzMjjcY}[zSK{Cq[q_yqsYQuvQq{{[	VQjxC~KyKs[sW{qqQSuIVqyyXc KyKs[sW{qqQSzY}[zwd`v{vu@~asIvyA|fs~fqAyvsJ}X}@y[E{{qq_yqx Pz}Q[x Pz}Q|s]W{qq_y\`QueQ[xEP Ty[E{{qq_yqx{X_Q}[{{Tc:D_UAA
WE_U{syW{_vYhsq{XuJ|s |KJtmE|[yAqYyW{qq[kgT[{X_[|ZiY~s_U{syW{_XDQiY}[zhgr[keGhwjEQKGhhiY~s_U{syW{_\Y{ZWYuaJkd~\| eFhtaGkK duG~fXZJ}D}v}|tz\| akdy{[Gy{syW{qzGhhiY}[zQIqCq[qU{syYQuvSsq{[	HhhiF{[Gy{syW{qzEPr {X_[|tiJ{[Gy{syW{qzEQIq{Yb`umWfu{tqGXyFt_DvyUtuHu[~qWW{qqU{^jCQKy{^jCQKyAqYyW{qq[VxTGhay{]FP_e[~qWW{qqU{^aY}[yK{WH	8D\WAC STW
US

WRPYV SWp@YPG^UAW\SJIBFY]\V_\WAWSMB[FIF\KFK@WD[@ZUSVUJdKBU\_VUUR^PPWY	WRQ	Sm]SPVU	PWPZUqmWQSU PP]VPSQU	RW
SYW	S	U	WTZSQZFDHCQ VTF_W
VQ\XG_QVB[UXF	2F^WCARTVR]

	UPQP 		QrQXQ^SZE_S^J_^
U\QBKBDQ_\^]\UCWQE@[DAF^CFIHUFSBX]QVWBfK@]\]^W]PVPRUQ 	WPQQmU	SWSSSm]
SQU
RRWTPQQWRUYSWYW		U^PQSXLDBAS
V VF]] TS\ZEUQ\@YUZD	8FB]XQV
T

	TSQ	UTRVTS 
WxW_WW_WU\]PVPRUQ 	WPQQmU	SWSSSm]
SQU
RRWTPQQWRUYSWYW		U^PQSXLDBAS
V VF]] TS\ZEUQ\@YUZD	8D\WACS PW	TWRY  QVpUY^YW]U_WS]^Q@IBFYW^\_\WKUQGB[FID^AFK@]FQ@ZUYTW@dKBU^]\UUPTPP]S	URQ	YoWQU	[SQmU 
SS]PP	UTRQ	YWZW
QQUQ
W WVRQ	SZDL@AS^ TD_UTQ^ZG]Y^@[WZF	:D^UAA
 TPR
U

	WPPT  QVSrSPY\SX@S^
W^[BKBD[]^^]\UAU[E@[DKDTCFIBWLSBXWST]BfK@W^W^WWZVPRWQ 	UPQSoU	QWQYSoWQSU PP]VPS
SU	RW
SYW	S	U	WTZSQZFDHCQ VTF_W
VQ\XG_QVB[UXF	2F^WCAQV	QQR
V	UPW 
PQrU]]W_WFY
U\QBA@F[_\^W^WCWQEJYFKF^CDKBUFSHZWQVWBlIBW\]^]WPVRPUQ
WZSQmUS]SSS	oW
QSU
RPWTZSQW	RU
SS]	SU	WTPQQZFDBAQ V VL_W TSVXG_Q\@Y_XF	8D\]CA]R
S WRW R	rV_UWTWWWSTW^Q@IHD[]^\_VUAUQGBQDKD^ALIBWFQ@XWSTW@dA@W^]\UWPTZRWS	UR[SoWR	PUV
]VPgW

YQWPRUTR[SWPWSQUS ]	
UTRQ	YXFF@AY T TD]WTQ^PE_S^@[WPD:D^UKCTUQ
 WP 	V  P pU_UU_UWC]^Q@IBFYW^\_\WKUQGB[FID^AFK@]FQ@ZUYTW@dKBU^]\UUPTPP]S	URQ	YoWP	PU	\
WVPmehUV	WSQZUWPQVURPo 	 T V
WVPS	SU	PW QSW	Q 	U
]VPSQPDFBCQTTFUU VQ\XM]S\B[UXL	8F_WCK
UE{qss[T[{qs{Ky[E~{YsUy\pJqZ]UyGWMe[]WaU\B^\\Uh[xIE[Eav^T|j_YCj@W@zBWhbFNzB]Tz`G[J]D|cEZggDi _\gZR\x@bZfYYtqyyqsYag`YyX]Wq]VFjeVDbc\ia{C|a]UyqxGZxyX]WqZc}K{C|a]Uyqx@bs{yq{HvZpXjfxZusecItdwJje{Dagd_}KvZsE}v uZd[iekYtqyyqsYag^YyX]WqZwKy[E~{YsUy\|Z]c{yqxX\h`Dy[E~{YsUy_\\s{yqx[I{Atc]WqsxUjp\qZ]Uy_FZ]g[|s{qss[QuJ\s{yqx^Zgd\RegEbw[|s{qss[Sut Ys{yq{F]^VjSz`g]wUDy[E~{YsUy\`C[I{yqx Zx[|s{qss[S @qZ]Uy[{~{^:D_UKCWE syqsYV[yyq{I{[Gvs[sW{\rByX]W{GUEeY_Wc ]^@\^T]jYpAG[ Gaq_a]ATSybkwlKQSzbSz~K	|_\~ ~MQzdDkeAQeV_Vv[y[E~q[q_y_t[hqyyqxYSeTBTj{Ek iQ|s{{qqQSuIVqyyq{ |v}Q|s{{qqQQecY}[qQ~f`[|vXQ} gD}v\U~aHefQ|ew| aL~fkGvqB~v{k_bRy[E~q[q_y_t@hqyyq{H[yKtc]W{qzBiYY}[qQijd PKyKtc]W{qzMjjcY}[qQTY~s syqsYVz\Oja{{qzMR \{[Gvs[sW{_XNScY}[qQi_^^QfA|_|]{[Gvs[sW{\rPTuUY}[qQ|Vc a~g`Z~KyKtc]W{qzRzY}[qQTuJJ{[Gvs[sW{\~MQa{{qyQtcB	8FBWZS\
S
VP VSRPVTQrD@]DJ__\WPVRPUQ
WZSQmUTS]RPToW
QSU
RPW	RU
SS]	SU	WTPQQWVPS	SZDFBCST^D_U V[^ZG]S\BQWZF	8FTUAA
QYRV 
UZU 	TrVGQ[@YS]VW\XW^UWSW^Q@IHD[]^\_VUAUQGBQDKD^ALIBWFQ@XWSTW@dA@W^]\UWPTZRWS	UR[SoF][A_moWQSU PP]VPSQU	RW
SYW	S	U	WTZSQZFDHCQ VTF_W
VQ\XG_QVB[UXF	2F^WCAVS

TV	UP	 
PWrTE[[J[Z[\@Q^USTW^Q@IHD[]^\_VUAUQGBQDKD^ALIBWFQ@XWSTW@dA@W^]\UWPTZRWS	UR[SoAW_M\moWQSU PPW

S W
RU	ZPWP WVRQ	SUP]
QSUQ 		W
WVPS	SZDFBCST^D_U V[^ZG]S\BQWZF	8DJ_XS^WQVVS[TPU TTTPWYTTpTGSSH[XY\BYVWUQWPVRPUQ
WZSQmAUWE^mmU 
SS]PP	UTRQ	YWZW
QQUQ
W WVRQ	SZDL@AS^ TD_UTQ^ZG]Y^@[WZF	:D^UAA
WSVQ
	T	WP
R TrHQRG\US
U\QBA@F[_\^W^WCWQEJYFKF^CDKBUFSHZWQVWBlIBW\]^]WPVRPUQ
WZSQmAUWE^mmU 
SS]PP	UTRQ	YWZW
QQUQ
W WVRQ	SZDL@AS^ TD_UTQ^ZG]Y^@[WZF	:8