D]W@C	WG]TypqU{]tXjpy{ZkK|YyK|II~`KZkZ|r_U{ssTy^vBhs{yYi{YExypqU{sx\R ~{Z]ZT{zVwZ^TdHGhh|I|^bkFXR]}GPx]yZGy{ssTypzBhs{yYXZk]`^iIyE~d`YiI[F|wD~p d{D|dyEtgi~Yk]|_~JyAqYsTypq[P]dyY_[VZ|r_U{ssTy]rZVwUZZyDP^@|JyAqYsTypq[QwJTpy{Zc}JyAqYsTypq[QxZZz}f `uywuJcsJ}wyH~dsI|gqK{tsY}J{YExypqU{sxR{}[}YxR{}[~q]TypqU{^`Ste[}YxFR^{YExypqU{sxyY_[Y{xVb8F_VC@
UE\WzssUy_u[is{yXjHZ{K~K}I}KzCpYsUyqrYjg^YyX\Y}Zc[|s\WzssUy_[FPc[[yigxYieEixdXQ aEPIDS_PYq]UyqrWz]^YyX\Yi]t[}fu\jZwFf[]~s~HrIgwifzDiw|ZiHri]cvWYzYEyyqrWzsxGjjbY|YxSKzCpYsUyqrYPwtQqzzYJTeuCRgh|KzCpYsUyqrYPwKTqzzZc}KzCpYsUyqrYPx[[yg `tyvvH~IsK}vzJdsH|frIzts X~HzYEyyqrWzsxRz~Y|YxRz~Yq]UyqrWz^`SufY|YxGR \zYEyyqrWzsx yX\Y~Y{yVc9F_WCA	UE]W{pqTy_t[hpyyXkH~YyJ~KI|`K}f{Y~r_TyqsW{^vCjq{{Yiy[E{{pqTyqx_P ~yX]YP^fjutF~^bi F[P]}FRx^{ZGxyqsW{pzCjq{{YiK}fZZkYrZ|fc hwiG~vU|` jfx[~gijud\|jX}eg Jy@s[sW{pqZR_d {Y_ZTY~r_TyqsW{]r[TuUY}ZyETutG~Jy@s[sW{pqZSuIVpyyXc Jy@s[sW{pqZSzY}Zz|d`v{wuK~asIwyI|fsJ~gqJyvs}Y}Ky[E{{pqTyqx P{}Z[x P{}Z|s]W{pqTy\`QteZ[xEP_y[E{{pqTyqx{Y_Z}[{{Tb:D_UA@
WE_UzsrW{_vYisz{XiJZzI|KK|cI|vy[q\W{qqUz]u@hqyzZj {[GyzsrW{qz]Q} {X_[j]eEhjjDQweEk eGiwaEQKGihbY~s_UzsrW{_\YzZ\Y|HbZ|wyYhXuFitz}a jZuX~eu}ZjD_iEjJvkfb_|tf{[GyzsrW{qzGihbY}[zPIzCq[qUzsrYQuvRsz{[	^QweZVzzBj_XP[[q\W{qqUz^qFQ\a[|Yz |v}[q\W{qqUz^qJ{X_[g[
u`aqJ~JrWXqK~IGK E~YrG|X_H~czCq[qUzsrYVuHHzZ\YVuHHzYD{{qqUzsy Wjr^zZ\YP_	GiczCq[qUzsrYV[yzZzYq\ 9F_UAA
PVW
WR

UQP QT 	PWrH[QE]UC
U\QBKCDZ_\^]]UCWQE@ZDJF^CGICUFSBXVQVWBfJ@V\]^WVPVQRUQ 	
WPP
QmU
QPTW

R
V	PRWpoW

RQWQRUTRPSW
PVSQU
S V	

UTRQ	RXFF@AR T UD]WTP^[E_S^@ZW[D:D_U@CP
VUPUWQR P  SpQZY\RXF]S\B^\	W]SAIBFY]]]_\WAVSFB[FIG\@FK@WDP@ZUSWUAdKBU]_]UURUPPWR	VRQ	SlVRU	QQPmU
SSWQP	VVRQ	SUPV
QRUQ 	W

WVQS	SZDFCCSTUD_UVP^ZG]S]BZWZF	9DA_XS^W
UQQVVP  VVRW
pU^UT]W]^	URUPPWR	VRQ	SlVRU	QQPmU
SSWQP	VVRQ	SUPV
QRUQ 	W

WVQS	SZDFCCSTUD_UVP^ZG]S]BZWZF	9F_UAA
QRW		TUQQ RVr][_[T_U]UR
U\PBJ@F[_\^\^WCWPEAYFKF_CDKBUGSCZWQVVBgIBW\\^VWQVRPUQWQSQmUSVSRS oWQSU
RPWUQSQV	RU
SSV	S
U	 WTPP
QZFDB@ Q VVG_W US]XG_Q\AYTXF	8E\VCAVPPWVRRT	 
SUQrQX[]Q[BQV W\S@J@GY]\\\^VAWSGAYGIF\ADJ@WDQC[USVU@gICU\_\VURTRQWS
	WQS	SmW
SV	QQQlW

RQWQRUTRP
QW
PVSQU
S V	

UTRQ	RXFF@AR T UD]WTP^[E_S^@ZW[D:D_U@CSW
SQP	UWQ W  Q	RpU_UU^UDY V^Q@IBGY\^\_\V@UQGB[GID^AFJ@VFQ@[URTW@dKCU^]\UUPTPQVS
	URQ	RoW
QU	PSQmU
SRVPQ	UTRQ	RWQWQQUQW
VVRQ	S[DG@ASU TD^UTQ^ZF]R^@[WZG	
:D^UA@

UPP 

WP
V  P	sT\WWV_UVPVU]S@K@FZ_]\]^WCVSG@YFJG\ADKCUDQBZVQWU@fIBV]_\WVRTRPUS 
VPS
QlWP
RW
TU	UPoVQSUPP
VVPS
QU	RW
RRW	R	UWUQSQZGDCCQVTF_VVQ\XG^Q]B[UXF
	9F^WCA	TW R

UPT  	PrT]VW_WUB
U\PBJ@F[_\^\^WCWPEAYFKF_CDKBUGSCZWQVVBgIBW\\^VWQVRPUQWQSQmUPQVT	U	TRoejWT VQQRWUPSWVP	Q l V TUUPQRVQUSQWS
W		UTRPSXFG@@S UVF]WUS\ZE_R^AYUZD
:E]WACVGyyqrYWY{yqzIzYE|s[rWz^pHyX\WzEWEdY^Ua
]^@]\^]k[zAGZ Fcv\\~k]ZAjB_B{@TjbDFxC_Wx`ESH\FcGRefFj]TeXQ^xBj [ |dY[|s{zss[iea[zZ]Uy_WDigVFja^jc{Atc\WzsxERy zZ]UyXb ~I{Atc\WzsxBjqzzs{J~XqZidxX}q|gcK|fvHig{Fiee]~I~XrG~t}XeYjgk[|s{zss[ie_[zZ]UyXvIzYE|s[rWz^|XUazzsxZTjaFzYE|s[rWz]^TqzzsxSKzCwa]Uyqy Vhp^yX\Wz]DR_fYqyyqrYRwHTqzzsx\Ree^QggGj vYqyyqrYPwtQqzzs{DU\WhPx`eUuTFzYE|s[rWz^`ASKzzsxRz~YqyyqrYPByX\WzY{|s\9F_WCA	UE{{pqZT[{{pyJy[E~qZqTy\pJ{Y_TyGWGgZ]Wa__C^\\_  h[xCFYEasWc]C\R{akudIRQz` Q{}|K ~^_| |ES{fGieISdT\TvY{ZG}s[sW{^vXjq{{pzZQeVJVkyFi kY~r xyqsYQt	JTq{{py~vY~r xyqsYSdaZ[sY|gbX~vZYeGv^]|` K}edY~du~ cD|giD}vsJ|wyi_`Z{ZG}s[sW{^vCjq{{pyK}[{Cvb_TyqxJk [Z[sYkkfRK{Cvb_TyqxEhkaZ[sYV }Z|s{{pqZTz^Gh`yyqxEP_y[E~qZqTy_ZFQ aZ[sYk^\]SdI~^~^y[E~qZqTy\pXVtWZ[sY~ Ta i|fbY|K{Cvb_Tyqx P{}Z[sYVtHIy[E~qZqTy\|ES`yyq{Yvb@
:F@_XR^		PTQUQP 
R VV PpGB]FB]]_
UPTPQVS
	URQ	RoW	
VQU	QPVmU
SRVPQ	WQWQQUQW
VVRQ	SUUPQRXGDBARV VF]V TS\[E^Q\@YU[D
	8D\W@C	SQPT
WR
V  	VpUEQYH[R_UU\Z_\TTQU]S@K@FZ_]\]^WCVSG@YFJG\ADKCUDQBZVQWU@fIBV]_\WVRTRPUS 
VPS
QlD]YI]llW

RQWQRUTRPSW
PVSQU
S V	

UTRQ	RXFF@AR T UD]WTP^[E_S^@ZW[D:D_U@C	UQ
  	WTWQ
  QUpTGSYKYYY\BY\TPVU]S@K@FZ_]\]^WCVSG@YFJG\ADKCUDQBZVQWU@fIBV]_\WVRTRPUS 
VPS
QlCW]E^llW

RQWQRVS U
 P
VRQU	RWTPP
QW
RURSW
RV		UUPQRXGDBARV VF]V TS\[E^Q\@YU[D
	8FB]YQ]


WSTWQSVRVVUWRW
QVVsVGQ[JZZZ^B[^UWR
UPTPQVS
	URQ	RoAW_G_ooWQSU
RPWUQSQV	RU
SSV	S
U	 WTPP
QZFDB@ Q VVG_W US]XG_Q\AYTXF	8E\VCA USTS
VVRP   	WrJYPF^WS V^Q@IBGY\^\_\V@UQGB[GID^AFJ@VFQ@[URTW@dKCU^]\UUPTPQVS
	URQ	RoAW_G_ooWQSU
RPWUQSQV	RU
SSV	S
U	 WTPP
QZFDB@ Q VVG_W US]XG_Q\AYTXF	89