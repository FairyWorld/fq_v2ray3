D]W@CWG]TyrrW{]tXjrz{ZwK~r |I}HI}c{@sXrW{ssZif_[{Z]Z~[bY~q]TyrrW{]ZESbY}YxFjia[kg
FjyeZS`FSHFQ]QZ|p\W{ssTy\_[{Z]Z~y[}gx^iffDkJsDjr hwc|fuY|JkG~vyXhZcj[jHd|_yXD{{ssTyryEhhcZXyQI{@sXrW{ssZSvu Ss{yX
JQwtYjbY~q]TyrrW{^pES_bY}Y{~u~Y~q]TyrrW{^pIy[\Yf[vbbrHdgT}[rIID}bJssJ}u\Gc{@sXrW{ssZTvKJ{Z]ZTvKJ{YExyrrW{sxUiq\{Z]ZR\
Ehc{@sXrW{ssZTXz{Z{Zs_8F_VCB	UE\WxpqUy_u[kpyyXvHp~K`}[zCrZqUyqrYhd\YyX\YYa[|s\WxpqUy_[FR a[[ykdzYieEk{fXQ aERJDS_PY}r_UyqrWx^\YyX\YYyJiHeXhyF~X_Y|p }u~I}g[ juvD~gS}e}]kw[E~vjxZGyyqrWxpzGjjbY~ZzSKzCrZqUyqrYRtvQqzxZ	BR\} kdvY|KzCrZqUyqrYRt	KTqzxYa}KzCrZqUyqrYR{}[[yebtyvvH|JqK}vzJ}gqJ|f~GxwyEXrHxZGyyqrWxpzRz~Y~ZzRz~Y}r_UyqrWx]bSufY~ZzGR \xZGyyqrWxpz yX\Y|ZyyVc;E]WCA	VG]W{pqVz]t[hpyzZwH|p}I}p|c{CqZqVzssYkd\ZzZ]Y|YaXq]W{pqVz]ZFQ aX|Yx Q]fRwhPt]PEh{f[R`EQJGP]QY~r_VzssW{^\ZzZ]YYujgk|g}E}ZY}p }tQ~g[H|d{D|w} jZYHk~Zjd{H{ZGzzssW{pzDihcY}ZzPI{CqZqVzssYQtvRs{{Z	KjhYF{ZGzzssW{pzFQx {Y_X}tcJ{ZGzzssW{pzFPI{{XaaugWguIzt{GY}E~twDIqV~ZswuXq]W{pqVz^`CQJyz^`CQJyBpYsW{pqXWx^Gh`yz]FP^eXq]W{pqVz^kY}ZyHzWB	8E]T@CVG^TyqqUz]wXjqyzZhK|XyK}IJ~aK~tdZ|s_UzspTy_vBisxyXizYFxyqqUzs{\R~zZ^Zi_fGihkERufGjdFjubGPIFjja[q^TyqqUz]]XyX_[}J`jv} iZhGiH}E}s~HTXdVeuFig{YifjXigw^~v[HzYFxyqqUzs{Fjja[|Y{ SKyApYpTyqq[PwwQqyzY^QjaDzYFxyqqUzs{DRzzZ^Z~vaHzYFxyqqUzs{DSKyz[cbweU~d|DyvyE~Z|G}vuF~JpT}Xq~ttZ|s_UzspTy\bAPIxy\bAPIx@s[qUzspZTz\Eicxy_DQ]dZ|s_UzspTy\i[|YxJyU@9F]VCA
RUU
WR	
USR QT 	RUrH[QE_WC
V^QBKCDX\^^]]U@UQE@ZDHD^CGIAVFSBXTRTWBfJ@T^]^WTPVQRVQ 	UPPRoU
QRTW
Q
V
RRWpoU

PRWQQ	UTRR	SWPVQQUQ T


VVRQ	P[DF@APT UD^UTP^YF]S^@ZWYG	:D_UB@
P
VWPU	WQPR SsSZY\RXD^Q\B^\W]SCJ@FY]]_\^WAVSDAYFIG\BDK@WDRCZUSWUCgIBU]__VURWRPWP	VQS	SlTRV	QQRoU
QSWSP	VVQS	SU	PT
QRV	Q 	 U
 WVQS
QZDFCC QTWG_UVR]XG]S]BXTXF	9DC\ZS^UURSTUP TVRU
pU^UV^U]^	 URWRPWP	VQS	SlTRV	QQRoU
QSWSP	VVQS	SU	PT
QRV	Q 	 U
 WVQS
QZDFCC QTWG_UVR]XG]S]BXTXF	9F]VCA
QQU		
VUS	Q PTr][_[V\W]UR
U\PBHCD[_\^^]UCWPECZDKF_CGIBUGSAXWQVVBeJ@W\\^TWQVQRUQ	WSPQmU	STSRSlWRQU
RRWUSPQV
RUSST
S
V		UTPPRXFDB@R VVE]W US_[E_Q\AYV[D	8E\T@CURPW		VRQV	 
SWRpQX[]QYAQVU\S@J@EZ_\\\^TCWSGAYEJF\ADHCUDQCYVQVU@gIAV\_\VVRTRSUS
WQS
QmWSV
SQQnU

PRWQQ	UTRRQWPVQQUQ T


VVRQ	P[DF@APT UD^UTP^YF]S^@ZWYG	:D_UB@
SWPSP	WWQ	U Q	PsW_UU^UG[ T]S@IBGY^]\_\VBVSGB[GIG\AFJ@TDQ@[UPWU@dKCU]_\UURTPQTS
	VRQ	PlW
RU	RQQmU	SRTPQ	VVRQ	PUSWQRUQ	W
	VVQS	S[DECCSWTD^UVQ^ZF]P]B[WZG	9F^UA@

UPR

 UP
V 	P	sT^TUV_UVRU
U_PBK@FZ__^]^WCTPE@YFJE_CDKCUGSBZVQUVBfIBV_\^WVQVRPUQ 
TPS
QnUPQW
T	U	WRoVQSU	RP
TUPS
QV	RU
RPW	R
U 	WUSPQZGDA@QVVF_VUS\XG^Q_AYUXF
	;E\WCA	VW P
 VRT   
RrT]TT]WUB
U\PBHCD[_\^^]UCWPECZDKF_CGIBUGSAXWQVVBeJ@W\\^TWQVQRUQ	WSPQmURQTT	V	TRlgjW	W VRSRWU	RSWTP	Q n  VTUWRQRTQVSQUSW	
UTRR	SXFG@BS UUD]WWP^ZE_R^CZWZD
:G^UACTD yyqrYUZyyqzIxZG|s[rWx]rHyX\WxFUEdY\Vc
]^@_^^]iYzAGZ D`t\\~k]XBhB_B{@Vi`DFxC_U{bESH\F} aGRefFh]TeXS]zBj [ ~g[[|s{xpq[iea[xY_Uy_WDkdTFja^h`yAtc\WxpzERy xY_UyXb |JyAtc\WxpzBjqzxpyJ~XqZkgzX}q~daK|fvHkdyFiee]|J ~XrG|w}}XeYhdi[|s{xpq[ie_[xY_UyXvIxZG|s[rWx]~XUazxpzZTjaFxZG|s[rWx^^TqzxpzSKzCub_Uyqy Tkr^yX\Wx^DR_fY}r yyqrYPt	HTqzxpz\Ree^SdeGj vY}r yyqrYRtvQqzxpyDU\WhR{beUuTFxZG|s[rWx]bASKzxpzRz~Y}r yyqrYRByX\WxZy|s\;E]WCA	VG{{pqXWY{{pyHzYE~qZqVz^pJ{Y_VzEWGgX^Ua__A]\\_ k[xCFYFcsWc _C\R{ciudIPRx` Q{}I ~^]|ES{fEjgISdT^WtY{ZGpYsW{^vZis{{pzXRgVJVkyDjkY~r zzssYQt	HWs{{py}tY~r zzssYSdaX|YsY|gbZ}tZYeE|t^]|` I~gdY~du }cD|giF~tsJ|wyj]`Z{ZGpYsW{^vAis{{pyI~Y{Cvb_VzsxJk [X|YsYkkfQI{Cvb_VzsxEhkaX|YsYV }Xq{{pqXWx^Gh`yzsxEP]zYE~qZqVz]ZFQ aX|YsYk^\_PdI~^~\zYE~qZqVz^pXVtWX|YsY~ Tbi|fb[I{Cvb_Vzsx P{}X|YsYVtHKzYE~qZqVz^|ES`yzs{Yvb@9D@_XR^	R	T QWRP 
R TV PpEA_FB]]]	URTPQTS
	VRQ	PlW	
VR	U	SRVmU	SRTPQ	USWQRUQ	W
	VVQS	SUWRQRXEG@ARU VF]TTS\[E\R^@YU[D
:D\W@CSQPW 
WR
T 	VpWFSYH[R_WV^Z_\TVR
U_PBK@FZ__^]^WCTPE@YFJE_CDKCUGSBZVQUVBfIBV_\^WVQVRPUQ 
TPS
QnG_YI]lnU

PRWQQ	UTRR	SWPVQQUQ T


VVRQ	P[DF@APT UD^UTP^YF]S^@ZWYG	:D_UB@
	WR  	UWWQ  QUsVGSYKY[Z^BY\TRU
U_PBK@FZ__^]^WCTPE@YFJE_CDKCUGSBZVQUVBfIBV_\^WVQVRPUQ 
TPS
Qn@U]E^lnU

PRWQQ	VQ U P
TRQV	RUTPPRW
QUPQW
PV		UWRQRXEG@ARU VF]TTS\[E\R^@YU[D
:FB]YQ_	

USTWQSVRTVUUQU
QVVqUEQ[JZZX]@[^UWP	URTPQTS
	VRQ	PlCW_G_olWRQU
RRWUSPQV
RUSST
S
V		UTPPRXFDB@R VVE]W US_[E_Q\AYV[D	8E\T@CVQTSU VRP   	UpJYPF^TQ T]S@IBGY^]\_\VBVSGB[GIG\AFJ@TDQ@[UPWU@dKCU]_\UURTPQTS
	VRQ	PlCW_G_o lWRQU
RRWUSPQV
RUSST
S
V		UTPPRXFDB@R VVE]W US_[E_Q\AYV[D	89