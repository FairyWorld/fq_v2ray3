D]WAB
WG]Uxss^{]tYks{{ZwJs	|IY|Y{ArYs^{ss[hg^R{Z][ZcP~q]Uxss^{]ZDRcP}YxGkh`Rkg
GkxdSS`GRIOQ]Q[}q]^{ssUx]^R{Z][hdxSkdUcMJkJY	JkK}gwN|kFk]c|dwZQ
kZhXxYEr{ssUxsxLhhc[~Yx
QI{ArYs^{ss[Rwt	Ss{xYIP^tPhx~I{ArYs^{ss[Rw@Vs{xZc	I{ArYs^{ss[RxP}Yx}e `{twJcs@t{K}dwN~d{xtsN}ZsJxYEr{ssUxsx	Px[~Yx	Px[}q]^{ssUx^`Qwg[~YxLP^xYEr{ssUxsx{Z][|Y{rTa;F_\ACUEVUyqsVy_Yjq{yX`J|X{H~K}q ~apAs[sVyqx[ie^ZyXV[~XcX|sVUyqsVy_QDScX[sjexZieGjzd[Q kGSKGS_Z[|s]VyqxUy_^ZyXV[}XxYvZ~ wE~XhEia~fh|exX}X|Fjuwjf^}ek i py[EzyqxUyqxDjjh[[xSKpAs[sVyqx[SutQqpy[YT_ BjutDi lDy[EzyqxUyqxFRsyX]X~vhHy[EzyqxUyqxFSKpyYabwlU}fwKyvpE}X{E}fxF}XYV}vx}vwX|sVUyqsVy\kASK{y\kASK{Bs[xUyqsXTzUEja{y_DR_gX|sVUyqsVy\`[[{HyUI:D_TCAWE^W{zsW{_w[hz{{XtH|z |KHmsEf|H{PE{{qpW{zxXSe`Y}P{|qxCqPsW{qpYS~JVqx{W`IVjc_hWdCP_gJQ@[VeBh~J~_Ih@{Cq[pW{zsYSe`Y}P{I|_h|mk|K|ncI~f` }}{Dkf`I}jkfphSs}f{ZmQY~s^W{zsW{_\Vz{{\UJ{PE{{qpW{zxGkjc_{S]Y~ ghaxV Y\QTgF{[F{{zsW{q{GP
x {X^Y|}cJ{[F{{zsW{q{GQ@{{Y``|gWftH{}{GXxDmsDXZW}svtY~x]W{qpW{W`CQKx{W`CQKxCqPsW{qpYVq^Ghax{TFP_dY~x]W{qpW{WkY}[xI{^B	8D\UAJWF_UpqqU{\vYcqy{[uJwq|H vq|HyAz[qU{rq[`e\Y{[_[wXa[~p_UpqqU{\XDZa[}Xz[ce^V\	AceXhbYcuH~\^]qyAqXqUpqq[Sfa[v[z^|KT^`_e kH_` bY~eaJc_aF}faEt[Z}uaEtHjXkjZ`He[~p_UpqqU{\^]qy{_THp[Gy{rqUpqzEkib]pX_[~f_c_fXVv\ ca[~p_UpqqU{_rDZ\a[}Xywv}[~p_UpqqU{_rHpX_[fZ	wkaqJKqUtXqKX Jtq K}bqEtv_EbyAz[qU{rq[]uHH{[_[]uHH{XGypqqU{rz\jr^{[_[[_	GhbyAz[qU{rq[][y{[y[z\ 8G\WJA
ST\
WS

TR[ QT	S\rH[PD^^C
WWQBKBEY]W^]\TA\QE@[EIM^CFH@WFSBYUS]WBfKAUW]^WUPVPSWQ 	\PQ	SfU
P[TW	P
W[RWqn\

QSWPP UTSS SW	PW
XQT	X U
W_RQQZMF@AQT TE_\TQ_XGTS^@[VXF :D^TCAPWVPU
	WPQ[ 
RrZZY\SYE_X\B_]
W\RBKIFY]\^]WWAWRE@PFIF]CMK@WESBZUSVTBf@BU\^^WUSV[PWQ 	WPZ	SmUSW	QPSfU
	XSW
RP	WWPZ	ST PU
QSW Q \
	WVPRXZDFBBXTVF_U WS\QG]S\CYUQF	8EB]SS^TT SZUTP ]VS
\
pU_TW_\]^USV[PWQ 	WPZ	SmUSW	QPSfU
	XSW
RP	WWPZ	ST PU
QSW Q \
	WVPRXZDFBBXTVF_U WS\QG]S\CYUQF	8G\WJA
P P\	_TR Q	 Q]r][^ZW]^]US
U\QCIBM[_\__\\CWQDB[MKF^BF@BUFR@QWQVWCdKIW\]_UWPWP[UP WRQQmT SUSSRmW
SXU
S[WTRQQWRTSSUS W \TPQ	SQFDBAS V WDTW TR^ZL_Q\@XWZM	8D]UAJT[PW	
 WSP_	 	RVSyQX[\PX@QV\\S@KAD[V\\]_UJWSG@XDKF\AEIB\DQBXWXVU@fH@W\_\WWRTSR\S 	WPRXmW	SWZQQ o\

QSWPP UTSSQW	PW
XQT	X U
W_RQQZMF@AQT TE_\TQ_XGTS^@[VXF :D^TCASV	QZP
VWP\ 
PQr^_UU_TFRU\Z@IBFX_\\_\WCWZGB[FHFUAFKAUMQ@ZTQV\@dKBT\V\UT[TPPUSWRQQmWSUSXQmTSSU
PPW_RQQ\RW
PSUP WWWPZ	SZEDBJSVTD_T _Q^ZG\Q\K[WZF	8O^UAA

UP	S

\P
W  P	rU_U\V_UWSTT^QKK@F[^^W]^WBUQL@YFKD^JDKBTFZBZWPTWKfIBW^]WWWP_RPTX UPSPo\P	PWU
 UV[oW	
QST[PUTPSPW	S\
SQW	SU	 WTRQQZFE@AQ W _F_WTZ\XG_P^@PUXF:DUWCA_W  Q
 W[U [rU\UUTWUC
U\QCIBM[_\__\\CWQDB[MKF^BF@BUFR@QWQVWCdKIW\]_UWPWP[UP WRQQmT[PUT
W	TSmnjWV WSZRWT[SVUP	Po 	  WTTV[QSUPWSP\S 	W	
 
UTSS SXFFAC
S TTM]WVQWZE_S_B[^ZD;F_\ACUE	yyqsXT[pyq{Hy[N|s[sVy\{HyX]VyG\EeX]Wj
]^A^W^]hPzAG[Ea}\\~j\YCaB_BzAWhiDFxB^TzkESH]G|hGRegGi ]TeYR\sBj ZfR[|szyqx[ie`ZyXVUy_VEje]Fja_iapAtc]VyqsERxyXVUyXc}KpAtc]VyqsBjq{yqpJ~Xp[jfsX}qehK|fwIjepFied\}K	~XsF}vt}XdXie`[|szyqx[ie^ZyXVUyXwHy[N|s[sVy\wXUa{yqsZTj`Gy[N|s[sVy_^Tq{yqsSK{BtcVUyqxUj{^yX]Vy_DR_gX|s	yyqsXQu HTq{yqs\Red_RelGj wX|s	yyqsXSuQq{yqpDU\ViSzkeUuUGy[N|s[sVy\kASK{yqsRzX|s	yyqsXS ByX]Vy[p|s\:DTWCAWN{{qpYVP{{qxI{PE~q[pW{WpJ{X^W{LWGfY_\a_^@\\\_j[xCGX GjsWbVC\Szb`udHQSq` Qz|~@ ~_ \~|ESzgDknISeU_V}Y{[F~qPsW{_w[hz{{q{YSnVJVjxEkkY~s{{zsYQuIVz{{qx |}Y~s{{zsYSe`Y}PsY|fc[|}ZY dD}}^]|aHndY~et|cD|fhG}sJ|vxkT`Z{[F~qPsW{_w@hz{{qxHP{Cvc^W{zxJkZY}PsYkjg P@{Cvc^W{zxEhj`Y}PsYV|Y~x{{qpYVq^Ghax{zxEP \{PE~q[pW{TZFQ`Y}PsYk_]^Q
dI~_]{PE~q[pW{WpXVuVY}PsY~Uci|gcZ~@{Cvc^W{zx Pz|Y}PsYVuIJ{PE~q[pW{W|ESax{z{YvcA	8M@_XS_
	S U	PVSP 
S]V QqD@VFB]\\T[TPPUSWRQQmW	WS UR[VmTSSU
PP\RW
PSUP WWWPZ	STV[QSYDFIAST VF\UTS\ZD]SW@YUZE	3D\WAB
SQPV	

WRU	VqVGZYH[S^VWWZ_\UWST^QKK@F[^^W]^WBUQL@YFKD^JDKBTFZBZWPTWKfIBW^]WWWP_RPTX UPSPoFVYI]m o\

QSWPP UTSS SW	PW
XQT	X U
W_RQQZMF@AQT TE_\TQ_XGTS^@[VXF :D^TCAVS  
TVWP		 
PTr_GSYJXZ[WBY\USTT^QKK@F[^^W]^WBUQL@YFKD^JDKBTFZBZWPTWKfIBW^]WWWP_RPTX UPSPoA\]E^mo\

QSWPP W	
X T PURPW	S \TPQ	SWPU	QXWQ W
	TV[QSYDFIAST VF\UTS\ZD]SW@YUZE	3FB]XP^
\STVQSVSU VTTP\
QVWpTLQ[J[[Y\I[^UVQT[TPPUSWRQQmJW_G^nmW
SXU
S[WTRQQWRTSSUS W \TPQ	SQFDBAS V WDTW TR^ZL_Q\@XWZM	8D]UAJWXTS		T	WS
P  	 TyJYPG_UXU\Z@IBFX_\\_\WCWZGB[FHFUAFKAUMQ@ZTQV\@dKBT\V\UT[TPPUSWRQQmJW_G^nmW
SXU
S[WTRQQWRTSSUS W \TPQ	SQFDBAS V WDTW TR^ZL_Q\@XWZM	88