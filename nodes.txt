D]WAB
WG]UxssU{]tYks{{ZwJs|IJ|tUGY{ArYsU{ss[hg^Y{Z][Zc[~q]UxssU{]ZDRc[}YxR^dSwhSw^QGkxdXS`GRIDQ]Q[}q]U{ssUx]^Y{Z][|gh[|wg~dQFwc|YtgJ}dYhdkF~dgKkdc|dkH|dVYxYEy{ssUxsxGhhc[~YxQI{ArYsU{ss[RwtSs{xYBP^|R^dFhg}I{AqYsUxss[QwKUs{{Zc|I{AqYsUxss[Qx[~Yx}f `txtwJcsK|t{K~dwE}d{K{t{H~ZsJ{YEyxssU{sxSx[}YxSx[~q]UxssU{^`Rwg[}YxGS^{YEyxssU{sx xZ][Y{yWa8F_WBCUE]VyqsUy_tZjq{yXwI~q~KI}vQG}fk y[EyyqsVyqxZQecX[{ ~q{Bs[sUyqsXQuHTq{y\V^i_`YRKYTe|CjuH|_HjK{As[sVyqs[QecX[{EiXYF~XkJ~q~fd_|fc~e{Fifqie`[jfV_vseg[|s]VyqsUy_]Tq{y\VKy[EyyqsVyqxEij`^yX][|x]jdAij{Gy[EyyqsVyqxERxyX][~vcKy[EyyqsVyqxESK{yYbbwgV}fwHyv{F}X{F}fsE}X{U}X}vw[|s]VyqsUy\`BSK{y\`BSK{As[sVyqs[Tz^Fja{y_GR_g[|s]VyqsUy\kX[{KyUB:D_WCAWE]W{qpW{_t[hqx{XkH~XxI|K|[H}fwY~s^W{qsW{_w@hq{{Xh {[E{{qpW{qx_P {X]Yk_gEhjhFPugEk gEhucEQKEhj`Y~s]W{qpW{_^[{X^Y|v|X|XR HwDh_dha hfc[~ex] `Dh_x]e{ZkXtZXs]{[E{{qpW{qxEhj`Y}[xQKxCq[sW{qpYQut Sqx{[\Wzc\P\|@P F{[E{{qpW{qxGP{ {X]Y|v`J{[E{{qpW{qxGQKx{Y``wdWfG{vxGX{DfpDX{WX|vwY~s^W{qsW{\cCQK{{\cCQK{Cq[pW{qsYVz]Gha{{_FP_gY~s^W{qsW{\hY}[{I{UA	8D_UAAWE_U{rqU{_vYhry{XuJ|r|KJueGXu{XGy{qqU{rzZSea[}Xy |qyAqXqU{qq[Sv	HVqy{\^VubZPHYVe~@hvH~_	KhHyAq[qU{rq[Sea[}Xy|_uH|fyk[ [aE~fa}vuF}feHhr e~Z|vf[kebX}uq[~s_U{rqU{_^Vry{\TH{XGy{qqU{rzEkjb]{[_[~ zKhfvYVuWD{XGy{qqU{rzEPz{[_[|vaH{XGy{qqU{rzEQKy{Zb`weUeu{vyE[yFfqF[yUX}uu[~s_U{rqU{\bAQHy{\bAQHyAq[qU{rq[Vz\Ehby{_DP\e[~s_U{rqU{\i[}XyK{U@8G\WAA
STW
WS


TRP QTSWrH[PD^UC
W\QBKBEY]\^]\TAWQE@[EIF^CFH@WFSBYUSVWBfKAU\]^WUPVPSWQ 	WPQ	SmU
PPTW	P
WPRWqnW

QSWPPUTSSSW	PW
SQT	S U
WTRQQZFF@AQ T TE_WTQ_XG_S^@[VXF:D^TCAPWVPU
	WPQP RrQZY\SYE_S\B_]
W\RBKBFY]\^]\WAWRE@[FIF]CFK@WESBZUSVTBfKBU\^^WUSVPPWQ 	WPQ	SmUSW	QPSmU
	SSW
RP	WWPQ	STPU
QSWQ W
	WVPRSZDFBBSTVF_U WS\ZG]S\CYUZF	8EB]XS^T
T SQUTP VVS
W
pU_TW_W]^USVPPWQ 	WPQ	SmUSW	QPSmU
	SSW
RP	WWPQ	STPU
QSWQ W
	WVPRSZDFBBSTVF_U WS\ZG]S\CYUZF	8G\WAA
P PW	TTRQ QVr][^ZW]U]USU\QCIBF[_\__\WCWQDB[FKF^BFKBUFR@ZWQVWCdKBW\]_UWPWPPUPWRQQmTSUSSRmW
SSU
SPWTRQQWRT
SSUS WWTPQ	SZFDBAS V WD_W TR^ZG_Q\@XWZF	8D]UAATPPW	
WSPT	 RVSrQX[\PX@QVW\S@KAD[]\\]_UAWSG@XDKF\AEIBWDQBXWSVU@fH@W\_\WWRTSRWS 	WPRSmW	SWQQQ oW

QSWPPUTSS
QW	PW
SQT	S U
WTRQQZFF@AQ T TE_WTQ_XG_S^@[VXF:D^TCASV	QQP
VWPW PQrU_UU_TFYU\Q@IBFX_\\_\WCWQGB[FHF^AFKAUFQ@ZTQVW@dKBT\]\UTPTPPUSWRQQmWSUSSQmT
SSU
PPWTRQQWRW
PSUPWWWPQ	SZEDBASV TD_T TQ^ZG\Q\@[WZF	8D^UAA
UP	S

WP
W P	rU_UWV_UWSTT^Q@K@F[^^\]^WBUQG@YFKD^ADKBTFQBZWPTW@fIBW^]\WWPTRPTS UPSPoWP	PWU
UVPoW	
QSTPPUTPSPW	SW
SQW	SU	WTRQQZFE@AQ W TF_WTQ\XG_P^@[UXF:D^WCATW  Q

 WPU PrU\UU_WUCU\QCIBF[_\__\WCWQDB[FKF^BFKBUFR@ZWQVWCdKBW\]_UWPWPPUPWRQQmTPPUT
W	TSmejWV WSQRWTPSVUP	Po   W TTVPQSUPWSPWS 	W	
 UTSSSXFFACS TTF]WVQ\ZE_S_B[UZD;F_WACUEyyqsXT[{yq{Hy[E|s[sVy\pHyX]VyGWEeX]Wa
]^A^\^]h[zAG[Eav\\~j\YCjB_BzAWhbDFxB^Tz`ESH]G|cGRegGi ]TeYR\xBj ZfY[|szyqs[ie`ZyX]Uy_VEjeVFja_ia{Atc]VyqxERxyX]UyXc}K{Atc]VyqxBjq{yq{J~Xp[jfxX}qecK|fwIje{Fied\}K~XsF}v}XdXiek[|szyqs[ie^ZyX]UyXwHy[E|s[sVy\|XUa{yqxZTj`Gy[E|s[sVy_^Tq{yqxSK{Btc]UyqxUjp^yX]Vy_DR_gX|syyqsXQuHTq{yqx\Red_RegGj wX|syyqsXSutQq{yq{DU\ViSz`eUuUGy[E|s[sVy\`ASK{yqxRzX|syyqsXS ByX]Vy[{|s\:D_WCAWE{{qpYV[{{qxI{[E~q[pW{\pJ{X^W{GWGfY_Wa_^@\\\_j[xCGX GasWb]C\SzbkudHQSz` Qz|~K ~_ \~ |ESzgDkeISeU_VvY{[F~q[sW{_w[hq{{q{YSeVJVjxEk kY~s{{qsYQuIVq{{qx |vY~s{{qsYSe`Y}[sY|fc[|vZY dD}v^]|aHedY~et| cD|fhGvsJ|vxk_`Z{[F~q[sW{_w@hq{{qxH[{Cvc^W{qxJkZY}[sYkjg PK{Cvc^W{qxEhj`Y}[sYV|Y~s{{qpYVz^Ghax{qxEP \{[E~q[pW{_ZFQ`Y}[sYk_]^QdI~_]{[E~q[pW{\pXVuVY}[sY~Uc i|gcZ~K{Cvc^W{qx Pz|Y}[sYVuIJ{[E~q[pW{\|ESax{q{YvcA	8F@_XS_
	SUPVSP 
SVV QqD@]FB]\\TPTPPUSWRQQmW	WSURPVmT
SSU
PPWRW
PSUPWWWPQ	STVPQSYDFBAST VF\U TS\ZD]S\@YUZE	8D\WAB
SQPV

WRU	VqVGQYH[S^VW\Z_\UWST^Q@K@F[^^\]^WBUQG@YFKD^ADKBTFQBZWPTW@fIBW^]\WWPTRPTS UPSPoF]YI]m oW

QSWPPUTSSSW	PW
SQT	S U
WTRQQZFF@AQ T TE_WTQ_XG_S^@[VXF:D^TCAVS
  
TVWP	 PTrTGSYJXZ[\BY\USTT^Q@K@F[^^\]^WBUQG@YFKD^ADKBTFQBZWPTW@fIBW^]\WWPTRPTS UPSPoAW]E^moW

QSWPPW	
S T
 PURPW	S WTPQ	SWPU	QSWQ W
	TVPQSYDFBAST VF\U TS\ZD]S\@YUZE	8FB]XP^
WSTVQSVSU VTTPW
QVWpTGQ[J[[Y\B[^UVQTPTPPUSWRQQmAW_G^nmW
SSU
SPWTRQQWRT
SSUS WWTPQ	SZFDBAS V WD_W TR^ZG_Q\@XWZF	8D]UAAWSTS		TWS
P   TrJYPG_USU\Q@IBFX_\\_\WCWQGB[FHF^AFKAUFQ@ZTQVW@dKBT\]\UTPTPPUSWRQQmAW_G^nmW
SSU
SPWTRQQWRT
SSUS WWTPQ	SZFDBAS V WD_W TR^ZG_Q\@XWZF	88