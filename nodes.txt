D]WABWG]Uxqq_{]tYkqy{ZkJ}XyA|I}XuO|s{Ar[q_{ss[he\S{Z][XaQ~q]Uxqq_{]ZDRaQ}YxGkjbSkg
GkzfRS`GRKNQ]Q[}s__{ssUx_\S{Z][hfvSkdhfqL}wk |K hdQK}fW@}twF|Hu	|JgH~fy
}ww x[Gs{ssUxqzMhhc[~[zQI{Ar[q_{ss[RuvSs{x[	NP]|^}KyKqYsUxqqQQwKUqy{Zc|KyKqYsUxqqQQx[~[zwf `txvu@|csK|vyA~dwK}fq{ts~X}@{YEyxqq_{sxSz}Q}YxSz}Q~q]Uxqq_{^`RueQ}YxGS T{YEyxqq_{sx xX_QY{yWc8F_WBA
UE]V{syUy_tZhsqyXwI|s~K|c }[{BqYyUyqsXkgTYyX]X|Zi[|s]V{syUy_ZGQi[[xXhg^T_BhgXjaZhwH|_]VsqAs[sV{sy[QecX}YqHjXY]}~q\|]q|fcHkZuFieci_`\kdmi_|gi[|s]V{syUy_]Vsqy\VK{YOyyqsV{srEij`^{ZW[| tBPwie[hc [|s]V{syUy\pGQ^i[[{|tu[|s]V{syUy\pK{ZW[dYt`cyJ}HsVZyK}[IYEqsF|tWH}a{BqYyUyqsXVw@HyX]XVw@Hy[Ez{syUyqxWhz^yX]XP]Gja{BqYyUyqsXVYqyX{Xq^:D_TACWE^Uy{sW{_wYj{{{XtJ~{ |K}QIf`[|y]W{qpUyUt@hqxyRk {[Fyy{sW{q{]R| {X^[TpxVuY_ToJEhjH|U`k EYRVEP{\yQE{{qpUy{x@hqxyUwkXUY~|^\~edHjlcD|utEj{ke|H|lkJk_hE}okH|~k{Cq[pUy{sYP_gyR]YV|[|y]W{qpUyVpXVuV[Q{Fk_Q{
Y~s^Uy{sW{\sDSVcY}[x~|Y~s^Uy{sW{\sHyR]YfYwbksHftU}RsI[J}QG}qpE~|]JaxAsQsW{qp[TJJ{X^[TJJ{[Fyy{sW{q{U`p\{X^[RUEhaxAsQsW{qp[TQ{{Xx[sV8D\WCKWF]WqqqU{\t[bqy{[kHtXyK|H uaK|ugYts_U{rsWq_vBhr{qXi{XE{qqqU{rx_Z~{[]Y\ f[hvtFt_bkF[Z\}GPx^q[Gy{rsWqqzBhr{qXykeZ]bf\^~epZafSF|v`Xwa heYtf[Khu^]wfeK[Uv[yAqXsWqqq[P\d qX_[VYts_U{rsWq\rZVvUYw[yDQvdEa \A~H{C{[qU{rsY[u	KVr{qXaH{C{[qU{rsY[z}[}Xxlbt{uwHuKqKu{ItfuK~esqvq}[Hq[Gy{rsWqqzPyYw[zPyYts_U{rsWq\bQvgYw[zGP\q[Gy{rsWqqz {[]Yu[yyT`2D\WAB STW	 UY

		WRPSV	SWqJYZG^U@W\R@IHFY]\\_VWAWRGBQFIF]ALK@WEQ@ZUSVT@dABU\^\UUSTZPWS	WR[	SmWSPWU	P	]PPU{mW	QST
ZPWVPSPU	S]
SSW	S		U	WTPSQZFEBCQ W^F_W V[\XG_P\BQUXF8FTWCARTVSW 
 UZQP  	QrQY[^YZE_S_@U^
UVQBKBE[_V^]\TC]QE@[EKL^CFHBUFSBYWQ\WBfKAWV]^WWPVPSUQ ]PQQgUYWSSSmW
SPU RS]TPQQWRU	SYWSW		TTZQSYFDHAS V VF\W
TS\ZD_QV@YUZE	2FB]XP\
T
 	^SQUTSVTY 
W	rWUWW_W_\WPVPSUQ ]PQQgUYWSSSmW
SPU RS]TPQQWRU	SYWSW		TTZQSYFDHAS V VF\W
TS\ZD_QV@YUZE	2D\WABS PWT 	WRS
QVq_YTYW]U^WYW^[@IBFX]^\_\WAU[GB[FHDTAFKAWLQ@ZTST]@dKBT^W\UTZTPPWSURQSoWQUQYQmT
 SSWPPU^RQS]PW
PQUP W
WWR[	SZEF@KST
TD_T^Q^ZG\S^J[WZF:N^UAA	 TPS U

]PPT QVSrRZYVSX@RT
W_QBABD[]_^W\UATQEJ[DKE^CFIBWFSHXWSUWBlK@W_]^]WPVPRWQ
	TZQSnU	P]QSS	oW	QST
ZPWVPS
RU	S]
SSW	S		U	WTPSQZFEBCQ W^F_W V[\XG_P\BQUXF8FTWCAQ\	QQS V UZW  ZQrU\WWUWFYU\QCK@L[_\_]^]CWQD@YLKF^BDABUFRBPWQVWCfIHW\]_WWPWRZUP WPSQmTSWSSRoW
QYU
SZWTPSQW	RT SSW	S U]TPQQPFDBAQ V WFUW TR\XM_Q\@XUXL	8D]WCK	WR
S	
WS] S	xV_UWU]W]STW^Q@HBDQ]^\^\UAUQGC[DAD^AFIHWFQAX]STW@eK@]^]\T]PTPRWS	USQSoWR	PTV
WVPm]

SQWPRUTSQSWPWYQTY W	
U^RQSXLF@AS
T TE]]TQ_ZEUS^@[VZD:D^TACTTQ
	
WP
	V Pp__UU_TWIW^[@IBFX]^\_\WAU[GB[FHDTAFKAWLQ@ZTST]@dKBT^W\UTZTPPWSURQSoWP	ZUV WVPmeiUV]SQPUWPQ\USZo 
T W WVPR	YUZW
QSWQ
	T WVPSPZDLBCP^TF_U VQ\YG]Y\B[UYF	8F_WBA
UEz{sy[T[{{sqKy[EqYyUy\pK{ZWUyGWGo[]Wa	_\B^\]_h[yCEQEav_^|`_YCjA]@pBWhbGDzH]Tz`FQJWD|cDPgmDi ^Vg	ZR\xAhPfYX~qyyqsXkgjYyX]V{]\FjeVEhc\ia{BvaWUyqxFPryX]V{Zi}K{BvaWUyqxAhsqyq{I|ZzXjfx[secH~d}Jje{Ekgn_}K |ZyE}vZn[iekX~qyyqsXkgTYyX]V{Z}Ky[EqYyUy\|[WcqyqxYVhjDy[EqYyUy_]VsqyqxQIqAtc]V{srUjp]{ZWUy_GP]m[|sz{sy[QuKVsqyqx_Pgn\RegDh}[|sz{sy[SutSsqyq{GW^\jSz`fWw_Dy[EqYyUy\`BQIqyqxPxu[|sz{sy[S A{ZWUy[{q^:D_TACWEyy{sYV[xy{{I{[F|sQsW{\sHyR]W{GTEeY_Wb
]T@\_^]jXzAM[ GapUa]@^YybkvfKQSzcSp~K|U\~ GQpdDkeKQoV_VvZyQE~q[pUyUt[hqxy{xYSeUHT`{Ek h[|y{{qp[SIVqxy{{ |v|[|y{{qp[QocY}[p[~l`[|vY[}
gD}v]_~kHeg[|ow| `F~lkGvpH~|{k_cXyQE~q[pUyUt@hqxy{{H[xAti]W{q{HiYY}[p[i`d PKxAti]W{q{Gj`cY}[p[TY~syy{sYVz]Ejk{{q{GR
\{[F|sQsW{_YDScY}[p[iU^^QgK|U|]{[F|sQsW{\sZTUY}[p[|Vc k~m`Z~KxAti]W{q{RpY}[p[TJJ{[F|sQsW{\GQk{{qx[tiB	8FC]ZY\
	S VZ VSS	PVU[rD@]E@__\WPWRZUP WPSQmTTSWRPUoW
QYU
SZW	RT SSW	S U]TPQQWVPR	YZDFBBYTTD_U WQ^PG]S\C[WPF	8G^UKA
PSRV
 TPU TrVGQZJYY]VW\Y]^_WSW^Q@HBDQ]^\^\UAUQGC[DAD^AFIHWFQAX]STW@eK@]^]\T]PTPRWS	USQSoF]ZK_goW	QST
ZPWVPSPU	S]
SSW	S		U	WTPSQZFEBCQ W^F_W V[\XG_P\BQUXF8FTWCAVS
 TV UZ	  ZWrTDQ[@[Z[\A[^_STW^Q@HBDQ]^\^\UAUQGC[DAD^AFIHWFQAX]STW@eK@]^]\T]PTPRWS	USQSoAW^G\goW	QST
ZP]

S
W
RUPZWP WWR[	STPW
QSUQ ]
WVPR	YZDFBBYTTD_U WQ^PG]S\C[WPF	8E@_RS^WPV\RQTPU T^TPW	STTpTGRYHQXY\BX\WUQWPWRZUP WPSQmAT]ETmmT
 SSWPPU^RQS]PW
PQUP W
WWR[	SZEF@KST
TD_T^Q^ZG\S^J[WZF:N^UAAWSWQ
	T]P
S TrI[RM\USU\QCK@L[_\_]^]CWQD@YLKF^BDABUFRBPWQVWCfIHW\]_WWPWRZUP WPSQmAT]ETmmT
 SSWPPU^RQS]PW
PQUP W
WWR[	SZEF@KST
TD_T^Q^ZG\S^J[WZF:2