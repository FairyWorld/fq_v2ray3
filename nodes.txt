D]W@CWG]TyqqV{]tXjqy{ZwK~q|I~aI|tZ|s_V{ssTy_vAhs{yXi{YExyqqV{sx\R~{Z]ZT fXhwtE|_b kFXR\}DPx]y[Gz{ssTyqzAhs{yX[ k iHj[~dcJiHuE|wd[}[Xh]w|f[ |dwI~ uK}t{ ~[yBqYsTyqqXP]dyX_XVZ|s_V{ssTy\rYVwUZ[yGQ]dXTe~SgF|KyBqYsTyqqXQwJTqy{Zc}KyBqYsTyqqXQxZ[z~f `uyvuIIsJ}vyK~dsJ|fqI{tsIXqI{YExyqqV{sxRz}X}YxRz}X~q]TyqqV{^`SueX}YxFR ]{YExyqqV{sxyX_XY{xVc8F_VCA
UE\W{spUy_u[hsxyXjH~ZxK~KIcK~vPY~q^UyqrW{]wBjqz{Zhy[D{{spUyqy_PyX\YVx{Tu[]VgIGjj}J~]ci G[P^|GRy^{YFyyqrW{s{Bjqz{Zc^~ff|||ejGZRF~vf|c}Xb~gZifqYZs^iHTG}cxAs[rW{sp[R_e {Z^[T~Y~q^UyqrW{^sZTuTY}YxDj_e\Ps	[|s\W{spUy\qFQ^`[[z |t|[|s\W{spUy\qJ{Z^[dY
u`cpJ}fvWZpK}KGYE}arGJ^E}azCqYpUyqrYVwIHyX\YVwIHy[D{{spUyqy Whs^yX\YP]GjazCqYpUyqrYVYxyXzYq^:D^UACWD_UyrsW{^vYjr{{YuJ~r |J~XHwi[|p]W{pqUy\t@hpyy[k {ZGyyrsW{pz]R| {Y_[R\d htvD|\`kDYR_EP z\yXE{{pqUyrx@hpyy[VZg}j[g~g~YjfcD|tijbX^j[|fckdjXuwhtaiH{CqZqUyrsYP^fy[]YV }[|p]W{pqUy_pXVtW[X{Fk^HDTH
Y~r_UyrsW{]rDS_cY}Zy~uY~r_UyrsW{]rHy[]YfX	wbbsHgeU}[sIJ E}XG`qE}K]G`yAsXsW{pq[TvJJ{Y_[TvJJ{ZGyyrsW{pzUip\{Y_[R\Eh`yAsXsW{pq[TX{{Yy[s_8E]WCBVG]WxqqUz]t[kqyzZkH}XyK}IJ~aK}tY}s_UzssWx_vBis{xXizYE{xqqUzsx_S~zZ]Yh_fGihhFSufGjgEkubGPIEkja[q]WxqqUz]^[xX_[~|[|ujZ|tsD|v[K~Y HrXgxZ| yF}ZdZkvuitYh_y zYE{xqqUzsxEkja[|YxRKyApYsWxqq[Pwt PqyzYIkjrAVc
Y}s_UzssWx\rDP^cY~[y}tY}s_UzssWx\rHzZ]YeY	wacsH|HqU~ZsI|K E~YG|aqE~J]G|ayApYsWxqq[WwJJxX_[WwJJx[GyzssWxqzVhp\xX_[Q]EkayApYsWxqq[WY{xXy[p^;D\W@C STV UP
 WRQSV  SVpJYSG^TAW]S@IAFY]]\__WAVSGBXFIG\AEK@WDQ@ZUSWU@dHBU]_\UURTSPWS	VRR	SlWSQVU	PTQPUrmVQSU
SP
WVPS
QU	RT
RSW	R	 UWUPSQZGDBCQVWF_V VR\XG^Q\BXUXF
	8F]WCA	RTVRW	
USQQ  	QrPX[^PZE_R^@\^
U_QBKCD[__^]]UCTQE@ZDKE^CGIBUFSBXWQUWBfJ@W_]^WWPVQRUQ 	TPPQnU	PWSSSlW
RQU	RRTTPPQW
RUSPW
SV	 	UTSQRXFDAAR V VF]WTS\[E_Q_@YU[D	;FB]YQ\
T 	WSPUTRWTP 
VrW\WW_V_\WPVQRUQ 	TPPQnU	PWSSSlW
RQU	RRTTPPQW
RUSPW
SV	 	UTSQRXFDAAR V VF]WTS\[E_Q_@YU[D	;D\W@CS PV	U WR
S QWp_Y]YW]T_WP W^R@IBGY]^\_\VAURGB[GID]AFJ@WEQ@[USTT@dKCU^^\UUSTPQWS
	URQ	SoW
QU	QPQmU
	SRWPQ	UWRQ	STPWQQUQ W

VVRR	S[DF@BSTTD^UWQ^ZF]S^C[WZG	:G^UA@
  TQR U


TPPU  QVSsSZY_SX@ST
V^QBHBD[\^^^\U@UQEC[DKD^CFIBVFSAXWRTWBeK@W^]^TWPVPRVQ	USQRoU	QTPSS oVQSU
SP
WVPSSU	RT
RSW	R	 UWUPSQZGDBCQVWF_V VR\XG^Q\BXUXF
	8F]WCA	QU	QPR	VUSV   SQrT]WW\WFX
U\PBK@E[_\^]^TCWPE@YEKF_CDHBUGSBYWQVVBfIAW\\^WWQVRSUQ WPSQmUSWSRSoWQPU
RSWUPSQV	RU	SSW	S
U	TTPPQYFDB@Q VVF\W US\XD_Q\AYUXE	8E\WCB WR
S
VRT 
R	qV_UVT]WTST	W^QAIBDX]^]_\UAUQFB[DHD^@FIAWFP@XTSTWAdK@T^]]UTPUPRWR	URQSoVR	PUV

WVQmT

SQWQRUTRQSWPVPQUP W	

UWRQ	SXEF@AST UD]TTP^ZE\S^@ZWZD:D_UACUUQ
WQ
	V  Q pV_UU^UW@ W^R@IBGY]^\_\VAURGB[GID]AFJ@WEQ@[USTT@dKCU^^\UUSTPQWS
	URQ	SoWQ	SU	V	WVPmdhUV	TSPPUWQQUURSo TV WVQS	PU	SW
QSV	Q	U	 WVPS
QZDEBC QWTG_U VQ]XG]P\B[TXF	8F_VCA
UE{{sp[T[z{sxKy[D~qYpUy\qJ{Z^UyGVGf[]W`_\B^]\_hZxCEXEaw^^|i_YCk@]@yBWhcFDzA]TzaGQJ^D|bEPgdDi _Vg ZR\y@hYfXY~qyyqrYkgcYyX\W{]UFjeWDhc\iazCva^UyqyGP{yX\W{Z`}KzCva^Uyqy@hsxyqzH|ZsXjfyZsebI~dtJjezDkgg_}K|ZpE}v~ Zg[iejY~qyyqrYkg]YyX\W{ZtKy[D~qYpUy\}ZWcxyqyXVhcDy[D~qYpUy_\VsxyqyQIxAtc\W{s{Ujq\{Z^Uy_FP]d[|s{{sp[Qu
JVsxyqy^Pgg\RefEht[|s{{sp[Suu SsxyqzFW^UjSzagWwVDy[D~qYpUy\aCQIxyqy Px|[|s{{sp[S @{Z^Uy[z~q^:D^UACWD yyrsYVZyyr{I{ZG|sXsW{]rHy[]W{FUEeY_Vc
]]@\^^]jYzAD[ G`qUa\A^PybjwfKQS{bSy~J	|\\~~GQydDkdKQfV_Vw[yXE~qZqUy\t[hpyyrxYSdTHTi{Eki[|p{{pq[SvIVpyyr{ |w}[|p{{pq[QfcY}Zq[~e`[|wX[}gD}w\_~bHdf[|fw|aF~ekGwqH~u{k^bXyXE~qZqUy\t@hpyyr{HZyAt`]W{pzHiYY}Zq[iid PJyAt`]W{pzGjicY}Zq[TY~r yyrsYV{\Ejb{{pzGR\{ZG|sXsW{^XDScY}Zq[i\^^Q fK|\|]{ZG|sXsW{]rZTvUY}Zq[|Vck~d`Z~JyAt`]W{pzRyY}Zq[TvJJ{ZG|sXsW{]~GQb{{py[t`B	8GB]ZP\
 S
 VS VSR PWTRrD@\D@__\WQVRSUQ WPSQmUTS
WRQToWQPU
RSV	RU	SSW	S
U	TTPPQWVQS	PZDFCCPTTD_UVQ^YG]S]B[WYF	9F^UBA
QSRV
	UPU 	TrVGP[JYP]VW]X]^VWS	W^QAIBDX]^]_\UAUQFB[DHD^@FIAWFP@XTSTWAdK@T^]]UTPUPRWR	URQSoF\[K_noVQSU
SP
WVPS
QU	RT
RSW	R	 UWUPSQZGDBCQVWF_V VR\XG^Q\BXUXF
	8F]WCA	VS	TVUS	   SWrUEQ[I[Z[]@[^VST	W^QAIBDX]^]_\UAUQFB[DHD^@FIAWFP@XTSTWAdK@T^]]UTPUPRWR	URQSoAV_G\noVQSU
SP
T

R
WRU	PSWP VVRR	SUPW
QRUQ 	T
WVQS	PZDFCCPTTD_UVQ^YG]S]B[WYF	9D@_[S^VQVUSQTPU TWTPVSTTpTFSYHXXY\CY\WUQWQVRSUQ WPSQm@U]E]mmU
	SRWPQ	UWRQ	STPWQQUQ W

VVRR	S[DF@BSTTD^UWQ^ZF]S^C[WZG	:G^UA@
WRVQ
	TTP
R TsH[RD\UR
U\PBK@E[_\^]^TCWPE@YEKF_CDHBUGSBYWQVVBfIAW\\^WWQVRSUQ WPSQm@U]E]mmU
	SRWPQ	UWRQ	STPWQQUQ W

VVRR	S[DF@BSTTD^UWQ^ZF]S^C[WZG	:;