D]W@C	WG]Typp^{]tXjpx{ZkK|Yx@|I }p@|tkZ|r^^{ssTy^wIhs{yYh	{YExypp^{sx\R 	{Z]ZT{{VwZ^TdILhh|I|^ckFXR]|LPx]yZFr{ssTyp{Ihs{yYd	hZVZwwU~dQDiY|M|wwi`}wcI|d`	|dw~IVC|ti`xJqYsTyppPP]dyY^PVZ|r^^{ssTy]sQVwUZZxOk][Tp	P~q]Typp^{^pES]`P}Y{~w|P~q]Typp^{^pIyY^Pf[vb`pAdwT}Yp@ID}JA}csD}Y^Cc{@sZp^{ssZTtIC{Z]ZTtIC{YExypp^{sxUksU{Z]ZR^Lhc{@sZp^{ssZTZx{Z{Zs]8F_VC@UE\WzrxUy_u[irpyXjH[pK~K[|E~[zCpXxUyqrYjfUYyX\Y}[h[|s\WzrxUy_[FPh[[yifsYieEiyoXQ aEPHDS_PYpVUyqrWz\UYyX\Y}\` ~XX i\|Fi uY~r	~ y[eR}XXD}Kk^if~}e^~ jzXNyyqrWzrsGjjbY|XsSKzCpXxUyqrYPvQqzzX HijXFzXNyyqrWzrsERy z[V[~vbJzXNyyqrWzrsESKzzZbbwfW~e|HyvzG~[tF}v~D~eRU}vz~K|[|s\WzrxUy\aCPHpy\aCPHpAs[rWzrx[Tz_Gibpy_FQ\l[|s\WzrxUy\jY|XpKyUC	9GTWCA	TN]W{pqTxTt[hpyxSkH~YyJ@HZJmsY~r_TxzsW{^vCkz{{YixPE{{pqTxzx_P ~xS]YP^fk~tF~^bhF[P]}FS
x^{ZGxxzsW{pzCkz{{^uISdXhg~X}n`X|wqG}wHZ kSh]~d}hT |Ir_kSkhpy@rPsW{pqZSTd {Y_ZU
Y~r_TxzsW{]r[U~UY}ZyERTd[~Jy@rPsW{pqZR~IVpyxSc Jy@rPsW{pqZRqY}Zz|e	`v{wuKjsIwyI}msJ~gux}sI}Y}KxPE{{pqTxzx P{}Z~Px P{}Z}x]W{pqTxW`QteZ~PxEP_xPE{{pqTxzx{Y_Z|P{{Tb;O_UA@
\E_UzsrVp_vYiszpXiJZzHwK ~IIvve[q\VpqqUz]uAcqyzZjp[GyzsrVpqz]Q}pX_[j]eDcjjDQweD` eGiwaDZKGihbXus_UzsrVp_\YzZ\X`fSi]j tHeF|ti[`a }tTuev[jvEtvvZiZvHw f^jZa]p[GyzsrVpqzGihbXv[zPIzBz[qUzsrXZuvRszp[	HQeDcq[q\VpqqUz^qGZ\a[|Yzwv}[q\VpqqUz^qKpX_[g[
tkaqJ~JrVtXqK~IFtK J|crFtX_H~czBz[qUzsrX]uHHzZ\X]uHHzYDzpqqUzsy\jr^zZ\X[_	GiczBz[qUzsrX][yzZzXz\ 9F_TJA
PW\
WR	
UQ[ QT		P\rH[QE]^C
TWQBKCDZ^W^]]UB\QE@ZDJM^CGICTFSBXVP]WBfJ@VW]^WVPVQRTQ 	
\PP
PfU
Q[TW

S
V[RWpo\

RPWQS UTRP SW
PV	XQU
X V

T_RQ	RYMF@ART UD\\TP^[DTS^@ZW[E :D_U@BP
VUPU WQR[ 
SqZZY\RXF\X\B^\	W]SAHIFY]]]^WWAVSFCPFIG\@MK@WDPAZUSWUAe@BU]_]TURU[PWR	VSZ	SlVRT	QQPfU
XSWQP	VVSZ	SU PV
QRT Q 	\

WVQSXZDFCCXTUE_UVP_QG]S]BZVQF	9DA^SS^WUPZVWP  ]VR	\
pU^UT\\]^	URU[PWR	VSZ	SlVRT	QQPfU
XSWQP	VVSZ	SU PV
QRT Q 	\

WVQSXZDFCCXTUE_UVP_QG]S]BZVQF	9F_TJA
QS\	_UQ Q	R ]r][_[T^^]UR

U\PBJAM[_\^\_\CWPEAXMKF_CE@BUGSCQWQVVBgHIW\\^VWQVS[UQ WQRQmU SVSRS nWPXU
R[WUQRQVRUSSVS
T 	 \TPP
PQFDB@ P VVGTW US]YL_Q\AYTYM	8E\VBJW[PW	 VRS_		
SUPyQX[]Q[CQV \\S@J@GXV\\\^VJWSGAYGHF\ADJA\DQC[TXVU@gICT\_\VTRTRQ\S
WQSXmW
SVZQQl\

RPWQS UTRPQW
PV	XQU
X V

T_RQ	RYMF@ART UD\\TP^[DTS^@ZW[E :D_U@BSW
RZP	UWQ\ 
Q	Rq^_UU^UER V_Z@IBGY\_\_\V@TZGB[GIEUAFJ@VMQ@[URU\@dKCU_V\UU[TPQVS
	TRQ	RnW
PU	PXQmUSRV	PQ	T_RQ	R\QWQPUQ W
 VVSZ	S[DGAJSUTD^U_Q^ZF]R_K[WZG	
;O^UA@


UPP

 \P
V    P	sT\V\V_UVPWU]RKK@FZ_]W]^WCVRL@YFJG]JDKCUEZBZVQWTKfIBV]^WWVS_RPUX 
VPS
Ql\P
SW
T	 U	U[oV	QSU[P
VWPS
QT	R\
RRW	RU WUQRQZGDCBQV_F_VWZ\XG^Q]CPUXF
	9GUWCA	 _W R
T[T  [rT]VVTWUB

U\PBJAM[_\^\_\CWPEAXMKF_CE@BUGSCQWQVVBgHIW\\^VWQVS[UQ WQRQmU[QVT	T	TRnnjWU VPZRWU[SWVP	Q l	 VTUU[QRVQTSQ\S
 W	
UTRP SXFG@@
S UWM]WURWZE_R^AX^ZD
:E\\ACVF	yyqrYWXpyqzIzXN|s[rWz_{HyX\WzD\EdY^Tj
]^@]W^]kPzAGZ Fb}\\~k]Z@aB_B{@TkiDFxC_WykESH\FhGRefFj]TeXQ_sBj [ |eR[|s{zrx[iea[z[VUy_WDif]Fja^jbpAtc\WzrsERy z[VUyXb ~HpAtc\WzrsBjqzzrpJ~XqZiesX}q|fhK|fvHifpFiee]~H	~XrG~ut}XeYjf`[|s{zrx[ie_[z[VUyXvIzXN|s[rWz_wXUazzrsZTjaFzXN|s[rWz\^TqzzrsSKzCw`VUyqy Vi{^yX\Wz\DR_fYp	yyqrYRv HTqzzrs\Ree^QflGj vYp	yyqrYPvQqzzrpDU\WhPykeUuTFzXN|s[rWz_kASKzzrsRz~Yp	yyqrYPByX\WzXp|s\9GTWCA	TN{{pqZUP{{pyJxPE~qZqTxWpJ{Y_TxLWGgZ\\a__C_\\_  i[xCFYDjsWcVC\R{a`udIRPq` Q{}}@ ~^_}|ES{fGhnISdT\U}Y{ZG}rPsW{^vXkz{{pzZPnVJVkyFhkY~r xxzsYQt	JUz{{py}Y~r xxzsYSdaZ~PsY|gbX}ZYeG~}^]|` K|ndY~ducD|giD|}sJ|wyhT`Z{ZG}rPsW{^vCkz{{pyK|P{Cvb_TxzxJk [Z~PsYkkfS@{Cvb_TxzxEhkaZ~PsYV }Z}x{{pqZUq^Gh`yxzxEP_xPE~qZqTxTZFQ aZ~PsYk^\]R
dI~^~^xPE~qZqTxWpXVtWZ~PsY~ T`i|fbY}@{Cvb_Txzx P{}Z~PsYVtHIxPE~qZqTxW|ES`yxz{Yvb@
;M@_XR^		P T	QUPP 
R ]V PpGCVFB]]_U[TPQVS
	TRQ	RnW	
VP U	Q[VmUSRV	PQ	\QWQPUQ W
 VVSZ	SUU[QRXGEIARW VF]VTS\[E^PW@YU[D
3D\W@C	SQPU	
 WR
V  	VpUDZYH[R_UTWZ_\TTPU]RKK@FZ_]W]^WCVRL@YFJG]JDKCUEZBZVQWTKfIBV]^WWVS_RPUX 
VPS
QlEVYI]ll\

RPWQS UTRP SW
PV	XQU
X V

T_RQ	RYMF@ART UD\\TP^[DTS^@ZW[E :D_U@B	UP  	WUWQ
 	 
QUq_GSYKYYXWBY\TPWU]RKK@FZ_]W]^WCVRL@YFJG]JDKCUEZBZVQWTKfIBV]^WWVS_RPUX 
VPS
QlB\]E^ll\

RPWQS V	X U P
VRQT	R\TPP
PW
SURXW
RV			UU[QRXGEIARW VF]VTS\[E^PW@YU[D
3FB]YQ]

\STWQSVRVVUWS\
QVVsWLQ[JZZZ_I[^UWRU[TPQVS
	TRQ	RnJW_G_onWPXU
R[WUQRQVRUSSVS
T 	 \TPP
PQFDB@ P VVGTW US]YL_Q\AYTYM	8E\VBJ TXTS
W	VR	P 	 	WyJYPF^VX V_Z@IBGY\_\_\V@TZGB[GIEUAFJ@VMQ@[URU\@dKCU_V\UU[TPQVS
	TRQ	RnJW_G_onWPXU
R[WUQRQVRUSSVS
T 	 \TPP
PQFDB@ P VVGTW US]YL_Q\AYTYM	89