D]WAB
WG]UxssW{]tYks{{ZkJ}Z{I|IKsH|JQ[}q]W{ssUx]t@hs{xZk {YEyxssW{sx]S| {Z][UxxVwZ_UgJEhh|H}]`kFYS^EPx\xYE{{ssUxsx@hs{x]gZQH|]x]~dQ~dwD|w|[hIY|J}dZ[|gw~w|tcY{CqYsUxssYP]dxZ]YV[}q]W{ssUx^pXVwU[~Y{FkdKUwt@P^`}I{CqYsUxssYQwKUs{{Zc|I{CqYsUxssYQx[~Yxf `txtwHcsK|t{I~dwE}d{G{ts~ZsH{YEyxssW{sxSxY}YxSxY~q]UxssW{^`RwgY}YxGS\{YEyxssW{sx xZ]YY{yWa8F_WBCUE]VyqqUy_tZjqyyXkI|XyK~K}KK}vQX|s_UyqsVy_vBjq{yXiy[EzyqqUyqx^R~yX]Xi_fGjjhGRufGi gDjubGSKDjja[|s]VyqqUy_^ZyX_[}fh\ieuiXgE}fu}KiHfY|f^\i uF}fs~eyEjXp]jf}y[EzyqqUyqxDjja[[xSKyAs[sVyqq[SutQqyy[Djev|K{Bs[qUyqsXSu	KTq{yXa}K{Bs[qUyqsXSz}[[x~dbtyvwK}qqK}v{H|fuE|f{FyvqXIy[GyyqsVyqzRzX[zRzX|s_UyqsVy\bSugX[zGR ]y[GyyqsVyqz yX]X}[yyVc:D]WCAWG]W{qpW{]t[hqx{ZwH|q |I}q|c{Cq[pW{ssYke][{Z]Y|X`Y~q]W{qpW{]ZFQ`Y}Yxhe{[kg
EhzgZS`EQKFQ]QY~s^W{ssW{_][{Z]Yhvw]|g`\k_xDkJska JtY~f]ZhgkD|et|Zs|v[wt]{[F{{ssW{q{EhhcY}[{QI{Cq[pW{ssYQuw Ss{{[Xk]^CSjc~I{Cq[pW{ssYQuIVs{{X` I{Cq[pW{ssYQz|Y}Yxfcv{twHKpIt{I~ftG~d{G{vp}ZH{[F{{ssW{q{ PxY}[{ PxY~s^W{ssW{\cQwgY}[{EP\{[F{{ssW{q{{Z]Y[x{Ta8D\UACWF_UyqqU{\vYjqy{[iJ|XyK|H ~KJ}uy[|s_U{rqUy_vBhryyXi{XGyyqqU{rz]R~{[_[R_fhvvD|_bkDYR\}GPz\y[Gy{rqUyqzBhryyX} keif~^~eiKieyF|uiJa KX_|ej_kKq~_ue\_~qyAqXqUyqq[P\fyX_[V}[|s_U{rqUy\rZVvW[[yDkfKRq[~p_UyqqU{_rDS\a[}Xy~v}[~p_UyqqU{_rHyX_[fZ	wbaqJeeU}XqKX J}q KrqE~H_HbyAs[qU{rq[TuHH{[_[TuHH{XGyyqqU{rzUjr^{[_[R_	GhbyAs[qU{rq[T[y{[y[s\ 8G\WCA
STU
WS

TRR QT SUrH[PD^WC
W^QBKBEY]^^]\TAUQE@[EID^CFH@WFSBYUSTWBfKAU^]^WUPVPSWQ 	UPQ	SoU
PRTW	P
WRRWqnU

QSWPP	UTSS	SW	PW
QQT	Q U
WVRQQZDF@AQT TE_UTQ_XG]S^@[VXF	:D^TCA
PWVPU
	WPQR RrSZY\SYE_Q\B_]
W\RBK@FY]\^]^WAWRE@YFIF]CDK@WESBZUSVTBfIBU\^^WUSVRPWQ 	WPS	SmUSW	QPSoU
	QSW
RP	WWPS	ST	PU
QSW	Q U
	WVPRQZDFBBQTVF_U WS\XG]S\CYUXF	8EB]ZS^TT SSUTP TVS
U
pU_TW_U]^USVRPWQ 	WPS	SmUSW	QPSoU
	QSW
RP	WWPS	ST	PU
QSW	Q U
	WVPRQZDFBBQTVF_U WS\XG]S\CYUXF	8G\WCA
P PU	VTR	Q  QTr][^ZW]W]USU\QCIBD[_\__\UCWQDB[DKF^BFIBUFR@XWQVWCdK@W\]_UWPWPRUP	WRQQmT	SUSSRmW
SQU
SRWTRQQWRTSSUS W	UTPQ	SXFDBAS V WD]W TR^ZE_Q\@XWZD	8D]UACTRPW	
	WSPV	  RVSpQX[\PX@QVU\S@KAD[_\\]_UCWSG@XDKF\AEIBUDQBXWQVU@fH@W\_\WWRTSRUS 	WPRQmW	SWSQQ oU

QSWPP	UTSSQW	PW
QQT	Q U
WVRQQZDF@AQT TE_UTQ_XG]S^@[VXF	:D^TCA
SV	QSP
VWPU PQrW_UU_TF[U\S@IBFX_\\_\WCWSGB[FHF\AFKAUDQ@ZTQVU@dKBT\_\UTRTPPUSWRQQmWSUSQQmTSSU
PPWVRQQURW
PSUP	WWWPS	SZEDBCSVTD_T VQ^ZG\Q\B[WZF	8F^UAA
UP	S

UP
W 	P	rU_UUV_UWST
T^QBK@F[^^^]^WBUQE@YFKD^CDKBTFSBZWPTWBfIBW^]^WWPVRPTQ UPSPoUP	PWU
	UVRoW	
QSTRPUTPSPW	SU
SQW	SU		WTRQQZFE@AQ W VF_WTS\XG_P^@YUXF:D\WCAVW  Q
 WRU RrU\UU]WUCU\QCIBD[_\__\UCWQDB[DKF^BFIBUFR@XWQVWCdK@W\]_UWPWPRUP	WRQQmTRPUT
W	TSmgjWV WSSRWTRSVUP	Po    WTTVRQSUPWSPUS 	W	
 UTSS	SXFFACS TTD]WVQ^ZE_S_B[WZD;F_UACUE yyqsXT[yyq{Hy[G|s[sVy\rHyX]VyGUEeX]Wc
]^A^^^]hYzAG[Eat\\~j\YChB_BzAWh`DFxB^TzbESH]G|aGRegGi ]TeYR\zBj Zf[[|szyqq[ie`ZyX_Uy_VEjeTFja_iayAtc]VyqzERxyX_UyXc}KyAtc]VyqzBjq{yqyJ~Xp[jfzX}qeaK|fwIjeyFied\}K ~XsF}v}}XdXiei[|szyqq[ie^ZyX_UyXwHy[G|s[sVy\~XUa{yqzZTj`Gy[G|s[sVy_^Tq{yqzSK{Btc_UyqxUjr^yX]Vy_DR_gX|s yyqsXQu	HTq{yqz\Red_ReeGj wX|s yyqsXSuvQq{yqyDU\ViSzbeUuUGy[G|s[sVy\bASK{yqzRzX|s yyqsXS ByX]Vy[y|s\:D]WCAWG{{qpYVY{{qxI{YE~q[pW{^pJ{X^W{EWGfY_Ua_^@\\\_j[xCGX GcsWb_C\SzbiudHQSx` Qz|~I ~_ \~|ESzgDkgISeU_VtY{[F~qYsW{_w[hs{{q{YSgVJVjxEkkY~s{{ssYQuIVs{{qx |tY~s{{ssYSe`Y}YsY|fc[|tZY dD}t^]|aHgdY~et|cD|fhGtsJ|vxk]`Z{[F~qYsW{_w@hs{{qxHY{Cvc^W{sxJkZY}YsYkjg PI{Cvc^W{sxEhj`Y}YsYV|Y~q{{qpYVx^Ghax{sxEP \{YE~q[pW{]ZFQ`Y}YsYk_]^QdI~_]{YE~q[pW{^pXVuVY}YsY~Uci|gcZ~I{Cvc^W{sx Pz|Y}YsYVuIJ{YE~q[pW{^|ESax{s{YvcA	8D@_XS_
	S	U PVSP 
STV QqD@_FB]\\TRTPPUSWRQQmW	WS	URRVmTSSU
PPURW
PSUP	WWWPS	STVRQSYDF@AST VF\UTS\ZD]S^@YUZE	:D\WAB
SQPV 

WRU	VqVGSYH[S^VW^Z_\UWS
T^QBK@F[^^^]^WBUQE@YFKD^CDKBTFSBZWPTWBfIBW^]^WWPVRPTQ UPSPoF_YI]m oU

QSWPP	UTSS	SW	PW
QQT	Q U
WVRQQZDF@AQT TE_UTQ_XG]S^@[VXF	:D^TCA
VS  
TVWP	  PTrVGSYJXZ[^BY\UST
T^QBK@F[^^^]^WBUQE@YFKD^CDKBTFSBZWPTWBfIBW^]^WWPVRPTQ UPSPoAU]E^moU

QSWPP	W	
Q T PURPW	S UTPQ	SWPU	QQWQ W
	TVRQSYDF@AST VF\UTS\ZD]S^@YUZE	:FB]XP^
USTVQSVSU VTTPU
QVWpTEQ[J[[Y\@[^UVQTRTPPUSWRQQmCW_G^nmW
SQU
SRWTRQQWRTSSUS W	UTPQ	SXFDBAS V WD]W TR^ZE_Q\@XWZD	8D]UACWQTS		T WS
P    TpJYPG_UQU\S@IBFX_\\_\WCWSGB[FHF\AFKAUDQ@ZTQVU@dKBT\_\UTRTPPUSWRQQmCW_G^nmW
SQU
SRWTRQQWRTSSUS W	UTPQ	SXFDBAS V WD]W TR^ZE_Q\@XWZD	88