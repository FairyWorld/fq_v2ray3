D]W@CWG]TyqsS{]tXjq{{ZkK|X{M|IKaLY{@s[sS{ssZie^_{Z]Z~Xc]~q]TyqsS{]ZESc]}Yx jex_kg
Fjzd^S`FSKBQ]QZ|s]S{ssTy_^_{Z]ZecMhg}X@hZg~ad`X|ewZgG}_`Y}t`Y}vkNkdwKy[E{ssTyqxAhhcZ[xQI{@s[sS{ssZSutSs{y[Mhhp@ie|X~I{@s[sS{ssZSuMVs{yXcI{@s[sS{ssZSz]}Yx|d`r{twK}KsMt{I|fsM~d{yvsN}ZKy[E{ssTyqxPxZ[xPxZ|s]S{ssTy\`QwgZ[xAP_y[E{ssTyqx{Z]Z}[{Ta:D_QACWE[UyqrW{_rYjqz{XmJ|XzI|K ~[ |[}As[rW{qu[ie_[{X[[~XbY~s[UyqrW{_\DSbY}[~S\e SunRu\QyGjzeZS fGSKFQ_W[|s\W{quUy__[{X[[}fjhXn_}efDkfeJjq H~_|f_ZheqFi_jGhXX_} f |umJy[D{{quUyqyEhje[[yQK}As[rW{qu[Suu Sq}y[
Fh_mDy[D{{quUyqyGP~yX\Y|veHy[D{{quUyqyGQK}yY``waU}fvH{v}E}X~Dv}F}XbWvy}HvY~s[UyqrW{\fASKz{\fASKzCq[uUyqrYVzXEjaz{_DR_fY~s[UyqrW{\m[[zI{UD:D^UAAWD_U{wsW{^vYhw{{YuJ|w |J}gpyAq]sW{pq[kc^[{Y_[|^cY~r_U{wsW{^XDQcY}ZzGhl`[kdGh|dZSbGQMFQ^S[~u]W{pqU{Y^[{Y_[|NV\hwTXh`Dhgr^}g hY}~`UtuF|NkhwjZhct[|di{]E{{pqU{wxEhka[}]xQJyAq]sW{pq[Qst Spy{]^Vd\AVw
Y~r_U{wsW{]rDQZcY}Zy|pY~r_U{wsW{]rH{^]YfX	w`gsHgeU^sIJ E]I|pqEN]J`yAq]sW{pq[VsJJ{Y_[VsJJ{ZGy{wsW{pzWlp\{Y_[PYEh`yAq]sW{pq[V]{{Yy[qZ8E]WAGVG]U}qqUz]tYnqyzZkJxXyK}Iyq|s{Aw[qUzss[me\YzZ][zXa[q]U}qqUz]ZDWa[|Yx[ne^W]AneXicYnuH]^PqyApYsU}qq[Rgc[{[y|tYyua}I^nXXYdcmeyFjg|_yK Jiw`_yu~_~ZdYze}[q]U}qqUz]^Pqyz^VH}[GyzssU}qzEjh`]}X_[VKVSDzYEy}qqUzsxEVzzZ][zvaHzYEy}qqUzsxEWKyz[bfweU~dE}vyE~ZFyvyF~ZcUyv}~Jw[xs_UzssU}\bAPI{}\bAPI{Aw[qUzss[Pz\Eic{}_DQ]g[xs_UzssU}\i[|Y{K}U@9F^WGA
QTQ
WR


UPV QT	QQrH[QE\SC
WZQBKCD[]Z^]]UAQQE@ZDK@^CGIBW	FSBXWSPWBfJ@WZ]^WWPVQRWQ 	QPPSkU
QVTW
P
VVRWpoQ

SSWQPUTRQSWPV
UQUU W

WRRQ	SZ@F@AST UD_QTP^ZGYS^@ZWZF:D_UAAP
VT PU
WQSV SrWZY\RXG_U\B^\ W]S@KDFY]]\]ZWAVSG@]FIG\A@K@WDQBZUSWU@fMBU]_\WURTVPWS 	VPW	SlWRW	QQQkU
USWPP	VVPW	SUPW
QRWQ 	Q
WVQSUZDFCCUTTF_UVQ\\G]S]B[U\F	9D@]^S^VUSWWTP PVR
Q
pU^UU_Q]^	URTVPWS 	VPW	SlWRW	QQQkU
USWPP	VVPW	SUPW
QRWQ 	Q
WVQSUZDFCCUTTF_UVQ\\G]S]B[U\F	9F^WGA
QPQ	
RUPQSPr][_[U]S]UR
U\PBKB@[_\^]\QCWPE@[@KF_CFMBUGSB\WQVVBfKDW\\^WWQVPVUQ WPQQmUSWSRSmWSUU
RVWUPQQV RUSSWS
W	QTPPS\FDB@S VVFYW US\ZA_Q\AYUZ@	8E\WAGTVPW

VRPR	
STStQX[]QZ@QVQ\S@J@F[[\\\^WGWSGAYFK	F\ADKBQDQCZWUVU@gIBW	\_\VWRTRPQSWQSUmWSVWQQmQ

SSWQPUTRQQWPV
UQUU W

WRRQ	SZ@F@AST UD_QTP^ZGYS^@ZWZF:D_UAASWQWP	TWQ
Q Q	SrS_UU^UF_ W\W@IBGY]\	\_\VAWWGB[GIFXAFJ@W@Q@[USVQ@dKCU\[\UUVTPQWS
	W RQ	SmW
SU	QUQmU
SRW
PQ	WRRQ	SQPWQSUQ W

VVPW	S[DFBGSTTD^U RQ^ZF]S\F[WZG	8B^UA@

UPQ

QP
V P	sT]UQV_UVQTU\QFK@FZ_\Z]^WCWQA@YFJF^GDKCUFWBZVQVWFfIBV\]ZWVPRRPUU 
WPS
QmQPPW
T
U	TVoV
QSU
VP
WTPS
QW	RQ
RSW	RUWUPQQZGDBAQV RF_V TW\XG^Q\@]UXF
	8DXWCA	RW S
WVT  VrT]WUYWUB
U\PBKB@[_\^]\QCWPE@[@KF_CFMBUGSB\WQVVBfKDW\\^WWQVPVUQ WPQQmUVQWT	W	TRmcjW
V VSWRWU
VSWWP	Q m  VTUTVQRWQWSQQSW	UTRQSXFG@AS U T@]WTQZZE_R^@[SZD
:D_QACWEyyqrYV[}yqzI{[C|s[rW{\vHyX\W{GQEdY_Wg
]^@\Z^]j]zAGZ Gap\\~k][ClB_B{@UhdDFxC_VzfESH\F~eGRefFk ]TeXP\~Bj [ }f_[|s{{qu[iea[{X[Uy_WDhePFja^ka}Atc\W{q~ERy {X[UyXb K}Atc\W{q~Bjqz{q}J~XqZhf~X}q}eeK|fvHhe}Fiee]K~XrGvy}XeYkem[|s{{qu[ie_[{X[UyXvI{[C|s[rW{\zXUaz{q~ZTjaF{[C|s[rW{_^Tqz{q~SKzCvc[Uyqy Wjv^yX\W{_DR_fY~syyqrYSuHTqz{q~\Ree^PeaGj vY~syyqrYQurQqz{q}DU\WhQzfeUuTF{[C|s[rW{\fASKz{q~Rz~Y~syyqrYQ ByX\W{[}|s\8DYWCA	WC{{pq[V]{{pyK{]E~qZqU{ZpJ{Y_U{AWGg[_Qa__B\\\_ j[xCFYGgsWc[C\R{`mudISS|` Q{}~M ~^^~|ES{fFkcISdT]VpY{ZG|q]sW{^vYhw{{pz[ScVJVkyGkkY~r y{wsYQt	KVw{{py|pY~r y{wsYSda[}]sY|gbY|pZYeF}p^]|` JcdY~du|cD|giEpsJ|wy kY`Z{ZG|q]sW{^vBhw{{pyJ]{Cvb_U{wxJk [[}]sYkkfPM{Cvb_U{wxEhka[}]sYV }[~u{{pq[V|^Gh`y{wxEP^{]E~qZqU{YZFQ a[}]sYk^\\QdI~^~_{]E~qZqU{ZpXVtW[}]sY~ Tci|fbX~M{Cvb_U{wx P{}[}]sYVtHH{]E~qZqU{Z|ES`y{w{Yvb@8@@_XR^	QTQTSP 
RPV PpF@[FB]]^ UVTPQWS
	W RQ	SmW	
VSU	PVVmU
SRW
PQ	QPWQSUQ W

VVPW	SUTVQRXFFDAR T VF]WTS\[E_SZ@YU[D>D\W@CSQPV
WR
W 	VpTGWYH[R_TWZZ_\TUSU\QFK@FZ_\Z]^WCWQA@YFJF^GDKCUFWBZVQVWFfIBV\]ZWVPRRPUU 
WPS
QmF[YI]lmQ

SSWQPUTRQSWPV
UQUU W

WRRQ	SZ@F@AST UD_QTP^ZGYS^@ZWZF:D_UAA	TS  	VVWQ QUrRGSYKYX[ZBY\TQTU\QFK@FZ_\Z]^WCWQA@YFJF^GDKCUFWBZVQVWFfIBV\]ZWVPRRPUU 
WPS
QmAQ]E^lmQ

SSWQPV
U U P
WRQW	RQTPPSW
PUSUW
S V	
	UTVQRXFFDAR T VF]WTS\[E_SZ@YU[D>FB]YQ\

QSTW QSVRW VUVPQ
QVVrTAQ[JZZ[\D[^UWS UVTPQWS
	W RQ	SmGW_G_o mWSUU
RVWUPQQV RUSSWS
W	QTPPS\FDB@S VVFYW US\ZA_Q\AYUZ@	8E\WAGWUTSTVR
P  	VtJYPF^UU W\W@IBGY]\	\_\VAWWGB[GIFXAFJ@W@Q@[USVQ@dKCU\[\UUVTPQWS
	W RQ	SmGW_G_omWSUU
RVWUPQQV RUSSWS
W	QTPPS\FDB@S VVFYW US\ZA_Q\AYUZ@	89