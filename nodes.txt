D]WABWG]Uxrs_{]tYkr{{ZkJ}[{A|IKb	}s{ArXs_{ss[hf^S{Z][[cQ~q]Uxrs_{]ZDRcQ}YxGki`Skg
GkydRS`GRHNQ]Q[}p]_{ssUx\^S{Z][hKU}tYK|ugLkZg ~bhwg }eY	hdsF~uk
kg~e{kZpXxXEs{ssUxrxMhhc[~XxQI{ArXs_{ss[RvtSs{xXBSYDxXEs{ssUxrxOPxx[]Q|tcHxXEs{ssUxrxOQI{xZh`ugU|ew	{t{E|[{LdwF|[U_ds|uwQ~q]Uxrs_{^`ARH{{^`ARH{KqYsUxrsQVx^Ekb{{]DS\gQ~q]Uxrs_{^k[~X{A{WB;G_]ACTEWUyqsVx_~Yjq{xXaJ|X{HKK}qHqqAs[sVxqy[ie^ZxXW[~XcX}sWUyqsVx_PDScX~[rS\dPubRu]RuGjzd[P jGSKGR_[[|s]VxqyUy_^ZxXW[~e`]_n^}vUE v_q~uaE|f^Y|X}F}HV[_n_ieckXbZy[EzxqyUyqxDkji[[xRKqAs[sVxqy[SutPqqy[ES ^Ua
X}sWUyqsVx\zDS\cX~[q~vX}sWUyqsVx\zHyX]XeYwbasI|f}U}XsH|[J}aH~qyJ}v]F|aqAs[sVxqy[TuJKxXW[TuJKx[OyyqsVxqrUjp]xXW[R_DkaqAs[sVxqy[T[{xXq[s\;DUWCAWO]W{qpV{Ut[hqx{RkH~XxH|AI~XR{QE{{qpV{{xXSe`X}Q{|qxBqQsW{qpXSJVqx{VV\k_cYPA[VeChJ~_HhA{Cq[pV{{sYSe`X}QxZe{XBxZhqhlG~f`Kh|wD}edI|kZvhKhlYH|Xto{Y~s^V{{sW{_]V{{{\UK{QE{{qpV{{xGkjc^{R]Y~BPQF{[Fz{{sW{q{FPx {X^X||cJ{[Fz{{sW{q{FQA{{Ya`}gWftK{|{GXxElwDXVVlsvtX~y]W{qpV{V`CQKx{V`CQKxBqQsW{qpXVp^Ghax{UFP_dX~y]W{qpV{VkY}[xH{_B	8D\TAKWF^UqqqU{\wYbqy{[hJtXyK|Hu[|rxA{[qU{rp[ae\Y{[^[vXa[~p^UqqqU{\YD[a[}X{[be^V\AbeXhbYbuH~\^\qyAqXpUqqq[Sf`[w[y|uVwuakH YbXz^~ecYuvSF}usZwa h\haHjZkewXueu[~p^UqqqU{\^\qy{_UHq[Gy{rpUqqzEkic]qX_[~]Yef_~HxA{[qU{rp[[u	KVrxqXaHxA{[qU{rp[[z}[}X{}lbt{utHuqqKuxKtfuJ~exqvuE}[pJq[Gy{rpUqqzPy|[w[zPy|[ts_U{rpUq\bQvd[w[zGP^q[Gy{rpUqqz {[^[u[yyT`2D\WAB STW	WY

		WRPPT	SWqI[ZG^U@W\RCKHFY]\_]VWAWRD@QFIF]BLK@WERBZUSVTCfABU\^_WUSWZPWP 	WP[	SmT
SPWW	P	]PSW{mW	
QST	ZPTTPSPW	S]
SPW	S	U	 WTSQQZFEAAQ W ^F_WT[\XG_P_@QUXF;DTWCAPTVST 
  WZQP   QrQYX\YZE_S_CU^
WVQBKBEX]V^]\TA]QE@[EHL^CFHAWFSBYTS\WBfKATV]^WTPVPSWQ ]PQSgUYWQSSmT

SPW RS]TPQSWPU	PYWP W
		TWZQSYEFHAST VF\T
TS\ZD\SV@YUZE2FB]XP_T
^SQ UTS VVY 
W	qUUWW_W\^TPVPSWQ ]PQSgUYWQSSmT

SPW RS]TPQSWPU	PYWP W
		TWZQSYEFHAST VF\T
TS\ZD\SV@YUZE2D\WABS PWT 	WRP
QVq\[TYW]U^UYT\[@IBFX^\\_\WBW[GB[FHFTAFKATLQ@ZTPV]@dKBT\W\UTZTPPTSWRQPmWSURYQmT	 SST
PPW^RQP]SW
PSUPW	WWP[	SZEEBKSW
TD_T ^Q^ZG\P\J[WZF8N^UAA	 TPSW

 ]PPT QVSrRY[VSX@RWW_R@ABD[]_\W\UATRGJ[DKE]AFIBWEQHXWSUT@lK@W_^\]WSTPRWS
	TZQSnW	P]QPQ	oW	
QST	ZPTTPS
RW	S]
SPW	S	U	 WTSQQZFEAAQ W ^F_WT[\XG_P_@QUXF;DTWCAS\	QQS V  WZW ZQrU\TUUWFYU\QCHBL[_\_^\]CWQDC[LKF^BFABUFRAPWQVWCeKHW\]_TWPWPZUPWSQQmTSTSSR mW
SYU
SZWTSQQWRT SSTS W]TPQSPFDBAS V WEUW TR_ZM_Q\@XVZL	8D]TAK	TP
S		
WS
]SxV_UWU^U]STW^Q@HAFQ]^\^_WAUQGCXFAD^AEKHWFQAZ]STW@eHB]^]\T]PTSPWSUSRSoWP	PTV
TVPn]

PSWPPUTSRSWPW
YQTY T
W^RQPZLF@AP
T TE_]TQ_YGUS^@[VYF:D^TBATTQ
		WP	VPr__UU_TUIT\[@IBFX^\\_\WBW[GB[FHFTAFKATLQ@ZTPV]@dKBT\W\UTZTPPTSWRQPmWPZUU WTPmeiWV]SQSWWPS\USZo  
T WWVPRYUZW	SSWS
	T TTPSPYFLBCP ^TF\W VQ\YD_Y\B[UYE8F_WBBUEzxqy[T[{xqqKy[Er[yUy\pKxXWUyGWDo[]Wa	\^B^\]\h[y@GQEav_]~`_YCjA^BpBWhbGGxH]Tz`FRHWD|cDSemDi ^Ue	ZR\xAk PfYX}syyqsXhejYyX]Vx_\FjeVEka\ia{BucWUyqxFSryX]VxXi}K{BucWUyqxAkqqyq{IXzXjfx[|qecH}f}Jje{Ehen_}K XyE}v|Xn[iekX}syyqsXheTYyX]VxX}Ky[Er[yUy\|[TaqyqxYUjjDy[Er[yUy_]UqqyqxRKqAtc]VxqrUjp]xXWUy_GS_m[|szxqy[QuKUqqyqx_Sen\RegDk }[|szxqy[SutPqqyq{GT\\jSz`fTu_Dy[Er[yUy\`BRKqyqxSzu[|szxqy[S AxXWUy[{r\:D_TBAWEz{{sYV[x{{{I{[FqQsW{\sK{R]W{GTGeY_Wb	_T@\_]_jXyCM[ GapVa]@]YybkveKQSzcQp~K~U\~ DSpdDkeHSoV_VvZ{QE~q[pV{Ut[hqx{{xYSeUKV`{Ek hX~y{{qpXQIVqx{{{ |v|X~y{{qpXSocY}[pX|l`[|vYX
gD}v]\|kHegX~ow| `E|lkGvpK||{k_c[{QE~q[pV{Ut@hqx{{{H[xBvi]W{q{KkYY}[pXk`d PKxBvi]W{q{Dh`cY}[pXVY~sz{{sYVz]Fhk{{q{DP
\{[FqQsW{_YGQcY}[pXkU^^QgH~U|]{[FqQsW{\sYVUY}[pX~Vc h|m`Z~KxBvi]W{q{PpY}[pXVJJ{[FqQsW{\DSk{{qxXviB	8FC^XY\
	SVZ VSS
	PVU [rD@]EC]_\WPWPZUPWSQQmTTSTRPUmW
SYU
SZWRT SSTS W]TPQSWVPRYZDFBBYTWF_U WR\PG]S\CXUPF	8G]WKA
PPPV	
 TSUVrVGQZI[Y]VW\Y^\_WSW^Q@HAFQ]^\^_WAUQGCXFAD^AEKHWFQAZ]STW@eHB]^]\T]PTSPWSUSRSoF]ZH]goW	
QST	ZPTTPSPW	S]
SPW	S	U	 WTSQQZFEAAQ W ^F_WT[\XG_P_@QUXF;DTWCAVS
 TV  WZ	 ZWrTDRY@[Z[\AX\_STW^Q@HAFQ]^\^_WAUQGCXFAD^AEKHWFQAZ]STW@eHB]^]\T]PTSPWSUSRSoAW^D^goW	
QST	ZP]

S	 W
PUSZWP WWP[	STPT
QSWQ  ]
WVPRYZDFBBYTWF_U WR\PG]S\CXUPF	8EC]RS^
WPT\RRVPU V^TPW	PVTpTGRZJQXY\BX_UUQWPWPZUPWSQQmAT^GTmmT	 SST
PPW^RQP]SW
PSUPW	WWP[	SZEEBKSW
TD_T ^Q^ZG\P\J[WZF8N^UAAWSWS
	T ]P
S  TrIXPM\USU\QCHBL[_\_^\]CWQDC[LKF^BFABUFRAPWQVWCeKHW\]_TWPWPZUPWSQQmAT^GTmmT	 SST
PPW^RQP]SW
PSUPW	WWP[	SZEEBKSW
TD_T ^Q^ZG\P\J[WZF82