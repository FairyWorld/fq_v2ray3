D]WABWG]UxqqT{]tYkqy{ZwJq|I[K|dQ[}s_T{ssUx_vChs{xXi{YEyxqqT{sx]S~{Z][UzzVwZ_UeHFhh|H}_bkFYS\}FPx\x[Gx{ssUxqzChs{xXT^tk~va~gt^kf}G|tw|[Z|tg}fq thX yDJ{HhKy@qYsUxqqZP]dxX_ZV[}s_T{ssUx\r[VwU[~[yEQ|^S\aE{YEyxqqT{sxESz{Z][vaI{YEyxqqT{sxERKy{[bcweTdwJxvyDZ{F|fyGtU|fuJw[}s_T{ssUx\b@QI{x\b@QI{Ar[qT{ss[Uz\Dhc{x_EP]g[}s_T{ssUx\iZ}Y{KxU@
8F_WBA
UE]V{srUy_tZhszyXkI~ZzK~KYJ~XQX~q\UyqsV{]uBjq{{Zjy[Ez{srUyqx^P}yX]Xk]eGjjhGPweGi gDhwaGSKDhhb[|s]V{srUy_^Z{Z\[~ cH|w~E~vYEk]v~[kgi_|ewK|tXF~vk k~ iHp]w}_y[Ez{srUyqxDhhb[[xQIzAs[sV{sr[SutSszy[ZhgZR_cG{YDyyqsV{syERx{Z\[~vcK{YDyyqsV{syESK{{[bbwgVd~Eyv{FZzF}f{Et~U}fwJv[|s]V{srUy\`BQIzy\`BQIzAs[sV{sr[Tz^Fhczy_GP]f[|s]V{srUy\kX}YzKyUB8F^WCAUD]W{qpUy^t[hqxyYkH~XxK~J|KJ`{Cq[pUypsYke]YyY]Y|X`[|r]W{qpUy^ZFQ`[ZxEhjcYid
EhzgXQ`EQKDS^QY~s^UypsW{_]YyY]Ykf]_}Y`X|X|F}dt[ka~c~fZ}gwDkfRH}w`Yhvti^xY{[FyypsW{q{GjkcY}[{SJ{Cq[pUypsYQuwQp{{[jdwF{[FyypsW{q{ER x {X^[~wcJ{[FyypsW{q{ESJ{{YbbvgWftyw{GXxF}g{Dv|U}gwHt[|r]W{qpUy]`CQKxy]`CQKxAsZsW{qp[T{^Ghaxy^FP_d[|r]W{qpUy]kY}[xKyTB	8D\WC@WF]WzqqU{\t[iqy{[kHXyK|HXyK|r{Cp[qU{rsYje\Y{[]Y}Xa[~p]WzqqU{\ZFPa[}XxiezYkf
EizfXS`EPKDQ\QYs_U{rsWz_\Y{[]Y~ a}uVX~uuFk\{i[ hf{GeuH|kD~_iHk[cjfS[|Xz[Gy{rsWzqzGhicY|[zQH{Cp[qU{rsYPuvSr{z[	kf^CQyD{XE{zqqU{rxGQz{[]Y}vaH{XE{zqqU{rxGPKy{Z`aweUewJzvyE[{D~fyFuW~fuKwYs_U{rsWz\bAQH{z\bAQH{Cp[qU{rsYWz\Ehb{z_DP\gYs_U{rsWz\i[}X{IzU@8G^U@A
QVV
WS

TPQ QT QVrH[PD\TC
U]QBKBE[_]^]\TCVQE@[EKG^CFHBUFSBYWQWWBfKAW]]^WWPVPSUQ VPQQlU
PQTWR
W	QRWqnV

SQWPR
UTSQ
SWPWRQTR W	
UURQSXGF@AST TE]VTQ_ZE^S^@[VZD
:D^TAC	PWTPU
	
WPS Q  RpPZY\SYG]R\B_]W\R@ICFY]\\_]WAWRGBZFIF]AGK@WEQ@ZUSVT@dJBU\^\UUSTQPWS	WRP	SmWSU	QPQlU
	RSW
PP	WWRP	ST
PW
QSU
Q V
WVPR	RZDFBBRTTD_U WQ^[G]S\C[W[F	8E@_YS^VT QPWVP WVSV
pU_TU]V]^USTQPWS	WRP	SmWSU	QPQlU
	RSW
PP	WWRP	ST
PW
QSU
Q V
WVPR	RZDFBBRTTD_U WQ^[G]S\C[W[F	8G^U@A
PRV	
	UTP
Q  SWr][^ZU_T]US U\QCK@G[_\_]^VCWQD@YGKF^BDJBUFRB[WQVWCfICW\]_WWPWRQUP 
WPSQmT
SWSSRoW
QRU
SQWTPSQW	RTSSW	S U
VTPQQ[FDBAQ V WF^W TR\XF_Q\@XUXG	8D]WC@VQPW	

WSRU	 RTQsQX[\PZBQVV\S@KAFY\\\]_W@WSG@XFIF\AEK@VDQBZURVU@fHBU\_\WURTSPVS 	WPR	RmWSW	PQQ mV

SQWPR
UTSQQWPWRQTR W	
UURQSXGF@AST TE]VTQ_ZE^S^@[VZD
:D^TAC	SVSPP
TWP
 V  PSpT_UU_TDXW^P@IBFX]^\_\WAUPGB[FHD_AFKAWGQ@ZTSTV@dKBT^\\UTQTPPWSURQSoWQUQRQmT
SSWPPUURQSVPW
PQUP 
W
WWRP	SZEF@@STTD_TUQ^ZG\S^A[WZF:E^UAA 
UP	Q 

VP
W 
P	rU]WVV_UWQV	T\SAK@F[^\]]^WBWSF@YFKF\@DKBTDPBZWPVUAfIBW\_]WWRURPTR WPSPmVPRWU
UTQoW	QST
QPWVPSPU	SV
SSW	S	U	
WTPSQZFEBCQ WUF_W VP\XG_P\BZUXF8F_WCAUW  S
 UQU 	QrU\WW^WUC U\QCK@G[_\_]^VCWQD@YGKF^BDJBUFRB[WQVWCfICW\]_WWPWRQUP 
WPSQmTQPWT
U	TSodjW
T WQPRWT
QSVWP	Pm  WTTTQQSWPUSPVS W	
 	 UTSQ
SXFFAA S T VG]WTS]ZE_S_@YTZD;D]VACWGyyqsXVYzyq{H{YD|s[sV{^qHyX]V{EVEeX_U`
]^A\]^]jZzAG[Gcw\\~j\[AkB_BzAUjcDFxB^VxaESH]G~bGRegGk]TeYP^yBj Z}dX[|sz{sr[ie`Z{Z\Uy_VEhgWFja_kczAtc]V{syERx{Z\UyXcIzAtc]V{syBjq{{szJ~Xp[hdyX}q}gbK|fwIhgzFied\I~XsFt~}XdXkgj[|sz{sr[ie^Z{Z\UyXwH{YD|s[sV{^}XUa{{syZTj`G{YD|s[sV{]^Tq{{sySK{Bva\UyqxWhq^yX]V{]DR_gX~qyyqsXSw
HTq{{sy\Red_PgfGj wX~qyyqsXQwuQq{{szDU\ViQxaeUuUG{YD|s[sV{^aASK{{syRzX~qyyqsXQByX]V{Yz|s\8F^WCAUD{{qp[TZ{{qxKyZE~q[pUy]pJ{X^UyFWGf[]Va_^B^\\_h[xCGXE`sWb\C\Sz`judHSQ{` Qz||J ~_ ^||ESzgFidISeU]TwY{[F|sZsW{_wYjp{{q{[QdVJVjxGikY~syypsYQuKTp{{qx~wY~syypsYSe`[ZsY|fcY~wZY dFw^]|aJ}ddY~et~cD|fhE}wsJ|vx i^`Z{[F|sZsW{_wBjp{{qxJ}Z{Cvc^UypxJkZ[ZsYkjgRJ{Cvc^UypxEhj`[ZsYV|[|r{{qp[T{^GhaxypxEP ^yZE~q[pUy^ZFQ`[ZsYk_]\S dI~__yZE~q[pUy]pXVuV[ZsY~Uai|gcX|J{Cvc^Uypx Pz|[ZsYVuIHyZE~q[pUy]|ESaxyp{YvcA:G@_XS_	Q
UPTQP 
SWV QqFB\FB]\^
TQTPPWSURQSoW	WQ
UPQVmT
SSWPPVPW
PQUP 
W
WWRP	STTQQSYFDCAS V VF\WTS\ZD_Q]@YUZE	9D\WABSQPT

WRW	VqTEPYH[S^TU]Z_\UUQ	T\SAK@F[^\]]^WBWSF@YFKF\@DKBTDPBZWPVUAfIBW\_]WWRURPTR WPSPmD\YI]m mV

SQWPR
UTSQ
SWPWRQTR W	
UURQSXGF@AST TE]VTQ_ZE^S^@[VZD
:D^TAC	TQ  
VTWP  PTpUGSYJXXY]BY\UQV	T\SAK@F[^\]]^WBWSF@YFKF\@DKBTDPBZWPVUAfIBW\_]WWRURPTR WPSPmCV]E^mmV

SQWPR
W	R T PWRPU	SVTPQQWRU	SRWSW	TTQQSYFDCAS V VF\WTS\ZD_Q]@YUZE	9FB]XP\

VSTVQSVSWVTVRV
QVWrVFQ[J[[[^C[^UVS
TQTPPWSURQSo@W_G^n oW
QRU
SQWTPSQW	RTSSW	S U
VTPQQ[FDBAQ V WF^W TR\XF_Q\@XUXG	8D]WC@URTS	VWSP   VsJYPG_WRW^P@IBFX]^\_\WAUPGB[FHD_AFKAWGQ@ZTSTV@dKBT^\\UTQTPPWSURQSo@W_G^noW
QRU
SQWTPSQW	RTSSW	S U
VTPQQ[FDBAQ V WF^W TR\XF_Q\@XUXG	88