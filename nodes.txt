D]W@CWG]Tyqp_{]tXjqx{ZwK~q|I}[AtQZ|s^_{ssTy_wHhs{yXh{YExyqp_{sx\R{Z]ZTz{	VwZ^TeIMhh|I|_c	kFXR\|MPx]y[Fs{ssTyq{Hhs{yXx|JQ~_d~dhX}f|L|tc~a Qhgd[|fh	}wI}HgS|tsKi[xKqYsTyqpQP]dyX^QVZ|s^_{ssTy\sPVwUZ[xNkJETuYT~I{@s[p_{ssZSuAVs{yX`I{@s[p_{ssZSz|Q}Yx|dc~{twK}apAt{I|fpA~dwyvt}ZKy[Fs{ssTyq{PxZ[{PxZ|s^_{ssTy\cQwgZ[{MP_y[Fs{ssTyq{
{Z]Z}[xsTa:D\]ACWFWUyqrW{\~Yjqz{[aJ|XzI|HJaH}ui[|s\W{ryUy_u@hrqyXj {XOyyqrW{rr]R} {[W[i_eEhibDRueEkmGjuaEQHGjjbY~pWUyqrW{\TYyX\Ye_jfX|\aF~_~Hhbjea]~eS i_bD|K_H~fe\he\YjfjI{XOyyqrW{rrGjjbY}XrSKzCqXyUyqrYQv~Qqz{XFijyIWb [|s\W{ryUy\qFQ_i[[z |uu[|s\W{ryUy\qJ{[W[dY
u`byJ}HrW[yK}KGXJqrH|KWH}azCqXyUyqrYVv@HyX\YVv@Hy[D{{ryUyqy Wiz^yX\YP\GjazCqXyUyqrYVXqyXzYq_:D^UABWD_Ux{sW{^vYk{{{YiJ}R{I|JH|{H|Ya[}y]W{pqUxUt@hpyxRk {ZGyx{sW{pz]S| {Y_[SUd htvD}U`kDYSVEP z\xQE{{pqUx{x@hpyxUxZ|IuhRkH~g}|cD|wiHQhYy }ow|IWJhogJk^vZhQ{CqZqUx{sYP^fxR]YV }[}y]W{pqUxVpXVtW[~Q{Fk	ASd^h`[}y]W{pqUxVpFQ]a[~Q{ |w}[}y]W{pqUxVpJ{Y_[eSu``qJ|lgWYqK|AGZ J~{sH|I_H|k{CqZqUx{sYVtHHxR]YVtHHxQE{{pqUx{x Wkr^xR]YP^	Gkk{CqZqUx{sYVZyxR{Yq] ;N_UA@
]E_UzssVq_vYis{qXuJ}svK}sIvqyApYsVqqq[jg^ZqX_[}ZcXts_UzssVq_XDPcXw[zigxZaeGixd[Y bGPIG[_S[q]VqqqUz]^ZqX_[iggwfq}wgEvHS~saXygtYwu}F|wx\uHv^jJt[ue}EzYEzqqqUzsxDbja[|Yx[KyApYsVqqq[PwtYqyzY]ajzAVc
Xts_UzssVq\rDP^cXw[y}tXts_UzssVq\rHzZ]XlY	wacsIuf}U~ZsHuK E~YIwqqJ}J]KuayApYsVqqq[WwJKqX_[WwJKq[GyzssVqqzVhp]qX_[Q]DbayApYsVqqq[WY{qXy[p^2D\W@C STV TY
 	WRQSW 	SVpJXZG^TAW]S@HHFY]]\^VWAVSGCQFIG\ALK@WDQAZUSWU@eABU]_\TURTZPWS	VS[	SlW	SQVT	P]QPT{mV	QSU
ZP
WWPS
QT	R]
RSW	R	UWUPRQZGDBBQV^F_V W[\XG^Q\CQUXF
	8GTWCA	STVRW 
TZQQ  QrPX[_YZE_R^@U^
TVQBKCD[^V^]]UB]QE@ZDKL^CGIBTFSBXWP\WBfJ@WV]^WWPVQRTQ 	]PPPgU	YWRSSlW	
RQT RR]TPPPW
SUSYW
SV				UTZQRXFEHAR W VF]W
TS\[E_PV@YU[D2FB]YQ\T ^SPUTRWUY 
VrVUWW_V_]WPVQRTQ 	]PPPgU	YWRSSlW	
RQT RR]TPPPW
SUSYW
SV				UTZQRXFEHAR W VF]W
TS\[E_PV@YU[D2D\W@CS PV	U 	WR
S 
QWp_XTYW]T_VY W_[@IBGY]_\_\VAT[GB[GIETAFJ@WLQ@[USU]@dKCU_W\UUZTPQWS
	TRQ	SnW
PU	QYQmU
 SRW	PQ	T^RQ	S]PWQPUQ W

 VVS[	S[DFAKST
TD^U^Q^ZF]S_J[WZG	;N^UA@
	 TQR T


 ]PPU   QVSsSZXVSX@STV^QCABD[\^_W\U@UQDJ[DKD^BFIBVFRHXWRTWClK@W^]_]WPWPRVP
	UZQRoT	Q]PSR	oV	QSU
ZP
WWPSST	R]
RSW	R	UWUPRQZGDBBQV^F_V W[\XG^Q\CQUXF
	8GTWCA	P\	QPR VTZV   ZQrT]WVUWFX
U\PBKAL[_\^]_]CWPE@XLKF_CEABUGSBPWQVVBfHHW\\^WWQVSZUQ WPRQmUSWSRSnWPYU
RZWUPRQVRU SSWS
T	]TPPPPFDB@P VVFUW US\YM_Q\AYUYL	8E\WBK WS
S
	VR	]
RxV_UVT]V]ST	W^QAIBEQ]^]_\TAUQFB[EAD^@FHHWFP@Y]STWAdKA]^]]U]PUPSWRURQSoVS	PUV

WVQm]

SPWQSUTRQSWPV	YQUY W

T^RQ	SYLF@AS
T UD\]TP^ZDUS^@ZWZE:D_UABUUQ
WQ
V Q q__UU^UVI W_[@IBGY]_\_\VAT[GB[GIETAFJ@WLQ@[USU]@dKCU_W\UUZTPQWS
	TRQ	SnWQZU	V WWPmdhTV	]SPPTWQP\URZo 
TV WVQSYU	ZW
PSV	P
	U  WWPS
QZELBC Q^TG_T VQ]XG\Y\B[TXF8F_VCAUE{{ry[T[z{rqKy[D~qXyUy\qJ{[WUyGVGo[]W`_]B^]\_hZxCDQEaw^^}`_YCk@]ApBWhcFD{H]TzaGQKWD|bEPfmDi _Vf	ZR\y@hPfXY~pyyqrYkfjYyX\W{\\FjeWDhb\iazCv`WUyqyGPryX\W{[i}KzCv`WUyqy@hrqyqzH|[zXjfyZrebI~e}JjezDkfn_}K|[yE}v~ [n[iejY~pyyqrYkfTYyX\W{[}Ky[D~qXyUy\}ZWbqyqyXVijDy[D~qXyUy_\VrqyqyQHqAtc\W{rrUjq\{[WUy_FP\m[|s{{ry[Qu
JVrqyqy^Pfn\RefEh}[|s{{ry[Suu SrqyqzFW_\jSzagWv_Dy[D~qXyUy\aCQHqyqy Pyu[|s{{ry[S @{[WUy[z~q_:D^UABWD yx{sYVZyx{{I{ZG|rQsW{]rHxR]W{FUDeY_Vc
\T@\^^\jYz@M[ G`qUa\A^YybjwfKQS{bRp~J	}U\~~GPpdDkdKPoV_Vw[xQE~qZqUxUt[hpyx{xYSdTHU`{Eki[}y{{pq[RIVpyx{{ |w}[}y{{pq[PocY}Zq[l`[|wX[|
gD}w\_kHdf[}ow|aFlkGwqH|{k^bXxQE~qZqUxUt@hpyx{{HZyAui]W{pzHhYY}Zq[h`d PJyAui]W{pzGk`cY}Zq[UY~r yx{sYV{\Ekk{{pzGS
\{ZG|rQsW{^XDRcY}Zq[hU^^Q fK}U|]{ZG|rQsW{]rZUUY}Zq[}Vckm`Z~JyAui]W{pzSpY}Zq[UJJ{ZG|rQsW{]~GPk{{py[uiB	8GB][Y\
	S
 VZ VSR		PWT[rD@\D@^_\WQVSZUQ WPRQmUTS
WRQTnWPYU
RZVRU SSWS
T	]TPPPWVQSYZDFCCYTTE_UVQ_PG]S]B[VPF	9F^TKA
QSSV
	 UPU	UrVGP[JXY]VW]X]__WS	W^QAIBEQ]^]_\TAUQFB[EAD^@FHHWFP@Y]STWAdKA]^]]U]PUPSWRURQSoF\[K^goV	QSU
ZP
WWPS
QT	R]
RSW	R	UWUPRQZGDBBQV^F_V W[\XG^Q\CQUXF
	8GTWCA	VS TVTZ	   ZWrUEQZ@[Z[]@[__ST	W^QAIBEQ]^]_\TAUQFB[EAD^@FHHWFP@Y]STWAdKA]^]]U]PUPSWRURQSoAV_G]goV	QSU
ZP
]

R
WSU	PZWP VVS[	SUPW
QRTQ 	]
WVQSYZDFCCYTTE_UVQ_PG]S]B[VPF	9D@^RS^	VQW\SQUPU U^TPVSUTpTFSYIQXY\CY\VUQWQVSZUQ WPRQm@U]DTmmU
 SRW	PQ	T^RQ	S]PWQPUQ W

 VVS[	S[DFAKST
TD^U^Q^ZF]S_J[WZG	;N^UA@
WRVP
	T ]P
R TsH[SM\UR
U\PBKAL[_\^]_]CWPE@XLKF_CEABUGSBPWQVVBfHHW\\^WWQVSZUQ WPRQm@U]DTmmU
 SRW	PQ	T^RQ	S]PWQPUQ W

 VVS[	S[DFAKST
TD^U^Q^ZF]S_J[WZG	;2