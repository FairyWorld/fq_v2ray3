D]WACWG]UyzpW{]tYjzx{ZkJ|SxI|Ij{YEyyzpW{sxZQn`Y}Y{ ~zxCqYsUyzpYSwHTzx{^`KTac_h^dARTgJQIYTnBhwH|TIhI{AsPpW{ss[Qn`Y}Y{HiSx|gdXzkJc |m`tkFiSZH|YE~CxkdZY}mVk]g[|x^W{ssUyT\Vs{yWUJ{YEyyzpW{sxEiac_{Z][|FVwZBRTRF{YEyyzpW{sxER
{ {Z][~}`J{YEyyzpW{sxES@x{[bb|dWdwJy}xGZ{F}}ZDdsU}}dtw[|x^W{ssUyWcCQI{yWcCQI{AsPpW{ss[Tq]Ghc{yTFP]g[|x^W{ssUyWhY}Y{Ky^A	8F_WCJUE]WprqUy_t[cryyXkHu[yK~KtrJ}XwYup_UyqsWp\vBjq{p[iy[E{prqUyqx_[~yX]Y[\fjutFu\bi F[[_}GRx^pXGyyqsWprzBjq{p[rY}u`K\[|fYweWF~u`\wX[~uguev[}uctuaHi_wGwXyAs[sWprq[R_d p[_[TYup_UyqsWp_rZTuUYvXyDTx@ZaDy[E{prqUyqxG[zyX]YwuaHy[E{prqUyqxGZHyyY`kteU}fwpuyE}X{Dtu[F}fsWtue}vwYup_UyqsWp_bASK{p_bASK{CzXqUyqsY]y\Eja{p\DR_gYup_UyqsWp_i[[{IpV@:D_UJB
WE_^xssW{_vRks{{XuAs |KsIayJrYsW{qqPhg^[{X_PZcY~s_^xssW{_XORcY}[zPkg\V_	JkgZhaRkwJ~_UUs{Cq[q^xssYSeaP~YxZkey
kZk}q |dsJ~fa@kZcD}vakYYXiCdZX}fWNdsY~s_^xssW{_UUs{{\TCxYE{{qq^xsxGkjbVxZ]Y~TU}I{Cq[q^xssYQu	@Us{{Xa	|I{Cq[q^xssYQz}P~YxfbxtwJqq@|t{I~fq}dwG{vq~ZsH{[GrxssW{qz	SxY}[z	SxY~s_^xssW{\bRwgY}[zLS\{[GrxssW{qzxZ]Y[yrWa8D]\BCWGVVyqqU{]Zjqy{Z|I~q|I}qKdlX|s_U{sxVy_vBhspyXi{YNzyqqU{ss^R~{ZVXT f[hwG|_bkMZR\}GPs_y[Gy{sxVyqzBhspy_} |tZKjfjY~gl~v}F|w[j[[hgc]|eyJtZifeJ|JZ ~ayAqYxVyqq[P]oyX_[VtX|s_U{sxVy\rZVw^X[yDVsYSq[~qVVyqqU{^{GS\a[}Yp~v}[~qVVyqqU{^{KyX_[f[ tbaqJdtV}XqKY	Fa JsxF~f_EcpBs[qU{sxXTuHH{ZVXTuHH{YNzyqqU{ssUjr^{ZVXR_	GhcpBs[qU{sxXT[y{ZpXs\ 8FUTCA
ZWU
WS	
U[R QT 	ZUrH[PEWWC
T^QBKBDP^^^]\UBUQE@[D@D^CFIITFSBX\PTWBfK@\^]^W\PVPRTQ 	 UPQ PoU
QRTW S
WRRWqoU

XPWPS	UTRZ	SW PW	QQU Q \
TVRQ	XYDF@AXT TD\UTQ^QD]S^@[WQE	:D^UJB
PV_PU
 WPXR 	SqSZY\SXL\Q\B_\W\SKH@FY]\W^^WAWSLCYFIF\JDK@WDZAZUSVUKeIBU\_WTUR_RPWX	WSS	Sm\ST	QQZoU
QSW
[P	WVSS	SU	P\
QST	Q 	U
 WVPSQZDFBCQT_E_U VZ_XG]S\BPVXF	8DK^ZS^]TPS\WP 
TVS	U
pU_U^\U]^UR_RPWX	WSS	Sm\ST	QQZoU
QSW
[P	WVSS	SU	P\
QST	Q 	U
 WVPSQZDFBCQT_E_U VZ_XG]S\BPVXF	8FUTCA
Q	SU	VU[	Q  X Tr][^[^^W]US
U\QB@AD[_\^V_UCWQEKXDKF^CEIBUFSIXWQVWBmH@W\]^\WPVSRUQ	W[RQmU	S\SSS
nW
PQU
RRWT[RQWRUSS\ST		
UTPQ PXFDBA
P V VM]W TSWYE_Q\@Y^YD	8D\\BCWRPW		WRSV		 S_PpQX[\QQCQV
U\S@K@MX_\\]^\CWSG@YMHF\AD@AUDQBQTQVU@fIIT\_\WTRTR[US  WPSQmW SWSQQfU

XPWPS	UTRZQW PW	QQU Q \
TVRQ	XYDF@AXT TD\UTQ^QD]S^@[WQE	:D^UJB
SV RSP
	_WPU 	P	XqW_UU_UE[\_S@IBFYV_\_\WJTSGB[FIE\AFK@\DQ@ZUXUU@dKBU__\UURTPP\S	TRQ	XnWPU	ZQQmUSS\	PP	TVRQ	XU[W
QPUQ	W WVSS	SZDMACS_TD_UVQ^ZG]X_B[WZF	 ;F^UAA

UPZ

 UP
W
  	P	rTVVUV_UWZW
UWRBK@F[_W^]^WC\RE@YFKM]CDKBUESBZWQ]TBfIBWW^^WWSVRPUQ \PSQfUP SWT		U	_RoW	QSURP\WPSQT	RU
SXW	SU	WT[RQZFDIBQ VVF_WWS\XG_QWCYUXF	3G\WCA VW X
TRT RrU]\V]WUC
U\QB@AD[_\^V_UCWQEKXDKF^CEIBUFSIXWQVWBmH@W\]^\WPVSRUQ	W[RQmURP\T
	T	TRngjWU WPSRWURSV\P	P f   VTU_RQS\PTSQUS   W	
UTRZ	SXFF@JS TWD]W_R^ZE_S^KXWZD:O\UAC\F yyqsY]Xyyq{IpXG|s[sWp_rHyX]WpDUEeYTTc
]^@W^^]aYzAG[ Lbt\\~j]P@hB_Bz@^k`DFxB_]ybESH]FuaGRegF`]TeX[_zBj Z ve[[|s{prq[ie`[p[_Uy_VDcfTFja^`byAtc]WprzERx p[_UyXc tHyAtc]WprzBjq{pryJ~XpZcezX}qvfaK|fwHcfyFied]tH ~XsGtu}}XdY`fi[|s{prq[ie^[p[_UyXwIpXG|s[sWp_~XUa{przZTj`FpXG|s[sWp\^Tq{przSK{C}`_Uyqx \ir^yX]Wp\DR_gYup yyqsYXv	HTq{prz\Red^[feGj wYup yyqsYZvvQq{pryDU\VhZybeUuUFpXG|s[sWp_bASK{przRzYup yyqsYZByX]WpXy|s\3G]WCATG{{qqPUY{{qy@xYE~q[q^x^pJ{X_^xEWGgP\Ua_^I_\\_ 
i[xCGY	DcsWc_C\S{kiudIXPx` Qz}}I ~_U}|ESzfMhgISeTVUtY{[GwrYsW{_vRks{{qzPPgVJVjyLhkY~s rxssYQu	@Us{{qy	tY~s rxssYSeaP~YsY|fbRtZY eM~t^]|a A|gdY~eucD|fiN|tsJ|vyh]`Z{[GwrYsW{_vIks{{qyA|Y{Cvc_^xsxJk[P~YsYkjf	SI{Cvc_^xsxEhjaP~YsYV}P}q{{qqPUx^GhayxsxEP UxYE~q[q^x]ZFQaP~YsYk_\WRdI~_~TxYE~q[q^x^pXVuWP~YsY~T`i|gbS}I{Cvc_^xsx Pz}P~YsYVuHCxYE~q[q^x^|ESayxs{Yvc@ ;D@_XS^	Z	T P_PP 
R
TV QpMC_FB]]UURTPP\S	TRQ	XnW	VP	U	[RVmUSS\	PP	U[W
QPUQ	W WVSS	SU_RQSXME@ASW VF]\TS\ZETP^@YUZD :D\WACSQPU 

 WR\ 
	Vp_DSYH[S__T^Z_\U^P
UWRBK@F[_W^]^WC\RE@YFKM]CDKBUESBZWQ]TBfIBWW^^WWSVRPUQ \PSQfE_YI]mfU

XPWPS	UTRZ	SW PW	QQU Q \
TVRQ	XYDF@AXT TD\UTQ^QD]S^@[WQE	:D^UJB
	_P  
	]UWP    	PUqVGSYJYSX^BY\UZW
UWRBK@F[_W^]^WC\RE@YFKM]CDKBUESBZWQ]TBfIBWW^^WWSVRPUQ \PSQfBU]E^mfU

XPWPS	W	Q U P\RPT	R	UTPQ PWSUXQWXW			U_RQSXME@ASW VF]\TS\ZETP^@YUZD :FB]XQW
USTVQSVR\VT]SU
QVVyWEQ[J[ZP_@[^UWXURTPP\S	TRQ	XnCW_G^onW
PQU
RRWT[RQWRUSS\ST		
UTPQ PXFDBA
P V VM]W TSWYE_Q\@Y^YD	8D\\BC
TQTS W WR	P 	  	]pJYPG^VQ\_S@IBFYV_\_\WJTSGB[FIE\AFK@\DQ@ZUXUU@dKBU__\UURTPP\S	TRQ	XnCW_G^onW
PQU
RRWT[RQWRUSS\ST		
UTPQ PXFDBA
P V VM]W TSWYE_Q\@Y^YD	88