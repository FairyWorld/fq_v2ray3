D]WACWG]Uy{qS{]tYj{y{ZkJ|RyM|IJ{L|JU[|y_S{ssUyUvDhs{yRi{YEyy{qS{sx]R~{Z][iUfAhhhDRfAkgGjbAQIGj`a]~q]Uy{qS{]^YyR_]|t{~R~_|tsF~BiL|I}BiL~g{|S@Zd[}|yNZoeN{YEyy{qS{sxGj`a]}YxSAyGqYsUy{q]QwtQ{y{YZR`fNhc
[|y_S{ssUyVrBQ^c[Qy|t[|y_S{ssUyVrN{Z][dS	q`csJ}BqSZsK}Q C}sE~{qC|J]E}kyGqYsUy{q]VwJHyR_]VwJHyQG{ssUy{zWhp^yR_]P]GjkyGqYsUy{q]VY{yRy]q^:N]QAC]G[UyqsWq]rYjq{qZmJ|X{IvI HaHvs}As[sWqsu[ie^[qZ[[~XcYtq[UyqsWq]\DScYwY~jex[agGjzdZYfGSKF[]W[|s]WqsuUy_^[qZ[[vt]btq}XkDbZuja btmK|f^XbwyF~Hcwtr_~_x[agay[E{qsuUyqxEbhe[[x[I}As[sWqsu[Sut Ys}y[]YheDy[E{qsuUyqxGZ~yX]YvteHy[E{qsuUyqxG[I}yY`juaU}fwJqt}E}X{DutSF}vcWutW}vwYtq[UyqsWq^fASK{q^fASK{C{YuUyqsY\xXEja{q]DR_gYtq[UyqsWq^m[[{IqWD:D_UKCWE__ywsW{_vSjw{{Xi@|^{I|KAgH}feQ|u]W{qq_yYt@hqyy^k {[GsywsW{qzWR| {X_QTdYhuvN|Y`[P\}MRYd {[GsywsW{qzHjw{{_aiNxXk y	|`x[vqL~pd\|KP~^UJ~ee~`pYve
~^ck[yKs]sW{qqQRYd {X_QTY~s__ywsW{\rPTsUY}[yNRctk_eNy]E{{qq_ywxGPzy^]Y|vaBy]E{{qq_ywxGQKyy_``we_}`w{vyO}^{DvWL}pcWvS}pwY~s__ywsW{\bKSM{{\bKSM{Cq[q_ywsYVz\Ojg{{_NRYgY~s__ywsW{\iQ]{I{U@:B_UAA
QE_U{syW}_vYhsq}XiJ~ZqIzK |c{qyAqYyW}qq[kgT[}X_[|ZiYxs_U{syW}_XDQiY{[zGhhj[meGhxnZU bGQIFW_S[~qWW}qqU{]T[}X_[}tb]mX~Yh]}DyvzYkY zHa ~grXyuiFtnYmXaJ|gunvqH{YO{}qqU{srEnja[}YrWKyAqYyW}qq[Qw~ Uqy{YXV\\SwTEnK[~qWW}qqU{^zFW\a[}Yq zv}[~qWW}qqU{^zJ}X_[f[ufaqJdmWyXqKYG{q E|syGzH_EcqCw[qU{syYPuHH{ZWYPuHH{YO{}qqU{sr Qjr^{ZWYV_	GhcqCw[qU{syYP[y{ZqYw\ 8FTUGA
[VQ
WS 
UZV QT 	[QrH[PEVSC
UZQBKBDQ_Z^]\UCQQE@[DA@^CFIHU	FSBX]QPWBfK@]Z]^W]PVPRUQ 	QPQQkU
QVTWR
W	VRWqoQ

YQWPRUTR[SWPWUQUU ]	
URRQ	YX@F@AYT TD]QTQ^PEYS^@[WPD:D^UKCPV^ PU
 WPY V  SpWZY\SXM]U\B_\ W\SJIDFY]\V_ZWAWSMB]FIF\K@K@WD[@ZUSVUJdMBU\_VUUR^VPWY	WRW	Sm]SU	QQ[kU
USW
ZP	WVRW	SUP]
QSUQ 		Q
WVPS	UZDFBCUT^D_U V[^\G]S\BQW\F	8DJ_^S^\TQW]VP PVSQ
pU_U_]Q]^UR^VPWY	WRW	Sm]SU	QQ[kU
USW
ZP	WVRW	SUP]
QSUQ 		Q
WVPS	UZDFBCUT^D_U V[^\G]S\BQW\F	8FTUGA
QRQ	 	RUZQ  YPr][^[__S]US
U\QBA@@[_\^W^QCWQEJY@KF^CDMBUFSH\WQVWBlIDW\]^]WPVRVUQ
WZSQmUS]SSSoW
QUU
RVWTZSQW	 RUSS]	SU	QTPQQ\FDBAQ V VLYW TSVXA_Q\@Y_X@	8D\]CGVVPW WRRR	 S^QtQX[\QPBQVQ\S@K@LY[\\]^]GWSG@YLI	F\ADA@QDQBPUUVU@fIHU	\_\WURTRZQS 	WPS	UmWSW	WQQgQ

YQWPRUTR[QWPWUQUU ]	
URRQ	YX@F@AYT TD]QTQ^PEYS^@[WPD:D^UKCSVSWP
	^WP  Q  P	YpS_UU_UD_]^W@IBFYW^	\_\WKUWGB[FIDXAFK@]@Q@ZUYTQ@dKBU^[\UUVTPP]S	U RQ	YoWQU	[UQmU SS]PP	URRQ	YQZW
QQUQ
W WVRW	SZDL@GS^TD_URQ^ZG]Y^F[WZF	:B^UAA

UP[ 

	QP
W P	rTWWQV_UW[VUVSFK@F[_VZ]^WC]SA@YFKL\GDKBUDWBZWQ\UFfIBWV_ZWWRRRPUU ]PSQgQPRWTU	^VoWQSU VP]VPSQU	RQ
SYW	S	U	WTZSQZFDHCQ VRF_W
VW\XG_QVB]UXF	2FXWCARW Y
	UVT 		VrU]]WYWUC
U\QBA@@[_\^W^QCWQEJY@KF^CDMBUFSH\WQVWBlIDW\]^]WPVRVUQ
WZSQmUVP]T
	U	TRocjW T WQWRWU VSV]P	P g  VTU^VQS]PUSQQS W	
	UTR[SXFF@KS T
V@]W^SZZE_S^JYSZD:N]QAC]GyyqsY\Y}yq{IqYC|s[sWq^vHyX]WqEQEeYUUg
]^@VZ^]`]zAG[ Mcp\\~j]QAlB_Bz@_jdDFxB_\xfESH]FteGRegFa]TeXZ^~Bj Z wd_[|s{qsu[ie`[qZ[Uy_VDbgPFja^ac}Atc]Wqs~ERx qZ[UyXc uI}Atc]Wqs~Bjq{qs}J~XpZbd~X}qwgeK|fwHbg}Fied]uI~XsGuty}XdYagm[|s{qsu[ie^[qZ[UyXwIqYC|s[sWq^zXUa{qs~ZTj`FqYC|s[sWq]^Tq{qs~SK{C|a[Uyqx ]hv^yX]Wq]DR_gYtqyyqsYYwHTq{qs~\Red^ZgaGj wYtqyyqsY[wrQq{qs}DU\Vh[xfeUuUFqYC|s[sWq^fASK{qs~RzYtqyyqsY[ByX]WqY}|s\2FYWCAUC{{qqQT]{{qyAy]E~q[q_yZpJ{X__yAWGgQ]Qa_^H^\\_ h[xCGYEgsWc	[C\S{jmudIYQ|` Qz}|M ~_T||ESzfLicISeTWTpY{[Gvs]sW{_vSjw{{qzQQcVJVjyMikY~s sywsYQu	ATw{{qy~pY~s sywsYSeaQ]sY|fbS~pZY eLp^]|a @}cdY~eu	~cD|fiO}psJ|vy
iY`Z{[Gvs]sW{_vHjw{{qy@}]{Cvc__ywxJk[Q]sYkjfRM{Cvc__ywxEhjaQ]sYV}Q|u{{qqQT|^GhayywxEP Ty]E~q[q_yYZFQaQ]sYk_\VSdI~_~Uy]E~q[q_yZpXVuWQ]sY~Tai|gbR|M{Cvc__ywx Pz}Q]sYVuHBy]E~q[q_yZ|ESayyw{Yvc@:@@_XS^	[TP^QP 
RPV QpLB[FB]]T
 UVTPP]S	U RQ	YoW	VQU	ZVVmU SS]PP	QZW
QQUQ
W WVRW	SU^VQSXLDDAS
V VF]]TS\ZEUQZ@YUZD	>D\WACSQPT

WR] 	Vp^EWYH[S_^UZZ_\U_QUVSFK@F[_VZ]^WC]SA@YFKL\GDKBUDWBZWQ\UFfIBWV_ZWWRRRPUU ]PSQgD[YI]mgQ

YQWPRUTR[SWPWUQUU ]	
URRQ	YX@F@AYT TD]QTQ^PEYS^@[WPD:D^UKC	^Q  
	\TWP  PUpRGSYJYRYZBY\U[VUVSFK@F[_VZ]^WC]SA@YFKL\GDKBUDWBZWQ\UFfIBWV_ZWWRRRPUU ]PSQgCQ]E^mgQ

YQWPRWU U P]RPU	RQTPQQWRUYUWYW		U^VQSXLDDAS
V VF]]TS\ZEUQZ@YUZD	>FB]XQV

QSTV QSVR]VT\RQ
QVVxVAQ[J[ZQ^D[^UWY
 UVTPP]S	U RQ	YoGW_G^o
oW
QUU
RVWTZSQW	 RUSS]	SU	QTPQQ\FDBAQ V VLYW TSVXA_Q\@Y_X@	8D\]CGUUTSVWRP   	\tJYPG^WU]^W@IBFYW^	\_\WKUWGB[FIDXAFK@]@Q@ZUYTQ@dKBU^[\UUVTPP]S	U RQ	YoGW_G^o	oW
QUU
RVWTZSQW	 RUSS]	SU	QTPQQ\FDBAQ V VLYW TSVXA_Q\@Y_X@	88