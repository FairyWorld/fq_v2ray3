D]W@CWG]TyqsT{]tXjq{{ZkK|X{J|I~[|Y{@s[sT{ssZie^X{Z]Z~XcZ~q]TyqsT{]ZEScZ}YxS\dSwhRu_QFjzdYS`FSKEQ]QZ|s]T{ssTy_^X{Z]Z}fkhZh^}egGkdcKjqJx^|f^YhgwGi_kDhZ^^} g|wkKy[Ex{ssTyqxFhhcZ[x QI{@s[sT{ssZSutSs{y[Eh]kEy[Ex{ssTyqxDPxyX]Z|tcIy[Ex{ssTyqxDQI{yYc`ugT}fwK{t{D}XGt{G}XTdk}vwZ~q]TyqsT{^`@SK{{^`@SK{@qYsTyqsZVx^Dja{{]ER_gZ~q]TyqsT{^kZ[{J{WB
:D_VACWE\UyqrW{_uYjqz{XjJ|XzI|K}q}qzAs[rW{qr[ie_[{X\[~XbY~s\UyqrW{_[DSbY}[y[je\V_
AjeZhaYjuJ~_^TqzCq[rUyqrYSeb[[z}vX}ub|K^jX[[~fbiezDke}_}KHhua_}u}]XeY~e~Y~s\UyqrW{_^Tqz{\WHy[D{{qrUyqyGkja]yX\Y~ WKRPF{[DyyqrW{qyERy {X\[~vbJ{[DyyqrW{qyESKz{YbbwfWf~EyvzGX~F}vzDX~U}fjvv[|s\W{qrUy\aCQKzy\aCQKzAs[rW{qr[Tz_Ghazy_FP_f[|s\W{qrUy\jY}[zKyUC	8D^WCA	WD]W{pqU{^t[hpy{YwH|p|JpJ`{CqZqU{psYkd\Y{Y]Y|Ya[~r]W{pqU{^ZFQ a[}ZxhdzYkd
Eh{fXS`EQJDQ^QY~r_U{psW{^\Y{Y]Y}daKhdY}FhYg|` g`[~duYgD^b_}w`ZwiHkgwH{ZGy{psW{pzGhkcY}ZzQJ{CqZqU{psYQtvSp{{Z	KhkpCkd~^~J{CqZqU{psYQt	KVp{{YaJ{CqZqU{psYQ{}[}Zxfbt{wwHJqKw{J~gqK~g{J{wu }YsH{ZGy{psW{pzP{Y}ZzP{Y~r_U{psW{]bQtgY}ZzGP\{ZGy{psW{pz {Y]YZyyTb8E]WA@VG]UzqqUz]tYiqyzZwJ}q}I|a~s{Ap[qUzss[je\YzZ][}Xa[q]UzqqUz]ZDPa[|YxGijbYjg
GizfXR`GPKDP]Q[s_UzssUz_\YzZ][}HT^itVXif}Fidp^|a iZfW ~wwF}HiithZievY}gkz[GyzssUzqzGihc[|[zPI{Ap[qUzss[PuvRs{z[	\Wg^AWq[q]UzqqUz^pDP\a[|Y{}v}[q]UzqqUz^pHzX_[g[waaqJ~dgU~XqK~IE~[ K~IsJ}X_E~c{Ap[qUzss[WuHHzZ][WuHHzYEyzqqUzsxVjr^zZ][Q_	Gic{Ap[qUzss[W[yzZ{[p\ 9F^W@A
QTV
WR


UPQ QT	QVrH[QE\TC
W]QBKCD[]]^]]UAVQE@ZDKG^CGIBWFSBXWSWWBfJ@W]]^WWPVQRWQ 	VPPSlU
QQTW
P
VQRWpoV

SSWQP
UTRQ
SWPV
RQUR W

WURQ	SZGF@AST UD_VTP^ZG^S^@ZWZF
:D_UAA	P
VTPU
WQSQ  SrPZY\RXG_R\B^\W]S@KCFY]]\]]WAVSG@ZFIG\AGK@WDQBZUSWU@fJBU]_\WURTQPWS 	VPP	SlWRW	QQQlU
RSWPP	VVPP	SU
PW
QRW
Q 	V
WVQSRZDFCCRTTF_UVQ\[G]S]B[U[F	9D@]YS^VUSPWTP WVR
V
pU^UU_V]^	URTQPWS 	VPP	SlWRW	QQQlU
RSWPP	VVPP	SU
PW
QRW
Q 	V
WVQSRZDFCCRTTF_UVQ\[G]S]B[U[F	9F^W@A
QPV	
UUP
QSWr][_[U]T]UR
 U\PBKBG[_\^]\VCWPE@[GKF_CFJBUGSB[WQVVBfKCW\\^WWQVPQUQ 
WPQQmU
SWSRSmWSRU
RQWUPQQVRUSSWS
W
	VTPPS[FDB@S VVF^W US\ZF_Q\AYUZG	8E\WA@TQPW


VRPU	
STSsQX[]QZ@QVV\S@J@F[\\\\^W@WSGAYFKF\ADKBVDQCZWRVU@gIBW\_\VWRTRPVSWQSRmWSVPQQmV

SSWQP
UTRQQWPV
RQUR W

WURQ	SZGF@AST UD_VTP^ZG^S^@ZWZF
:D_UAA	SWQPP	TWQ
V  Q	SrT_UU^UFX W\P@IBGY]\\_\VAWPGB[GIF_AFJ@WGQ@[USVV@dKCU\\\UUQTPQWS
	WRQ	SmW
SU	QRQmU
SRW
PQ	WURQ	SVPWQSUQ 
W

VVPP	S[DFB@STTD^U UQ^ZF]S\A[WZG	8E^UA@
 
UPQ

VP
V 
P	sT]UVV_UVQT	U\QAK@FZ_\]]^WCWQF@YFJF^@DKCUFPBZVQVWAfIBV\]]WVPURPUR 
WPS
QmVPPW
T

U	TQoV
QSU
QP
WTPS
QW	RV
RSW	RU
WUPQQZGDBAQV UF_V TP\XG^Q\@ZUXF
	8D_WCA	UW S
WQT  QrT]WU^WUB
 U\PBKBG[_\^]\VCWPE@[GKF_CFJBUGSB[WQVVBfKCW\\^WWQVPQUQ 
WPQQmUQQWT	W	TRmdjW
V VSPRWU
QSWWP	Q m  VTUTQQRWQWSQVSW	 UTRQ
SXFG@A S U TG]WTQ]ZE_R^@[TZD
:D_VACWEyyqrYV[zyqzI{[D|s[rW{\qHyX\W{GVEdY_W`
]^@\]^]jZzAGZ Gaw\\~k][CkB_B{@UhcDFxC_VzaESH\F~bGRefFk ]TeXP\yBj [ }fX[|s{{qr[iea[{X\Uy_WDheWFja^kazAtc\W{qyERy {X\UyXb KzAtc\W{qyBjqz{qzJ~XqZhfyX}q}ebK|fvHhezFiee]K~XrGv~}XeYkej[|s{{qr[ie_[{X\UyXvI{[D|s[rW{\}XUaz{qyZTjaF{[D|s[rW{_^Tqz{qySKzCvc\Uyqy Wjq^yX\W{_DR_fY~syyqrYSu
HTqz{qy\Ree^PefGj vY~syyqrYQuuQqz{qzDU\WhQzaeUuTF{[D|s[rW{\aASKz{qyRz~Y~syyqrYQ ByX\W{[z|s\8D^WCA	WD{{pq[VZ{{pyK{ZE~qZqU{]pJ{Y_U{FWGg[_Va__B\\\_ j[xCFYG`sWc\C\R{`judISS{` Q{}~J ~^^~|ES{fFkdISdT]VwY{ZG|qZsW{^vYhp{{pz[SdVJVkyGkkY~r y{psYQt	KVp{{py|wY~r y{psYSda[}ZsY|gbY|wZYeF}w^]|` JddY~du|cD|giEwsJ|wy k^`Z{ZG|qZsW{^vBhp{{pyJZ{Cvb_U{pxJk [[}ZsYkkfPJ{Cvb_U{pxEhka[}ZsYV }[~r{{pq[V{^Gh`y{pxEP^{ZE~qZqU{^ZFQ a[}ZsYk^\\Q dI~^~_{ZE~qZqU{]pXVtW[}ZsY~ Tci|fbX~J{Cvb_U{px P{}[}ZsYVtHH{ZE~qZqU{]|ES`y{p{Yvb@8G@_XR^	Q
TQTSP 
RWV PpF@\FB]]^UQTPQWS
	WRQ	SmW	
VS
U	PQVmU
SRW
PQ	VPWQSUQ 
W

VVPP	SUTQQRXFFCAR T VF]WTS\[E_S]@YU[D9D\W@CSQPV
WR
W 	VpTGPYH[R_TW]Z_\TUS	U\QAK@FZ_\]]^WCWQF@YFJF^@DKCUFPBZVQVWAfIBV\]]WVPURPUR 
WPS
QmF\YI]lmV

SSWQP
UTRQ
SWPV
RQUR W

WURQ	SZGF@AST UD_VTP^ZG^S^@ZWZF
:D_UAA		TS  	VVWQ  QUrUGSYKYX[]BY\TQT	U\QAK@FZ_\]]^WCWQF@YFJF^@DKCUFPBZVQVWAfIBV\]]WVPURPUR 
WPS
QmAV]E^lmV

SSWQP
V
R U P
WRQW	RVTPPSW
PUSRW
S V	
	UTQQRXFFCAR T VF]WTS\[E_S]@YU[D9FB]YQ\

VSTWQSVRW VUVPV
QVVrTFQ[JZZ[\C[^UWSUQTPQWS
	WRQ	Sm@W_G_o mWSRU
RQWUPQQVRUSSWS
W
	VTPPS[FDB@S VVF^W US\ZF_Q\AYUZG	8E\WA@WRTSTVR
P  	VsJYPF^UR W\P@IBGY]\\_\VAWPGB[GIF_AFJ@WGQ@[USVV@dKCU\\\UUQTPQWS
	WRQ	Sm@W_G_omWSRU
RQWUPQQVRUSSWS
W
	VTPPS[FDB@S VVF^W US\ZF_Q\AYUZG	89