D]WACWG]Uy{q_{]tYj{y{ZwJ~{|I~kAd{[|y__{ssUyUvHhs{yRi{YEyy{q_{sx]R~{Z][iUfMhhhDRfMkgGjbMQIGj`aQ~q]Uy{q_{]^YyR_Q|d{jo~R|JFiB~PYjUe@~gw }
}L|Z`[}ydZ_~
e	{YEyy{q_{sxGj`aQ}YxSAyKqYsUy{qQQwtQ{y{YjoOhh{DyQGs{ssUy{zOPxyR_Q|tcHyQGs{ssUy{zOQI{ySh`ugU}l}O{t{E}RyLtUF}|W_dY}BuQ~q]Uy{q_{^`ASAy{^`ASAyKqYsUy{qQVx^Ejky{]DRUeQ~q]Uy{q_{^k[QyA{WB:N]]AC]GWUyqsWq]~Yjq{qZ}J~q vIqIucqAs[sWqsy[ie^[qZW[~XcYtqWUyqsWq]PDScYwYrGjj`[ag GjzdZYjGSKF[][[|s]WqsyUy_^[qZW[~ukGbtz_~XkDagj_~a v]v_|fU ad_F~vYGwd_ ju{utbZy[E{qsyUyqxEbhi[[x[IqAs[sWqsy[Sut Ysqy[JZ	^i_[]c [|s]WqsyUy\pF[^i[[{ vtu[|s]WqsyUy\pJqZW[dYujcyJ}fgWuZyK}[GwsEqsHwdWH}a{C{YyUyqsY\w@HyX]Y\w@Hy[E{qsyUyqx ]hz^yX]YZ]Gja{C{YyUyqsY\YqyX{Y{^:D_UKCWE__y{sW{_vSj{{{Xu@~{ |K}kH|H}Q|y]W{qq_yUt@hqyyRk {[Gsy{sW{qzWR| {X_QT
dYhuvN|U`[P\}MRUd {[Gsy{sW{qzHj{{{_e}g|XzT|oGXSL~|Z[|K |X~f[
i
xYea}B|X}qyKsQsW{qqQRUd {X_QTY~s__y{sW{\rPTUY}[yNS
^CV_fA|A{Cq[q_y{sYQu	AT{{{Xa}A{Cq[q_y{sYQz}QQxfb~y|wH|KqA}|{I~fq|ls{vuRH{[Gsy{sW{qzRpY}[zRpY~s__y{sW{\bSgY}[zMR
\{[Gsy{sW{qz
yR]Y[ysVi8D]]CKWGWWqqqU{]~[bqy{Z}Hvq|IwqJ|tmYts_U{syWq_vBhsqqXi{YO{qqqU{sr_Z~{ZWY\ f[hw~Ft_bkL[Z\}GPr^q[Gy{syWqqzBhsqqXb[hd_GwuuH~db\vXqF|wr\vKZ}waItebY|tquHTY]uHuqyAqYyWqqq[P]n qX_[VuYts_U{syWq\rZVw_Yw[yDkEbzZVxnCajb^~IqC{[qU{syY[u	KVsqqXaIqC{[qU{syY[z}[}Yrlbt{t}HuKqKtqItfq~dyqvu}ZuHq[Gy{syWqqzPxuYw[zPxuYts_U{syWq\bQwmYw[zGP\q[Gy{syWqqz {ZWYu[yyTa2D\WAC STW
UY

	WRPYV 	SWp@YZG^UAW\SJIHFY]\V_VWAWSMBQFIF\KLK@WD[@ZUSVUJdABU\_VUUR^ZPWY	WR[	Sm]SPVU	P]PZU{mWQSU ZP]VPSQU	R]
SYW	S		U	WTZSQZFDHCQ V^F_W
V[\XG_QVBQUXF	2FTWCARTVR] 
	UZQP 		QrQXQ^YZE_S^JU^
UVQBKBDQ_V^]\UC]QE@[DAL^CFIHUFSBX]Q\WBfK@]V]^W]PVPRUQ 	]PQQgU	YWSSSm]
SQU RR]TPQQWRUYYWYW			U^ZQSXLDHAS
V VF]]
TS\ZEUQV@YUZD	2FB]XQV
T

	^SQ	UTRVTY 
WxWUWW_WU\]PVPRUQ 	]PQQgU	YWSSSm]
SQU RR]TPQQWRUYYWYW			U^ZQSXLDHAS
V VF]]
TS\ZEUQV@YUZD	2D\WACS PW	T	WRY 
QVpUYTYW]U_WY]^[@IBFYW^\_\WKU[GB[FIDTAFK@]LQ@ZUYT]@dKBU^W\UUZTPP]S	URQ	YoWQU	[YQmU  SS]PP	U^RQ	Y]ZW
QQUQ
W WVR[	SZDL@KS^
TD_U^Q^ZG]Y^J[WZF	:N^UAA
	 TPR
U

	]PPT  QVSrSPYVSX@S^
W^[BABD[]^^W\UAU[EJ[DKDTCFIBWLSHXWST]BlK@W^W^]WZVPRWQ
	UZQSoU	Q]QYS	oWQSU ZP]VPS
SU	R]
SYW	S		U	WTZSQZFDHCQ V^F_W
V[\XG_QVBQUXF	2FTWCAQ\	QQR V	UZW 
ZQrU]]WUWFY
U\QBA@L[_\^W^]CWQEJYLKF^CDABUFSHPWQVWBlIHW\]^]WPVRZUQ
WZSQmUS]SSS	oW
QYU
RZWTZSQW	RU SS]	SU	]TPQQPFDBAQ V VLUW TSVXM_Q\@Y_XL	8D\]CK]R
S WR] R	xV_UWTWW]STW^Q@IHDQ]^\_VUAUQGBQDAD^ALIHWFQ@X]STW@dA@]^]\U]PTZRWS	UR[SoWR	PUV
]VPg]

YQWPRUTR[SWPWYQUY ]	
U^RQ	YXLF@AY
T TD]]TQ^PEUS^@[WPD:D^UKCTUQ
 WP 	V  P p__UU_UWI]^[@IBFYW^\_\WKU[GB[FIDTAFK@]LQ@ZUYT]@dKBU^W\UUZTPP]S	URQ	YoWP	ZU	\ WVPmehUV	]SQZUWPQ\URZo 	
T V
WVPS	YU	ZW QSW	Q
	U ]VPSQPDLBCQ^TFUU VQ\XM]Y\B[UXL	8F_WCK
UE{qsy[T[{qsqKy[E~{YyUy\pJqZWUyGWMo[]WaU\B^\\Uh[xIEQEav^T|`_YCj@W@pBWhbFNzH]Tz`G[JWD|cEZgmDi _\g	ZR\x@bPfYYtqyyqsYagjYyX]Wq]\FjeVDbc\ia{C|aWUyqxGZryX]WqZi}K{C|aWUyqx@bsqyq{HvZzXjfxZusecItd}Jje{Dagn_}KvZyE}v uZn[iekYtqyyqsYagTYyX]WqZ}Ky[E~{YyUy\|Z]cqyqxX\hjDy[E~{YyUy_\\sqyqx[IqAtc]WqsrUjp\qZWUy_FZ]m[|s{qsy[QuJ\sqyqx^Zgn\RegEb}[|s{qsy[Sut Ysqyq{F]^\jSz`g]w_Dy[E~{YyUy\`C[Iqyqx Zxu[|s{qsy[S @qZWUy[{~{^:D_UKCWE sy{sYV[yy{{I{[GvsQsW{\rByR]W{GUEeY_Wc ]T@\^T]jYpAM[ Gaq_a]ATYybkwlKQSzbSp~K	|U\~ ~MQpdDkeAQoV_Vv[yQE~q[q_yUt[hqyy{xYSeTBT`{Ek iQ|y{{qqQSIVqyy{{ |v}Q|y{{qqQQocY}[qQ~l`[|vXQ}
gD}v\U~kHefQ|ow| aL~lkGvqB~|{k_bRyQE~q[q_yUt@hqyy{{H[yKti]W{qzBiYY}[qQi`d PKyKti]W{qzMj`cY}[qQTY~s sy{sYVz\Ojk{{qzMR
\{[GvsQsW{_XNScY}[qQiU^^QfA|U|]{[GvsQsW{\rPTUY}[qQ|Vc a~m`Z~KyKti]W{qzRpY}[qQTJJ{[GvsQsW{\~MQk{{qyQtiB	8FBWZY\
	S
VZ VSR	PVT[rD@]DJ__\WPVRZUQ
WZSQmUTS]RPToW
QYU
RZW	RU SS]	SU	]TPQQWVPS	YZDFBCYT^D_U V[^PG]S\BQWPF	8FTUKA
QYRV  UZU 	TrVGQ[@YY]VW\XW^_WSW^Q@IHDQ]^\_VUAUQGBQDAD^ALIHWFQ@X]STW@dA@]^]\U]PTZRWS	UR[SoF][A_goWQSU ZP]VPSQU	R]
SYW	S		U	WTZSQZFDHCQ V^F_W
V[\XG_QVBQUXF	2FTWCAVS
 TV	UZ	 
ZWrTE[[@[Z[\@Q^_STW^Q@IHDQ]^\_VUAUQGBQDAD^ALIHWFQ@X]STW@dA@]^]\U]PTZRWS	UR[SoAW_M\goWQSU ZP]

S W
RU	ZZWP WVR[	SUP]
QSUQ 		]
WVPS	YZDFBCYT^D_U V[^PG]S\BQWPF	8DJ_RS^WQV\S[TPU T^TPWYTTpTGSSHQXY\BYVWUQWPVRZUQ
WZSQmAUWETmmU  SS]PP	U^RQ	Y]ZW
QQUQ
W WVR[	SZDL@KS^
TD_U^Q^ZG]Y^J[WZF	:N^UAA
WSVQ
	T	]P
R TrHQRM\US
U\QBA@L[_\^W^]CWQEJYLKF^CDABUFSHPWQVWBlIHW\]^]WPVRZUQ
WZSQmAUWETmmU  SS]PP	U^RQ	Y]ZW
QQUQ
W WVR[	SZDL@KS^
TD_U^Q^ZG]Y^J[WZF	:2