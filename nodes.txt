D]WABWG]Uxqq_{]tYkqy{ZwJq|I|[
{YEyxqq_{sxZPeaQ}Y{ qyKqYsUxqqQSwHUqy{]^UubPPIYUe~JhwH}_	AhI{Ar[q_{ss[PeaQ}Yx[XS@kJh_|K t }fbT|wcF~e~TcYkue	|tsEku}}wk[}s__{ssUx_TVs{x\TB{YEyxqq_{sxEhjbW{Z][}rKkh|kjyN{YEyxqq_{sxESz{Z][vaB{YEyxqq_{sxERKy{[bcwe_dwxvyOZ{F|fyLtUU|v}Jw[}s__{ssUx\bKQI{x\bKQI{Ar[q_{ss[Uz\Ohc{x_NP]g[}s__{ssUx\iQ}Y{KxU@8F_WBA
UE]V{syUy_tZhsqyXwI|s~K|cJ}fkX~qWUyqsV{]~Bjq{{Zay[Ez{syUyqx^PvyX]XVxrTuZ\Vg@Gjj|K~]ji FZP^uGRx_{YOyyqsV{srBjq{{ZavZXdbY|fY|ZuF~uckc	ZiX{ ~dv^~fY }dT^jug}sqAs[sV{sy[R_d{ZW[TX~qWUyqsV{^zZTuUX}YqDS 
G{YOyyqsV{srERx{ZW[~vcK{YOyyqsV{srESK{{[bbwgVd}Jyv{FZqF}f{Et_U}vJ}[|s]V{syUy\`BQIqy\`BQIqAs[sV{sy[Tz^Fhcqy_GP]m[|s]V{syUy\kX}YqKyUB8FUWCAUO]W{qpUyUt[hqxyRkH~XxK~AJ|qJ~RgY~s^Uy{sW{_wBj{{{XhyQE{{qpUy{x_PyR]Yk_gGj`hFPugGi
gEhucGSAEhj`[|y]W{qpUyU^[{X^[h\X{_}BQDhv_k hfcZ|o{|f`F}U|]XgZ}gke{ZyQE{{qpUy{xEhj`[QxQKxAsQsW{qp[St SqxyQXhzkZRV`Xh dDyQE{{qpUy{xGP{yR]Y|v`HyQE{{qpUy{xGQKxyS``wdU}lG{vxE}R{DfxF}|UWv|}BwY~s^Uy{sW{\cASA{{\cASA{Cq[pUy{sYVz]Ejk{{_DRUgY~s^Uy{sW{\h[Q{I{UA:N_UAA]E_U{rsWq_vYhr{qXuJ|r vK }bIv[yAqXsWqqq[kf^[qX_[|[cYts_U{rsWq_XDQcYw[zhfx[aeGhydZY bGQHF[_S[~p]WqqqU{\^[qX_[uwaHvYusDaXiE|b uue~fwb_iFhvcb_uE|[gufyE{XE{qqqU{rxEbja[}Xx[KyAqXsWqqq[Qvt Yqy{XIYj~^~H{C{[qU{rsY[u	KVr{qXaH{C{[qU{rsY[z}[}Xxlbt{uwHuKqKu{ItfuK~esqvqH}[Hq[Gy{rsWqqzPyYw[zPyYts_U{rsWq\bQvgYw[zGP\q[Gy{rsWqqz {[]Yu[yyT`2D\WAB STW	 UY

		WRPSV	SWqJYZG^U@W\R@IHFY]\\_VWAWRGBQFIF]ALK@WEQ@ZUSVT@dABU\^\UUSTZPWS	WR[	SmWSPWU	P	]PPU{mW	QST
ZPWVPSPU	S]
SSW	S		U	WTPSQZFEBCQ W^F_W V[\XG_P\BQUXF8FTWCARTVSW 
 UZQP  	QrQY[^YZE_S_@U^
UVQBKBE[_V^]\TC]QE@[EKL^CFHBUFSBYWQ\WBfKAWV]^WWPVPSUQ ]PQQgUYWSSSmW
SPU RS]TPQQWRU	SYWSW		TTZQSYFDHAS V VF\W
TS\ZD_QV@YUZE	2FB]XP\
T
 	^SQUTSVTY 
W	rWUWW_W_\WPVPSUQ ]PQQgUYWSSSmW
SPU RS]TPQQWRU	SYWSW		TTZQSYFDHAS V VF\W
TS\ZD_QV@YUZE	2D\WABS PWT 	WRS
QVq_YTYW]U^WYW^[@IBFX]^\_\WAU[GB[FHDTAFKAWLQ@ZTST]@dKBT^W\UTZTPPWSURQSoWQUQYQmT
 SSWPPU^RQS]PW
PQUP W
WWR[	SZEF@KST
TD_T^Q^ZG\S^J[WZF:N^UAA	 TPS U

]PPT QVSrRZYVSX@RT
W_QBABD[]_^W\UATQEJ[DKE^CFIBWFSHXWSUWBlK@W_]^]WPVPRWQ
	TZQSnU	P]QSS	oW	QST
ZPWVPS
RU	S]
SSW	S		U	WTPSQZFEBCQ W^F_W V[\XG_P\BQUXF8FTWCAQ\	QQS V UZW  ZQrU\WWUWFYU\QCK@L[_\_]^]CWQD@YLKF^BDABUFRBPWQVWCfIHW\]_WWPWRZUP WPSQmTSWSSRoW
QYU
SZWTPSQW	RT SSW	S U]TPQQPFDBAQ V WFUW TR\XM_Q\@XUXL	8D]WCK	WR
S	
WS] S	xV_UWU]W]STW^Q@HBDQ]^\^\UAUQGC[DAD^AFIHWFQAX]STW@eK@]^]\T]PTPRWS	USQSoWR	PTV
WVPm]

SQWPRUTSQSWPWYQTY W	
U^RQSXLF@AS
T TE]]TQ_ZEUS^@[VZD:D^TACTTQ
	
WP
	V Pp__UU_TWIW^[@IBFX]^\_\WAU[GB[FHDTAFKAWLQ@ZTST]@dKBT^W\UTZTPPWSURQSoWP	ZUV WVPmeiUV]SQPUWPQ\USZo 
T W WVPR	YUZW
QSWQ
	T WVPSPZDLBCP^TF_U VQ\YG]Y\B[UYF	8F_WBA
UEz{sy[T[{{sqKy[EqYyUy\pK{ZWUyGWGo[]Wa	_\B^\]_h[yCEQEav_^|`_YCjA]@pBWhbGDzH]Tz`FQJWD|cDPgmDi ^Vg	ZR\xAhPfYX~qyyqsXkgjYyX]V{]\FjeVEhc\ia{BvaWUyqxFPryX]V{Zi}K{BvaWUyqxAhsqyq{I|ZzXjfx[secH~d}Jje{Ekgn_}K |ZyE}vZn[iekX~qyyqsXkgTYyX]V{Z}Ky[EqYyUy\|[WcqyqxYVhjDy[EqYyUy_]VsqyqxQIqAtc]V{srUjp]{ZWUy_GP]m[|sz{sy[QuKVsqyqx_Pgn\RegDh}[|sz{sy[SutSsqyq{GW^\jSz`fWw_Dy[EqYyUy\`BQIqyqxPxu[|sz{sy[S A{ZWUy[{q^:D_TACWEyy{sYV[xy{{I{[F|sQsW{\sHyR]W{GTEeY_Wb
]T@\_^]jXzAM[ GapUa]@^YybkvfKQSzcSp~K|U\~ GQpdDkeKQoV_VvZyQE~q[pUyUt[hqxy{xYSeUHT`{Ek h[|y{{qp[SIVqxy{{ |v|[|y{{qp[QocY}[p[~l`[|vY[}
gD}v]_~kHeg[|ow| `F~lkGvpH~|{k_cXyQE~q[pUyUt@hqxy{{H[xAti]W{q{HiYY}[p[i`d PKxAti]W{q{Gj`cY}[p[TY~syy{sYVz]Ejk{{q{GR
\{[F|sQsW{_YDScY}[p[iU^^QgK|U|]{[F|sQsW{\sZTUY}[p[|Vc k~m`Z~KxAti]W{q{RpY}[p[TJJ{[F|sQsW{\GQk{{qx[tiB	8FC]ZY\
	S VZ VSS	PVU[rD@]E@__\WPWRZUP WPSQmTTSWRPUoW
QYU
SZW	RT SSW	S U]TPQQWVPR	YZDFBBYTTD_U WQ^PG]S\C[WPF	8G^UKA
PSRV
 TPU TrVGQZJYY]VW\Y]^_WSW^Q@HBDQ]^\^\UAUQGC[DAD^AFIHWFQAX]STW@eK@]^]\T]PTPRWS	USQSoF]ZK_goW	QST
ZPWVPSPU	S]
SSW	S		U	WTPSQZFEBCQ W^F_W V[\XG_P\BQUXF8FTWCAVS
 TV UZ	  ZWrTDQ[@[Z[\A[^_STW^Q@HBDQ]^\^\UAUQGC[DAD^AFIHWFQAX]STW@eK@]^]\T]PTPRWS	USQSoAW^G\goW	QST
ZP]

S
W
RUPZWP WWR[	STPW
QSUQ ]
WVPR	YZDFBBYTTD_U WQ^PG]S\C[WPF	8E@_RS^WPV\RQTPU T^TPW	STTpTGRYHQXY\BX\WUQWPWRZUP WPSQmAT]ETmmT
 SSWPPU^RQS]PW
PQUP W
WWR[	SZEF@KST
TD_T^Q^ZG\S^J[WZF:N^UAAWSWQ
	T]P
S TrI[RM\USU\QCK@L[_\_]^]CWQD@YLKF^BDABUFRBPWQVWCfIHW\]_WWPWRZUP WPSQmAT]ETmmT
 SSWPPU^RQS]PW
PQUP W
WWR[	SZEF@KST
TD_T^Q^ZG\S^J[WZF:2