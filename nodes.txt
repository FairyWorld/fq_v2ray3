D]W@CWG]TyrqU{]tXjry{ZwK~r|I ~b I{@sXqU{ssZif\Y{Z]Z~[a[~q]TyrqU{]ZESa[}YxZjf^V]@jfXhcXjvH~]_TryAqYsTyrq[SgcZXyEhdc}\ikIZ~KeE~d`_}KiF}dd_iH H|Z^Zi[uHkJ{K~va[~q]TyrqU{]_Try{^VIyXGy{ssTyrzEkh`\y[_[~h_ii~~I{@sXqU{ssZSv	KVs{y[aI{@sXqU{ssZSy}[}Yx|dbt{twI}rqKt{I|eqJ~dsJyuqJ}ZsKyXGy{ssTyrzPxZXzPxZ|p_U{ssTy_bQwgZXzGP_yXGy{ssTyrz {Z]Z}XyyTa:G]WACTG]UyqrWx]tYjqzxZkJ|XzIIJ~KH~dw[|s\WxssUy_u@ks{yXj xYEyyqrWxsx]R} xZ][R_e kwtD|_ahFYR\~ESx\y[D{xssUyqy@ks{yXPHtUf[\}dwi_~DtwjqXktZY|f}XktK~eb|whZ~KzCrYsUyqrYS]dyX\YU[|s\WxssUy\qXUwU[[zFPgS_
[Ug|^|KzCrYsUyqrYRwKTqzxZc}KzCrYsUyqrYRx[[ye `tyvvHcsK}vzJ}dsJ|frIxtsJXrHxYEyyqrWxsxRz~Y~YxRz~Y}q]UyqrWx^`SufY~YxGR \xYEyyqrWxsx yX\Y|Y{yVc;F_WCA	UE]W{pqVy_t[hpyyXkH~YyH~K|pI~HY~r_VyqsW{^vAjq{{Yiy[E{{pqVyqx_P ~yX]YV{z TuZ]VdHDjj|J~^b i F[P]}DRx^{ZGzyqsW{pzAjq{{Yf\~ewhd}F|fYyE~uk` j_c~db\uwka~fpYkJyBs[sW{pqXR_d {Y_XTY~r_VyqsW{]rYTuUY}ZyGi_dXPZX|s]W{pqVy\pFQ]aX[{ |w}X|s]W{pqVy\pJ{Y_XdYu``qI}fwWYqH}KG` F}[sGg_F}a{CqZqVyqsYVtHKyX]YVtHKy[E{{pqVyqx Wkr]yX]YP^	Dja{CqZqVyqsYVZyyX{Yq] :D_UA@
WE_UzspW{_vYisx{XuJ}s |K~cKyApYpW{qq[jg][{X_[}Z`Y~s_UzspW{_XDP`Y}[zig{[keGixgZS bGPIFQ_S[q^W{qqUz]][{X_[}gdui idhD}vq~Y kfSdV eaF|dg\hevY|dZkeaHzYF{{qqUzs{Ehja[|Y{QKyApYpW{qq[Pww SqyzYXPzb]Qg^Sq[q^W{qqUz^sFQ\a[|Yx |v}[q^W{qqUz^sJ{X_[g[u`aqJ~d|WXqK~IGa E~YpGf_E~cxCq[qUzspYVuHHzZ^YVuHHzYF{{qqUzs{ Wjr^zZ^YP_	GicxCq[qUzspYV[yzZxYq\ 9F]UAA
RVW
WR	

USP QT 	RWrH[QE_UC
U\QBKCDX_\^]]UCWQE@ZDHF^CGIAUFSBXTQVWBfJ@T\]^WTPVQRUQ 	WPPQmU
QPTW
R
V	PRWpoW

PQWQRUTRRSWPVSQUS T	

UTRQ	PXFF@AP T UD]WTP^YE_S^@ZWYD:D_UBCP
VWPU	WQP P  SpQZY\RXD]S\B^\W]SCIBFY]]__\WAVSDB[FIG\BFK@WDR@ZUSWUCdKBU]__UURWPPWP	VRQ	SlTRU	QQRmU
SSWSP	VVRQ	SUPT
QRUQ 	 W
WVQS	SZDFCCSTWD_UVR^ZG]S]BXWZF	9DC_XS^U
UQQTVP VVRW
pU^UV]W]^	URWPPWP	VRQ	SlTRU	QQRmU
SSWSP	VVRQ	SUPT
QRUQ 	 W
WVQS	SZDFCCSTWD_UVR^ZG]S]BXWZF	9F]UAA
QRW			TUSQ PVr][_[V_U]UR
U\PBH@F[_\^^^WCWPECYFKF_CDKBUGSAZWQVVBeIBW\\^TWQVRPUQWSSQmUSTSRSoWQSU
RPWUSSQV	RU
SST	S
U	WTPPQZFDB@Q VVE_W US_XG_Q\AYVXF	8E\TCAVPPW	VRRT	 
SWQrQX[]QYBQVW\S@J@EY]\\\^TAWSGAYEIF\ADH@WDQCYUSVU@gIAU\_\VURTRSWS	WQS	SmWSV	QQQnW

PQWQRUTRR
QWPVSQUS T	

UTRQ	PXFF@AP T UD]WTP^YE_S^@ZWYD:D_UBCSWSQP	WWQ	 W  Q	PpU_UU^UDY T^Q@IBGY^^\_\VBUQGB[GID^AFJ@TFQ@[UPTW@dKCU^]\UUPTPQTS
	URQ	PoW
QU	RSQmU	
SRTPQ	UTRQ	PWSWQQUQW
	VVRQ	S[DE@ASW TD^UTQ^ZF]P^@[WZG	:D^UA@

UPR 

 WP
V P	sT^WWV_UVRVU_S@K@FZ__\]^WCTSG@YFJE\ADKCUDQBZVQUU@fIBV__\WVRTRPUS 
TPS
QnWPRW
TU	WPoVQSU	PP
TVPS
QU	RW
RPW	R	U WUSSQZGDACQVTF_VVQ\XG^Q_B[UXF
	;F^WCA	TW P

 UPT   	PrT]TW_WUB
U\PBH@F[_\^^^WCWPECYFKF_CDKBUGSAZWQVVBeIBW\\^TWQVRPUQWSSQmUPQTT	U	TRoejW	T VQQRWU	PSWTP	Q n V TUWPQRTQUSQWSW		UTRRSXFG@BS UVF]WWS\ZE_R^CYUZD
:G]WACTGyyqrYUY{yqzIxYE|s[rWx^pHyX\WxEWEdY\Ua
]^@_\^]i[zAGZ Dcv\\~k]XAjB_B{@VjbDFxC_Ux`ESH\F}cGRefFh]TeXS^xBj [ ~dY[|s{xss[iea[xZ]Uy_WDkgVFja^hc{Atc\WxsxERy xZ]UyXb |I{Atc\WxsxBjqzxs{J~XqZkdxX}q~gcK|fvHkg{Fiee]|I~XrG|t}XeYhgk[|s{xss[ie_[xZ]UyXvIxYE|s[rWx^|XUazxsxZTjaFxYE|s[rWx]^TqzxsxSKzCua]Uyqy Thp^yX\Wx]DR_fY}qyyqrYPwHTqzxsx\Ree^SggGj vY}qyyqrYRwtQqzxs{DU\WhRx`eUuTFxYE|s[rWx^`ASKzxsxRz~Y}qyyqrYRByX\WxY{|s\;F_WCA	UE{{pqXT[{{pyHy[E~qZqVy\pJ{Y_VyGWGgX]Wa__A^\\_ h[xCFYEasWc ]C\R{ckudIPQz` Q{}|K ~^]| |ES{fEieISdT^TvY{ZGs[sW{^vZjq{{pzXQeVJVkyDi kY~r zyqsYQt	HTq{{py~vY~r zyqsYSdaX[sY|gbZ~vZYeEv^]|` I}edY~du ~ cD|giF}vsJ|wyi_`Z{ZGs[sW{^vAjq{{pyI}[{Cvb_VyqxJk [X[sYkkfRK{Cvb_VyqxEhkaX[sYV }X|s{{pqXTz^Gh`yyqxEP]y[E~qZqVy_ZFQ aX[sYk^\_SdI~^~\y[E~qZqVy\pXVtWX[sY~ Ta i|fb[|K{Cvb_Vyqx P{}X[sYVtHKy[E~qZqVy\|ES`yyq{Yvb@:F@_XR^	RTQWQP 
RVV PpEB]FB]]]
UPTPQTS
	URQ	PoW	
VQU	SPVmU	
SRTPQ	WSWQQUQW
	VVRQ	SUWPQRXEDBARV VF]T TS\[E\Q\@YU[D	8D\W@CSQPT
WR
T 	VpWEQYH[R_WU\Z_\TVQU_S@K@FZ__\]^WCTSG@YFJE\ADKCUDQBZVQUU@fIBV__\WVRTRPUS 
TPS
QnD]YI]lnW

PQWQRUTRRSWPVSQUS T	

UTRQ	PXFF@AP T UD]WTP^YE_S^@ZWYD:D_UBC	WQ
  	UTWQ  QUpTGSYKY[Y\BY\TRVU_S@K@FZ__\]^WCTSG@YFJE\ADKCUDQBZVQUU@fIBV__\WVRTRPUS 
TPS
QnCW]E^lnW

PQWQRVS U
 P
TRQU	RWTPPQW
RUPSW
PV		UWPQRXEDBARV VF]T TS\[E\Q\@YU[D	8FB]YQ_


WSTWQSVRTVUURW
QVVqVGQ[JZZX^B[^UWP
UPTPQTS
	URQ	PoAW_G_ooWQSU
RPWUSSQV	RU
SST	S
U	WTPPQZFDB@Q VVE_W US_XG_Q\AYVXF	8E\TCAUSTSVVRP   	UrJYPF^WS T^Q@IBGY^^\_\VBUQGB[GID^AFJ@TFQ@[UPTW@dKCU^]\UUPTPQTS
	URQ	PoAW_G_o oWQSU
RPWUSSQV	RU
SST	S
U	WTPPQZFDB@Q VVE_W US_XG_Q\AYVXF	89