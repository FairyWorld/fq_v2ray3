D]W@CWG]Tyqq^{]tXjqy{ZkK|Xy@|IJ~qA}tsZ|s_^{ssTy_vIhs{yXi	{YExyqq^{sx\R~	{Z]ZT fPhwtE|_bkFXR\}LPx]y[Gr{ssTyqzIhs{yXjRkJU iebU~d{K~_aM|twqPkdQJ|frQdYDjf}|JV_ayJqYsTyqqPP]dyX_PVZ|s_^{ssTy\rQVwUZ[yOk]Jjuf@~I{@s[q^{ssZSu	@Vs{yXa	I{@s[q^{ssZSz}P}Yx|db{twK}Kq@t{I|fq@~dsyvu}ZsKy[Gr{ssTyqz	PxZ[z	PxZ|s_^{ssTy\bQwgZ[zLP_y[Gr{ssTyqz{Z]Z}[yrTa:D]\ACWGVUyqrW{]Yjqz{Z|J~q |I ~KIpAs[rW{sx[ie_[{ZV[~XbY~qVUyqrW{]QDSbY}YsGjja[kgGjzeZSkGSKFQ]Z[|s\W{sxUy__[{ZV[~vfI|gk^}XbD|t^jq d|H|f[X|d`Fee\dxK}vzZU[y[D{{sxUyqyEhhh[[yQIpAs[rW{sx[Suu Sspy[
[hhc^Ru
G~IpAs[rW{sx[Su
IVspyXb IpAs[rW{sx[Sz~Y}Ys}dav{t|J~arItpH|frI~dxyvv}ZxJy[D{{sxUyqy Pxt[[y Pxt[|s\W{sxUy\aQwl[[yEP^y[D{{sxUyqy{ZV[}[z{Ta:D^UACWD_UyzsW{^vYjz{{YiJ|S{I|J}zIIy[|x]W{pqUyTt@hpyySk {ZGyyzsW{pz]R
| {Y_[iTdEhkjDR~dEkeGj~`EQJGjacY~r_UyzsW{^\YyS]Y|tuKm^XdaFinHh` ~mtX~gX^inkD|YWEjntX}g~_}tZ{ZGyyzsW{pzGjacY}ZzS@{CqZqUyzsYQtvQz{{Z	QnJC~JyAsPsW{pq[S~IVpyySc JyAsPsW{pq[SqY}Zz}d	`v{wuH}zsIwyH|msI~gqy}w}YqJyPE{{pqUyzx P{}[Px P{}[|x]W{pqUyW`Qte[PxEP^yPE{{pqUyzx{Y_[}P{{Tb:O_UA@
\E_UzssWp_vYis{pXuJ}s wK~sJtqyApYsWpqq[jg^[pX_[}ZcYus_UzssWp_XDPcYv[zP^d XujQw\Z}GixdZX bGPIFZ_S[q]WpqqUz]^[pX_[jg|Z`ebX}kDwvr^~I cvTYd^\wHSFitZ\`HuK~twHtvfYzYE{pqqUzsxEcja[|YxZKyApYsWpqq[Pwt XqyzYG[zfKjgEFp[GyzssWpqzEQx pX_[}tcJp[GyzssWpqzEPI{pYbaugWtfuJzt{GtX}F~t{Dtv[U~dgtvu[q]WpqqUz^`CZKyz^`CZKyApYsWpqq[Wx^Gcayz]F[_e[q]WpqqUz^kYv[yKzWB	3D\W@C STV UX
WRQSV SVpJY[G^TAW]S@IIFY]]\_WWAVSGBPFIG\AMK@WDQ@ZUSWU@d@BU]_\UURT[PWS	VRZ	SlWSQVU 	P\QPUzmVQSU
[P
WVPS
QU	R\
RSW	R	U WUPSQZGDBCQV_F_V VZ\XG^Q\BPUXF
	8FUWCA	R TVRW
U[QQ  	QrPX[^XZE_R^@T^
UWQBKCD[_W^]]UC\QE@ZDKM^CGIBUFSBXWQ]WBfJ@WW]^WWPVQRUQ 	\PPQfU	XWSSSlW
RQURR\TPPQW
RUSXW
SV		UT[QRXFDIAR V VF]WTS\[E_QW@YU[D	3FB]YQ\
T 	_SPUTRWTX 
VrWTWW_V_\WPVQRUQ 	\PPQfU	XWSSSlW
RQURR\TPPQW
RUSXW
SV		UT[QRXFDIAR V VF]WTS\[E_QW@YU[D	3D\W@CS PV		UWR
S QWp_YUYW]T_WX W^Z@IBGY]^\_\VAUZGB[GIDUAFJ@WMQ@[UST\@dKCU^V\UU[TPQWS
	URQ	SoW
QU	QXQmU
SRWPQ	U_RQ	S\PWQQUQ  W

VVRZ	S[DF@JSTTD^U_Q^ZF]S^K[WZG	:O^UA@
 TQR U


\PPU   QVSsSZYWSX@ST
V^QB@BD[\^^V\U@UQEK[DKD^CFIBVFSIXWRTWBmK@W^]^\WPVPRVQ	U[QRoU	Q\PSSoVQSU
[P
WVPSSU	R\
RSW	R	U WUPSQZGDBCQV_F_V VZ\XG^Q\BPUXF
	8FUWCA	Q]	QPRVU[V   [QrT]WWTWFX

U\PBK@M[_\^]^\CWPE@YMKF_CD@BUGSBQWQVVBfIIW\\^WWQVR[UQ  WPSQmU SWSRSoWQXU
R[WUPSQV	RUSSW	S
U 	\TPPQQFDB@Q VVFTW US\XL_Q\AYUXM	8E\WCJ WR
S
VR\ 	
R	yV_UVT]W\ST	W^QAIBDP]^]_\UAUQFB[D@D^@FIIWFP@X\STWAdK@\^]]U\PUPRWR	 URQ SoVR	PU V

WVQm\

SQWQR UTRQ SWPVXQUX W	

U_RQ	SXMF@AST UD]\TP^ZETS^@ZWZD :D_UACUU	Q
WQ
	V  
Q p^_UU^UWH W^Z@IBGY]^\_\VAUZGB[GIDUAFJ@WMQ@[UST\@dKCU^V\UU[TPQWS
	URQ	SoWQ	[U	VWVPmdhUV	\SPPUWQQ]UR[o TV WVQS	XU	[W
QSV	Q	U WVPS
QZDMBC Q_TG_U VQ]XG]X\B[TXF	 8F_VCA
UE{{sx[T[z{spKy[D~qYxUy\qJ{ZVUyGVGn[]W`_\B^]\_	hZxCEPEaw^^|a_YCk@]@qBWhcFDzI]TzaGQJVD|bEPglDi _VgZR\y@hQfXY~q	yyqrYkgkYyX\W{]]FjeWDhc\iazCvaVUyqyGPsyX\W{Zh}KzCvaVUyqy@hspyqzH|Z{XjfyZs	ebI~d|JjezDkgo_}K|ZxE}v~ Zo[iejY~q	yyqrYkgUYyX\W{Z|Ky[D~qYxUy\}ZWcpyqyXVhkDy[D~qYxUy_\VspyqyQIpAtc\W{ssUjq\{ZVUy_FP]l[|s{{sx[Qu
JVspyqy^Pgo\RefEh|[|s{{sx[Suu SspyqzFW^]jSzagWw^Dy[D~qYxUy\aCQIpyqy Pxt[|s{{sx[S @{ZVUy[z~q^	:D^UACWD yyzsYVZyyz{I{ZG|sPsW{]rHyS]W{FUEeY_Vc
]U@\^^]jYzAL[ G`qUa\A^XybjwfKQS{bSq~J	|T\~~GQqdDkdKQnV_Vw[yPE~qZqUyTt[hpyyzxYSdTHTa{Eki[|x{{pq[S~IVpyyz{ |w}[|x{{pq[QncY}Zq[~m`[|wX[}gD}w\_~jHdf[|nw|aF~mkGwqH~}{k^bXyPE~qZqUyTt@hpyyz{HZyAth]W{pzHi
YY}Zq[iad PJyAth]W{pzGjacY}Zq[T
Y~r yyzsYV{\Ejj{{pzGR\{ZG|sPsW{^XDS
cY}Zq[iT^^Q fK|T|]{ZG|sPsW{]rZT~UY}Zq[|
Vck~l`Z~JyAth]W{pzRqY}Zq[T~JJ{ZG|sPsW{]~GQj{{py[thB	8GB]ZX\
S
 V[ VSRPWTZrD@\D@__\WQVR[UQ  WPSQmU TS
WRQToWQXU
R[V	RUSSW	S
U 	\TPPQWVQS	XZDFCCXTTD_UVQ^QG]S]B[WQF	9F^UJA
QSR	V
UP U 		TrVGP[JYX]VW]X]^^WS	W^QAIBDP]^]_\UAUQFB[D@D^@FIIWFP@X\STWAdK@\^]]U\PUPRWR	 URQ SoF\[K_foVQSU
[P
WVPS
QU	R\
RSW	R	U WUPSQZGDBCQV_F_V VZ\XG^Q\BPUXF
	8FUWCA	VSTVU[	   [WrUEQ[A[Z[]@[^^ST	W^QAIBDP]^]_\UAUQFB[D@D^@FIIWFP@X\STWAdK@\^]]U\PUPRWR	 URQ SoAV_G\foVQSU
[P
\

R
WR U	P[WP VVRZ	SU PW
QRU Q 	\
WVQS	XZDFCCXTTD_UVQ^QG]S]B[WQF	9D@_SS^ VQV]SQTPU T_TPVSTTpTFSYHPXY\CY\WUQWQVR[UQ  WPSQm@U]EUmmU
SRWPQ	U_RQ	S\PWQQUQ  W

VVRZ	S[DF@JSTTD^U_Q^ZF]S^K[WZG	:O^UA@
WRVQ
	T\P
R TsH[RL\UR

U\PBK@M[_\^]^\CWPE@YMKF_CD@BUGSBQWQVVBfIIW\\^WWQVR[UQ  WPSQm@U]EUmmU
SRWPQ	U_RQ	S\PWQQUQ  W

VVRZ	S[DF@JSTTD^U_Q^ZF]S^K[WZG	:3