D]WABWG]UxrpP{]tYkrx{ZwJr|I|rNZ{[}p^P{ssUx\wGhs{x[h{YEyxrpP{sx]S{Z][Ug^hwtD}\ckFYS_|BPx\xXF|{ssUxr{Ghs{x[xwwhKw]~gwKkeRC|tgHr ^tK}f`N|tQ|uY[h]xXHxDqYsUxrp^P]dx[^^V[}p^P{ssUx_s_VwU[~XxAS^dHUv]]hc
[}p^P{ssUx_sAQ^c[~Xx|t[}p^P{ssUx_sM{Z][eZr`csJ|e|PZsK|XOcJHpO|t]H|bxDqYsUxrp^VwJHx[^^VwJHxXF|{ssUxr{Whp^x[^^P]GkbxDqYsUxrp^VY{x[x^q^;G\RACTFXUyqsVx\qYjq{x[rJ~qH}[I|X~As[sVxrv[ie^Zx[X[~XcX}pXUyqsVx\_DScX~X}S\dPvmRu]RzGjzd[PeGSKGR\T[|s]VxrvUy_^Zx[X[etYkfe_}X{EhKbK}aheZ|f^\KrFjekKmZewkvzy[EzxrvUyqxDkif[[xRH~As[sVxrv[SutPr~y[^hfYTxAUv[GjK
X}pXUyqsVx_uDS\cX~X~~vX}pXUyqsVx_uHyX]XeZwbasI|erU}XsH|XJ}aIHvJ~v]K|b~As[sVxrv[TuJKx[X[TuJKxX@yyqsVxr}Ujp]x[X[R_Dkb~As[sVxrv[T[{x[~[s\;GZWCAT@]W{qpVxZt[hqxx]kH~XxHNI|aHx^E{{qpVxtxXSe`X~^{|qxBr^sW{qpXPpJVqxxZ\VucYSN[VeCkpJ~_HkN{Cq[pVxtsYSe`X~^{| `]h\}a \k]{H~fcYZ{Dk_c]k^vdZJ|fxZkY~s^VxtsW{_]Ut{{\UKx^E{{qpVxtxGkjc^x]]Y~  YP`EF{[FzxtsW{q{FSx {X^XscJ{[FzxtsW{q{FRN{{YacrgWft xs{GXxE|cwDfRV|ccHtX}v]W{qpVxY`CQKxxY`CQKxBr^sW{qpXU^GhaxxZFP_dX}v]W{qpVxYkY}[xHxPB	8D\TBDWF^V~qqU{\wZmqy{[tIyq|Hy[K|u|X{s_U{rpV~_vBhrx~Xi{XFz~qqU{r{^U~{[^Xn_fGhikGUufGkdDmubGQHDmja[~p^V~qqU{\]Z~X_[|Kp n_jYh\`Ey ~ZkbyfWK~fxnXyFK]mvbX|vdKmvT^{XFz~qqU{r{Dmja[}X{TKyAqXpV~qq[QvwVqy{XKTuH^P\cAmq[~p^V~qqU{_sGT\a[}Xxyv}[~p^V~qqU{_sK~X_[fZteaqJKpVzXqKXIza J|HpIyv_HbxBt[qU{rpXSuHH{[^XSuHH{XFz~qqU{r{Rjr^{[^XU_	GhbxBt[qU{rpXS[y{[xXt\ 8G]TDA
RWR
WS		
TSU QTRRrH[PD_PC
TYQBKBEX^Y^]\TBRQE@[EHC^CFHAT
FSBYTPSWBfKATY]^WTPVPSTQ RPQPhU
PUTWS
WURWqnR

PPWPSUTSRSWPW	VQTV T
TQRQPYCF@APT TE\RTQ_YDZS^@[VYE:D^TBBPWWPU
		 WPPURqTZY\SYD\V\B_]W\RCHGFY]\_^YWAWRDC^FIF]BCK@WERAZUSVTCeNBU\^_TUSWUPWP	WST	SmTST	QPRhU
	VSW
SP	WWST	STPT
QSTQ  R
WVPRVZDFBBVTWE_U WR__G]S\CXV_F	8EC^]S^UT PTTWP SVS	R
pU_TV\R]^USWUPWP	WST	SmTST	QPRhU
	VSW
SP	WWST	STPT
QSTQ  R
WVPRVZDFBBVTWE_U WR__G]S\CXV_F	8G]TDA
PSR		QTSQ P Sr][^ZV^P]USU\QCHAC[_\_^_RCWQDCXCKF^BENBUFRA_WQVWCeHGW\]_TWPWSUUPWSRQmTSTSSRnW
PVU
SUWTSRQWRTSSTS TRTPQP_FDBAP V WEZW TR_YB_Q\@XVYC	8D]TBDWUPW			WSSQ	RWPwQX[\PYCQVR\S@KAEXX\\]_TDWSG@XEH
F\AEHARDQBYTVVU@fHAT
\_\WT RTSSRS WPRVmWSWTQQ nR

PPWPSUTSRQWPW	VQTV T
TQRQPYCF@APT TE\RTQ_YDZS^@[VYE:D^TBBSVRTP
WWP	RPPqP_UU_TE\T_T@IBFX^_
\_\WBTTGB[FHE[AFKATCQ@ZTPUR@dKBT_X\UTUTPPTSTRQPnWPURVQmT	SST	PPTQRQPRSW
PPUPW	 WWST	SZEEADSWTD_TQQ^ZG\P_E[WZF;A^UAA
UP	R

  RP
W  P	rU^VRV_UWRWT_REK@F[^_Y]^WBTRB@YFKE]DDKBTETBZWPUTEfIBW_^YWWSQRPTV TPSPnRPSWU	UWUoW		 QST	UPTWPSPT 	SR
SPW	SU	 WTSRQZFEABQ WQF_WWT\XG_P_C^UXF;G[WCA QW  P
  TUU  UrU\TVZWUCU\QCHAC[_\_^_RCWQDCXCKF^BENBUFRA_WQVWCeHGW\]_TWPWSUUPWSRQmTUPTT
T 	TSn`jW	U WPTRWT	USVTP	Pn  WTTWUQSTPTSPRS  W	
 UTSRSXFFABS TWC]WWRYZE_S_CXPZD;G\RACTFyyqsXUX~yq{HxX@|s[sVx_uHyX]VxDREeX\Td
]^A_Y^]i^zAG[Dbs\\~j\X@oB_BzAVkgDFxB^UyeESH]G}fGRegGh]TeYS_}Bj Z~e\[|szxrv[ie`Zx[XUy_VEkfSFja_hb~Atc]Vxr}ERxx[XUyXc|H~Atc]Vxr}Bjq{xr~J~Xp[ke}X}q~ffK|fwIkf~Fied\|H~XsF|uz}XdXhfn[|szxrv[ie^Zx[XUyXwHxX@|s[sVx_yXUa{xr}ZTj`GxX@|s[sVx\^Tq{xr}SK{Bu`XUyqxTiu^yX]Vx\DR_gX}pyyqsXPvHTq{xr}\Red_SfbGj wX}pyyqsXRvqQq{xr~DU\ViRyeeUuUGxX@|s[sVx_eASK{xr}RzX}pyyqsXRByX]VxX~|s\;GZWCAT@{{qpXU^{{qxHx^E~q[pVxYpJ{X^VxBWGfX\Ra_^A_\\_i[xCGXDdsWb XC\SzcnudHPP` Qz|}N ~_ ]}|ESzgEh`ISeU^UsY{[Fr^sW{_wZkt{{q{XP`VJVjxDhkY~szxtsYQuHUt{{qxsY~szxtsYSe`X~^sY|fcZsZY dE~s^]|aI|`dY~et cD|fhF|ssJ|vxhZ`Z{[Fr^sW{_wAkt{{qxI|^{Cvc^VxtxJkZX~^sYkjgSN{Cvc^VxtxEhj`X~^sYV|X}v{{qpXU^GhaxxtxEP ]x^E~q[pVxZZFQ`X~^sYk_]_RdI~_\x^E~q[pVxYpXVuVX~^sY~U`i|gc[}N{Cvc^Vxtx Pz|X~^sYVuIKx^E~q[pVxY|ESaxxt{YvcA;C@_XS_	RUPWPP 
SSV QqECXFB]\]TUTPPTSTRQPnW	WPUSUVmT	SST	PPRSW
PPUPW	 WWST	STWUQSYEEGASW VF\TTS\ZD\PY@YUZE=D\WABSQPU

 WRT	VqWDTYH[S^WTYZ_\UVPT_REK@F[^_Y]^WBTRB@YFKE]DDKBTETBZWPUTEfIBW_^YWWSQRPTV TPSPnEXYI]m nR

PPWPSUTSRSWPW	VQTV T
TQRQPYCF@APT TE\RTQ_YDZS^@[VYE:D^TBBWP  
UUWP PTqQGSYJX[XYBY\URWT_REK@F[^_Y]^WBTRB@YFKE]DDKBTETBZWPUTEfIBW_^YWWSQRPTV TPSPnBR]E^mnR

PPWPSW		V T PTRPT	SRTPQPWSU	PVWPW		TWUQSYEEGASW VF\TTS\ZD\PY@YUZE=FB]XP_
RSTVQSVSTVTUSR
QVWqWBQ[J[[X_G[^UVPTUTPPTSTRQPnDW_G^nnW
PVU
SUWTSRQWRTSSTS TRTPQP_FDBAP V WEZW TR_YB_Q\@XVYC	8D]TBDTVTS	WWS	P  UwJYPG_VVT_T@IBFX^_
\_\WBTTGB[FHE[AFKATCQ@ZTPUR@dKBT_X\UTUTPPTSTRQPnDW_G^n nW
PVU
SUWTSRQWRTSSTS TRTPQP_FDBAP V WEZW TR_YB_Q\@XVYC	88