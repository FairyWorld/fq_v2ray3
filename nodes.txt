D]WABWG]UxrqV{]tYkry{ZkJ}[yH|IHId[}p_V{ssUx\vAhs{x[i{YEyxrqV{sx]S~{Z][S\fhwtD}\b kFYS_}DPx\xXGz{ssUxrzAhs{x[}hwg|K}~g|Z|f}E|tgHH }tg}eyHh]kfi wgEHyBqYsUxrqXP]dx[_XV[}p_V{ssUx_rYVwU[~XyGShcDxXGz{ssUxrzFPxx[_X|tcHxXGz{ssUxrzFQI{xZa`ugU|eu {t{E|[yEdwF|uuVdU|uuX~q]UxrqV{^`ARHy{^`ARHyBqYsUxrqXVx^Ekby{]DS\eX~q]UxrqV{^k[~XyH{WB;G]TACTG^UyqsVx]wYjq{xZtJ~qI~q|cxAs[sVxsp[ie^ZxZ^[~XcX}q^UyqsVx]YDScX~Y{jexZhg	Gjzd[PcGSKGR]R[|s]VxspUy_^ZxZ^[~ `]hgt }HsEk]{[}Kktx |et\|ZpFi_t[` jXkH|hKy[EzxspUyqxDkh`[[xRIxAs[sVxsp[SutPsxy[Fhh{Ua
X}q^UyqsVx^sDS\cX~Yx~vX}q^UyqsVx^sHyX]Xe[wbasI|d|U}XsH|YJ}aF|cpJv]F|cxAs[sVxsp[TuJKxZ^[TuJKxYFyyqsVxs{Ujp]xZ^[R_DkcxAs[sVxsp[T[{xZx[s\;F\WCAUF]W{qpVy\t[hqxy[wH|q~H|[IeY~s^VyrsW{_wAjr{{XhyXE{{qpVyrx_Py[]YVz{ TvZ]VeIDji|J~_c iF[P\|DRx^{[FzyrsW{q{Ajr{{_`Kie{H|XVK|eYXRE~uGh[ X~eYH~fdH}[kvtieg[xBsXsW{qpXR\d {X^XTY~s^VyrsW{\sYTvUY}[xGj\t VugD|H{Cq[pVyrsYQuHTr{{X`}H{Cq[pVyrsYQz|XXxfcwyuwHapH}u{I~ftI|esH{vt[sH{[FzyrsW{q{RyY}[{RyY~s^VyrsW{\cSvgY}[{DR\{[FzyrsW{q{y[]Y[xzV`8D\TCBWF^WxqqU{\w[kqy{[tHq|HaK|XxCr[qU{rpYhe\Y{[^YXa[~p^WxqqU{\YFRa[}X{Yke^V\CkeXhb[kuH~\\UqyAqXpWxqq[Sf`Y~[z^|K|Ik_akHIhHb^~e`|X}F}u]\q H|f{XhXWE|Kc\|f}[~p^WxqqU{\\Uqy{_UJx[Gy{rpWxqzEkic_xX_[~ @S_aD{XF{xqqU{r{GSz{[^YvaH{XF{xqqU{r{GRKy{Z`cweUe|GxvyE[xD|fuFutW|fWutY}s_U{rpWx\bAQHxx\bAQHxCr[qU{rpYUz\Ehbxx_DP\dY}s_U{rpWx\i[}XxIxU@8G]UBA
RVT
WS		
TSS QT RTrH[PD_VC
U_QBKBEX__^]\TCTQE@[EHE^CFHAUFSBYTQUWBfKAT_]^WTPVPSUQ TPQQnU
PSTWR
W	SRWqnT

PQWPRUTSRSWPWPQTP T	
UWRQPXEF@APT TE]TTQ_YE\S^@[VYD:D^TBCPWWPU
		WPP S RpRZY\SYD]P\B_]W\RCIAFY]\___WAWRDBXFIF]BEK@WER@ZUSVTCdHBU\^_UUSWSPWP	WRR	SmTSU	QPRnU
	PSW
SP	WWRR	STPT
QSUQ  T
WVPR	PZDFBBPTWD_U WR^YG]S\CXWYF	8EC_[S^U	T QRTVP UVST
pU_TV]T]^USWSPWP	WRR	SmTSU	QPRnU
	PSW
SP	WWRR	STPT
QSUQ  T
WVPR	PZDFBBPTWD_U WR^YG]S\CXWYF	8G]UBA
PRT			WTSQ  PUr][^ZV_V]USU\QCH@E[_\_^^TCWQDCYEKF^BDHBUFRAYWQVWCeIAW\]_TWPWRSUPWSSQmTSTSSRoW
QPU
SSWTSSQW	RT	SST	S UTTPQQYFDBAQ V WE\W TR_XD_Q\@XVXE	8D]TCBVSPW		WSRW	 RWQqQX[\PYBQVT\S@KAEY^\\]_TBWSG@XEIF\AEH@TDQBYUPVU@fHAU\_\WURTSSTS 	WPR	PmWSW	RQQ nT

PQWPRUTSR	QWPWPQTP T	
UWRQPXEF@APT TE]TTQ_YE\S^@[VYD:D^TBCSVSRP
WWP	 T PPpV_UU_TDZT^R@IBFX^^\_\WBURGB[FHD]AFKATEQ@ZTPTT@dKBT^^\UTSTPPTSURQPoWQURPQmT		SSTPPUWRQPTSW
PQUPW	WWRR	SZEE@BSWTD_TWQ^ZG\P^C[WZF:G^UAA
UP	R 

 TP
W P	rU^WTV_UWRVT_SCK@F[^__]^WBTSD@YFKE\BDKBTDRBZWPUUCfIBW___WWRWRPTP TPSPnTPRWUUWSoW	QST	SPTVPSPU	ST
SPW	S	 U	 WTSSQZFEACQ WWF_WVR\XG_P_BXUXF;F]WCAWW  P	
  USU  	SrU\TW\WUCU\QCH@E[_\_^^TCWQDCYEKF^BDHBUFRAYWQVWCeIAW\]_TWPWRSUPWSSQmTSPTT
U	TSofjW	T WQRRWT	SSVTP	Pn  WTTWSQSTPUSPTS W	
 	UTSRSXFFABS TVE]WWS_ZE_S_CYVZD;G]TACTGyyqsXUYxyq{HxYF|s[sVx^sHyX]VxETEeX\Ub
]^A__^]iXzAG[Dcu\\~j\XAiB_BzAVjaDFxB^UxcESH]G}`GRegGh]TeYS^{Bj Z~dZ[|szxsp[ie`ZxZ^Uy_VEkgUFja_hcxAtc]Vxs{ERxxZ^UyXc|IxAtc]Vxs{Bjq{xsxJ~Xp[kd{X}q~g`K|fwIkgxFied\|I~XsF|t|}XdXhgh[|szxsp[ie^ZxZ^UyXwHxYF|s[sVx^XUa{xs{ZTj`GxYF|s[sVx]^Tq{xs{SK{Bua^UyqxThs^yX]Vx]DR_gX}qyyqsXPwHTq{xs{\Red_SgdGj wX}qyyqsXRwwQq{xsxDU\ViRxceUuUGxYF|s[sVx^cASK{xs{RzX}qyyqsXRByX]VxYx|s\;F\WCAUF{{qpXTX{{qxHyXE~q[pVy_pJ{X^VyDWGfX]Ta_^A^\\_h[xCGXEbsWb ^C\SzchudHPQy` Qz||H ~_ ]||ESzgEifISeU^TuY{[FsXsW{_wZjr{{q{XQfVJVjxDikY~szyrsYQuHTr{{qx~uY~szyrsYSe`XXsY|fcZ~uZY dEu^]|aI}fdY~et ~cD|fhF}usJ|vxi\`Z{[FsXsW{_wAjr{{qxI}X{Cvc^VyrxJkZXXsYkjgRH{Cvc^VyrxEhj`XXsYV|X|p{{qpXTy^GhaxyrxEP ]yXE~q[pVy\ZFQ`XXsYk_]_SdI~_\yXE~q[pVy_pXVuVXXsY~Uai|gc[|H{Cvc^Vyrx Pz|XXsYVuIKyXE~q[pVy_|ESaxyr{YvcA:E@_XS_	RUPWQP 
SUV QqEB^FB]\]
TSTPPTSURQPoW	WQUSSVmT		SSTPPTSW
PQUPW	WWRR	STWSQSYEDAASV VF\TTS\ZD\Q_@YUZE	;D\WABSQPT

 WRT 	VqWERYH[S^WU_Z_\UVQT_SCK@F[^__]^WBTSD@YFKE\BDKBTDRBZWPUUCfIBW___WWRWRPTP TPSPnD^YI]m nT

PQWPRUTSRSWPWPQTP T	
UWRQPXEF@APT TE]TTQ_YE\S^@[VYD:D^TBCWQ	  
UTWP PTpWGSYJX[Y_BY\URVT_SCK@F[^__]^WBTSD@YFKE\BDKBTDRBZWPUUCfIBW___WWRWRPTP TPSPnCT]E^mnT

PQWPRW	P T	 PTRPU	STTPQQWRU	PPWPW 	TWSQSYEDAASV VF\TTS\ZD\Q_@YUZE	;FB]XP_

TSTVQSVSTVTURT
QVWqVDQ[J[[X^A[^UVP
TSTPPTSURQPoBW_G^noW
QPU
SSWTSSQW	RT	SST	S UTTPQQYFDBAQ V WE\W TR_XD_Q\@XVXE	8D]TCBUPTS	VWSP   UqJYPG_WPT^R@IBFX^^\_\WBURGB[FHD]AFKATEQ@ZTPTT@dKBT^^\UTSTPPTSURQPoBW_G^n oW
QPU
SSWTSSQW	RT	SST	S UTTPQQYFDBAQ V WE\W TR_XD_Q\@XVXE	88