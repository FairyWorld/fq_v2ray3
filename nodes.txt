D]WACWG]Uy{qU{]tYj{y{ZkJ|RyK|IK~QKY{AsQqU{ss[io\Y{Z][~Ra[~q]Uy{qU{]ZDSa[}YxGj`bYkg
GjpfXS`GSADQ]Q[|y_U{ssUyU\Y{Z][iUvXhggjUuFggiA htJ|ozY}w{F~
uKhtx^lWKdt^yQGy{ssUy{zGhhc[QzQI{AsQqU{ss[SvSs{yQ	\ShxA|AyAqYsUy{q[QwKT{y{Zc}AyAqYsUy{q[Qx[Qz}f `ty|uJ|csK}|yK~ds|lqK{tsERqJ{YEyy{qU{sxRp}[}YxRp}[~q]Uy{qU{^`Se[}YxGR
^{YEyy{qU{sx yR_[Y{yVi8F_WCK
UE]WqssUy_t[bs{yXwHvs~KwcJ~HYYtq]UyqsWq]tBjq{qZky[E{qssUyqx_Z|yX]Y\d[jutFt]`i F[Z^GRx^qYEyyqsWqsxBjq{q]|_~vkugw|edZaJsF~vgIvsZvtg{J~Hcv]giXZZus{As[sWqss[R_d qZ][TYtq]UyqsWq^pZTuUYwY{DTzxXaADy[E{qssUyqxGZxyX]YvtcHy[E{qssUyqxG[I{yY`jugU}fwJqt{E}X{DutUF}v{Wuts}vwYtq]UyqsWq^`ASK{q^`ASK{C{YsUyqsY\x^Eja{q]DR_gYtq]UyqsWq^k[[{IqWB:D_UKCWE__yqsW{_vSjq{{Xu@~q |KqH|H}Q|s]W{qq_y_t@hqyyXk {[GsyqsW{qzWR| {X_Qi_dEhjjNRudEk eMju`EQKMjjcY~s__yqsW{_\SyX]Y|Xe}u`]HiLuwa ~vw~f[O}ekD| ~R}v|\u~P~Hg {[GsyqsW{qzMjjcY}[zSK{Cq[q_yqsYQuvQq{{[	UQeJC~KyKs[sW{qqQSuIVqyyXc KyKs[sW{qqQSzY}[zwd`v{vuB}qsIvyA|fs~fqAyvsG}Xq@y[E{{qq_yqx Pz}Q[x Pz}Q|s]W{qq_y\`QueQ[xEP Ty[E{{qq_yqx{X_Q}[{{Tc:D_UAA
WE_U{syW{_vYhsq{XuJ|s |KJtmE|[yAqYyW{qq[kgT[{X_[|ZiY~s_U{syW{_XDQiY}[zhgr[keGhwjEQKGhhiY~s_U{syW{_\Y{ZWYuaJkd~\| eFhtaGkK duG~fXZJ}D}v}|tz\| akdy{[Gy{syW{qzGhhiY}[zQIqCq[qU{syYQuvSsq{[	HhhiF{[Gy{syW{qzEPr {X_[|tiJ{[Gy{syW{qzEQIq{Yb`umWfu{tqGXyFt_DvyUtyvu[~qWW{qqU{^jCQKy{^jCQKyAqYyW{qq[VxTGhay{]FP_e[~qWW{qqU{^aY}[yK{WH	8D\WAC STW
US

WRPYV SWp@YPG^UAW\SJIBFY]\V_\WAWSMB[FIF\KFK@WD[@ZUSVUJdKBU\_VUUR^PPWY	WRQ	Sm]SPVU	PWPZUqmWQSU PP]VPSQU	RW
SYW	S	U	WTZSQZFDHCQ VTF_W
VQ\XG_QVB[UXF	2F^WCARTVR]

	UPQP 		QrQXQ^SZE_S^J_^
U\QBKBDQ_\^]\UCWQE@[DAF^CFIHUFSBX]QVWBfK@]\]^W]PVPRUQ 	WPQQmU	SWSSSm]
SQU
RRWTPQQWRUYSWYW		U^PQSXLDBAS
V VF]] TS\ZEUQ\@YUZD	8FB]XQV
T

	TSQ	UTRVTS 
WxW_WW_WU\]PVPRUQ 	WPQQmU	SWSSSm]
SQU
RRWTPQQWRUYSWYW		U^PQSXLDBAS
V VF]] TS\ZEUQ\@YUZD	8D\WACS PW	TWRY  QVpUY^YW]U_WS]^Q@IBFYW^\_\WKUQGB[FID^AFK@]FQ@ZUYTW@dKBU^]\UUPTPP]S	URQ	YoWQU	[SQmU 
SS]PP	UTRQ	YWZW
QQUQ
W WVRQ	SZDL@AS^ TD_UTQ^ZG]Y^@[WZF	:D^UAA
 TPR
U

	WPPT  QVSrSPY\SX@S^
W^[BKBD[]^^]\UAU[E@[DKDTCFIBWLSBXWST]BfK@W^W^WWZVPRWQ 	UPQSoU	QWQYSoWQSU PP]VPS
SU	RW
SYW	S	U	WTZSQZFDHCQ VTF_W
VQ\XG_QVB[UXF	2F^WCAQV	QQR
V	UPW 
PQrU]]W_WFY
U\QBA@F[_\^W^WCWQEJYFKF^CDKBUFSHZWQVWBlIBW\]^]WPVRPUQ
WZSQmUS]SSS	oW
QSU
RPWTZSQW	RU
SS]	SU	WTPQQZFDBAQ V VL_W TSVXG_Q\@Y_XF	8D\]CA]R
S WRW R	rV_UWTWWWSTW^Q@IHD[]^\_VUAUQGBQDKD^ALIBWFQ@XWSTW@dA@W^]\UWPTZRWS	UR[SoWR	PUV
]VPgW

YQWPRUTR[SWPWSQUS ]	
UTRQ	YXFF@AY T TD]WTQ^PE_S^@[WPD:D^UKCTUQ
 WP 	V  P pU_UU_UWC]^Q@IBFYW^\_\WKUQGB[FID^AFK@]FQ@ZUYTW@dKBU^]\UUPTPP]S	URQ	YoWP	PU	\
WVPmehUV	WSQZUWPQVURPo 	 T V
WVPS	SU	PW QSW	Q 	U
]VPSQPDFBCQTTFUU VQ\XM]S\B[UXL	8F_WCK
UE{qss[T[{qs{Ky[E~{YsUy\pJqZ]UyGWMe[]WaU\B^\\Uh[xIE[Eav^T|j_YCj@W@zBWhbFNzB]Tz`G[J]D|cEZggDi _\gZR\x@bZfYYtqyyqsYag`YyX]Wq]VFjeVDbc\ia{C|a]UyqxGZxyX]WqZc}K{C|a]Uyqx@bs{yq{HvZpXjfxZusecItdwJje{Dagd_}KvZsE}v uZd[iekYtqyyqsYag^YyX]WqZwKy[E~{YsUy\|Z]c{yqxX\h`Dy[E~{YsUy_\\s{yqx[I{Atc]WqsxUjp\qZ]Uy_FZ]g[|s{qss[QuJ\s{yqx^Zgd\RegEbw[|s{qss[Sut Ys{yq{F]^VjSz`g]wUDy[E~{YsUy\`C[I{yqx Zx[|s{qss[S @qZ]Uy[{~{^:D_UKCWE syqsYV[yyq{I{[Gvs[sW{\rByX]W{GUEeY_Wc ]^@\^T]jYpAG[ Gaq_a]ATSybkwlKQSzbSz~K	|_\~ ~MQzdDkeAQeV_Vv[y[E~q[q_y_t[hqyyqxYSeTBTj{Ek iQ|s{{qqQSuIVqyyq{ |v}Q|s{{qqQQecY}[qQ~f`[|vXQ} gD}v\U~aHefQ|ew| aL~fkGvqB~v{k_bRy[E~q[q_y_t@hqyyq{H[yKtc]W{qzBiYY}[qQijd PKyKtc]W{qzMjjcY}[qQTY~s syqsYVz\Oja{{qzMR \{[Gvs[sW{_XNScY}[qQi_^^QfA|_|]{[Gvs[sW{\rPTuUY}[qQ|Vc a~g`Z~KyKtc]W{qzRzY}[qQTuJJ{[Gvs[sW{\~MQa{{qyQtcB	8FBWZS\
S
VP VSRPVTQrD@]DJ__\WPVRPUQ
WZSQmUTS]RPToW
QSU
RPW	RU
SS]	SU	WTPQQWVPS	SZDFBCST^D_U V[^ZG]S\BQWZF	8FTUAA
QYRV 
UZU 	TrVGQ[@YS]VW\XW^UWSW^Q@IHD[]^\_VUAUQGBQDKD^ALIBWFQ@XWSTW@dA@W^]\UWPTZRWS	UR[SoF][A_moWQSU PP]VPSQU	RW
SYW	S	U	WTZSQZFDHCQ VTF_W
VQ\XG_QVB[UXF	2F^WCAVS

TV	UP	 
PWrTE[[J[Z[\@Q^USTW^Q@IHD[]^\_VUAUQGBQDKD^ALIBWFQ@XWSTW@dA@W^]\UWPTZRWS	UR[SoAW_M\moWQSU PPW

S W
RU	ZPWP WVRQ	SUP]
QSUQ 		W
WVPS	SZDFBCST^D_U V[^ZG]S\BQWZF	8DJ_XS^WQVVS[TPU TTTPWYTTpTGSSH[XY\BYVWUQWPVRPUQ
WZSQmAUWE^mmU 
SS]PP	UTRQ	YWZW
QQUQ
W WVRQ	SZDL@AS^ TD_UTQ^ZG]Y^@[WZF	:D^UAA
WSVQ
	T	WP
R TrHQRG\US
U\QBA@F[_\^W^WCWQEJYFKF^CDKBUFSHZWQVWBlIBW\]^]WPVRPUQ
WZSQmAUWE^mmU 
SS]PP	UTRQ	YWZW
QQUQ
W WVRQ	SZDL@AS^ TD_UTQ^ZG]Y^@[WZF	:8