D]WACWG]Uy{pQ{]tYj{x {ZwJ~{|I}kNJk[|y^Q{ssUyUwFhs{yRh{YEyy{pQ{sx]R{Z][RUghwtD|UckFYRV|CPx\yQF}{ssUy{{Fhs{yRY\kJk~
t~g|Yo`B|w`[}Q _|wgH|lx|tYKilZ}t|ZikxEqYsUy{p_P]dyR^_V[|y^Q{ssUyVs^VwU[Qx@QdKTU]\hc
[|y^Q{ssUyVs@Q^c[Qx|t[|y^Q{ssUyVsL{Z][dSs`csJ}ldQZsK}QA}sJ~QpAJ]E}kxEqYsUy{p_VwJHyR^_VwJHyQF}{ssUy{{Whp^yR^_P]GjkxEqYsUy{p_VY{yRx_q^:N\SAC]FYUyqsWq\pYjq{q[oJ|X{IvHH}aHweU[|s]WqrwUy_t@bryXk qXAyyqsWqr|]R| q[Y[T dYbvpD|_`aBYR\EZ|\y[E{qrwUyqx@bryXxXu[oEifwteZYjvDvu{H~[aKw|fsIufsE~ `Zvet_~a{C{XwUyqsYZ\`yX]Y\{[|s]WqrwUy\pX\vQ[[{Fafd je \i|^|K{C{XwUyqsY[vKTq{q[g}K{C{XwUyqsY[y{[[xldtyvwHuHwK}v{Itew|fwquwHXsHqXAyyqsWqr|RzYwX|RzYtpYUyqsWq_dSugYwX|GR \qXAyyqsWqr| yX]YuXyVc2G[WCATA]W{qq_x[t[hqyx\wH|qOHvuM~rwY~s__xusW{_vHku{{Xix_E{{qq_xux_P~x\]YV fQkqtF~_bSSXEP_fx_E{{qq_xux@hqyx\I|_}@|qc~fqA|\kD|vTP|Oei	}bwhu~RLUh_}	~e{Cq[q_xusYP_fx\]YV}Q}w]W{qq_xXpXVuWQ~_{FQ HSqgF{[GsxusW{qzOSx {X_QrcJ{[GsxusW{qzORO{{YhcsgWfuxr{GXyL|rUDfi_|rvuQ}w]W{qq_xX`CQKyxX`CQKyKr_sW{qqQU~^Ghayx[FP_eQ}w]W{qq_xXkY}[yAxQB	8D]]BEWGWVqqU{]~Zlqy{ZaIzXyK|Ix[KduXzs_U{syV_vBhsqXi{YOzqqU{sr^T~{ZWXo_fGhhbGTufGkmDlubGQIDlja[~qWVqqU{]TZX_[hwr\{vShZyExXT[}c{ fX~gr[o_iFh]rYoHyEa{Xq{YOzqqU{srDlja[}YrUKyAqYyVqq[Qw~Wqy{YZljrZQ^jEle~IqBu[qU{syXUu	KVsqXaIqBu[qU{syXUz}[}Yr~bbt{t}K{qqKtqHzfq~d}vqH}ZyI[Gy{syVqzPxuXy[zPxuXzs_U{syV\bQwmXy[zGP][Gy{syVqz {ZWX{[yyTa<D\WAC STW
TW

 WRPYW SWp@XTG^UAW\SJHFFY]\V^XWAWSMC_FIF\KBK@WD[AZUSVUJeOBU\_VTUR^TPWY	WSU	Sm]	SPVT	PSPZTumW	QSU TP]WPSQT	RS
SYW	SU	WTZRQZFDHBQ VPF_W
WU\XG_QVC_UXF	2GZWCASTVR]
	TTQP  	QrQXQ_WZE_S^J[^
TXQBKBDQ^X^]\UBSQE@[DAB^CFIHTFSBX]PRWBfK@]X]^W]PVPRTQ 	SPQPiU	WWRSSm]	
SQTRRSTPQPWSUYWWYW			U^TQSXLEFAS
W VF]]TS\ZEUPX@YUZD<FB]XQVT

PSQ	UTRVUW 
WxV[WW_WU]]PVPRTQ 	SPQPiU	WWRSSm]	
SQTRRSTPQPWSUYWWYW			U^TQSXLEFAS
W VF]]TS\ZEUPX@YUZD<D\WACS PW	T WRY QVpUXZYW]U_VW]_U@IBFYW_\_\WKTUGB[FIEZAFK@]BQ@ZUYUS@dKBU_Y\UUTTPP]S	TRQ	YnWPU	[WQmU SS]	PP	TPRQ	YSZW
QPUQ
W  WVSU	SZDLAES^TD_UPQ^ZG]Y_D[WZF	;@^UAA
 TPR
T

	 SPPT   QVSrSPXXSX@S^W^[COBD[]^_Y\UAU[DD[DKDTBFIBWLRFXWST]CbK@W^W_SWZWPRWP	UTQSoT 	QSQYRoW	QSU TP]WPS
ST	RS
SYW	SU	WTZRQZFDHBQ VPF_W
WU\XG_QVC_UXF	2GZWCAPR	QQRV	TTW  
TQrU]]V[WFY
U\QBAAB[_\^W_SCWQEJXBKF^CEOBUFSH^WQVWBlHFW\]^]WPVSTUQ
WZRQmUS]SSS	nW
PWU
RTWTZRQWRUSS]ST	STPQP^FDBAP V VL[W TSVYC_Q\@Y_YB	8D\]BE]S
S 	WR	SRvV_UWTWVSST	W^Q@IHE_]^\_VTAUQGBQEOD^ALHFWFQ@YSSTW@dAAS^]\USPTZSWSUR[SoWS	PUV
]VPgS

YPWPSUTR[SWPW	WQUW ]
TPRQ	YYBF@AYT TD\STQ^PD[S^@[WPE:D^UKBTUQ
 WP V P qQ_UU_UVG]_U@IBFYW_\_\WKTUGB[FIEZAFK@]BQ@ZUYUS@dKBU_Y\UUTTPP]S	TRQ	YnWPTU	\WWPmehT V	SSQZTWPPRURTo 	T V
WVPSWU	TW PSW	P	U]WPSQPEBBCQPTFUT VQ\XM\W\B[UXL8F_WCKUE{qrw[T[{qrKy[E~{XwUy\pJq[YUyGWMa[]WaU]B^\\Uh[xID_Eav^T}n_YCj@WA~BWhbFN{F]Tz`G[KYD|cEZfcDi _\fZR\x@b^fYYtpyyqsYafdYyX]Wq\RFjeVDbb\ia{C|`YUyqxGZ|yX]Wq[g}K{C|`YUyqx@bryq{Hv[tXjfxZurecItesJje{Daf`_}Kv[wE}v u[`[iekYtpyyqsYafZYyX]Wq[sKy[E~{XwUy\|Z]byqxX\idDy[E~{XwUy_\\ryqx[HAtc]Wqr|Ujp\q[YUy_FZ\c[|s{qrw[QuJ\ryqx^Zf`\RegEbs[|s{qrw[Sut Yryq{F]_RjSz`g]vQDy[E~{XwUy\`C[Hyqx Zy{[|s{qrw[S @q[YUy[{~{_:D_UKBWE sxusYV[yxu{I{[Gvr_sW{\rBx\]W{GUDeY_Wc \Z@\^T\jYp@C[ Gaq_a]ATWybkwlKQSzbR~~K	}[\~ ~MP~dDkeAPaV_Vv[x_E~q[q_x[t[hqyxuxYSeTBUn{Ek iQ}w{{qqQRqIVqyxu{ |v}Q}w{{qqQPacY}[qQb`[|vXQ|gD}v\UeHefQ}aw| aLbkGvqBr{k_bRx_E~q[q_x[t@hqyxu{H[yKug]W{qzBhYY}[qQhnd PKyKug]W{qzMkncY}[qQUY~s sxusYVz\Oke{{qzMS\{[Gvr_sW{_XNRcY}[qQh[^^QfA}[|]{[Gvr_sW{\rPUqUY}[qQ}Vc ac`Z~KyKug]W{qzS~Y}[qQUqJJ{[Gvr_sW{\~MPe{{qyQugB	8FBW[W\
S
VT VSR	PVTUrD@]DJ^_\WPVSTUQ
WZRQmUTS]RPTnW
PWU
RTWRUSS]ST	STPQPWVPSWZDFBCWT^E_U V[_^G]S\BQV^F	8FTTEA
QYSV 	UZU	U rVGQ[@XW]VW\XW_QWS	W^Q@IHE_]^\_VTAUQGBQEOD^ALHFWFQ@YSSTW@dAAS^]\USPTZSWSUR[SoF][A^ioW	QSU TP]WPSQT	RS
SYW	SU	WTZRQZFDHBQ VPF_W
WU\XG_QVC_UXF	2GZWCAVS
TV	TT	  
TWrTE[ZN[Z[\@Q_QST	W^Q@IHE_]^\_VTAUQGBQEOD^ALHFWFQ@YSSTW@dAAS^]\USPTZSWSUR[SoAW_M]ioW	QSU TPS

S W
SU	ZTWP WVSU	SUP]
QSTQ 		S
WVPSWZDFBCWT^E_U V[_^G]S\BQV^F	8DJ^\S^	WQWRS[UPU UPTPWYUTpTGSSI_XY\BYVVUQWPVSTUQ
WZRQmAUWDZmmU SS]	PP	TPRQ	YSZW
QPUQ
W  WVSU	SZDLAES^TD_UPQ^ZG]Y_D[WZF	;@^UAA
WSVP
	T	 SP
R  TrHQSC\US
U\QBAAB[_\^W_SCWQEJXBKF^CEOBUFSH^WQVWBlHFW\]^]WPVSTUQ
WZRQmAUWDZmmU SS]	PP	TPRQ	YSZW
QPUQ
W  WVSU	SZDLAES^TD_UPQ^ZG]Y_D[WZF	;<