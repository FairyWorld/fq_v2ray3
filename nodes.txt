D]WACWG]UyzpT{]tYjzx{ZwJ~z|IJ}}`FZyPFx{ssUyz{[Sgc[Px|s{AsPpT{ss[Q~IVs{yWU_k]`ZR@XVg|@j~I~]Kj@x@qYsUyzpZSgc[PxkddXiSXkY}~|D~dcK}}pGkdk}@|E}S]_}w`[~ChZ~q]UyzpT{]^Tzx{^VHyPFx{ssUyz{Dkh`]yS^Z~|DR~cChh{DyPFx{ssUyz{DPxyS^Z|tcHyPFx{ssUyz{DQI{yRc`ugU}mtI{t{E}SxGtYF}m|TdU}}tZ~q]UyzpT{^`AS@x{^`AS@x@qYsUyzpZVx^Ejjx{]DRTdZ~q]UyzpT{^k[PxJ{WB:O\VAC\F\UyqsWp\uYjq{p[vJ~q wH ~KHvej[|s]WprrUy_t@crzyXk pXDyyqsWpry]R| p[\[R_d cvuD|_``GYR\E[y\y[E{prrUyqx@crzy_`Xc[juGuf}X}ecDwuPJiaYta[|f`Yce[Yif|\`[f~K{CzXrUyqsY[\eyX]Y]~[|s]WprrUy\pX]vT[[{F]yyja
Yup\UyqsWp_qDS\cYvXz~vYup\UyqsWp_qHyX]YmZ
wbasHtefU}XsItXEaHtHrJv]GtbzAs[sWprr[TuJJp[\[TuJJpXDyyqsWpryUjp\p[\[R_EcbzAs[sWprr[T[{p[z[s\3G^WCATD]W{qq^x^t[hqyxYwH|q	JHveLwsY~s_^xpsW{_vIkp{{Xi	xZE{{qq^xpx_P~	xY]YVzzUtZ]VeHLkk|J~_bhF[P\}LS x^{[GrxpsW{qzIkp{{XiCww|fuN}dc|veMtg }q |I|\~fiCgd]|ui
w|\}qyJrZsW{qqPS^d {X_PU Y~s_^xpsW{\rQUtUY}[yOPtCSebQT`
Y~s_^xpsW{\rOR]cY}[y	wY~s_^xpsW{\rCxY]YfY	|c`sHfu^|YsI[ N~`HKqA~w]GayJrZsW{qqPUtJJ{X_PUtJJ{[GrxpsW{qz	Tkp\{X_PS^EhayJrZsW{qqPUZ{{XyPr]8D]\B@WGVVzqqU{]Ziqy{Z`IXyK|IK}KKJ`Xs_U{sxVz_vBhspzXi{YNzzqqU{ss^Q~{ZVXj_fGhhcGQufGklDiubGQIDija[~qVVzqqU{]UZzX_[hZ^|vb_kZtE~ yhs	} aK~dUZjfSF|JZ}_akwZjfTY{YNzzqqU{ssDija[}YsPKyAqYxVzqq[QwRqy{Y [je khtGz[Gy{sxVzqzEPszX_[|thKz[Gy{sxVzqzEQIpzYb`ulV~f}E{tpF~XyFtRE~f}Ud^~vu[~qVVzqqU{^kBPKy{^kBPKyAqYxVzqq[VxUFiay{]GQ_e[~qVVzqqU{^`X|[yK{WI9D\WAC STWTR

 WRPXW 
SWpAXQG^UAW\SKHCFY]\W^]WAWSLCZFIF\JGK@WDZAZUSVUKeJBU\_WTUR_QPWX	WSP	Sm\	SPVT
	PVP[TpmW	QSUQP\WPSQT	RV
SXW	SU
WT[RQZFDIBQ VUF_WWP\XG_QWCZUXF	3G_WCAS
TVR\
TQQP QrQXP_RZE_S^K^^
T]QBKBDP^]^]\UBVQE@[D@G^CFIITFSBX\PWWBfK@\]]^W\PVPRTQ 	 VPQ PlU	RW RSSm\	
SQTRR VTPQ PWSUXRWXW			U_QQSXMECASW VF]\TS\ZETP]@YUZD 9FB]XQWT
USQUTR
V
UR 
WyV^WW_WT]	\PVPRTQ 	 VPQ PlU	RW RSSm\	
SQTRR VTPQ PWSUXRWXW			U_QQSXMECASW VF]\TS\ZETP]@YUZD 9D\WACS PW	 T WRX 
QVpTX_YW]U_VR\_P@IBFYV_\_\WJTPGB[FIE_AFK@\GQ@ZUXUV@dKBU_\\UUQTPP\S	TRQ	XnWPU	ZRQmUSS\	PP	TURQ	XV[W
QPUQ
W WVSP	SZDMA@S_TD_UUQ^ZG]X_A[WZF	 ;E^UAA
 TPRT

 VPPT    
QVSrSQX]SX@S_W^ZCJBD[]^_\\UAUZDA[DKDUBFIBWMRCXWST\CgK@W^V_VW[WPRWP	UQQSoT	QVQXRoW	QSUQP\WPS
ST	RV
SXW	SU
WT[RQZFDIBQ VUF_WWP\XG_QWCZUXF	3G_WCAPW	QQRVTQW QQrU]\V^WFY
 U\QB@AG[_\^V_VCWQEKXGKF^CEJBUFSI[WQVWBmHCW\]^\WPVSQUQ
W[RQmU
S\SSSnW
PRU
RQWT[RQWRUSS\ST
	
VTPQ P[FDBA
P V VM^W TSWYF_Q\@Y^YG	8D\\B@\S
S	WR	V	R sV_UWTVVVSTW^Q@IIEZ]^\_WTAUQGBPEJD^AMHCWFQ@YVSTW@d@AV^]\UVPT[SWS
URZ
SoWS	PU
V
\VPfV

XPWPS
UTRZ
SW PW	RQU R \
TURQ	XYGF@AXT TD\VTQ^QD^S^@[WQE
:D^UJB	TU	Q
WPV 	 P qT_UU_UVB\_P@IBFYV_\_\WJTPGB[FIE_AFK@\GQ@ZUXUV@dKBU_\\UUQTPP\S	TRQ	XnWPQU	]W WPmehTV		VSQ[TWPPWUR Qo T VWVPSRU	QWPSW	P	U \WPSQQEGBCQUTFTT VQ\XL\R\B[UXM
8F_WCJUE{prr[T[{przKy[E~zXrUy\pJp[\UyGWLd[]WaT]B^\\Th[xHDZEav^U}k_YCj@VA{BWhbFO{C]Tz`GZK\D|cE[ffDi _]fZR\x@c[fYYupyyqsY`faYyX]Wp\WFjeVDcb\ia{C}`\UyqxG[yyX]Wp[b}K{C}`\Uyqx@crzyq{Hw[qXjfxZtrecIuevJje{D`fe_}Kw[rE}v t[e[iekYupyyqsY`f_YyX]Wp[vKy[E~zXrUy\|Z\bzyqxX]iaDy[E~zXrUy_\]rzyqxZHzAtc]WpryUjp\p[\Uy_F[\f[|s{prr[QuJ]rzyqx^[fe\RegEcv[|s{prr[Sut Xrzyq{F\_WjSz`g\vTDy[E~zXrUy\`CZHzyqx [y~[|s{prr[S @p[\Uy[{~z_:D_UJB	WE rxpsYV[yxp{I{[GwrZsW{\rCxY]W{GUDeY_Wc\_@\^U\jYq@F[ Gaq^a]AURybkwmKQSzb	R{~K		}^\~ ~LP{dDke@PdV_Vv[xZE~q[q^x^t[hqyxpxYSeTCUk{Ek iP}r{{qqPRtIVqyxp{ |v}P}r{{qqPPdcY}[qPg`[|vXP|gD}v\T`HefP}dw| aMgkGvqCw{k_bSxZE~q[q^x^t@hqyxp{H[yJub]W{qzCh YY}[qPhkd PKyJub]W{qzLkkcY}[qPU Y~s rxpsYVz\Nk`{{qzLS\{[GwrZsW{_XOR cY}[qPh^^^Qf@}^|]{[GwrZsW{\rQUtUY}[qP} Vc `f`Z~KyJub]W{qz	S{Y}[qPUtJJ{[GwrZsW{\~LP`{{qyPubB	8FBV[R\
 SV
Q VSR		PVTPrD@]DK^_\
WPVSQUQ
W[RQmU 
TS\RPT
nW
PRU
RQWRUSS\ST
	
VTPQ PWVPSRZDFBCRT_E_U VZ_[G]S\BPV[F	8FUT@A
QXSV	U[
U	 UrVGQ[AXR]VW\XV_TWSW^Q@IIEZ]^\_WTAUQGBPEJD^AMHCWFQ@YVSTW@d@AV^]\UVPT[SWS
URZ
SoF][@^loW	QSUQP\WPSQT	RV
SXW	SU
WT[RQZFDIBQ VUF_WWP\XG_QWCZUXF	3G_WCAVS
	TVTQ	 QWrTEZZK[Z[\@P_TSTW^Q@IIEZ]^\_WTAUQGBPEJD^AMHCWFQ@YVSTW@d@AV^]\UVPT[SWS
URZ
SoAW_L]loW	QSUQPV

SW
S
U	[QW P WVSP	SU
P\
QST
Q 	V
 WVPSRZDFBCRT_E_U VZ_[G]S\BPV[F	8DK^YS^
	
WQWWSZUPU UUTPWXUTpTGSRIZXY\BYWVUQ
WPVSQUQ
W[RQmAUVD_mmUSS\	PP	TURQ	XV[W
QPUQ
W WVSP	SZDMA@S_TD_UUQ^ZG]X_A[WZF	 ;E^UAA
WSVP
	T VP
R	 TrHPSF\US
 U\QB@AG[_\^V_VCWQEKXGKF^CEJBUFSI[WQVWBmHCW\]^\WPVSQUQ
W[RQmAUVD_mmUSS\	PP	TURQ	XV[W
QPUQ
W WVSP	SZDMA@S_TD_UUQ^ZG]X_A[WZF	 ;9