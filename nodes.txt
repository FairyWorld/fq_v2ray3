D]WACWG]UyzpU{]tYjzx{ZkJ|SxK|IJjK}s{AsPpU{ss[in]Y{Z][~S`[~q]UyzpU{]ZDS
`[}Yxjn{Ykg
GjqgXS`GS@DQ]Q[|x^U{ssUyT]Y{Z][imx |w|^iShFtc}jwd_|ntHgFnc_|tcH}k[dp^yPFy{ssUyz{Ghhc[P{QI{AsPpU{ss[S~wSs{yPYPB^RP	[~q]UyzpU{^pDSW`[}Y{~}|[~q]UyzpU{^pHyS^[f[wbjpJdU}SpKYEjJYsJ}m^Ec{AsPpU{ss[T~IH{Z][T~IH{YEyyzpU{sxUas^{Z][RTGhc{AsPpU{ss[TPx{Z{[sW8F_WCJUE]WprsUy_t[cr{yXkHu[{K~KtHK~fYup]UyqsWp\tBjq{p[ky[E{prsUyqx_[|yX]Y[\djutFu\`i F[[_GRx^pXEyyqsWprxBjq{p\wucHwv{|fhY`[QF~vkvbiXp[ufk ~_wGcu{J~uwIwb{As[sWprs[R_d p[][TYup]UyqsWp_pZTuUYvX{DS tDZvJ^|K{CzXsUyqsYZvKTq{p[c}K{CzXsUyqsYZy[[xm`tyvwHwbsK}v{Iues|fwIpuwJXsHpXEyyqsWprxRzYvXxRzYup]UyqsWp_`SugYvXxGR \pXEyyqsWprx yX]YtX{yVc3G_WCATE]W{qq^x_t[hqyxXwH|q	K|[A|XQY~s_^xqsW{_vIkq{{Xi	x[E{{qq^xqx_P~	xX]YVzzUuZ]VeHLkj|J~_bh F[P\}LSx^{[GrxqsW{qzIkq{{_}
ku`\|faN}fU|vyMvgI|qP~v{G~fu
~fYHueA~fhZkKyJr[sW{qqPS_d {X_PUY~s_^xqsW{\rQUuUY}[yOSudEhqP}s]W{qq^x\pFQ\aP~[{ |v}P}s]W{qq^x\pJ{X_PeYu`aqA|fwWXq@|[G}a A|[sHf_N|a{Cq[q^xqsYVuHCxX]YVuHCx[E{{qq^xqx WjrUxX]YP_	Lka{Cq[q^xqsYV[yxX{Yq\ ;D_UAA
WE_U{sxV{_vYhsp{XuJ|s|K|sI|H[[~qVV{qqU{]Ahqy{Z`{[Gy{sxV{qz]Pw{X_[k]oDhjjDPwoDk eGhwkDQKGhhhX~s_U{sxV{_\Y{ZVXk }Jk]l|e}F|]lF|q |t[~eyE|d^Ef~_wl kX\^|wc]{[Gy{sxV{qzGhhhX}[zQIpBq[qU{sxXQuvSsp{[	Kkh{Ahq[~qVV{qqU{^{GQ\a[}Yp|v}[~qVV{qqU{^{K{X_[f[ t`aqJJxVXqKY	F}a JYxIf_EcpBq[qU{sxXVuHH{ZVXVuHH{YNz{qqU{ssWjr^{ZVXP_	GhcpBq[qU{sxXV[y{ZpXq\ 8FUTAA
ZWW
WS	

U[P QT	ZWrH[PEWUC
T\QBKBDP^\^]\UBWQE@[D@F^CFIITFSBX\PVWBfK@\\]^W\PVPRTQ 	 WPQ PmU
QPTW S
WPRWqoW

XPWPSUTRZSW PW	SQU S \
TTRQ	XYFF@AX T TD\WTQ^QD_S^@[WQE:D^UJBPV_PU
 WPXP 	SqQZY\SXL\S\B_\W\SKHBFY]\W^\WAWSLC[FIF\JFK@WDZAZUSVUKeKBU\_WTUR_PPWX	WSQ	Sm\ST	QQZmU
SSW
[P	WVSQ	SUP\
QSTQ 	W
 WVPSSZDFBCST_E_U VZ_ZG]S\BPVZF	8DK^XS^]
TPQ\WP 
VVS	W
pU_U^\W]^UR_PPWX	WSQ	Sm\ST	QQZmU
SSW
[P	WVSQ	SUP\
QSTQ 	W
 WVPSSZDFBCST_E_U VZ_ZG]S\BPVZF	8FUTAA
Q	SW	TU[Q X Vr][^[^^U]US
U\QB@AF[_\^V_WCWQEKXFKF^CEKBUFSIZWQVWBmHBW\]^\WPVSPUQW[RQmUS\SSS
nW
PSU
RPWT[RQWRU
SS\ST	
WTPQ PZFDBA
P V VM_W TSWYG_Q\@Y^YF	8D\\BAWPPW	WRST		S_PrQX[\QQCQV
W\S@K@MX]\\]^\AWSG@YMHF\AD@AWDQBQTSVU@fIIT\_\WTRTR[WS  WPSSmW SWQQQfW

XPWPSUTRZ
QW PW	SQU S \
TTRQ	XYFF@AX T TD\WTQ^QD_S^@[WQE:D^UJBSV RQP
	_WPW 	P	XqU_UU_UEY\_Q@IBFYV_\_\WJTQGB[FIE^AFK@\FQ@ZUXUW@dKBU_]\UUPTPP\S	TRQ	XnWPU	ZSQmU
SS\	PP	TTRQ	XW[W
QPUQW WVSQ	SZDMAAS_ TD_UTQ^ZG]X_@[WZF	 ;D^UAA

UPZ

 WP
W
  P	rTVVWV_UWZWUWR@K@F[_W\]^WC\RG@YFKM]ADKBUEQBZWQ]T@fIBWW^\WWSTRPUS \PSQfWP SWT	U	_PoW	QSUPP\WPSQT	RW
SXW	SUWT[RQZFDIBQ VTF_WWQ\XG_QWC[UXF	3G^WCA TW X

TPT PrU]\V_WUC
U\QB@AF[_\^V_WCWQEKXFKF^CEKBUFSIZWQVWBmHBW\]^\WPVSPUQW[RQmUPP\T
	T	TRnejWU WPQRWUPSV\P	P f  V TU_PQS\PTSQWS   W	
UTRZSXFF@JS TWF]W_R\ZE_S^KXUZD:O\WAC\FyyqsY]X{yq{IpXE|s[sWp_pHyX]WpDWEeYTTa
]^@W\^]a[zAG[ Lbv\\~j]P@jB_Bz@^kbDFxB_]y`ESH]FucGRegF`]TeX[_xBj Z veY[|s{prs[ie`[p[]Uy_VDcfVFja^`b{Atc]WprxERx p[]UyXc tH{Atc]WprxBjq{pr{J~XpZcexX}qvfcK|fwHcf{Fied]tH~XsGtu}XdY`fk[|s{prs[ie^[p[]UyXwIpXE|s[sWp_|XUa{prxZTj`FpXE|s[sWp\^Tq{prxSK{C}`]Uyqx \ip^yX]Wp\DR_gYupyyqsYXvHTq{prx\Red^[fgGj wYupyyqsYZvtQq{pr{DU\VhZy`eUuUFpXE|s[sWp_`ASK{prxRzYupyyqsYZByX]WpX{|s\3G_WCATE{{qqPU[{{qy@x[E~q[q^x\pJ{X_^xGWGgP\Wa_^I_\\_ 
i[xCGY	DasWc]C\S{kkudIXPz` Qz}}K ~_U} |ESzfMheISeTVUvY{[Gwr[sW{_vRkq{{qzPPeVJVjyLh kY~s rxqsYQu	@Uq{{qy	vY~s rxqsYSeaP~[sY|fbRvZY eM~v^]|a A|edY~eu cD|fiN|vsJ|vyh_`Z{[Gwr[sW{_vIkq{{qyA|[{Cvc_^xqxJk[P~[sYkjf	SK{Cvc_^xqxEhjaP~[sYV}P}s{{qqPUz^GhayxqxEP Ux[E~q[q^x_ZFQaP~[sYk_\WRdI~_~Tx[E~q[q^x\pXVuWP~[sY~T` i|gbS}K{Cvc_^xqx Pz}P~[sYVuHCx[E~q[q^x\|ESayxq{Yvc@ ;F@_XS^	ZTP_PP 
R
VV QpMC]FB]]UUPTPP\S	TRQ	XnW	VPU	[PVmU
SS\	PP	W[W
QPUQW WVSQ	SU_PQSXMEBASW VF]\ TS\ZETP\@YUZD 8D\WACSQPU

 WR\ 
	Vp_DQYH[S__T\Z_\U^PUWR@K@F[_W\]^WC\RG@YFKM]ADKBUEQBZWQ]T@fIBWW^\WWSTRPUS \PSQfE]YI]mfW

XPWPSUTRZSW PW	SQU S \
TTRQ	XYFF@AX T TD\WTQ^QD_S^@[WQE:D^UJB	_P
  
	]UWP   	PUqTGSYJYSX\BY\UZWUWR@K@F[_W\]^WC\RG@YFKM]ADKBUEQBZWQ]T@fIBWW^\WWSTRPUS \PSQfBW]E^mfW

XPWPSW	S U
 P\RPT	R	WTPQ PWSUXSWXW			U_PQSXMEBASW VF]\ TS\ZETP\@YUZD 8FB]XQW
WSTVQSVR\VT]SW
QVVyWGQ[J[ZP_B[^UWXUPTPP\S	TRQ	XnAW_G^onW
PSU
RPWT[RQWRU
SS\ST	
WTPQ PZFDBA
P V VM_W TSWYG_Q\@Y^YF	8D\\BA
TSTS WWR	P 	 	]rJYPG^VS\_Q@IBFYV_\_\WJTQGB[FIE^AFK@\FQ@ZUXUW@dKBU_]\UUPTPP\S	TRQ	XnAW_G^onW
PSU
RPWT[RQWRU
SS\ST	
WTPQ PZFDBA
P V VM_W TSWYG_Q\@Y^YF	88