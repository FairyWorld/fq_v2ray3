D]W@CWG]TyqsV{]tXjq{{ZwK~q|I ~as{@s[sV{ssZie^Z{Z]Z~XcX~q]TyqsV{]ZEScX}YxS\dSwhRu]QFjzd[S`FSKGQ]QZ|s]V{ssTy_^Z{Z]Zj_wHkdw~XQEJgK~q}dwI|e{IkG}v{d^Z~ugH}dQy[Ez{ssTyqxDhhcZ[xQI{@s[sV{ssZSutSs{y[FQ]djeKhc
Z|s]V{ssTy\pGQ^cZ[{|tZ|s]V{ssTy\pK{Z]ZdYt`csK}fwVZsJ}KFYJ}asIt]I}a{BqYsTyqsXVwJIyX]XVwJIy[Ez{ssTyqxWhp_yX]XP]Fja{BqYsTyqsXVY{yX{Xq^:D_TACWE^UyqrW{_wYjqz{XtJ~q |K~[H}v|[|s\W{qpUy_u@hqxyXj {[FyyqrW{q{]R} {X^[i_eEhjkDRueEk dGjuaEQKGjjbY~s^UyqrW{_]YyX\Yud}HXHv|F} z hq}fjG~fZ~vfDkXZJ~u}[hXk^~Xr{[FyyqrW{q{GjjbY}[{SKzCq[pUyqrYQuwQqz{[DTjaJSec^|KzCq[pUyqrYQuKTqz{X`}KzCq[pUyqrYQz|[[yfctyvvJqpK}vzJ~fpK|fzH{vtEX~H{[FyyqrW{q{Rz~Y}[{Rz~Y~s^UyqrW{\cSufY}[{GR \{[FyyqrW{q{ yX\Y[xyVc8D\WCA	WF]W{pqU{\t[hpy{[wH|p|H}pJuUY~r_U{rsW{^vBhr{{Yi{XE{{pqU{rx_P ~{[]YP^fhvtF~^bkF[P]}GPx^{ZGy{rsW{pzBhr{{Y}}eUHk^a~ftYyF|vwI}`Z}uZX~di hehXkgr^|uwH|ZyAqXsW{pq[P\d {Y_[VY~r_U{rsW{]rZVvUY}ZyDk\dEhp[~p]W{pqU{_pFQ]a[}X{ |w}[~p]W{pqU{_pJ{Y_[fZu``qJegWYqKHGZ KbsHw_Hb{CqZqU{rsYVtHH{[]YVtHH{XE{{pqU{rx Wkr^{[]YP^	Ghb{CqZqU{rsYVZy{[{Yq] 8G_UA@
TE_UzssUx_vYis{xXuJ}sK|s|[yApYsUxqq[jg^YxX_[}Zc[}s_UzssUx_XDPc[~[zigxYheGixdXP bGPIDR_S[q]UxqqUz]^YxX_[iZ|YfzY}JQFhfy }Y|Hq gwJheeF}tw| e~J^XvWzYEyxqqUzsxGkja[|YxRKyApYsUxqq[PwtPqyzY S\ZigDx[GyzssUxqzEQxxX_[}tcHx[GyzssUxqzEPI{xYbaugU|fuHzt{E|X}F~t{F|XuU~ds|Hu[q]UxqqUz^`ARKyz^`ARKyApYsUxqq[Wx^Ekayz]DS_e[q]UxqqUz^k[~[yKzWB;D\W@C STV WP
 WRQST  SVpJ[SG^TAW]S@KAFY]]\]_WAVSG@XFIG\AEK@WDQBZUSWU@fHBU]_\WURTSPWS 	VPR	SlW
SQVW	PTQPWrmV
QSU
SP
WTPS
QW	RT
RSW	R UWUPQQZGDBAQV WF_V TR\XG^Q\@XUXF
	8D]WCA	PTVRW	
WSQQ  QrPX[\PZE_R^@\^
W_QBKCD[]_^]]UATQE@ZDKE^CGIBWFSBXWSUWBfJ@W_]^WWPVQRWQ 	TPPSnU	PWQSSlW

RQW	RRTTPPSW
PUSPW
S V	
 	UTSQRXFFAAR T VF]WTS\[E_S_@YU[D;FB]YQ\T WSPUTR WVP 
VrU\WW_V_^WPVQRWQ 	TPPSnU	PWQSSlW

RQW	RRTTPPSW
PUSPW
S V	
 	UTSQRXFFAAR T VF]WTS\[E_S_@YU[D;D\W@CS PV	U WR
S QWp_[]YW]T_UP W\R@IBGY]\\_\VAWRGB[GIF]AFJ@WEQ@[USVT@dKCU\^\UUSTPQWS
	WRQ	SmW
SU	QPQmU
	SRW
PQ	WWRQ	STPWQSUQ W

VVPR	S[DFBBSTTD^U WQ^ZF]S\C[WZG	8G^UA@
  TQR W


TPPU  QVSsSZ[_SX@STV^Q@HBD[\^\^\U@UQGC[DKD^AFIBVFQAXWRTW@eK@W^]\TWPTPRVS	USQRoW	QTPSQ oV
QSU
SP
WTPSSW	RT
RSW	R UWUPQQZGDBAQV WF_V TR\XG^Q\@XUXF
	8D]WCA	SU	QPR	VWSV   SQrT]WU\WFX
U\PBKBE[_\^]\TCWPE@[EKF_CFHBUGSBYWQVVBfKAW\\^WWQVPSUQ WPQQmUSWSRSmWSPU
RSWUPQQVRU	SSWS
W	TTPPSYFDB@S VVF\W US\ZD_Q\AYUZE	8E\WAB WP
S

VR
T
RqV_UVT]UTST	W^QAIBFX]^]_\WAUQFB[FHD^@FKAWFP@ZTSTWAdKBT^]]UTPUPPWRURQSoVP	PUV

WVQmT

SSWQPUTRQSWPV
PQUP W

WWRQ	SZEF@AST UD_TTP^ZG\S^@ZWZF:D_UAAUUQ
WQ
V Q rV_UU^UU@ W\R@IBGY]\\_\VAWRGB[GIF]AFJ@WEQ@[USVT@dKCU\^\UUSTPQWS
	WRQ	SmWQSU	V	WTPmdhWV	TSPPWWQSUURSo TV WVQSPU	SW
SSV	S	U	 WTPS
QZFEBC Q WTG_W VQ]XG_P\B[TXF8F_VCAUE{{qp[T[z{qxKy[D~q[pUy\qJ{X^UyGVGf[]W`_^B^]\_hZxCGXEaw^^~i_YCk@]ByBWhcFDxA]TzaGQH^D|bEPedDi _Ve ZR\y@h YfXY~syyqrYkecYyX\W{_UFjeWDha\iazCvc^UyqyGP{yX\W{X`}KzCvc^Uyqy@hqxyqzH|XsXjfyZqebI~ftJjezDkeg_}K|XpE}v~ Xg[iejY~syyqrYke]YyX\W{XtKy[D~q[pUy\}ZWaxyqyXVjcDy[D~q[pUy_\VqxyqyQKxAtc\W{q{Ujq\{X^Uy_FP_d[|s{{qp[Qu
JVqxyqy^Peg\RefEh t[|s{{qp[Suu SqxyqzFW\UjSzagWuVDy[D~q[pUy\aCQKxyqy Pz|[|s{{qp[S @{X^Uy[z~q\:D^UAAWD y{rsYVZy{r{I{ZG|qXsW{]rH{[]W{FUGeY_Vc
_]@\^^_jYzCD[ G`qUa\A^PybjwfKQS{bQy~J	~\\~~GSydDkdKSfV_Vw[{XE~qZqU{\t[hpy{rxYSdTHVi{Eki[~p{{pq[QvIVpy{r{ |w}[~p{{pq[SfcY}Zq[|e`[|wX[gD}w\_|bHdf[~fw|aF|ekGwqH|u{k^bX{XE~qZqU{\t@hpy{r{HZyAv`]W{pzHkYY}Zq[kid PJyAv`]W{pzGhicY}Zq[VY~r y{rsYV{\Ehb{{pzGP\{ZG|qXsW{^XDQcY}Zq[k\^^Q fK~\|]{ZG|qXsW{]rZVvUY}Zq[~Vck|d`Z~JyAv`]W{pzPyY}Zq[VvJJ{ZG|qXsW{]~GSb{{py[v`B	8GB]XP\
 S
 VS VSR
 PWT RrD@\D@]_\WQVPSUQ WPQQmUTS
WRQTmWSPU
RSVRU	SSWS
W	TTPPSWVQSPZDFCCPTTF_UVQ\YG]S]B[UYF	9F^WBA
QSPV

	UPU	VrVGP[J[P]VW]X]\VWS	W^QAIBFX]^]_\WAUQFB[FHD^@FKAWFP@ZTSTWAdKBT^]]UTPUPPWRURQSoF\[K]noV
QSU
SP
WTPS
QW	RT
RSW	R UWUPQQZGDBAQV WF_V TR\XG^Q\@XUXF
	8D]WCA	VS	TVWS	   SWrUEQYI[Z[]@[\VST	W^QAIBFX]^]_\WAUQFB[FHD^@FKAWFP@ZTSTWAdKBT^]]UTPUPPWRURQSoAV_G^noV
QSU
SP
T

R
 WPU	PSWP VVPR	SUPW
QRWQ 	T
WVQSPZDFCCPTTF_UVQ\YG]S]B[UYF	9D@][S^
VQTUSQVPU VWTPVSVTpTFSYJXXY\CY\UUQWQVPSUQ WPQQm@U]G]mmU
	SRW
PQ	WWRQ	STPWQSUQ W

VVPR	S[DFBBSTTD^U WQ^ZF]S\C[WZG	8G^UA@
WRVS
	TTP
R  TsH[PD\UR
U\PBKBE[_\^]\TCWPE@[EKF_CFHBUGSBYWQVVBfKAW\\^WWQVPSUQ WPQQm@U]G]mmU
	SRW
PQ	WWRQ	STPWQSUQ W

VVPR	S[DFBBSTTD^U WQ^ZF]S\C[WZG	8;