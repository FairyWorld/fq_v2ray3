D]WACWG]Uy{qQ{]tYj{y {ZwJ~{|I}{|s{AsQqQ{ss[io\]{Z][~Ra_~q]Uy{qQ{]ZDSa_}Yx[joZV]Ajo\hcYjL~]^T{yEqYsUy{q_Sgc[Qy|Jk ioyLYYi
e~dc}RqB}dUK~k ]cHjoiZQEe_~q]Uy{qQ{]^T{y {^VHyQG}{ssUy{zAkh`]yR__~`BjUjZQ]dGT{_~q]Uy{qQ{^pDSVa_}Y{~|}_~q]Uy{qQ{^pHyR__f[wbkqNJsU}RqOYE{ A|YsE}l_Lc{AsQqQ{ss[THL{Z][THL{YEyy{qQ{sxU`rZ{Z][RU	Chc{AsQqQ{ss[TQy {Z{[sV 8F_WCK
UE]WqswUy_t[bsyXwHvs~KHutgG}fwqYAyyqsWqs|ZQecYwY ~q{C{YwUyqsYYwHTq{q]^Tu`XZIYTe|BbwH|_IbIAs[sWqsw[QecYwY|_~ugvdQE}q[v]g|fcHwdwFfw wsift\ugE~X{uZc[|s]WqswUy_\\sy\VJqYAyyqsWqs|Eij`_qZY[|V@[dDRa
YtqYUyqsWq^tDS\cYwY~vYtqYUyqsWq^tHyX]Yl[wbasHudcU}XsIuYEqGvYwE}f]JucAs[sWqsw[TuJJqZY[TuJJqYAyyqsWqs|Ujp\qZY[R_EbcAs[sWqsw[T[{qZ[s\2F[WCAUA]W{qq_y[t[hqyy\wH|q~OHvqM}\w{[GsyusW{qzPQacY}[y
~u{Cq[q_yusYSu	BTu{{\TTi[`XPKSjqJ~_TTu{Cq[q_yusYSeaQ_{J}fSbVYK B}rg ~faO}[D}vi@u[hefQ}rQIu~S}rwY~s__yusW{_TTu{{\TBy_E{{qq_yuxGkjbWy\]Y~ DTUe
Y~s__yusW{\rNSXcY}[y~rY~s__yusW{\rBy\]YfY	}besHfS_}\sI[ OuG|[qO}b]JayKs_sW{qqQTqJJ{X_QTqJJ{[GsyusW{qzUnp\{X_QR[EhayKs_sW{qqQT_{{XyQsX8D]]CEWGWWqqU{]~[lqy{ZaHzXyK|I{KcqCu[qU{syYoe\Y{ZWYxXa[~qWWqqU{]PFUa[}YrlezYkg ElzfXSjEUKDQ][Yzs_U{syW_\Y{ZWYx_i kZayfaF}daoK dSzfWtqDlX~YtaJoHi tPY[Gy{syWqzGhhiYy[zQIqCu[qU{syYUuvSsq[	_Pr Wq[~qWWqqU{^zFU\a[}Yq xv}[~qWWqqU{^zJX_[f[udaqJduW{XqKYGyq E|YyG{f_HcqCu[qU{syYRuHH{ZWYRuHH{YO{qqU{sr Sjr^{ZWYT_	GhcqCu[qU{syYR[y{ZqYu\ 8FTUEA
[VS
WS 
UZT QT 	[SrH[PEVQC
UXQBKBDQ_X^]\UCSQE@[DAB^CFIHUFSBX]QRWBfK@]X]^W]PVPRUQ 	SPQQiU
QTTWR
W	TRWqoS

YQWPRUTR[SWPWWQUW ]	
UPRQ	YXBF@AYT TD]STQ^PE[S^@[WPD:D^UKCPV^PU
 WPY T  SpUZY\SXM]W\B_\W\SJIFFY]\V_XWAWSMB_FIF\KBK@WD[@ZUSVUJdOBU\_VUUR^TPWY	WRU	Sm]SU 	QQ[iU
WSW
ZP	WVRU	SUP]
QSUQ 		S
WVPS	WZDFBCWT^D_U V[^^G]S\BQW^F	8DJ_\S^\TQU]VP RVSS
pU_U_]S]^UR^TPWY	WRU	Sm]SU 	QQ[iU
WSW
ZP	WVRU	SUP]
QSUQ 		S
WVPS	WZDFBCWT^D_U V[^^G]S\BQW^F	8FTUEA
QRS	 	PUZQ  YRr][^[__Q]US
U\QBA@B[_\^W^SCWQEJYBKF^CDOBUFSH^WQVWBlIFW\]^]WPVRTUQ
WZSQmUS]SSSoW
QWU
RTWTZSQW	RUSS]	SU	STPQQ^FDBAQ V VL[W TSVXC_Q\@Y_XB	8D\]CEVTPW WRRP	 S^QvQX[\QPBQVS\S@K@LYY\\]^]EWSG@YLIF\ADA@SDQBPUWVU@fIHU\_\WURTRZSS 	WPS	WmWSW	UQQgS

YQWPRUTR[QWPWWQUW ]	
UPRQ	YXBF@AYT TD]STQ^PE[S^@[WPD:D^UKCSVSUP
	^WP  S  P	YpQ_UU_UD]]^U@IBFYW^\_\WKUUGB[FIDZAFK@]BQ@ZUYTS@dKBU^Y\UUTTPP]S	URQ	YoWQU	[WQmU SS]PP	UPRQ	YSZW
QQUQ
W WVRU	SZDL@ES^TD_UPQ^ZG]Y^D[WZF	:@^UAA

UP[ 

	SP
W P	rTWWSV_UW[VUVSDK@F[_VX]^WC]SC@YFKL\EDKBUDUBZWQ\UDfIBWV_XWWRPRPUW ]PSQgSPRWTU	^ToWQSU TP]VPSQU	RS
SYW	S	U	WTZSQZFDHCQ VPF_W
VU\XG_QVB_UXF	2FZWCAPW Y
	UTT  		TrU]]W[WUC
U\QBA@B[_\^W^SCWQEJYBKF^CDOBUFSH^WQVWBlIFW\]^]WPVRTUQ
WZSQmUTP]T
	U	TRoajW T WQURWU TSV]P	P g  VTU^TQS]PU SQSS W	
	UTR[SXFF@KS T
VB]W^SXZE_S^JYQZD:N]SAC]GyyqsY\Yyq{IqYA|s[sWq^tHyX]WqESEeYUUe
]^@VX^]`_zAG[ Mcr\\~j]QAnB_Bz@_jfDFxB_\xdESH]FtgGRegFa]TeXZ^|Bj Z wd][|s{qsw[ie`[qZYUy_VDbgRFja^acAtc]Wqs|ERx qZYUyXc uIAtc]Wqs|Bjq{qsJ~XpZbd|X}qwggK|fwHbgFied]uI~XsGut{}XdYago[|s{qsw[ie^[qZYUyXwIqYA|s[sWq^xXUa{qs|ZTj`FqYA|s[sWq]^Tq{qs|SK{C|aYUyqx ]ht^yX]Wq]DR_gYtqyyqsYYwHTq{qs|\Red^ZgcGj wYtqyyqsY[wpQq{qsDU\Vh[xdeUuUFqYA|s[sWq^dASK{qs|RzYtqyyqsY[ByX]WqY|s\2F[WCAUA{{qqQT_{{qyAy_E~q[q_yXpJ{X__yCWGgQ]Sa_^H^ \\_ h[xCGYEesWc	YC\S{joudIYQ~` Qz}|O ~_T||ESzfLiaISeTWTrY{[Gvs_sW{_vSju{{qzQQaVJVjyMikY~s syusYQu	ATu{{qy~rY~s syusYSeaQ_sY|fbS~rZY eLr^]|a @}adY~eu	~cD|fiO}rsJ|vy
i[`Z{[Gvs_sW{_vHju{{qy@}_{Cvc__yuxJk[Q_sYkjfRO{Cvc__yuxEhjaQ_sYV}Q|w{{qqQT~^GhayyuxEP Ty_E~q[q_y[ZFQaQ_sYk_\VSdI~_~Uy_E~q[q_yXpXVuWQ_sY~Tai|gbR|O{Cvc__yux Pz}Q_sYVuHBy_E~q[q_yX|ESayyu{Yvc@:B@_XS^	[TP^QP 
RRV QpLBYFB]]T
UTTPP]S	URQ	YoW	VQU	ZTVmU SS]PP	SZW
QQUQ
W WVRU	SU^TQSXLDFAS
V VF]]TS\ZEUQX@YUZD	<D\WACSQPT

WR] 	Vp^EUYH[S_^UXZ_\U_QUVSDK@F[_VX]^WC]SC@YFKL\EDKBUDUBZWQ\UDfIBWV_XWWRPRPUW ]PSQgDYYI]mgS

YQWPRUTR[SWPWWQUW ]	
UPRQ	YXBF@AYT TD]STQ^PE[S^@[WPD:D^UKC	^Q  
	\TWP  PUpPGSYJYRYXBY\U[VUVSDK@F[_VX]^WC]SC@YFKL\EDKBUDUBZWQ\UDfIBWV_XWWRPRPUW ]PSQgCS]E^mgS

YQWPRWW U P]RPU 	RSTPQQWRUYWWYW		U^TQSXLDFAS
V VF]]TS\ZEUQX@YUZD	<FB]XQV

SSTVQSVR]VT\RS
QVVxVCQ[J[ZQ^F[^UWY
UTTPP]S	URQ	YoEW_G^o
oW
QWU
RTWTZSQW	RUSS]	SU	STPQQ^FDBAQ V VL[W TSVXC_Q\@Y_XB	8D\]CEUWTSVWR P   	\vJYPG^WW]^U@IBFYW^\_\WKUUGB[FIDZAFK@]BQ@ZUYTS@dKBU^Y\UUTTPP]S	URQ	YoEW_G^o	oW
QWU
RTWTZSQW	RUSS]	SU	STPQQ^FDBAQ V VL[W TSVXC_Q\@Y_XB	88