D]WABWG]UxqsV{]tYkq{{ZkJ}X{H|I [Itw[}s]V{ssUx_tAhs{xXk{YEyxqsV{sx]S|{Z][Uzx VwZ_UeJDhh|H}_` kFYS\DPx\x[Ez{ssUxqxAhs{x_g}g|[| c~d{kXUE|twhak|[}fdXw|XXwHk]t_[{BqYsUxqsXP]dxX]XV[}s]V{ssUx\pYVwU[~[{GkGk_^ZhgPetB~I{Ar[sV{ss[RuHVs{xXcI{Ar[sV{ss[RzX}Yx}e`w{twJ|asHt{K}fwH~d{Jxvs}ZJx[Ez{ssUxqxPx[~[xPx[}s]V{ssUx\`Qwg[~[xDP^x[Ez{ssUxqx{Z][|[{zTa;D_TACWE^UyqsV{_wYjq{{XtJ~q|K ~aHf|[|s]V{qpUy_tAhqxyXk{[FyyqsV{q{]R|{X^[T dXhuwD|_` k EYR\DP{\y[Ez{qpUyqxAhqxy_t[}fwYiHYF~edvgE|u`~aYhXtE|e`Y|fcYiH^Xhfx~[{Bq[pUyqsXP_gyX]XV|[|s]V{qpUy\pYVuV[[{Gh wja
X~s^UyqsV{\sDS\cX}[x~vX~s^UyqsV{\sHyX]XfYwbasIf|U}XsH[J}[HapEv]KaxAs[sV{qp[TuJK{X^[TuJK{[FyyqsV{q{Ujp]{X^[R_DhaxAs[sV{qp[T[{{Xx[s\8D\WCAWF]W{qpU{\t[hqx{[wH|q|H}aJ}uYY~s^U{rsW{_wBhr{{Xh{XE{{qpU{rx_P{[]YP_ghvtF~_ckF[P\|GPx^{[Fy{rsW{q{Bhr{{Xg[|{GhexK~esJ|vdF|vx]q Z|[|\~f`huwk | huQJ}axAqXsW{qp[P\d {X^[VY~s^U{rsW{\sZVvUY}[xDkipGkj{ZVydJ~KxAqXsW{qp[QvIVqx{[c KxAqXsW{qp[QyY}[{}f`v{vtJ|bsIvxK~ewI~fxJ{us}X|J{XE{{qpU{rx Pz|[}Xx Pz|[~p]W{qpU{_`Qud[}XxEP ^{XE{{qpU{rx{X^[X{{Tc8G_UAATE_U{rsUx_vYhr{xXiJ~[{KKH|XK|fi[~p]UxqqU{\tBkqy{[kx[Gy{rsUxqz]P|xX_[k\dGkjjDPvdGh eGhv`GRKGhic[}s_U{rsUx_\Y{[][|fSk[cJkeuFkKtX|K }fk}eu keF~fX_uZZ~ueJ|egx[Gy{rsUxqzGhic[~[zQH{Ar[qU{rs[RuvSr{x[	[kf|@}KyAqXsUxqq[QvKUqy{[c|KyAqXsUxqq[Qy[~[z}f`txvuHrsK|vyK~ewK}fyJ{us~X}J{XEyxqqU{rxSz}[}XxSz}[~p]UxqqU{_`Rue[}XxGS ^{XEyxqqU{rx xX_[X{yWc8G^WBA
QTT
WS

	
TPS QTQTrH[PD\VC
W_QBKBE[]_^]\TATQE@[EKE^CFHBWFSBYWSUWBfKAW_]^WWPVPSWQ TPQSnU
PSTWP
WSRWqnT

SSWPPUTSQSWPW
PQTP W
WWRQSZEF@AST TE_TTQ_ZG\S^@[VZF:D^TAAPWTPU
	
WPSSRrRZY\SYG_P\B_]W\R@KAFY]\\]_WAWRG@XFIF]AEK@WEQBZUSVT@fHBU\^\WUSTSPWS 	WPR	SmWSW	QPQnU
	PSW
PP	WWPR	STPW
QSWQ T
WVPRPZDFBBPTTF_U WQ\YG]S\C[UYF	8E@][S^V	T SRWTP UVS
T
pU_TU_T]^USTSPWS 	WPR	SmWSW	QPQnU
	PSW
PP	WWPR	STPW
QSWQ T
WVPRPZDFBBPTTF_U WQ\YG]S\C[UYF	8G^WBA
PPT	
WTPQ SUr][^ZU]V]USU\QCKBE[_\_]\TCWQD@[EKF^BFHBUFRBYWQVWCfKAW\]_WWPWPSUP WPQQmTSWSSRmW
SPU
SSWTPQQWRT	SSWS WTTPQSYFDBAS V WF\W TR\ZD_Q\@XUZE	8D]WABTSPW	

WSPW	RTSqQX[\PZ@QVT\S@KAF[^\\]_WBWSG@XFKF\AEKBTDQBZWPVU@fHBW\_\WWRTSPTS WPRPmWSWRQQ mT

SSWPPUTSQ	QWPW
PQTP W
WWRQSZEF@AST TE_TTQ_ZG\S^@[VZF:D^TAASVQRP
TWP
TPSrV_UU_TFZW\R@IBFX]\\_\WAWRGB[FHF]AFKAWEQ@ZTSVT@dKBT\^\UTSTPPWSWRQSmWSUQPQmT
	SSW
PPWWRQSTPW
PSUP W
WWPR	SZEFBBSTTD_T WQ^ZG\S\C[WZF8G^UAA
UP	Q

TP
W P	rU]UTV_UWQTT\QCK@F[^\_]^WBWQD@YFKF^BDKBTFRBZWPVWCfIBW\]_WWPWRPTP WPSPmTPPWU
UTSoW	
QST
SPWTPSPW	ST
SSW	S U	WTPQQZFEBAQ W WF_W TR\XG_P\@XUXF8D]WCAWW  S	
 WSU SrU\WU\WUCU\QCKBE[_\_]\TCWQD@[EKF^BFHBUFRBYWQVWCfKAW\]_WWPWPSUP WPQQmTSPWT
W	TSmfjW
V WSRRWT
SSVWP	Pm   WTTTSQSWPWSPTS W	
 UTSQSXFFAAS T TE]WTQ_ZE_S_@[VZD;D_TACWEyyqsXV[xyq{H{[F|s[sV{\sHyX]V{GTEeX_Wb
]^A\_^]jXzAG[Gau\\~j\[CiB_BzAUhaDFxB^VzcESH]G~`GRegGk ]TeYP\{Bj Z}fZ[|sz{qp[ie`Z{X^Uy_VEheUFja_kaxAtc]V{q{ERx{X^UyXcKxAtc]V{q{Bjq{{qxJ~Xp[hf{X}q}e`K|fwIhexFied\K~XsFv|}XdXkeh[|sz{qp[ie^Z{X^UyXwH{[F|s[sV{\XUa{{q{ZTj`G{[F|s[sV{_^Tq{{q{SK{Bvc^UyqxWjs^yX]V{_DR_gX~syyqsXSuHTq{{q{\Red_PedGj wX~syyqsXQuwQq{{qxDU\ViQzceUuUG{[F|s[sV{\cASK{{q{RzX~syyqsXQ ByX]V{[x|s\8D\WCAWF{{qp[VX{{qxK{XE~q[pU{_pJ{X^U{DWGf[_Ta_^B\\\_j[xCGXGbsWb^C\Sz`hudHSSy` Qz|~H ~_ ^~|ESzgFkfISeU]VuY{[F|qXsW{_wYhr{{q{[SfVJVjxGkkY~sy{rsYQuKVr{{qx|uY~sy{rsYSe`[}XsY|fcY|uZY dF}u^]|aJfdY~et|cD|fhEusJ|vx k\`Z{[F|qXsW{_wBhr{{qxJX{Cvc^U{rxJkZ[}XsYkjgPH{Cvc^U{rxEhj`[}XsYV|[~p{{qp[Vy^Ghax{rxEP ^{XE~q[pU{\ZFQ`[}XsYk_]\QdI~__{XE~q[pU{_pXVuV[}XsY~Uci|gcX~H{Cvc^U{rx Pz|[}XsYVuIH{XE~q[pU{_|ESax{r{YvcA8E@_XS_	QUPTSP 
SUV QqF@^FB]\^TSTPPWSWRQSmW	WSUPSVmT
	SSW
PPTPW
PSUP W
WWPR	STTSQSYFFAAS T VF\WTS\ZD_S_@YUZE;D\WABSQPV

 WRW 	VqTGRYH[S^TW_Z_\UUST\QCK@F[^\_]^WBWQD@YFKF^BDKBTFRBZWPVWCfIBW\]_WWPWRPTP WPSPmF^YI]m mT

SSWPPUTSQSWPW
PQTP W
WWRQSZEF@AST TE_TTQ_ZG\S^@[VZF:D^TAATS	  
VVWPPTrWGSYJXX[_BY\UQTT\QCK@F[^\_]^WBWQD@YFKF^BDKBTFRBZWPVWCfIBW\]_WWPWRPTP WPSPmAT]E^mmT

SSWPPW	
P T	 PWRPW	STTPQSWPU	SPWS W
 	TTSQSYFFAAS T VF\WTS\ZD_S_@YUZE;FB]XP\
TSTVQSVSW VTVPT
QVWrTDQ[J[[[\A[^UVSTSTPPWSWRQSmBW_G^n mW
SPU
SSWTPQQWRT	SSWS WTTPQSYFDBAS V WF\W TR\ZD_Q\@XUZE	8D]WABWPTS	TWS
P  VqJYPG_UPW\R@IBFX]\\_\WAWRGB[FHF]AFKAWEQ@ZTSVT@dKBT\^\UTSTPPWSWRQSmBW_G^nmW
SPU
SSWTPQQWRT	SSWS WTTPQSYFDBAS V WF\W TR\ZD_Q\@XUZE	88