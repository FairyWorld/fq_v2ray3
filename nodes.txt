D]WACWG]Uy{q^{]tYj{y{ZkJ|Ry@|I }k@|tk[|y_^{ssUyUvIhs{yRi	{YEyy{q^{sx]R~	{Z][T
fPhwtD|UbRP^GRUf	{YEyy{q^{sxBj{y{ZpXjlzPh]H|lrT|dUF~eA}c}|a~gcEovQZpYiRrPc{AsQq^{ss[RUf	{Z][T}P~q]Uy{q^{^pZTWP}Y{DjUfJPw|AyJqYsUy{qPQwKT{y{Zc}AyJqYsUy{qPQx[Qzvf `ty|uA|IsK}|y@~ds|lq{twHR}A{YEyy{q^{sxRp}P}YxRp}P~q]Uy{q^{^`SeP}YxGR
U{YEyy{q^{sx yR_PY{yVi8F_WCK
UE]WqsxUy_t[bspyXkHtZpK~KvcJfQYtqVUyqsWq]Bjq{qZ`y[E{qsxUyqx_ZwyX]Y\o[jutFt]ki F[Z^tGRx^qYNyyqsWqssBjq{q]Xiecv]|H|fk bwlF~v{Jws	}etZtdpH} t\wt|HfgJacpAs[sWqsx[R_d qZV[TYtqVUyqsWq^{ZTuUYwYpDS\dJYs[|s]WqsxUy\pF[^h[[{ vtt[|s]WqsxUy\pJqZV[dYujcxJ}fWuZxK}[Gws	EasHuJVH}a{C{YxUyqsY\wAHyX]Y\wAHy[E{qsxUyqx ]h{^yX]YZ] Gja{C{YxUyqsY\YpyX{Y{^	:D_UKCWE__yzsW{_vSjz{{Xi@|S{I|K~PIfaQ|x]W{qq_yTt@hqyySk {[GsyzsW{qzWR
| {X_QiTdEhjjNR~dEk eMj~`EQKMjacY~s__yzsW{_\SyS]Yhe~S}SQHkHiL~mQh[ ~tX~f[O~CQDebT~~|vqOiTkG{[GsyzsW{qzMjacY}[zS@{Cq[q_yzsYQuvQz{{[	OjnGPueNyPE{{qq_yzxGPzyS]Y|vaByPE{{qq_yzxGQKyyR``we_}mG{vyO}S{DvWL}}YWf}}CwY~s__yzsW{\bKS@{{\bKS@{Cq[q_yzsYVz\Ojj{{_NRTgY~s__yzsW{\iQP{I{U@:O_UAA
\E_U{syWp_vYhsqpXiJ~ZqIwK|cp[Gy{syWpqzZSgiYv[y |sqCz[qU{syYXu	HVsqp_^VwjX[KYVgvBcuH~]IcKyAqYyWpqq[SgiYv[z[}t[Htez_hYH`fiJ~djXceuF}dn[vq[Z[t_~[kJv[wvS[~qWWpqqU{]\]qy{^\Jp[Gy{syWpqzEkhj_pX_[~z]q[~qWWpqqU{^zFZ\a[}Yq wv}[~qWWpqqU{^zJpX_[f[ukaqJdmWtXqKYGvq E}cyHtH_HcqCz[qU{syY]uHH{ZWY]uHH{YO{pqqU{sr \jr^{ZWY[_	GhcqCz[qU{syY][y{ZqYz\ 8FTUJA
[V\
WS 
UZ[ QT 		[\rH[PEV^C
UWQBKBDQ_W^]\UC\QE@[DAM^CFIHUFSBX]Q]WBfK@]W]^W]PVPRUQ 	\PQQfU
Q[TWR
W	[RWqo\

YQWPR UTR[ SWPWXQUX ]	
U_RQ	YXMF@AYT TD]\TQ^PETS^@[WPD :D^UKCPV^PU
 WPY [  
SpZZY\SXM]X\B_\W\SJIIFY]\V_WWAWSMBPFIF\KMK@WD[@ZUSVUJd@BU\_VUUR^[PWY	WRZ	Sm]SU	QQ[fU
XSW
ZP	WVRZ	SU P]
QSU Q 		\
WVPS	XZDFBCXT^D_U V[^QG]S\BQWQF	8DJ_SS^\TQZ]VP ]VS\
pU_U_]\]^UR^[PWY	WRZ	Sm]SU	QQ[fU
XSW
ZP	WVRZ	SU P]
QSU Q 		\
WVPS	XZDFBCXT^D_U V[^QG]S\BQWQF	8FTUJA
QR\	 	_UZ Q 	 Y]r][^[__^]US

U\QBA@M[_\^W^\CWQEJYMKF^CD@BUFSHQWQVWBlIIW\]^]WPVR[UQ
 WZSQmU S]SSSoW
QXU
R[WTZSQW	RUSS]	SU 	\TPQQQFDBAQ V VLTW TSVXL_Q\@Y_XM	8D\]CJV[PW  WRR_	 	S^QyQX[\QPBQV\\S@K@LYV\\]^]JWSG@YLIF\ADA@\DQBPUXVU@fIHU\_\WURTRZ\S 	WPS	XmWSW	ZQQg\

YQWPR UTR[QWPWXQUX ]	
U_RQ	YXMF@AYT TD]\TQ^PETS^@[WPD :D^UKCSVSZP
	^WP  \  
P	Yp^_UU_UDR]^Z@IBFYW^\_\WKUZGB[FIDUAFK@]MQ@ZUYT\@dKBU^V\UU[TPP]S	URQ	YoWQU	[XQmU SS]PP	U_RQ	Y\ZW
QQUQ
 W WVRZ	SZDL@JS^TD_U_Q^ZG]Y^K[WZF	:O^UAA


UP[ 

	\P
W  P	rTWW\V_UW[VUVSKK@F[_VW]^WC]SL@YFKL\JDKBUDZBZWQ\UKfIBWV_WWWR_RPUX ]PSQg\PRWT U	^[oWQSU [P]VPSQU	R\
SYW	S	U	 WTZSQZFDHCQ V_F_W
VZ\XG_QVBPUXF	2FUWCA_W Y
	U[T 		[rU]]WTWUC

U\QBA@M[_\^W^\CWQEJYMKF^CD@BUFSHQWQVWBlIIW\]^]WPVR[UQ
 WZSQmU[P]T
	U	TRonjW T WQZRWU [SV]P	P g	  VTU^[QS]PUSQ\S W	
	
UTR[ SXFF@K
S T
VM]W^SWZE_S^JY^ZD:N]\AC]G	yyqsY\Ypyq{IqYN|s[sWq^{HyX]WqE\EeYUUj
]^@VW^]`PzAG[ Mc}\\~j]QAaB_Bz@_jiDFxB_\xkESH]FthGRegFa]TeXZ^sBj Z wdR[|s{qsx[ie`[qZVUy_VDbg]Fja^acpAtc]WqssERx qZVUyXc uIpAtc]WqssBjq{qspJ~XpZbdsX}qwghK|fwHbgpFied]uI	~XsGutt}XdYag`[|s{qsx[ie^[qZVUyXwIqYN|s[sWq^wXUa{qssZTj`FqYN|s[sWq]^Tq{qssSK{C|aVUyqx ]h{^yX]Wq]DR_gYtq	yyqsYYw HTq{qss\Red^ZglGj wYtq	yyqsY[wQq{qspDU\Vh[xkeUuUFqYN|s[sWq^kASK{qssRzYtq	yyqsY[ByX]WqYp|s\2FTWCAUN{{qqQTP{{qyAyPE~q[q_yWpJ{X__yLWGgQ]\a_^H^\\_ h[xCGYEjsWc	VC\S{j`udIYQq` Qz}|@ ~_T||ESzfLinISeTWT}Y{[GvsPsW{_vSjz{{qzQQnVJVjyMikY~s syzsYQu	ATz{{qy~}Y~s syzsYSeaQPsY|fbS~}ZY eL}^]|a @}ndY~eu	~cD|fiO}}sJ|vy
iT`Z{[GvsPsW{_vHjz{{qy@}P{Cvc__yzxJk[QPsYkjfR@{Cvc__yzxEhjaQPsYV}Q|x{{qqQTq^GhayyzxEP TyPE~q[q_yTZFQaQPsYk_\VS
dI~_~UyPE~q[q_yWpXVuWQPsY~Tai|gbR|@{Cvc__yzx Pz}QPsYVuHByPE~q[q_yW|ESayyz{Yvc@:M@_XS^	[ T	P^QP 
R]V QpLBVFB]]T
U[TPP]S	URQ	YoW	VQ U	Z[VmU SS]PP	\ZW
QQUQ
 W WVRZ	SU^[QSXLDIAS
V VF]]TS\ZEUQW@YUZD	3D\WACSQPT	

WR] 	Vp^EZYH[S_^UWZ_\U_QUVSKK@F[_VW]^WC]SL@YFKL\JDKBUDZBZWQ\UKfIBWV_WWWR_RPUX ]PSQgDVYI]mg\

YQWPR UTR[ SWPWXQUX ]	
U_RQ	YXMF@AYT TD]\TQ^PETS^@[WPD :D^UKC	^Q  
	\TWP	  
PUp_GSYJYRYWBY\U[VUVSKK@F[_VW]^WC]SL@YFKL\JDKBUDZBZWQ\UKfIBWV_WWWR_RPUX ]PSQgC\]E^mg\

YQWPR WX U P]RPU	R\TPQQWRUYXWYW		U^[QSXLDIAS
V VF]]TS\ZEUQW@YUZD	3FB]XQV

\STVQSVR]VT\R\
QVVxVLQ[J[ZQ^I[^UWY
U[TPP]S	URQ	YoJW_G^o
oW
QXU
R[WTZSQW	RUSS]	SU 	\TPQQQFDBAQ V VLTW TSVXL_Q\@Y_XM	8D\]CJUXTSV	WRP  	 	\yJYPG^WX]^Z@IBFYW^\_\WKUZGB[FIDUAFK@]MQ@ZUYT\@dKBU^V\UU[TPP]S	URQ	YoJW_G^o	oW
QXU
R[WTZSQW	RUSS]	SU 	\TPQQQFDBAQ V VLTW TSVXL_Q\@Y_XM	88