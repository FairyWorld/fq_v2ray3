D]WAB
WG]Uxss_{]tYks{{ZwJs|I ~s|I{ArYs_{ss[hg^S{Z][ZcQ~q]Uxss_{]ZDRcQ}Yx[kgTV]AkgRhcYkwB~]^Us{KqYsUxssQSgc[~YxT|JV^h]g
kI_h`S~dcJk]cL}gcE|YP}tcE|JhRkhZhJgQ~q]Uxss_{]^Us{{^VHxYEs{ssUxsxOkh`]xZ]Q~d_k]dRVw^ kc
Q~q]Uxss_{^pDR^cQ}Y{tQ~q]Uxss_{^pHxZ]Qf[wccs@JsU|ZsAYJ|sA}ssJZ]Oc{ArYs_{ss[UwJB{Z][UwJB{YEyxss_{sxThpT{Z][S]Mhc{ArYs_{ss[UY{{Z{[r^8F_WBCUE]VyqyUy_tZjqqyXkI|XqK~K aJ~HYX|sWUyqsVy_~Bjq{yXay[EzyqyUyqx^RvyX]XR_njutG|_ji FZR\uGRx_y[OyyqsVyqrBjq{y_}Ki w~H\Y|f}faF~v}[	Z}vV\|ebYfgIfa~ {iKqAs[sVyqy[R_dyXW[TX|sWUyqsVy\zZTuUX[qDQeITeTKUa
X|sWUyqsVy\zDS\cX[q~vX|sWUyqsVy\zHyX]XdYwbasI}fmU}XsH}[J}qHqyJ~X]F}aqAs[sVyqy[TuJKyXW[TuJKy[OyyqsVyqrUjp]yXW[R_DjaqAs[sVyqy[T[{yXq[s\:DUWCAWO]W{qpW{Ut[hqx{RwH|q |AHvdE|RYY~s^W{{sW{_w@h{{{Xh {QE{{qpW{{x_P {R]YVz{VZ]VeIEh`|J~_ck
F[P\|EPx^{[F{{{sW{q{@h{{{XxhRg|XV~lkhvxD||c[ X||{~fYX|V]vRUH|KxCqQsW{qpYPUd {X^YVY~s^W{{sW{\sXVUY}[xFh`h\Q\]SdIha	Y~y]W{qpW{VpFQ\`Y}Q{ |v|Y~y]W{qpW{VpJ{X^YfSu`apHlwWXpIQHqI}{sH|X^Gk{Cq[pW{{sYVuIJ{R]YVuIJ{QE{{qpW{{x Wjs\{R]YP_Ehk{Cq[pW{{sYV[x{R{Yq\8N_UAA]E_U{rqUq_vYhryqXuJ|rvKJu}GvHa[~p_UqqqU{\vBbqy{[iq[Gy{rqUqqz]P~qX_[Vf[buvD~\ba DYP_}GZz\{XGyqqqU{rzBbqy{[yKafWJkeTZtfivuFvve|r[aXyJ~fbZv_e|Kv_ve~[|byA{[qU{rq[Z_f{[_[\}[~p_UqqqU{_rZ\uW[}XyDajjDSfbZZ_~^~HyA{[qU{rq[[u	KVryqXaHyA{[qU{rq[[z}[}Xz}lbt{uuJuKqKuyKtfuE~eyqvu }[qJq[Gy{rqUqqzPy}[w[zPy}[ts_U{rqUq\bQve[w[zGP^q[Gy{rqUqqz {[_[u[yyT`2D\WAB
 STW	WY

		WRPQT	SWqH[ZG^U@
W\RBKHFY]\^]VWAWRE@QFIF]CLK@WESBZUSVTBfABU\^^WUSVZPWQ 	WP[	SmU
SPWW	P	]PRW{mW	
QSTZPUTPSPW	S]
SQW	S	U	WTRQQZFE@AQ W ^F_WT[\XG_P^@QUXF:DTWCAPTVSU 
 WZQP  QrQYY\YZE_S_BU^
WVQBKBEY]V^]\TA]QE@[EIL^CFH@WFSBYUS\WBfKAUV]^WUPVPSWQ 	]PQ	SgUYW	QSSmU

SPW RS	]TPQ	SWPU	QYWQ W
		TVZQSYDFHAST VF\U
TS\ZD]SV@YUZE	2FB]XP^T
^SQUTS VVY 
W	pUUWW_W]^UPVPSWQ 	]PQ	SgUYW	QSSmU

SPW RS	]TPQ	SWPU	QYWQ W
		TVZQSYDFHAST VF\U
TS\ZD]SV@YUZE	2D\WAB
S PW	T 	WRQ
QVq][TYW]U^UYU\[@IBFX_\\_\WCW[GB[FHFTAFKAULQ@ZTQV]@dKBT\W\UTZTPPUSWRQQmWSUSYQmT SSU
PPW^RQQ]RW
PSUPWWWP[	SZEDBKSV
TD_T ^Q^ZG\Q\J[WZF	8N^UAA	 TPSW

]PPT	 QVSrRX[VSX@RVW_S@ABD[]_\W\UATSGJ[DKE\AFIBWDQHXWSUU@lK@W__\]WRTPRWS
	TZQSnW	P]QQQ	oW	
QSTZPUTPS
RW	S]
SQW	S	U	WTRQQZFE@AQ W ^F_WT[\XG_P^@QUXF:DTWCAS\	QQS V WZW ZQrU\UUUWFYU\QCIBL[_\__\]CWQDB[LKF^BFABUFR@PWQVWCdKHW\]_UWPWPZUPWRQQmTSUSSRmW
SYU
SZWTRQQWRT SSUS W]TPQ	SPFDBAS V WDUW TR^ZM_Q\@XWZL	8D]UAK	UP
S	
WS
] S	xV_UWU_U]STW^Q@H@FQ]^\^^WAUQGCYFAD^ADKHWFQAZ]STW@eIB]^]\T]PTRPWSUSSSoWP	PTV
UVPo]

QSWPPUTSSSW	PW
YQT	Y U
W^RQQZLF@AQ
T TE_]TQ_XGUS^@[VXF:D^TCATT Q
	WPV Pr__UU_TUIU\[@IBFX_\\_\WCW[GB[FHFTAFKAULQ@ZTQV]@dKBT\W\UTZTPPUSWRQQmWPZUT W	TPmeiWV ]SQRWWPS\US	Zo 
T WWVPRYUZWSSWS
	T	 UTPSPXFLBCP ^TF]W VQ\YE_Y\B[UYD8F_WBCUEzyqy[T[{yqqKy[Es[yUy\pKyXWUyGWEo[]Wa	]^B^\]]h[yAGQEav_\~`_YCjA_BpBWhbGFxH]Tz`FSHWD|cDRemDi ^Te	ZR\xAj PfYX|syyqsXiejYyX]Vy_\FjeVEja\ia{BtcWUyqxFRryX]VyXi}K{BtcWUyqxAjqqyq{I~XzXjfx[}qecH|f}Jje{Eien_}K ~XyE}v}Xn[iekX|syyqsXieTYyX]VyX}Ky[Es[yUy\|[UaqyqxYTjjDy[Es[yUy_]TqqyqxSKqAtc]VyqrUjp]yXWUy_GR_m[|szyqy[QuKTqqyqx_Ren\RegDj }[|szyqy[SutQqqyq{GU\\jSz`fUu_Dy[Es[yUy\`BSKqyqxRzu[|szyqy[S AyXWUy[{s\:D_TCAWE{{{sYV[x{{{I{[F~qQsW{\sJ{R]W{GTGeY_Wb_T@\_\_jXxCM[ GapWa]@\YybkvdKQSzc Qp~K ~U\~ ESpdDkeISoV_VvZ{QE~q[pW{Ut[hqx{{xYSeUJV`{Ek hY~y{{qpYQIVqx{{{ |v|Y~y{{qpYSocY}[pY|l`[|vYY
gD}v]]|kHegY~ow| `D|lkGvpJ||{k_cZ{QE~q[pW{Ut@hqx{{{H[xCvi]W{q{JkYY}[pYk`d PKxCvi]W{q{Eh`cY}[pYVY~s{{{sYVz]Ghk{{q{EP
\{[F~qQsW{_YFQcY}[pYkU^^QgI~U|]{[F~qQsW{\sXVUY}[pY~Vc i|m`Z~KxCvi]W{q{ PpY}[pYVJJ{[F~qQsW{\ESk{{qxYviB	8FC_XY\
		SVZ VSS 
	PVU [rD@]EB]_\WPWPZUPWRQQmT	TSURPUmW
SYU
SZWRT SSUS W]TPQ	SWVPRYZDFBBYTVF_U WS\PG]S\CYUPF	8G\WKA
PQPV
 TRU	VrVGQZH[Y]VW\Y_\_WSW^Q@H@FQ]^\^^WAUQGCYFAD^ADKHWFQAZ]STW@eIB]^]\T]PTRPWSUSSSoF]ZI]goW	
QSTZPUTPSPW	S]
SQW	S	U	WTRQQZFE@AQ W ^F_WT[\XG_P^@QUXF:DTWCAVS
  TV WZ	 ZWrTDSY@[Z[\AY\_STW^Q@H@FQ]^\^^WAUQGCYFAD^ADKHWFQAZ]STW@eIB]^]\T]PTRPWSUSSSoAW^E^goW	
QSTZP]

S W
PURZW	P WWP[	STPU
QSWQ ]
	WVPRYZDFBBYTVF_U WS\PG]S\CYUPF	8EB]RS^
WPT\RSVPU V^TPW	QVTpTGR[JQXY\BX^UUQWPWPZUPWRQQmAT_GTmmT SSU
PPW^RQQ]RW
PSUPWWWP[	SZEDBKSV
TD_T ^Q^ZG\Q\J[WZF	8N^UAAWSWS
	T]P
S   TrIYPM\USU\QCIBL[_\__\]CWQDB[LKF^BFABUFR@PWQVWCdKHW\]_UWPWPZUPWRQQmAT_GTmmT SSU
PPW^RQQ]RW
PSUPWWWP[	SZEDBKSV
TD_T ^Q^ZG\Q\J[WZF	82