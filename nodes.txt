D]WACWG]Uyzq_{]tYjzy{ZwJ~z|I~z@|Zg[|x__{ssUyTvHhs{ySi{YEyyzq_{sx]R
~{Z][TfQhwtD|Tb	kFYRW}MPx\yPGs{ssUyzzHhs{yTvU|ZdYiiB~dg jmaL|w`Y~@ twH|m~R||Y~nu	kJU }zyKqYsUyzqQP]dyS_QV[|x__{ssUyWrPVwU[PyNV^GT~fA~I{AsPq_{ss[S~	AVs{ySaI{AsPq_{ss[Sq}Q}Yx}d	b~{twJ}@qAt{K|mq~dsy}uO}ZsJyPGs{ssUyzzPx[PzPx[|x__{ssUyWbQwg[PzMP^yPGs{ssUyzz
{Z][}PysTa:O]]AC\GWUyqsWp]~Yjq{pZaJ|X{IwI}awcqAs[sWpsy[ie^[pZW[~XcYuqWUyqsWp]PDScYvYr[je\]]AjeZccYjuJu]^Tq{CzYyUyqsYXgi[[xXc]iK}Xp]cs iHkGudij_{Dvt[}q\wdqi_{Itdm}f{YuqWUyqsWp]^Tq{p^\Hy[E{psyUyqxG`hj]yX]YuvZju`Ccc [|s]WpsyUy\pFZ^i[[{ wtu[|s]WpsyUy\pJpZW[dYukcyJ}HsWtZyK}[GvcEqsHttWE}a{CzYyUyqsY]w@HyX]Y]w@Hy[E{psyUyqx \hz^yX]Y[]Gja{CzYyUyqsY]YqyX{Yz^:D_UJCWE_^y{sW{_vRj{{{XuA~{ |KA}|sEXyAyQE{{qq^y{xXSeaPQ{|qyJsQsW{qqPQJVqyyU\VubQRA[Ve~KjJ~_	@jA{Cq[q^y{sYSeaPQ{|Xq}UkKTiow~faiBcD}fbTiA hei	}|whfa~lY~s_^y{sW{_UT{{{\TCyQE{{qq^y{xGkjbVyR]Y~ ~Ji`YF{[Gry{sW{qzNRx {X_P~|cJ{[Gry{sW{qzNSA{{Yib}gWfuy|{GXyM}|YDvW^}lsvuP|y]W{qq^yV`CQKyyV`CQKyJsQsW{qqPTp^GhayyUFP_eP|y]W{qq^yVkY}[y@y_B	8D]\CKWGVWqqqU{][bqy{Z|Hvq|IHuvuGZ|Iq[Gy{sxWqqzZSghYw[y |spC{[qU{sxYYu	HVspq\bKVhk_b\fAP]oJ[KYVgwBbuH~] IbKyAqYxWqqq[SghYw[yEdlvXfY|s	Iu }H~dk\ufWFkd]Zua HhZ^Ia yk|uH}[~qVWqqqU{]\\qy{^]Jq[Gy{sxWqqzEkhk_qX_[~Q\YeT]VsYts_U{sxWq\rDQ^hYw[y|ttYts_U{sxWq\rH{ZVYlY	w`cxHufuUZxIu[ E}c	GwqqJtVGuayAqYxWqqq[VwAJqX_[VwAJq[Gy{sxWqqzWh{\qX_[P] EbayAqYxWqqq[VYpqXy[q^	2D\WAC STWUY

	WRPXV 
	SWpAYZG^UAW\SKIHFY]\W_VWAWSLBQFIF\JLK@WDZ@ZUSVUKdABU\_WUUR_ZPWX	WR[	Sm\SPVU	P]P[U{mWQSUZP\VPSQU	R]
SXW	S		UWT[SQZFDICQ V^F_WV[\XG_QWBQUXF	3FTWCARTVR\ 
UZQP 	QrQXP^YZE_S^KU^
UVQBKBDP_V^]\UC]QE@[D@L^CFIIUFSBX\Q\WBfK@\V]^W\PVPRUQ 	 ]PQ QgU	YW SSSm\
SQU RR ]TPQ QWRUXYWXW			U_ZQSXMDHASV VF]\
TS\ZETQV@YUZD 	2FB]XQW
T
	^SQUTR
V
TY 
WyWUWW_WT\\PVPRUQ 	 ]PQ QgU	YW SSSm\
SQU RR ]TPQ QWRUXYWXW			U_ZQSXMDHASV VF]\
TS\ZETQV@YUZD 	2D\WACS PW	 T	WRX 

QVpTYTYW]U_WY\^[@IBFYV^\_\WJU[GB[FIDTAFK@\LQ@ZUXT]@dKBU^W\UUZTPP\S	URQ	XoWQU	ZYQmU SS\PP	U^RQ	X][W
QQUQWWVR[	SZDM@KS_
TD_U^Q^ZG]X^J[WZF	 :N^UAA
	 TPRU

]PPT   QVSrSQYVSX@S_
W^ZBABD[]^^W\UAUZEJ[DKDUCFIBWMSHXWST\BlK@W^V^]W[VPRWQ
	UZQSoU	Q]QXS	oWQSUZP\VPS
SU	R]
SXW	S		UWT[SQZFDICQ V^F_WV[\XG_QWBQUXF	3FTWCAQ\	QQR VUZW ZQrU]\WUWFY
U\QB@@L[_\^V^]CWQEKYLKF^CDABUFSIPWQVWBmIHW\]^\WPVRZUQW[SQmUS\SSSoW
QYU
RZWT[SQW	RU SS\	SU	
]TPQ QPFDBA
Q V VMUW TSWXM_Q\@Y^XL	8D\\CK\R
SWR]	 R 	xV_UWTVW]STW^Q@IIDQ]^\_WUAUQGBPDAD^AMIHWFQ@X]STW@d@@]^]\U]PT[RWS	URZSoWR	PUV
\VPf]

XQWPRUTRZSW PWYQU Y \	
U^RQ	XXLF@AX
T TD]]TQ^QEUS^@[WQD:D^UJCTU	Q
WP	V 	 P p__UU_UWI\^[@IBFYV^\_\WJU[GB[FIDTAFK@\LQ@ZUXT]@dKBU^W\UUZTPP\S	URQ	XoWP	ZU	] W VPmehUV		]SQ[UWPQ\UR Zo 
T VWVPS	YU	ZWQSW	Q
	U  \VPSQQDLBCQ^TFTU VQ\XL]Y\B[UXM	8F_WCJ
UE{psy[T[{psqKy[E~zYyUy\pJpZWUyGWLo[]WaT\B^\\Th[xHEQEav^U|`_YCj@V@pBWhbFOzH]Tz`GZJWD|cE[gmDi _]g	ZR\x@cPfYYuqyyqsY`gjYyX]Wp]\FjeVDcc\ia{C}aWUyqxG[ryX]WpZi}K{C}aWUyqx@csqyq{HwZzXjfxZtsecIud}Jje{D`gn_}KwZyE}v tZn[iekYuqyyqsY`gTYyX]WpZ}Ky[E~zYyUy\|Z\cqyqxX]hjDy[E~zYyUy_\]sqyqxZIqAtc]WpsrUjp\pZWUy_F[]m[|s{psy[QuJ]sqyqx^[gn\RegEc}[|s{psy[Sut Xsqyq{F\^\jSz`g\w_Dy[E~zYyUy\`CZIqyqx [xu[|s{psy[S @pZWUy[{~z^:D_UJCWE ry{sYV[yy{{I{[GwsQsW{\rCyR]W{GUEeY_Wc]T@\^U]jYqAM[ Gaq^a]AUYybkwmKQSzb	Sp~K		|U\~ ~LQpdDke@QoV_Vv[yQE~q[q^yUt[hqyy{xYSeTCT`{Ek iP|y{{qqPSIVqyy{{ |v}P|y{{qqPQocY}[qP~l`[|vXP}
gD}v\T~kHefP|ow| aM~lkGvqC~|{k_bSyQE~q[q^yUt@hqyy{{H[yJti]W{qzCiYY}[qPi`d PKyJti]W{qzLj`cY}[qPTY~s ry{sYVz\Njk{{qzLR
\{[GwsQsW{_XOScY}[qPiU^^Qf@|U|]{[GwsQsW{\rQTUY}[qP|Vc `~m`Z~KyJti]W{qz	RpY}[qPTJJ{[GwsQsW{\~LQk{{qyPtiB	8FBVZY\
 	SV
Z VSR		PVT[rD@]DK__\
WPVRZUQW[SQmU TS\RPT
oW
QYU
RZW	RU SS\	SU	
]TPQ QWVPS	YZDFBCYT_D_U VZ^PG]S\BPWPF	8FUUKA
QXRV U[U 	 TrVGQ[AYY]VW\XV^_WSW^Q@IIDQ]^\_WUAUQGBPDAD^AMIHWFQ@X]STW@d@@]^]\U]PT[RWS	URZSoF][@_goWQSUZP\VPSQU	R]
SXW	S		UWT[SQZFDICQ V^F_WV[\XG_QWBQUXF	3FTWCAVS
	 TVUZ	 ZWrTEZ[@[Z[\@P^_STW^Q@IIDQ]^\_WUAUQGBPDAD^AMIHWFQ@X]STW@d@@]^]\U]PT[RWS	URZSoAW_L\goWQSUZP]

SW
RU	[ZW P WVR[	SUP\
QSUQ 	]
 WVPS	YZDFBCYT_D_U VZ^PG]S\BPWPF	8DK_RS^
WQV\SZTPU T^TPWXTTpTGSRHQXY\BYWWUQ
WPVRZUQW[SQmAUVETmmU SS\PP	U^RQ	X][W
QQUQWWVR[	SZDM@KS_
TD_U^Q^ZG]X^J[WZF	 :N^UAA
WSVQ
	T]P
R	 TrHPRM\US
U\QB@@L[_\^V^]CWQEKYLKF^CDABUFSIPWQVWBmIHW\]^\WPVRZUQW[SQmAUVETmmU SS\PP	U^RQ	X][W
QQUQWWVR[	SZDM@KS_
TD_U^Q^ZG]X^J[WZF	 :2