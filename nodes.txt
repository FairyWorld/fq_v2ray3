D]WACWG]UyzpT{]tYjzx{ZkJ|SxJ|I}j|Y{AsPpT{ss[in]X{Z][~S`Z~q]UyzpT{]ZDS
`Z}Yxjn{Xkg
GjqgYS`GS@EQ]Q[|x^T{ssUyT]X{Z][~tk{Hj~xG|dpX}zZsE|nt}dFmUYt{jmYXkZQ yPFx{ssUyz{Fhhc[P{ QI{AsPpT{ss[S~wSs{yPIPJYQngJ~I{AsPpT{ss[S~JVs{yS`I{AsPpT{ss[Sq|Z}Yx}d	cu{twJ}@pJt{K|mp~dwHy}t}ZJyPFx{ssUyz{Px[P{Px[|x^T{ssUyWcQwg[P{FP^yPFx{ssUyz{{Z][}PxxTa:O\VAC\F\UyqsWp\uYjq{p[jJ|X{IwHH~KItKj[|s]WprrUy_t@crzyXk pXDyyqsWpry]R| p[\[i_dEciiDRudE`fGju`EZHGjjcYup\UyqsWp\_YyX]Yc[Tv`]`[~F} {cr~ cIue_YifQDwKP ~_c`}YifV[pXDyyqsWpryGjjcYvXySK{CzXrUyqsYZvuQq{pX
Xie`i~Dy[E{prrUyqxG[yyX]YwubHy[E{prrUyqxGZHzyY`ktfU}fGpuzE}X{DtuXF}fWtef}HwYup\UyqsWp_aASK{p_aASK{CzXrUyqsY]y_Eja{p\DR_gYup\UyqsWp_j[[{IpVC:D_UJB	WE_^xpsW{_vRkp{{XuAp |K
|pHXeP}r]W{qq^x^t@hqyxYk {[GrxpsW{qzVS | {X_PS^d huvO}^`k DRS]EPzWxZE{{qq^xpx@hqyx^`XhXi~tG~e~S|dcD|vSAh`Y bP}g`YhfXRhg|\kXeJ{Cq[q^xpsYP_f	xY]YV}P}r]W{qq^x]pXVuWP~Z{FVzzk`
Y~s_^xpsW{\rOR]cY}[y	wY~s_^xpsW{\rCxY]YfY	|c`sHfe^|YsI[ N~`HKqAg]JayJrZsW{qqPUtJJ{X_PUtJJ{[GrxpsW{qz	Tkp\{X_PS^EhayJrZsW{qqPUZ{{XyPr]8D]\B@WGVVzqqU{]Ziqy{Z|I}q|I|qJIpBp[qU{sxXje\Y{ZVX}Xa[~qVVzqqU{]QGPa[}YsP\fSwc Qu^QtDizfXSkDPKDQ]ZXs_U{sxVz_\Y{ZVX}X}d` ~fqFhtl}a hdhf[HlE}X}|g`iXSlz[Gy{sxVzqzGhhhX|[zQIpBp[qU{sxXPuvSspz[	]PAAiuv~IpBp[qU{sxXPu	KVspzXaIpBp[qU{sxXPz}[}Ys~gbt{t|I~aqKtpHfq~d|Kzvu}ZtIz[Gy{sxVzqzPxtX|[zPxtXs_U{sxVz\bQwlX|[zGP]z[Gy{sxVzqz {ZVX~[yyTa9D\WAC STWTR

 WRPXW 
SWpAXQG^UAW\SKHCFY]\W^]WAWSLCZFIF\JGK@WDZAZUSVUKeJBU\_WTUR_QPWX	WSP	Sm\	SPVT
	PVP[TpmW	QSUQP\WPSQT	RV
SXW	SU
WT[RQZFDIBQ VUF_WWP\XG_QWCZUXF	3G_WCAS
TVR\
TQQP QrQXP_RZE_S^K^^
T]QBKBDP^]^]\UBVQE@[D@G^CFIITFSBX\PWWBfK@\]]^W\PVPRTQ 	 VPQ PlU	RW RSSm\	
SQTRR VTPQ PWSUXRWXW			U_QQSXMECASW VF]\TS\ZETP]@YUZD 9FB]XQWT
USQUTR
V
UR 
WyV^WW_WT]	\PVPRTQ 	 VPQ PlU	RW RSSm\	
SQTRR VTPQ PWSUXRWXW			U_QQSXMECASW VF]\TS\ZETP]@YUZD 9D\WACS PW	 T WRX 
QVpTX_YW]U_VR\_P@IBFYV_\_\WJTPGB[FIE_AFK@\GQ@ZUXUV@dKBU_\\UUQTPP\S	TRQ	XnWPU	ZRQmUSS\	PP	TURQ	XV[W
QPUQ
W WVSP	SZDMA@S_TD_UUQ^ZG]X_A[WZF	 ;E^UAA
 TPRT

 VPPT    
QVSrSQX]SX@S_W^ZCJBD[]^_\\UAUZDA[DKDUBFIBWMRCXWST\CgK@W^V_VW[WPRWP	UQQSoT	QVQXRoW	QSUQP\WPS
ST	RV
SXW	SU
WT[RQZFDIBQ VUF_WWP\XG_QWCZUXF	3G_WCAPW	QQRVTQW QQrU]\V^WFY
 U\QB@AG[_\^V_VCWQEKXGKF^CEJBUFSI[WQVWBmHCW\]^\WPVSQUQ
W[RQmU
S\SSSnW
PRU
RQWT[RQWRUSS\ST
	
VTPQ P[FDBA
P V VM^W TSWYF_Q\@Y^YG	8D\\B@\S
S	WR	V	R sV_UWTVVVSTW^Q@IIEZ]^\_WTAUQGBPEJD^AMHCWFQ@YVSTW@d@AV^]\UVPT[SWS
URZ
SoWS	PU
V
\VPfV

XPWPS
UTRZ
SW PW	RQU R \
TURQ	XYGF@AXT TD\VTQ^QD^S^@[WQE
:D^UJB	TU	Q
WPV 	 P qT_UU_UVB\_P@IBFYV_\_\WJTPGB[FIE_AFK@\GQ@ZUXUV@dKBU_\\UUQTPP\S	TRQ	XnWPQU	]W WPmehTV		VSQ[TWPPWUR Qo T VWVPSRU	QWPSW	P	U \WPSQQEGBCQUTFTT VQ\XL\R\B[UXM
8F_WCJUE{prr[T[{przKy[E~zXrUy\pJp[\UyGWLd[]WaT]B^\\Th[xHDZEav^U}k_YCj@VA{BWhbFO{C]Tz`GZK\D|cE[ffDi _]fZR\x@c[fYYupyyqsY`faYyX]Wp\WFjeVDcb\ia{C}`\UyqxG[yyX]Wp[b}K{C}`\Uyqx@crzyq{Hw[qXjfxZtrecIuevJje{D`fe_}Kw[rE}v t[e[iekYupyyqsY`f_YyX]Wp[vKy[E~zXrUy\|Z\bzyqxX]iaDy[E~zXrUy_\]rzyqxZHzAtc]WpryUjp\p[\Uy_F[\f[|s{prr[QuJ]rzyqx^[fe\RegEcv[|s{prr[Sut Xrzyq{F\_WjSz`g\vTDy[E~zXrUy\`CZHzyqx [y~[|s{prr[S @p[\Uy[{~z_:D_UJB	WE rxpsYV[yxp{I{[GwrZsW{\rCxY]W{GUDeY_Wc\_@\^U\jYq@F[ Gaq^a]AURybkwmKQSzb	R{~K		}^\~ ~LP{dDke@PdV_Vv[xZE~q[q^x^t[hqyxpxYSeTCUk{Ek iP}r{{qqPRtIVqyxp{ |v}P}r{{qqPPdcY}[qPg`[|vXP|gD}v\T`HefP}dw| aMgkGvqCw{k_bSxZE~q[q^x^t@hqyxp{H[yJub]W{qzCh YY}[qPhkd PKyJub]W{qzLkkcY}[qPU Y~s rxpsYVz\Nk`{{qzLS\{[GwrZsW{_XOR cY}[qPh^^^Qf@}^|]{[GwrZsW{\rQUtUY}[qP} Vc `f`Z~KyJub]W{qz	S{Y}[qPUtJJ{[GwrZsW{\~LP`{{qyPubB	8FBV[R\
 SV
Q VSR		PVTPrD@]DK^_\
WPVSQUQ
W[RQmU 
TS\RPT
nW
PRU
RQWRUSS\ST
	
VTPQ PWVPSRZDFBCRT_E_U VZ_[G]S\BPV[F	8FUT@A
QXSV	U[
U	 UrVGQ[AXR]VW\XV_TWSW^Q@IIEZ]^\_WTAUQGBPEJD^AMHCWFQ@YVSTW@d@AV^]\UVPT[SWS
URZ
SoF][@^loW	QSUQP\WPSQT	RV
SXW	SU
WT[RQZFDIBQ VUF_WWP\XG_QWCZUXF	3G_WCAVS
	TVTQ	 QWrTEZZK[Z[\@P_TSTW^Q@IIEZ]^\_WTAUQGBPEJD^AMHCWFQ@YVSTW@d@AV^]\UVPT[SWS
URZ
SoAW_L]loW	QSUQPV

SW
S
U	[QW P WVSP	SU
P\
QST
Q 	V
 WVPSRZDFBCRT_E_U VZ_[G]S\BPV[F	8DK^YS^
	
WQWWSZUPU UUTPWXUTpTGSRIZXY\BYWVUQ
WPVSQUQ
W[RQmAUVD_mmUSS\	PP	TURQ	XV[W
QPUQ
W WVSP	SZDMA@S_TD_UUQ^ZG]X_A[WZF	 ;E^UAA
WSVP
	T VP
R	 TrHPSF\US
 U\QB@AG[_\^V_VCWQEKXGKF^CEJBUFSI[WQVWBmHCW\]^\WPVSQUQ
W[RQmAUVD_mmUSS\	PP	TURQ	XV[W
QPUQ
W WVSP	SZDMA@S_TD_UUQ^ZG]X_A[WZF	 ;9