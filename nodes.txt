D]WACWG]Uy{p_{]tYj{x{ZwJ~{|IJ}|tMdsJyQFs{ssUy{{PSgc[Qx
|s{AsQp_{ss[QBVs{yVUTk]`ZRAShwH|UTVs{AsQp_{ss[Qo`Q}Y{ ~||Bhw`X}k|Zk|l`|wgFiR]S|cjR|kdsEj|wRJQ[|y^_{ssUyUTVs{yVUB{YEyy{p_{sxEi`cW{Z][|
wHQY
[|y^_{ssUyVsNQ^c[Qx|t[|y^_{ssUyVsB{Z][dS}`csJ}lR_ZsK}QO}sJ{pOJ]E}kxKqYsUy{pQVwJHyR^QVwJHyQFs{ssUy{{Whp^yR^QP]GjkxKqYsUy{pQVY{yRxQq^:N\]AC]FWUyqsWq\~Yjq{q[}J~q vH~aIue}[|s]WqryUy_t@brqyXk qXOyyqsWqrr]R| q[W[R_d bv~D|_`aLYR\EZr\y[E{qryUyqx@brqyXsJvK[}vQteyK}fkDvvm}qXa[yK|ftZvq } cHbuz^}a{C{XyUyqsYZ\nyX]Y\u[|s]WqryUy\pX\v_[[{FZv~XQK
YtpWUyqsWq_zDS\cYwXq~vYtpWUyqsWq_zHyX]YlZwbasHuemU}XsIuXEqHwryE}H]GubqAs[sWqry[TuJJq[W[TuJJqXOyyqsWqrrUjp\q[W[R_EbbqAs[sWqry[T[{q[q[s\2GUWCATO]W{qq_xUt[hqyxRkH~XyAAIK@lYY~s__x{sW{_vHk{{{XixQE{{qq_x{x_P~xR]Yk_fMk`hFPufMh
gEhubMRAEhjaQ}y]W{qq_xU^[{X_Q|
`]Xu|
gD}uvT|k }v}}o{}uiL|lYHSB~{|vexQE{{qq_x{xEhjaQ~QxQKyKrQsW{qqQRt SqyxQ@P\bAS
`k eNxQE{{qq_x{xGPzxR]Y|vaBxQE{{qq_x{xGQKyxS``we_|lG{vyO|R{DvWL|lUWv}||wY~s__x{sW{\bKRA{{\bKRA{Cq[q_x{sYVz\Okk{{_NSUgY~s__x{sW{\iQ~Q{I{U@;N_UAA
]E_U{syVq_vYhsqqXuJ|svKJtmDwve[~qWVqqqU{]~Abqy{Zaq[Gy{syVqqz]PvqX_[VnXbuvD~]j a DYP^uDZz\{YOzqqqU{srAbqy{]vZvHWE|JzYtfX[kZ}Evvakc	Yaei~d\[afi }dub_~^}cqB{[qU{syXZ_f{ZWX\}[~qWVqqqU{^zY\uW[}YqGaeb hhrYj~^PgnD\q[~qWVqqqU{^zG[\a[}Yqvv}[~qWVqqqU{^zKqX_[f[tjaqJduVuXqKYFwq J}syFuH_EcqB{[qU{syX\uHH{ZWX\uHH{YOzqqqU{sr]jr^{ZWXZ_	GhcqB{[qU{syX\[y{ZqX{\ 8FTTKA
[W]
WS 	 
UZZ QT	[]rH[PEV_C
TVQBKBDQ^V^]\UB]QE@[DAL^CFIHTFSBX]P\WBfK@]V]^W]PVPRTQ 	]PQPgU
QZTWS
WZRWqo]

YPWPSUTR[SWPW	YQUY ]
T^RQ	YYLF@AY
T TD\]TQ^PDUS^@[WPE:D^UKBPV^PU
  WPYZ Sq[ZY\SXM\Y\B_\W\SJHHFY]\V^VWAWSMCQFIF\KLK@WD[AZUSVUJeABU\_VTUR^ZPWY	WS[	Sm]ST	QQ[gU
YSW
ZP	WVS[	SUP]
QSTQ 		]
WVPSYZDFBCYT^E_U V[_PG]S\BQVPF	8DJ^RS^\ TP[]WP \VS	]
pU_U_\]]^UR^ZPWY	WS[	Sm]ST	QQ[gU
YSW
ZP	WVS[	SUP]
QSTQ 		]
WVPSYZDFBCYT^E_U V[_PG]S\BQVPF	8FTTKA
QS]	 ^UZQ Y \r][^[_^_]US
U\QBAAL[_\^W_]CWQEJXLKF^CEABUFSHPWQVWBlHHW\]^]WPVSZUQ
WZRQmUS]SSSnW
PYU
RZWTZRQWRU SS]ST	]TPQPPFDBAP V VLUW TSVYM_Q\@Y_YL	8D\]BKWZPW 	WRS^	S^PxQX[\QPCQV]\S@K@LXW\\]^]KWSG@YLHF\ADAA]DQBPTYVU@fIHT\_\WTRTRZ]S WPSYmWSW[QQg]

YPWPSUTR[ QWPW	YQUY ]
T^RQ	YYLF@AY
T TD\]TQ^PDUS^@[WPE:D^UKBSVR[P
	^WP ] P	Yq__UU_UES]_[@IBFYW_\_\WKT[GB[FIETAFK@]LQ@ZUYU]@dKBU_W\UUZTPP]S	TRQ	YnWPU	[YQmU  SS]	PP	T^RQ	Y]ZW
QPUQ
W  WVS[	SZDLAKS^
TD_U^Q^ZG]Y_J[WZF	;N^UAA

UP[

	 ]P
W  P	rTWV]V_UW[WUVRJK@F[_VV]^WC]RM@YFKL]KDKBUE[BZWQ\TJfIBWV^VWWS^RPUY ]PSQg]PSWT	U	^ZoW	QSU ZP]WPSQT	R]
SYW	S	U	WTZRQZFDHBQ V^F_W
W[\XG_QVCQUXF	2GTWCA ^W Y 
	TZT 	ZrU]]VUWUC
U\QBAAL[_\^W_]CWQEJXLKF^CEABUFSHPWQVWBlHHW\]^]WPVSZUQ
WZRQmUZP]T
	T	TRnojW U WP[RWU ZSV]P	P g  V
TU^ZQS]PTSQ]S  W	
UTR[SXFF@KS T
WL]W^RVZE_S^JX_ZD:N\]AC]FyyqsY\Xqyq{IqXO|s[sWq_zHyX]WqD]EeYUTk
]^@VV^]`QzAG[ Mb|\\~j]Q@`B_Bz@_khDFxB_\yjESH]FtiGRegFa]TeXZ_rBj Z weS[|s{qry[ie`[q[WUy_VDbf\Fja^abqAtc]WqrrERx q[WUyXc uHqAtc]WqrrBjq{qrqJ~XpZberX}qwfiK|fwHbfqFied]uH~XsGuuu}XdYafa[|s{qry[ie^[q[WUyXwIqXO|s[sWq_vXUa{qrrZTj`FqXO|s[sWq\^Tq{qrrSK{C|`WUyqx ]iz^yX]Wq\DR_gYtpyyqsYYvHTq{qrr\Red^ZfmGj wYtpyyqsY[v~Qq{qrqDU\Vh[yjeUuUFqXO|s[sWq_jASK{qrrRzYtpyyqsY[ByX]WqXq|s\2GUWCATO{{qqQUQ{{qyAxQE~q[q_xVpJ{X__xMWGgQ\]a_^H_\\_ i[xCGYDksWc	WC\S{jaudIYPp` Qz}}A ~_T}
|ESzfLhoISeTWU|Y{[GvrQsW{_vSk{{{qzQPoVJVjyMh
kY~s sx{sYQu	AU{{{qy|Y~s sx{sYSeaQ~QsY|fbS|ZY eL~|^]|a @|odY~eu	
cD|fiO||sJ|vy
hU`Z{[GvrQsW{_vHk{{{qy@|Q{Cvc__x{xJk[Q~QsYkjfSA{Cvc__x{xEhjaQ~QsYV}Q}y{{qqQUp^Ghayx{xEP TxQE~q[q_xUZFQaQ~QsYk_\VRdI~_~UxQE~q[q_xVpXVuWQ~QsY~T`
i|gbR}A{Cvc__x{x Pz}Q~QsYVuHBxQE~q[q_xV|ESayx{{Yvc@;L@_XS^	[TP^PP 
R\V QpLCWFB]]TUZTPP]S	TRQ	YnW	VPU	ZZVmU  SS]	PP	]ZW
QPUQ
W  WVS[	SU^ZQSXLEHAS
W VF]]
TS\ZEUPV@YUZD2D\WACSQPU

 	WR] 		Vp^D[YH[S_^TVZ_\U_PUVRJK@F[_VV]^WC]RM@YFKL]KDKBUE[BZWQ\TJfIBWV^VWWS^RPUY ]PSQgEWYI]mg]

YPWPSUTR[SWPW	YQUY ]
T^RQ	YYLF@AY
T TD\]TQ^PDUS^@[WPE:D^UKB	^P   
	\UWP  PUq^GSYJYRXVBY\U[WUVRJK@F[_VV]^WC]RM@YFKL]KDKBUE[BZWQ\TJfIBWV^VWWS^RPUY ]PSQgB]]E^mg]

YPWPSW	Y U  P]RPT	R]TPQPWSUYYWYW				U^ZQSXLEHAS
W VF]]
TS\ZEUPV@YUZD2FB]XQV
]STVQSVR]VT\S]
QVVxWMQ[J[ZQ_H[^UWYUZTPP]S	TRQ	YnKW_G^o
nW
PYU
RZWTZRQWRU SS]ST	]TPQPPFDBAP V VLUW TSVYM_Q\@Y_YL	8D\]BKTYTSWWR	P  	\xJYPG^VY]_[@IBFYW_\_\WKT[GB[FIETAFK@]LQ@ZUYU]@dKBU_W\UUZTPP]S	TRQ	YnKW_G^o	nW
PYU
RZWTZRQWRU SS]ST	]TPQPPFDBAP V VLUW TSVYM_Q\@Y_YL	88