D]WACWG]Uy{qP{]tYj{y{ZwJ~{|IJ}|qB}dQ[|y_P{ssUyUvGhs{yRi{YEyy{qP{sx]R~{Z][T
f^hwtD|Ub\P^GRUf{YEyy{qP{sxBj{y{Z}lu|xZ|oiNhtQF~aMc~oe@~dg}R\Z}t{}lz[hs{AsQqP{ss[RUf{Z][T}^~q]Uy{qP{^pZTW^}Y{DSfNQdZjeA{YEyy{qP{sxERz{Z][~|aM{YEyy{qP{sxESAy{[bb}ePdwy|y@Z{F}|WCtQU}lqJw[|y_P{ssUyVbDQI{yVbDQI{AsQqP{ss[Tp\@hc{yUAP]g[|y_P{ssUyVi^}Y{Ky_@8F_WCK
UE]WqsvUy_t[bs~yXwHvs~KHutvGfgYtqXUyqsWq]qBjq{qZny[E{qsvUyqx_ZyyX]Y\a[jutFt]ei F[Z^zGRx^qY@yyqsWqs}Bjq{qZPH}eku]fH|fcut~F~v|]ac[iXYGtgmXjvUbtrfxXuY~As[sWqsv[R_d qZX[TYtqXUyqsWq^uZTuUYwY~DSutCbc[|s]WqsvUy\pF[^f[[{ vtz[|s]WqsvUy\pJqZX[dYujcvJ}fWuZvK}[GwsE~KsHutXH}a{C{YvUyqsY\wOHyX]Y\wOHy[E{qsvUyqx ]hu^yX]YZ]Gja{C{YvUyqsY\Y~yX{Y{^:D_UKCWE__ytsW{_vSjt{{Xu@~t |KtIv[Q|v]W{qq_yZt@hqyy]k {[GsytsW{qzWR| {X_QRZd huvN|Z`k DSRYEPzVy^E{{qq_ytx@hqyy]VZvvU}sY~fuiZwD|vWBjd}ea	|cZ]|fu	i`khuej^{Cq[q_ytsYP_fy]]YV}Q|v]W{qq_yYpXVuWQ^{FhjXOSZdJQ \NR^
Y~s__ytsW{\rNSYcY}[y~sY~s__ytsW{\rBy]]YfY	}bdsHfe_}]sI[ OtG|Kq@}s]JayKs^sW{qqQTpJJ{X_QTpJJ{[GsytsW{qzUop\{X_QRZEhayKs^sW{qqQT^{{XyQsY8D]]CDWGWW~qqU{]~[mqy{ZaH{XyK|IJyKJ{YO{~qqU{srXVea[}YqyqyAqYyW~qq[SwJSqy{]r\U_f P@\U_~^~]j[U\}GP]n ~[Gy{syW~qzBhsq~XiKkZz]nHX[~dmn yF|tP]xa ~\{f}EJ_ y u|Zin[yAqYyW~qq[P]n ~X_[VuY{s_U{syW~\rZVw_Yx[yDVw~JSueD{YO{~qqU{srGUz{ZWYyvaH{YO{~qqU{srGTKy{[`eweUduG~vyEZqDzvWFt[WzfqJ}Y{s_U{syW~\bAQIq~\bAQIqCt[qU{syYSz\Ehcq~_DP]mY{s_U{syW~\i[}YqI~U@8FTUDA
[VR
WS 
UZU QT 	[RrH[PEVPC
UYQBKBDQ_Y^]\UCRQE@[DAC^CFIHU
FSBX]QSWBfK@]Y]^W]PVPRUQ 	RPQQhU
QUTWR
W	URWqoR

YQWPRUTR[SWPWVQUV ]	
UQRQ	YXCF@AYT TD]RTQ^PEZS^@[WPD:D^UKCPV^PU
 WPY U  SpTZY\SXM]V\B_\W\SJIGFY]\V_YWAWSMB^FIF\KCK@WD[@ZUSVUJdNBU\_VUUR^UPWY	WRT	Sm]SU	QQ[hU
VSW
ZP	WVRT	SUP]
QSUQ 		R
WVPS	VZDFBCVT^D_U V[^_G]S\BQW_F	8DJ_]S^\TQT]VP SVSR
pU_U_]R]^UR^UPWY	WRT	Sm]SU	QQ[hU
VSW
ZP	WVRT	SUP]
QSUQ 		R
WVPS	VZDFBCVT^D_U V[^_G]S\BQW_F	8FTUDA
QRR	 	QUZQ  YSr][^[__P]US
U\QBA@C[_\^W^RCWQEJYCKF^CDNBUFSH_WQVWBlIGW\]^]WPVRUUQ
WZSQmUS]SSSoW
QVU
RUWTZSQW	RUSS]	SU	RTPQQ_FDBAQ V VLZW TSVXB_Q\@Y_XC	8D\]CDVUPW WRRQ	 S^QwQX[\QPBQVR\S@K@LYX\\]^]DWSG@YLI
F\ADA@RDQBPUVVU@fIHU
\_\WU RTRZRS 	WPS	VmWSW	TQQgR

YQWPRUTR[QWPWVQUV ]	
UQRQ	YXCF@AYT TD]RTQ^PEZS^@[WPD:D^UKCSVSTP
	^WP  R  P	YpP_UU_UD\]^T@IBFYW^
\_\WKUTGB[FID[AFK@]CQ@ZUYTR@dKBU^X\UUUTPP]S	URQ	YoWQU	[VQmU SS]PP	UQRQ	YRZW
QQUQ
W WVRT	SZDL@DS^TD_UQQ^ZG]Y^E[WZF	:A^UAA

UP[ 

	RP
W P	rTWWRV_UW[VUVSEK@F[_VY]^WC]SB@YFKL\DDKBUDTBZWQ\UEfIBWV_YWWRQRPUV ]PSQgRPRWTU	^UoW QSU UP]VPSQU 	RR
SYW	S	U	WTZSQZFDHCQ VQF_W
VT\XG_QVB^UXF	2F[WCAQW Y
	UUT 		UrU]]WZWUC
U\QBA@C[_\^W^RCWQEJYCKF^CDNBUFSH_WQVWBlIGW\]^]WPVRUUQ
WZSQmUUP]T
	U 	TRo`jW T WQTRWU USV]P	P g  VTU^UQS]PUSQRS W	
	UTR[SXFF@KS T
VC]W^SYZE_S^JYPZD:N]RAC]GyyqsY\Y~yq{IqY@|s[sWq^uHyX]WqEREeYUUd
]^@VY^]`^zAG[ Mcs\\~j]QAoB_Bz@_jgDFxB_\xeESH]FtfGRegFa]TeXZ^}Bj Z wd\[|s{qsv[ie`[qZXUy_VDbgSFja^ac~Atc]Wqs}ERx qZXUyXc uI~Atc]Wqs}Bjq{qs~J~XpZbd}X}qwgfK|fwHbg~Fied]uI~XsGutz}XdYagn[|s{qsv[ie^[qZXUyXwIqY@|s[sWq^yXUa{qs}ZTj`FqY@|s[sWq]^Tq{qs}SK{C|aXUyqx ]hu^yX]Wq]DR_gYtqyyqsYYwHTq{qs}\Red^ZgbGj wYtqyyqsY[wqQq{qs~DU\Vh[xeeUuUFqY@|s[sWq^eASK{qs}RzYtqyyqsY[ByX]WqY~|s\2FZWCAU@{{qqQT^{{qyAy^E~q[q_yYpJ{X__yBWGgQ]Ra_^H^\\_ h[xCGYEdsWc	XC\S{jnudIYQ` Qz}|N ~_T||ESzfLi`ISeTWTsY{[Gvs^sW{_vSjt{{qzQQ`VJVjyMikY~s sytsYQu	ATt{{qy~sY~s sytsYSeaQ^sY|fbS~sZY eLs^]|a @}`dY~eu	~cD|fiO}ssJ|vy
iZ`Z{[Gvs^sW{_vHjt{{qy@}^{Cvc__ytxJk[Q^sYkjfRN{Cvc__ytxEhjaQ^sYV}Q|v{{qqQT^GhayytxEP Ty^E~q[q_yZZFQaQ^sYk_\VSdI~_~Uy^E~q[q_yYpXVuWQ^sY~Tai|gbR|N{Cvc__ytx Pz}Q^sYVuHBy^E~q[q_yY|ESayyt{Yvc@:C@_XS^	[TP^QP 
RSV QpLBXFB]]T
UUTPP]S	URQ	YoW	VQU	ZUVmU SS]PP	RZW
QQUQ
W WVRT	SU^UQSXLDGAS
V VF]]TS\ZEUQY@YUZD	=D\WACSQPT

WR] 	Vp^ETYH[S_^UYZ_\U_QUVSEK@F[_VY]^WC]SB@YFKL\DDKBUDTBZWQ\UEfIBWV_YWWRQRPUV ]PSQgDXYI]mgR

YQWPRUTR[SWPWVQUV ]	
UQRQ	YXCF@AYT TD]RTQ^PEZS^@[WPD:D^UKC	^Q  
	\TWP  PUpQGSYJYRYYBY\U[VUVSEK@F[_VY]^WC]SB@YFKL\DDKBUDTBZWQ\UEfIBWV_YWWRQRPUV ]PSQgCR]E^mgR

YQWPRWV U P]RPU	RRTPQQWRUYVWYW		U^UQSXLDGAS
V VF]]TS\ZEUQY@YUZD	=FB]XQV

RSTVQSVR]VT\RR
QVVxVBQ[J[ZQ^G[^UWY
UUTPP]S	URQ	YoDW_G^o
oW
QVU
RUWTZSQW	RUSS]	SU	RTPQQ_FDBAQ V VLZW TSVXB_Q\@Y_XC	8D\]CDUVTSVWRP   	\wJYPG^WV]^T@IBFYW^
\_\WKUTGB[FID[AFK@]CQ@ZUYTR@dKBU^X\UUUTPP]S	URQ	YoDW_G^o	oW
QVU
RUWTZSQW	RUSS]	SU	RTPQQ_FDBAQ V VLZW TSVXB_Q\@Y_XC	88