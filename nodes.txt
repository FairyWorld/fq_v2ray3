D]WAB
WG]UxssW{]tYks{{ZkJ}Z{I|I IH}t{[}q]W{ssUx]t@hs{xZk {YEyxssW{sx]S| {Z][S]d hwtD}]`kFYS^EPx\xYE{{ssUxsx@hs{xZkghd|\~dkKhg{D|tkJ~cJZ_}gh]kJs]wd^_s{CqYsUxssYP]dxZ]YV[}q]W{ssUx^pXVwU[~Y{FkdKSs
Y~q]UxssW{^pDR^cY}Y{tY~q]UxssW{^pHxZ]Yf[wccsHdgU|ZsIYJ|sIssE~t]Gc{ArYsW{ss[UwJJ{Z][UwJJ{YEyxssW{sxThp\{Z][S]Ehc{ArYsW{ss[UY{{Z{[r^8F_WBCUE]VyqqUy_tZjqyyXkI|XyK~KH~qJ~HQX|s_UyqsVy_vBjq{yXiy[EzyqqUyqx^R~yX]XTzzTuZ\TeHGjj|K|_bi FZR\}GRx_y[GyyqsVyqzBjq{y_e }XQK}_z_|fQfuF~u|XiK[~H|fXY~ewu}~vc ~[yAs[sVyqq[R_dyX_[TX|s_UyqsVy\rZTuUX[yDi dHTuvBR\`|KyAs[sVyqq[SuHTqyyXc}KyAs[sVyqq[SzX[z}d`wyvuJ}asH}vyK|fwF|fyEyvsX}Jy[EzyqqUyqxRz}[[xRz}[|s]VyqqUy\`Sue[[xDR ^y[EzyqqUyqxyX_[}[{zVc:D_TCA
WE^W{ssW{_w[hs{{XtH|s |K}s|axCqYsW{qpYkg^[{X^Y|ZcY~s^W{ssW{_YFQcY}[{hgx[ke	EhxdZS cEQIFQ_RY~q]W{qpW{]^[{X^Yhtt]|ec\k]{DkHpkc HwY~d^ZhehD|gw|Xp|t|[uw]{YE{{qpW{sxEhj`Y}YxQKxCqYsW{qpYQwt Sqx{YXk_]CSh`~KxCqYsW{qpYQwIVqx{Zc KxCqYsW{qpYQxY}[{f `v{vtHIsIvxI~dwG~fxG{ts}X|H{YE{{qpW{sx Pz|Y}Yx Pz|Y~q]W{qpW{^`QudY}YxEP \{YE{{qpW{sx{X^YY{{Tc8F_UAAUE_U{rqUy_vYhryyXiJ~[yK~KHK}vS[~p_UyqqU{\vBjqy{[iy[Gy{rqUyqz]P~yX_[k\fGjjjDPvfGi eGhvbGSKGhia[|s_U{rqUy_\Y{[_[}fj_kfuiXeFeu}K kKfY|f\_kuF}fq|fyEjXr^he}y[Gy{rqUyqzGhia[[zQHyAs[qU{rq[SuvSryy[	Ghfv|KyAqXqUyqq[Qv	KTqy{[a}KyAqXqUyqq[Qy}[[z}fbtyvuHrqK}vyK~euE|fyE{uqX}J{XGyyqqU{rzRz}[}XzRz}[~p_UyqqU{_bSue[}XzGR ^{XGyyqqU{rz yX_[XyyVc8G\WCA
STU
WS

TRR QT SUrH[PD^WC
W^QBKBEY]^^]\TAUQE@[EID^CFH@WFSBYUSTWBfKAU^]^WUPVPSWQ 	UPQ	SoU
PRTW	P
WRRWqnU

QSWPP	UTSS	SW	PW
QQT	Q U
WVRQQZDF@AQT TE_UTQ_XG]S^@[VXF	:D^TCA
PWVPU
	WPQR RrSZY\SYE_Q\B_]
W\RBK@FY]\^]^WAWRE@YFIF]CDK@WESBZUSVTBfIBU\^^WUSVRPWQ 	WPS	SmUSW	QPSoU
	QSW
RP	WWPS	ST	PU
QSW	Q U
	WVPRQZDFBBQTVF_U WS\XG]S\CYUXF	8EB]ZS^TT SSUTP TVS
U
pU_TW_U]^USVRPWQ 	WPS	SmUSW	QPSoU
	QSW
RP	WWPS	ST	PU
QSW	Q U
	WVPRQZDFBBQTVF_U WS\XG]S\CYUXF	8G\WCA
P PU	VTR	Q  QTr][^ZW]W]USU\QCIBD[_\__\UCWQDB[DKF^BFIBUFR@XWQVWCdK@W\]_UWPWPRUP	WRQQmT	SUSSRmW
SQU
SRWTRQQWRTSSUS W	UTPQ	SXFDBAS V WD]W TR^ZE_Q\@XWZD	8D]UACTRPW	
	WSPV	  RVSpQX[\PX@QVU\S@KAD[_\\]_UCWSG@XDKF\AEIBUDQBXWQVU@fH@W\_\WWRTSRUS 	WPRQmW	SWSQQ oU

QSWPP	UTSSQW	PW
QQT	Q U
WVRQQZDF@AQT TE_UTQ_XG]S^@[VXF	:D^TCA
SV	QSP
VWPU PQrW_UU_TF[U\S@IBFX_\\_\WCWSGB[FHF\AFKAUDQ@ZTQVU@dKBT\_\UTRTPPUSWRQQmWSUSQQmTSSU
PPWVRQQURW
PSUP	WWWPS	SZEDBCSVTD_T VQ^ZG\Q\B[WZF	8F^UAA
UP	S

UP
W 	P	rU_UUV_UWST
T^QBK@F[^^^]^WBUQE@YFKD^CDKBTFSBZWPTWBfIBW^]^WWPVRPTQ UPSPoUP	PWU
	UVRoW	
QSTRPUTPSPW	SU
SQW	SU		WTRQQZFE@AQ W VF_WTS\XG_P^@YUXF:D\WCAVW  Q
 WRU RrU\UU]WUCU\QCIBD[_\__\UCWQDB[DKF^BFIBUFR@XWQVWCdK@W\]_UWPWPRUP	WRQQmTRPUT
W	TSmgjWV WSSRWTRSVUP	Po    WTTVRQSUPWSPUS 	W	
 UTSS	SXFFACS TTD]WVQ^ZE_S_B[WZD;F_UACUE yyqsXT[yyq{Hy[G|s[sVy\rHyX]VyGUEeX]Wc
]^A^^^]hYzAG[Eat\\~j\YChB_BzAWh`DFxB^TzbESH]G|aGRegGi ]TeYR\zBj Zf[[|szyqq[ie`ZyX_Uy_VEjeTFja_iayAtc]VyqzERxyX_UyXc}KyAtc]VyqzBjq{yqyJ~Xp[jfzX}qeaK|fwIjeyFied\}K ~XsF}v}}XdXiei[|szyqq[ie^ZyX_UyXwHy[G|s[sVy\~XUa{yqzZTj`Gy[G|s[sVy_^Tq{yqzSK{Btc_UyqxUjr^yX]Vy_DR_gX|s yyqsXQu	HTq{yqz\Red_ReeGj wX|s yyqsXSuvQq{yqyDU\ViSzbeUuUGy[G|s[sVy\bASK{yqzRzX|s yyqsXS ByX]Vy[y|s\:D]WCAWG{{qpYVY{{qxI{YE~q[pW{^pJ{X^W{EWGfY_Ua_^@\\\_j[xCGX GcsWb_C\SzbiudHQSx` Qz|~I ~_ \~|ESzgDkgISeU_VtY{[F~qYsW{_w[hs{{q{YSgVJVjxEkkY~s{{ssYQuIVs{{qx |tY~s{{ssYSe`Y}YsY|fc[|tZY dD}t^]|aHgdY~et|cD|fhGtsJ|vxk]`Z{[F~qYsW{_w@hs{{qxHY{Cvc^W{sxJkZY}YsYkjg PI{Cvc^W{sxEhj`Y}YsYV|Y~q{{qpYVx^Ghax{sxEP \{YE~q[pW{]ZFQ`Y}YsYk_]^QdI~_]{YE~q[pW{^pXVuVY}YsY~Uci|gcZ~I{Cvc^W{sx Pz|Y}YsYVuIJ{YE~q[pW{^|ESax{s{YvcA	8D@_XS_
	S	U PVSP 
STV QqD@_FB]\\TRTPPUSWRQQmW	WS	URRVmTSSU
PPURW
PSUP	WWWPS	STVRQSYDF@AST VF\UTS\ZD]S^@YUZE	:D\WAB
SQPV 

WRU	VqVGSYH[S^VW^Z_\UWS
T^QBK@F[^^^]^WBUQE@YFKD^CDKBTFSBZWPTWBfIBW^]^WWPVRPTQ UPSPoF_YI]m oU

QSWPP	UTSS	SW	PW
QQT	Q U
WVRQQZDF@AQT TE_UTQ_XG]S^@[VXF	:D^TCA
VS  
TVWP	  PTrVGSYJXZ[^BY\UST
T^QBK@F[^^^]^WBUQE@YFKD^CDKBTFSBZWPTWBfIBW^]^WWPVRPTQ UPSPoAU]E^moU

QSWPP	W	
Q T PURPW	S UTPQ	SWPU	QQWQ W
	TVRQSYDF@AST VF\UTS\ZD]S^@YUZE	:FB]XP^
USTVQSVSU VTTPU
QVWpTEQ[J[[Y\@[^UVQTRTPPUSWRQQmCW_G^nmW
SQU
SRWTRQQWRTSSUS W	UTPQ	SXFDBAS V WD]W TR^ZE_Q\@XWZD	8D]UACWQTS		T WS
P    TpJYPG_UQU\S@IBFX_\\_\WCWSGB[FHF\AFKAUDQ@ZTQVU@dKBT\_\UTRTPPUSWRQQmCW_G^nmW
SQU
SRWTRQQWRTSSUS W	UTPQ	SXFDBAS V WD]W TR^ZE_Q\@XWZD	88