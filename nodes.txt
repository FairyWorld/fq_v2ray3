D]W@C	WG]TypqP{]tXjpy{ZkK|YyN|IK}Z}s{@sZqP{ssZid\\{Z]Z~Ya^~q]TypqP{]ZES a^}YxFjkb\kg
Fj{f]S`FSJAQ]QZ|r_P{ssTy^\\{Z]ZjY\^|wh[j^eChg{ ~` hZ |du|tYG~^yhtsg}N|]gyZG|{ssTypzBhhcZZzQI{@sZqP{ssZStvSs{yZ	EhgdD|JyDqYsTypq^QwJTpy{Zc}JyDqYsTypq^QxZZzxf `uywuO|csJ}wyM~dsI|gq{t{KY}O{YExypqP{sxR{}^}YxR{}^~q]TypqP{^`Ste^}YxFR[{YExypqP{sxyY_^Y{xVb
8F_VC@
UE\WzsvUy_u[is~yXvH}s~K~cJ~HvYqXUyqrWz]qBjqzzZny[D{zsvUyqy_QyyX\YWa[juuF]ei G[Q^zGRy^zY@yyqrWzs}BjqzzZ}_jXeX}t~|fXG|trF~v_X~Ijee]d_Y~fbJjZu_}vXis~As[rWzsv[R_e zZX[T~YqXUyqrWz^uZTuTY|Y~DijqGigqK|KzCpYvUyqrYPwKTqzzZf}KzCpYvUyqrYPxz[[yg etyvvH~IvK}vzJdvH|frzt~JX~HzY@yyqrWzs}Rz~Y|Y}Rz~YqXUyqrWz^eSufY|Y}GR \zY@yyqrWzs} yX\Y~Y~yVc9FZWCA	U@]W{pqTyZt[hpyy]kH~YyJ~NJ}pJ~cwY~r_TytsW{^vCjt{{Yiy^E{{pqTytx_P ~y]]Yk^fFjohFPtfFigEhtbFSNEhkaZ|v]W{pqTyZ^[{Y_Z}`tZ}da}]UDhw} t h^b^|c^]kYSGjst\djZjZI|IyIy^E{{pqTytxEhkaZ^xQJy@s^sW{pqZSpt Spyy^Xh z_j`\P]aEy^E{{pqTytxGP zy]]Y|waIy^E{{pqTytxGQJyy\``veT}cG{wyD}]Dw}G}sQWYu}MwY~r_TytsW{]b@SN{{]b@SN{CqZqTytsYV{\Djd{{^ERZgY~r_TytsW{]iZ^{I{T@
:A_UA@
RE_UzsrW~_vYisz~XuJ}s yK }YHyHq[q\W~qqUz]u@mqyzZj ~[GyzsrW~qz]Q} ~X_[WxySuX_WgKEmj~H]an DYQ^~EUz\zYD{~qqUzsy@mqyzZa]yX}E~drG{e}jdTDyuz^~sy_~^dTJzXe}d~GmuaH}IzCt[qUzsrYU_fzZ\YS}[q\W~qqUz^qXSuW[|YzFn_HDWIY{s_UzsrW~\rDP^bYx[y}t~Y{s_UzsrW~\rHzZ\YcY	wacrHzfuU~ZrIzK E~IGyKqK~d\JzayApYrW~qq[WwKJ~X_[WwKJ~[GyzsrW~qzVhq\~X_[Q]
EmayApYrW~qq[WYz~Xy[p^=D\W@C	 STVUV
WRQRV  SVpKYUG^TA	W]SAIGFY]]]_YWAVSFB^FIG\@CK@WDP@ZUSWUAdNBU]_]UURUUPWR	VRT	SlVSQVU	PRQQUtmV QSUUP
VVPS
QU 	RR
RRW	R	UWUQSQZGDCCQVQF_VVT\XG^Q]B^UXF
	9F[WCA	RTVRV
UUQQ  	 QrPXZ^VZE_R^AZ^
UYQBKCDZ_Y^]]UCRQE@ZDJC^CGICU
FSBXVQSWBfJ@VY]^WVPVQRUQ 	
RPP
QhU	VW
SSSlV
RQURR
RTPP
QW
RURVW
RV		UUUQRXGDGARV VF]VTS\[E^QY@YU[D
	=FB]YQ]
T	QSPUTR W TV 
VsWZWW_V^\VPVQRUQ 	
RPP
QhU	VW
SSSlV
RQURR
RTPP
QW
RURVW
RV		UUUQRXGDGARV VF]VTS\[E^QY@YU[D
	=D\W@C	S PV	
UWR
R  QWp^Y[YW]T_WV V^T@IBGY\^
\_\V@UTGB[GID[AFJ@VCQ@[URTR@dKCU^X\UUUTPQVS
	URQ	RoW
QU	PVQmUSRVPQ	UQRQ	RRQWQQUQW
VVRT	S[DG@DSUTD^UQQ^ZF]R^E[WZG	
:A^UA@
 TQRU


RPPU 
 QVSsS[YYSX@SU
V^PBNBD[\^^X\U@UPEE[DKD_CFIBVGSGXWRTVBcK@W^\^RWQVPRVQ	UUQRoU	QRPRSoV QSUUP
VVPSSU 	RR
RRW	R	UWUQSQZGDCCQVQF_VVT\XG^Q]B^UXF
	9F[WCA	QS	QPRVUUV  UQrT]VWZWFX
U\PBJ@C[_\^\^RCWPEAYCKF_CDNBUGSC_WQVVBgIGW\\^VWQVRUUQWQSQmUSVSRSoWQVU
RUWUQSQV	RUSSV	S
U	 RTPP
Q_FDB@ Q VVGZW US]XB_Q\AYTXC	8E\VCD VR 
S VRR 
R
	wV_UVT\WRST	W^QAICD^]^]_]UAUQFBZDND^@GIGWFP@XRSTWAdJ@R^]]URPUQRWR	URPSoVR	PUV

VVQlR

RQWQRUTRPSW
PVVQU
V V	

UQRQ	RXCF@ART UD]RTP^[EZS^@ZW[D:D_U@CUUQWQ	 V  Q pP_UU^UWF V^T@IBGY\^
\_\V@UTGB[GID[AFJ@VCQ@[URTR@dKCU^X\UUUTPQVS
	URQ	RoWQ	UU	WW
VPmdhUV	RSPQUWQQSUR
Uo TVWVQS	VU	UWQSV	Q	U
 VVPS
Q[DCBC QQTG^U VQ]XF]V\B[TXG	8F_VC@
UE{zsv[T[zzs~Ky[D~pYvUy\qJzZXUyGVF`[]W`^\B^]\^hZxBE^Eaw^_|o_YCk@\@BWhcFEzG]TzaGPJXD|bEQgbDi _WgZR\y@i_fXYqyyqrYjgeYyX\Wz]SFjeWDic\iazCwaXUyqyGQ}yX\WzZf}KzCwaXUyqy@is~yqzH}ZuXjfyZ~sebIdrJjezDjga_}K}ZvE}v~ ~Za[iejYqyyqrYjg[YyX\WzZrKy[D~pYvUy\}ZVc~yqyXWheDy[D~pYvUy_\Ws~yqyPI~Atc\Wzs}Ujq\zZXUy_FQ]b[|s{zsv[Qu
JWs~yqy^Qga\RefEir[|s{zsv[Suu Rs~yqzFV^SjSzagVwPDy[D~pYvUy\aCPI~yqy Qxz[|s{zsv[S @zZXUy[z~p^:D^U@CWD xytsYVZyyt{I{ZG}s^sW{]rIy]]W{FUEeY_Vc][@\^_] jY{AB[ G`qTa\A_Vybjwg KQS{bS~J	|Z\~~FQdDkdJQ`V_Vw[y^E~qZqTyZt[hpyytxYSdTITo{EkiZ|v{{pqZSpIVpyyt{ |w}Z|v{{pqZQ`cY}ZqZ~c`[|wXZ}gD}w\^~dHdfZ|`w|aG~ckGwqI~s{k^bYy^E~qZqTyZt@hpyyt{HZy@tf]W{pzIiYY}ZqZiod PJy@tf]W{pzFjocY}ZqZTY~r xytsYV{\Djd{{pzFR\{ZG}s^sW{^XEScY}ZqZiZ^^Q fJ|Z|]{ZG}s^sW{]r[TpUY}ZqZ|Vcj~b`Z~Jy@tf]W{pzRY}ZqZTpJJ{ZG}s^sW{]~FQd{{pyZtfB	8GB\ZV\

S
 V U VSRPWTTrD@\DA__\ WQVRUUQWQSQmU
TS
VRQT oWQVU
RUV	RUSSV	S
U	 RTPP
QWVQS	VZDFCCVTUD_UVP^_G]S]BZW_F	9F_UDA
QRRVUQU 	
TrVGP[KYV]VW]X\^PWS	W^QAICD^]^]_]UAUQFBZDND^@GIGWFP@XRSTWAdJ@R^]]URPUQRWR	URPSoF\[J_hoV QSUUP
VVPS
QU 	RR
RRW	R	UWUQSQZGDCCQVQF_VVT\XG^Q]B^UXF
	9F[WCA	VSTVUU	  UWrUEP[O[Z[]@Z^PST	W^QAICD^]^]_]UAUQFBZDND^@GIGWFP@XRSTWAdJ@R^]]URPUQRWR	URPSoAV_F\hoV QSUUP
R

RWRU	QUW
P VVRT	SUPV
QRUQ 	R

WVQS	VZDFCCVTUD_UVP^_G]S]BZW_F	9DA_]S^ VQVSSPTPU TQTPVRT TpTFSXH^XY\CY]WUQ WQVRUUQWQSQm@U\E[mmUSRVPQ	UQRQ	RRQWQQUQW
VVRT	S[DG@DSUTD^UQQ^ZF]R^E[WZG	
:A^UA@
WRVQ
	TRP
R TsHZRB\UR
U\PBJ@C[_\^\^RCWPEAYCKF_CDNBUGSC_WQVVBgIGW\\^VWQVRUUQWQSQm@U\E[mmUSRVPQ	UQRQ	RRQWQQUQW
VVRT	S[DG@DSUTD^UQQ^ZF]R^E[WZG	
:=