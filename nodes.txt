D]WABWG]UxqqV{]tYkqy{ZkJ}XyH|I ~aI}tQ[}s_V{ssUx_vAhs{xXi{YEyxqqV{sx]S~{Z][h_fDhhhDSufDkgGkubDQIGkjaX~q]UxqqV{]^YxX_X|dhXrZ|dsFh_ihY }~gtY~feE|tgkfiHdgH|HXY{YEyxqqV{sxGkjaX}YxRKyBqYsUxqqXQwtPqy{YAUe[Ss
[}s_V{ssUx\rGQ^c[~[y|t[}s_V{ssUx\rK{Z][eY	t`csJ|HqVZsK|[ IYE|aqFt]H|ayBqYsUxqqXVwJHxX_XVwJHx[Gz{ssUxqzWhp^xX_XP]GkayBqYsUxqqXVY{xXyXq^;D]TACWG^UyqsV{]wYjq{{ZhJ|X{H|I }qI|tV[|s]V{spUy_tAhsxyXk{YFyyqsV{s{]R|{Z^[T dXhwwD|_` kEYR\DP{\y[Ez{spUyqxAhsxy_h[hZhH~X^\~g`iHwE|ts[}aX|Js[|e|[kJZ~vc|]xEia{BqYpUyqsXP]gyX]XV|[|s]V{spUy\pYVwV[[{Gh]KQK
X~q^UyqsV{^sDS\cX}Yx~vX~q^UyqsV{^sHyX]Xf[wbasId|U}XsHYJ}[FcpE}v]KcxAs[sV{sp[TuJK{Z^[TuJK{YFyyqsV{s{Ujp]{Z^[R_DhcxAs[sV{sp[T[{{Zx[s\8F\WCAUF]W{qpUy\t[hqxy[wH|q~H|[JecY~s^UyrsW{_wBjr{{XhyXE{{qpUyrx_Py[]YVz{TvZ]VeIGji|J~_ciF[P\|GRx^{[FyyrsW{q{Bjr{{_|K}KxXhv{X|etZedF~ug |q [i\~fUZ}{}vde`ZkKxAsXsW{qp[R\d {X^[TY~s^UyrsW{\sZTvUY}[xDTyV@Q`DyXE{{qpUyrxGP{y[]Y|v`HyXE{{qpUyrxGQKxyZ``wdU}ewH{vxE}[{DfxF}uwWvp}KwY~s^UyrsW{\cASH{{\cASH{Cq[pUyrsYVz]Ejb{{_DR\gY~s^UyrsW{\h[X{I{UA:G_UAATE_U{rsWx_vYhr{xXuJ|r K|bI|ve[~p]WxqqU{\t@kqy{[k x[Gy{rsWxqz]P| xX_[P\d kuvD~\`h DYP_ESz\{XE{xqqU{rx@kqy{\ck_z^h[{}ee|wDvW}bY| y~f{kvehfwJ~eeJH{Cr[qU{rsYS_f{[]YU}[~p]WxqqU{_pXUuW[}X{Fh\[D{XE{xqqU{rxGSz{[]YvaH{XE{xqqU{rxGRKy{Z`cweUewxvyE[{D|fyFuwW|vqKwY}s_U{rsWx\bAQH{x\bAQH{Cr[qU{rsYUz\Ehb{x_DP\gY}s_U{rsWx\i[}X{IxU@8G^UBA
QVT
WS
	
TPS QT QTrH[PD\VC
U_QBKBE[__^]\TCTQE@[EKE^CFHBUFSBYWQUWBfKAW_]^WWPVPSUQ TPQQnU
PSTWR
W	SRWqnT

SQWPRUTSQSWPWPQTP W	
UWRQSXEF@AST TE]TTQ_ZE\S^@[VZD:D^TACPWTPU
	
WPS S RpRZY\SYG]P\B_]W\R@IAFY]\\__WAWRGBXFIF]AEK@WEQ@ZUSVT@dHBU\^\UUSTSPWS	WRR	SmWSU	QPQnU
	PSW
PP	WWRR	STPW
QSUQ T
WVPR	PZDFBBPTTD_U WQ^YG]S\C[WYF	8E@_[S^V	T QRWVP UVST
pU_TU]T]^USTSPWS	WRR	SmWSU	QPQnU
	PSW
PP	WWRR	STPW
QSUQ T
WVPR	PZDFBBPTTD_U WQ^YG]S\C[WYF	8G^UBA
PRT	
	WTPQ  SUr][^ZU_V]USU\QCK@E[_\_]^TCWQD@YEKF^BDHBUFRBYWQVWCfIAW\]_WWPWRSUP WPSQmTSWSSRoW
QPU
SSWTPSQW	RT	SSW	S UTTPQQYFDBAQ V WF\W TR\XD_Q\@XUXE	8D]WCBVSPW	
WSRW	 RTQqQX[\PZBQVT\S@KAFY^\\]_WBWSG@XFIF\AEK@TDQBZUPVU@fHBU\_\WURTSPTS 	WPR	PmWSW	RQQ mT

SQWPRUTSQ	QWPWPQTP W	
UWRQSXEF@AST TE]TTQ_ZE\S^@[VZD:D^TACSVSRP
TWP
 T PSpV_UU_TDZW^R@IBFX]^\_\WAURGB[FHD]AFKAWEQ@ZTSTT@dKBT^^\UTSTPPWSURQSoWQUQPQmT
	SSWPPUWRQSTPW
PQUP W
WWRR	SZEF@BSTTD_TWQ^ZG\S^C[WZF:G^UAA
UP	Q 

TP
W P	rU]WTV_UWQVT\SCK@F[^\_]^WBWSD@YFKF\BDKBTDRBZWPVUCfIBW\__WWRWRPTP WPSPmTPRWUUTSoW	QST
SPWVPSPU	ST
SSW	S	 U	WTPSQZFEBCQ WWF_W VR\XG_P\BXUXF8F]WCAWW  S	
 USU 	SrU\WW\WUCU\QCK@E[_\_]^TCWQD@YEKF^BDHBUFRBYWQVWCfIAW\]_WWPWRSUP WPSQmTSPWT
U	TSofjW
T WQRRWT
SSVWP	Pm  WTTTSQSWPUSPTS W	
 	UTSQSXFFAAS T VE]WTS_ZE_S_@YVZD;D]TACWGyyqsXVYxyq{H{YF|s[sV{^sHyX]V{ETEeX_Ub
]^A\_^]jXzAG[Gcu\\~j\[AiB_BzAUjaDFxB^VxcESH]G~`GRegGk]TeYP^{Bj Z}dZ[|sz{sp[ie`Z{Z^Uy_VEhgUFja_kcxAtc]V{s{ERx{Z^UyXcIxAtc]V{s{Bjq{{sxJ~Xp[hd{X}q}g`K|fwIhgxFied\I~XsFt|}XdXkgh[|sz{sp[ie^Z{Z^UyXwH{YF|s[sV{^XUa{{s{ZTj`G{YF|s[sV{]^Tq{{s{SK{Bva^UyqxWhs^yX]V{]DR_gX~qyyqsXSwHTq{{s{\Red_PgdGj wX~qyyqsXQwwQq{{sxDU\ViQxceUuUG{YF|s[sV{^cASK{{s{RzX~qyyqsXQByX]V{Yx|s\8F\WCAUF{{qp[TX{{qxKyXE~q[pUy_pJ{X^UyDWGf[]Ta_^B^\\_h[xCGXEbsWb^C\Sz`hudHSQy` Qz||H ~_ ^||ESzgFifISeU]TuY{[F|sXsW{_wYjr{{q{[QfVJVjxGikY~syyrsYQuKTr{{qx~uY~syyrsYSe`[XsY|fcY~uZY dFu^]|aJ}fdY~et~cD|fhE}usJ|vx i\`Z{[F|sXsW{_wBjr{{qxJ}X{Cvc^UyrxJkZ[XsYkjgRH{Cvc^UyrxEhj`[XsYV|[|p{{qp[Ty^GhaxyrxEP ^yXE~q[pUy\ZFQ`[XsYk_]\SdI~__yXE~q[pUy_pXVuV[XsY~Uai|gcX|H{Cvc^Uyrx Pz|[XsYVuIHyXE~q[pUy_|ESaxyr{YvcA:E@_XS_	QUPTQP 
SUV QqFB^FB]\^
TSTPPWSURQSoW	WQUPSVmT
	SSWPPTPW
PQUP W
WWRR	STTSQSYFDAAS V VF\WTS\ZD_Q_@YUZE	;D\WABSQPT

 WRW 	VqTERYH[S^TU_Z_\UUQT\SCK@F[^\_]^WBWSD@YFKF\BDKBTDRBZWPVUCfIBW\__WWRWRPTP WPSPmD^YI]m mT

SQWPRUTSQSWPWPQTP W	
UWRQSXEF@AST TE]TTQ_ZE\S^@[VZD:D^TACTQ	  
VTWP PTpWGSYJXXY_BY\UQVT\SCK@F[^\_]^WBWSD@YFKF\BDKBTDRBZWPVUCfIBW\__WWRWRPTP WPSPmCT]E^mmT

SQWPRW	P T	 PWRPU	STTPQQWRU	SPWSW 	TTSQSYFDAAS V VF\WTS\ZD_Q_@YUZE	;FB]XP\

TSTVQSVSWVTVRT
QVWrVDQ[J[[[^A[^UVS
TSTPPWSURQSoBW_G^n oW
QPU
SSWTPSQW	RT	SSW	S UTTPQQYFDBAQ V WF\W TR\XD_Q\@XUXE	8D]WCBUPTS	VWSP   VqJYPG_WPW^R@IBFX]^\_\WAURGB[FHD]AFKAWEQ@ZTSTT@dKBT^^\UTSTPPWSURQSoBW_G^noW
QPU
SSWTPSQW	RT	SSW	S UTTPQQYFDBAQ V WF\W TR\XD_Q\@XUXE	88