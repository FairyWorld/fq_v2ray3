D]WABWG]UxqsT{]tYkq{{ZkJ}X{J|I ~q|s{Ar[sT{ss[he^X{Z][XcZ~q]UxqsT{]ZDRcZ}YxkexXkg
GkzdYS`GRKEQ]Q[}s]T{ssUx_^X{Z][ {D|Zd[kugG|wk[hZJ}ex_|wF|XsDdJvh^dkHx[Ex{ssUxqxFhhc[~[x QI{Ar[sT{ss[RutSs{x[JSg\}K{@qYsUxqsZQwKUq{{Zc|K{@qYsUxqsZQx[~[x|f `txvwKIsK|v{J~dwK}f{I{tw~XsK{YEyxqsT{sxSzZ}YxSzZ~q]UxqsT{^`RugZ}YxGS _{YEyxqsT{sx xX]ZY{yWc8F_WBAUE]V{qrUy_tZhqzyXwI|q~KqK}f{X~s\UyqsV{_uBjq{{Xjy[Ez{qrUyqx^P}yX]Xk_eGjjhGPueGi gDhuaGSKDhjb[|s]V{qrUy_^Z{X\[ewe}^~HYEhu~~KkfT|fZ\hvzFifYkHvjXgeu[y[Ez{qrUyqxDhjb[[xQKzAs[sV{qr[SutSqzy[\ke^|K{Bq[rUyqsXQu
KTq{{Xb}K{Bq[rUyqsXQz~[[x~fatyvwKqrK}v{H~fvK|f{K{vvXsI{[DyyqsV{qyRzX}[yRzX~s\UyqsV{\aSugX}[yGR ]{[DyyqsV{qy yX]X[zyVc8D^WCAWD]W{qpU{^t[hqx{YkH~XxK|J|aJ}gkY~s^U{psW{_wBhp{{Xh{ZE{{qpU{px_P{Y]YP_ghttF~_ckF[P\|GP x^{[Fy{psW{q{Bhp{{XVJ|gc HkX~dcf`F|tgka [|IU~fc^hYpXvxtwh[xAqZsW{qp[P^d {X^[V Y~s^U{psW{\sZVtUY}[xDhtdXPq	[~r]W{qpU{]pFQ\`[}Z{ |v|[~r]W{qpU{]pJ{X^[fXu`apJggWXpKZH[KJsH|H^E`{Cq[pU{psYVuIH{Y]YVuIH{ZE{{qpU{px Wjs^{Y]YP_Gh`{Cq[pU{psYV[x{Y{Yq\8E_UAAVE_U{rsUz_vYhr{zXuJ|r}K|rJ~ayAqXsUzqq[kf^YzX_[|[c[s_U{rsUz_XDQc[|[zQ_dRujPv^P}GhydXR bGQHDP_S[~p]UzqqU{\^YzX_[|u|X}_eKfcF~ezZkH|vTY~eU iXeFh\c~v[ h[|fW{XEyzqqU{rxGija[}XxPKyAqXsUzqq[QvtRqy{XXQ  hfBie~H{Ap[qU{rs[Pu	KVr{zXaH{Ap[qU{rs[Pz}[}Xx}gbt{uwJ~aqKu{KfuK~e{Hzvu}[sJz[Gy{rsUzqzPy[|[zPy[s_U{rsUz\bQvg[|[zGP^z[Gy{rsUzqz {[][~[yyT`9D\WAB STW	 WR

	WRPSTSWqJ[QG^U@W\R@KCFY]\\]]WAWRG@ZFIF]AGK@WEQBZUSVT@fJBU\^\WUSTQPWS 	WPP	SmW
SPWW
	P	VPPWpmW	
QST
QPWTPSPW	SV
SSW	SU	
WTPQQZFEBAQ W UF_W TP\XG_P\@ZUXF8D_WCAP
TVSW
 WQQP  QrQY[\RZE_S_@^^
W]QBKBE[]]^]\TAVQE@[EKG^CFHBWFSBYWSWWBfKAW]]^WWPVPSWQ VPQSlURWQSSmW

SPWRSVTPQSWPU	SRWS W
	TTQQSYFFCAS T VF\WTS\ZD_S]@YUZE9FB]XP\T
 USQUTS VVR 
W	rU^WW_W_^	WPVPSWQ VPQSlURWQSSmW

SPWRSVTPQSWPU	SRWS W
	TTQQSYFFCAS T VF\WTS\ZD_S]@YUZE9D\WABS PWT WRSQVq_[_YW]U^URW\P@IBFX]\\_\WAWPGB[FHF_AFKAWGQ@ZTSVV@dKBT\\\UTQTPPWSWRQSmWSUQRQmT
SSW
PPWURQSVPW
PSUP 
W
WWPP	SZEFB@STTD_T UQ^ZG\S\A[WZF8E^UAA TPS W

VPPT 
QVSrRZ[]SX@RTW_Q@JBD[]_\\\UATQGA[DKE^AFIBWFQCXWSUW@gK@W_]\VWPTPRWS	TQQSnW	PVQSQoW	
QST
QPWTPS
RW	SV
SSW	SU	
WTPQQZFEBAQ W UF_W TP\XG_P\@ZUXF8D_WCASW	QQSV WQW  QQrU\WU^WFY U\QCKBG[_\_]\VCWQD@[GKF^BFJBUFRB[WQVWCfKCW\]_WWPWPQUP 
WPQQmT
SWSSRmW
SRU
SQWTPQQWRTSSWS W
VTPQS[FDBAS V WF^W TR\ZF_Q\@XUZG	8D]WA@	WP
S	

WS
VSsV_UWU]UVSTW^Q@HBFZ]^\^\WAUQGC[FJD^AFKCWFQAZVSTW@eKBV^]\TVPTPPWS
USQ
SoWP	PT
V
WVPmV

SSWPP
UTSQ
SWPW
RQTR W
WURQSZGF@AST TE_VTQ_ZG^S^@[VZF
:D^TAA	TTQ
	
WP
V PrT_UU_TUBW\P@IBFX]\\_\WAWPGB[FHF_AFKAWGQ@ZTSVV@dKBT\\\UTQTPPWSWRQSmWPQUVWTPmeiWVVSQPWWPSWUSQo T W WVPRRUQW
SSWS	TWTPSPZFGBCP UTF_W VQ\YG_R\B[UYF
8F_WBAUEz{qr[T[{{qzKy[Eq[rUy\pK{X\UyGWGd[]Wa	_^B^\]_h[yCGZEav_^~k_YCjA]B{BWhbGDxC]Tz`FQH\D|cDPefDi ^VeZR\xAh [fYX~syyqsXkeaYyX]V{_WFjeVEha\ia{Bvc\UyqxFPyyX]V{Xb}K{Bvc\UyqxAhqzyq{I|XqXjfx[qecH~fvJje{Ekee_}K |XrE}vXe[iekX~syyqsXke_YyX]V{XvKy[Eq[rUy\|[WazyqxYVjaDy[Eq[rUy_]VqzyqxQKzAtc]V{qyUjp]{X\Uy_GP_f[|sz{qr[QuKVqzyqx_Pee\RegDh v[|sz{qr[SutSqzyq{GW\WjSz`fWuTDy[Eq[rUy\`BQKzyqxPz~[|sz{qr[S A{X\Uy[{q\:D_TAA	WEy{psYV[x{p{I{[F|qZsW{\sH{Y]W{GTGeY_Wb
__@\_^_jXzCF[ GapUa]@^RybkvfKQSzcQ{~K~^\~ GS{dDkeKSdV_VvZ{ZE~q[pU{^t[hqx{pxYSeUHVk{Ek h[~r{{qp[QtIVqx{p{ |v|[~r{{qp[SdcY}[p[|g`[|vY[gD}v]_|`Heg[~dw| `F|gkGvpH|w{k_cX{ZE~q[pU{^t@hqx{p{H[xAvb]W{q{Hk YY}[p[kkd PKxAvb]W{q{GhkcY}[p[V Y~sy{psYVz]Eh`{{q{GP\{[F|qZsW{_YDQ cY}[p[k^^^QgK~^|]{[F|qZsW{\sZVtUY}[p[~ Vc k|f`Z~KxAvb]W{q{P{Y}[p[VtJJ{[F|qZsW{\GS`{{qx[vbB	8FC]XR\
S VQ VSS
PVU PrD@]E@]_\WPWPQUP 
WPQQmT
TSWRPUmW
SRU
SQWRTSSWS W
VTPQSWVPRRZDFBBRTTF_U WQ\[G]S\C[U[F	8G^W@A
PSPV

TP
UVrVGQZJ[R]VW\Y]\TWSW^Q@HBFZ]^\^\WAUQGC[FJD^AFKCWFQAZVSTW@eKBV^]\TVPTPPWS
USQ
SoF]ZK]loW	
QST
QPWTPSPW	SV
SSW	SU	
WTPQQZFEBAQ W UF_W TP\XG_P\@ZUXF8D_WCAVS
TV WQ	  QWrTDQYK[Z[\A[\TSTW^Q@HBFZ]^\^\WAUQGC[FJD^AFKCWFQAZVSTW@eKBV^]\TVPTPPWS
USQ
SoAW^G^loW	
QST
QPV

S
 W
P
UPQWP WWPP	ST
PW
QSW
Q V
WVPRRZDFBBRTTF_U WQ\[G]S\C[U[F	8E@]YS^

WPTWRQVPU VUTPW	SVTpTGRYJZXY\BX\UUQWPWPQUP 
WPQQmAT]G_mmT
SSW
PPWURQSVPW
PSUP 
W
WWPP	SZEFB@STTD_T UQ^ZG\S\A[WZF8E^UAAWSWS
	TVP
S  TrI[PF\US U\QCKBG[_\_]\VCWQD@[GKF^BFJBUFRB[WQVWCfKCW\]_WWPWPQUP 
WPQQmAT]G_mmT
SSW
PPWURQSVPW
PSUP 
W
WWPP	SZEFB@STTD_T UQ^ZG\S\A[WZF89