D]WACWG]Uy{qV{]tYj{y{ZkJ|RyH|IHkI{AsQqV{ss[io\Z{Z][~RaX~q]Uy{qV{]ZDSaX}YxjozZkg
Gjpf[S`GSAGQ]Q[|y_V{ssUyU\Z{Z][i
i|ZYJilSEhg|X}{ |d{|ouJYFiRu|tY jlTX}wEyQGz{ssUy{zDhhc[QzQI{AsQqV{ss[SvSs{yQ	Q]tXQAX~q]Uy{qV{^pDSVaX}Y{~|}X~q]Uy{qV{^pHyR_Xf[wbkqIdU}RqHYE{ FcsE|_Kc{AsQqV{ss[THK{Z][THK{YEyy{qV{sxU`r]{Z][RU	Dhc{AsQqV{ss[TQy{Z{[sV 8F_WCK
UE]WqspUy_t[bsxyXwHvs~KwsJvYtq^UyqsWq]wBjq{qZhy[E{qspUyqx_ZyX]YZ]gjutFt]ci F[Z^|GRx^qYFyyqsWqs{Bjq{q]{Zi d\wwkZ|ft\ww|F~ucJuc [jvZYtdUZ}_cIbdZ}XwHbcxAs[sWqsp[R_d qZ^[TYtq^UyqsWq^sZTuUYwYxDj ^IZs	[|s]WqspUy\pF[^`[[{ vt|[|s]WqspUy\pJqZ^[dYujcpJ}fgWuZpK}[GwsE}asGwt^H}a{C{YpUyqsY\wIHyX]Y\wIHy[E{qspUyqx ]hs^yX]YZ]Gja{C{YpUyqsY\YxyX{Y{^:D_UKCWE__yrsW{_vSjr{{Xu@~r |KrH|H}Q|p]W{qq_y\t@hqyy[k {[GsyrsW{qzWR| {X_Qi\dEhjjNRvdEk eMjv`EQKMjicY~s__yrsW{_\Sy[]Y|Xe}v`]HiLvwa ~uw~f[O}fkD| ~R}u|\u~P~Kg {[GsyrsW{qzMjicY}[zSH{Cq[q_yrsYQuvQr{{[	UQfJC~KyKsXsW{qqQSvIVqyy[c KyKsXsW{qqQSyY}[zwd`v{vuB}rsIvyA|es~fq@yus}X}@yXE{{qq_yrx Pz}QXx Pz}Q|p]W{qq_y_`QueQXxEP TyXE{{qq_yrx{X_Q}X{{Tc:G_UAA
TE_U{syWx_vYhsqxXiJ~ZqIKH|s[yAqYyWxqq[kgT[xX_[|ZiY}s_U{syWx_XDQiY~[zhgr[heGhwjERKGhhiY}s_U{syWx_\Y{ZWY|uaJkd~\ eFhtaGhK duG}fXZJ}D~v}|tz\ akdyx[Gy{syWxqzGhhiY~[zQIqCr[qU{syYRuvSsqx[	HhhiFx[Gy{syWxqzEPr xX_[|tiJx[Gy{syWxqzEQIqxYb`umW|fu{tqG|XyFt_D|vuUt_|Hu[~qWWxqqU{^jCRKy{^jCRKyAqYyWxqq[VxTGkay{]FS_e[~qWWxqqU{^aY~[yK{WH	;D\WAC STW
UP

 WRPYV  SWp@YSG^UAW\SJIAFY]\V__WAWSMBXFIF\KEK@WD[@ZUSVUJdHBU\_VUUR^SPWY	WRR	Sm]SPVU	PTPZUrmWQSU SP]VPSQU	RT
SYW	S	 U	WTZSQZFDHCQ VWF_W
VR\XG_QVBXUXF	2F]WCARTVR]	
	USQP 		QrQXQ^PZE_S^J\^
U_QBKBDQ__^]\UCTQE@[DAE^CFIHUFSBX]QUWBfK@]_]^W]PVPRUQ 	TPQQnU	PWSSSm]
SQU	RRTTPQQWRUYPWYW	 	U^SQSXLDAAS
V VF]]TS\ZEUQ_@YUZD	;FB]XQV
T

	WSQ	UTRVTP 
WxW\WW_WU\]PVPRUQ 	TPQQnU	PWSSSm]
SQU	RRTTPQQWRUYPWYW	 	U^SQSXLDAAS
V VF]]TS\ZEUQ_@YUZD	;D\WACS PW	T WRY QVpUY]YW]U_WP]^R@IBFYW^\_\WKURGB[FID]AFK@]EQ@ZUYTT@dKBU^^\UUSTPP]S	URQ	YoWQU	[PQmU 	SS]PP	UWRQ	YTZW
QQUQ
W WVRR	SZDL@BS^TD_UWQ^ZG]Y^C[WZF	:G^UAA
  TPR
U

	TPPT  QVSrSPY_SX@S^
W^[BHBD[]^^^\UAU[EC[DKDTCFIBWLSAXWST]BeK@W^W^TWZVPRWQ	USQSoU	QTQYS oWQSU SP]VPS
SU	RT
SYW	S	 U	WTZSQZFDHCQ VWF_W
VR\XG_QVBXUXF	2F]WCAQU	QQR	V	USW 
SQrU]]W\WFY
U\QBA@E[_\^W^TCWQEJYEKF^CDHBUFSHYWQVWBlIAW\]^]WPVRSUQ
WZSQmUS]SSS	oW
QPU
RSWTZSQW	RU	SS]	SU	TTPQQYFDBAQ V VL\W TSVXD_Q\@Y_XE	8D\]CB]R
S WRT R	qV_UWTWWTSTW^Q@IHDX]^\_VUAUQGBQDHD^ALIAWFQ@XTSTW@dA@T^]\UTPTZRWS	UR[SoWR	PUV
]VPgT

YQWPRUTR[SWPWPQUP ]	
UWRQ	YXEF@AYT TD]TTQ^PE\S^@[WPD:D^UKCTUQ
 WP 	V  P pV_UU_UW@]^R@IBFYW^\_\WKURGB[FID]AFK@]EQ@ZUYTT@dKBU^^\UUSTPP]S	URQ	YoWP	SU	\	WVPmehUV	TSQZUWPQUURSo 	T V
WVPS	PU	SW QSW	Q	U	]VPSQPDEBCQWTFUU VQ\XM]P\B[UXL	8F_WCK
UE{qsp[T[{qsxKy[E~{YpUy\pJqZ^UyGWMf[]WaU\B^\\Uh[xIEXEav^T|i_YCj@W@yBWhbFNzA]Tz`G[J^D|cEZgdDi _\g ZR\x@bYfYYtqyyqsYagcYyX]Wq]UFjeVDbc\ia{C|a^UyqxGZ{yX]WqZ`}K{C|a^Uyqx@bsxyq{HvZsXjfxZusecItdtJje{Dagg_}KvZpE}v uZg[iekYtqyyqsYag]YyX]WqZtKy[E~{YpUy\|Z]cxyqxX\hcDy[E~{YpUy_\\sxyqx[IxAtc]Wqs{Ujp\qZ^Uy_FZ]d[|s{qsp[QuJ\sxyqx^Zgg\RegEbt[|s{qsp[Sut Ysxyq{F]^UjSz`g]wVDy[E~{YpUy\`C[Ixyqx Zx|[|s{qsp[S @qZ^Uy[{~{^:D_UKCWE syrsYV[yyr{I{[GvsXsW{\rBy[]W{GUEeY_Wc ]]@\^T]jYpAD[ Gaq_a]ATPybkwlKQSzbSy~K	|\\~ ~MQydDkeAQfV_Vv[yXE~q[q_y\t[hqyyrxYSeTBTi{Ek iQ|p{{qqQSvIVqyyr{ |v}Q|p{{qqQQfcY}[qQ~e`[|vXQ}gD}v\U~bHefQ|fw| aL~ekGvqB~u{k_bRyXE~q[q_y\t@hqyyr{H[yKt`]W{qzBiYY}[qQiid PKyKt`]W{qzMjicY}[qQTY~s syrsYVz\Ojb{{qzMR\{[GvsXsW{_XNScY}[qQi\^^QfA|\|]{[GvsXsW{\rPTvUY}[qQ|Vc a~d`Z~KyKt`]W{qzRyY}[qQTvJJ{[GvsXsW{\~MQb{{qyQt`B	8FBWZP\
 S
VS VSR PVTRrD@]DJ__\WPVRSUQ
WZSQmUTS]RPToW
QPU
RSW	RU	SS]	SU	TTPQQWVPS	PZDFBCPT^D_U V[^YG]S\BQWYF	8FTUBA
QYRV 	UZU 	TrVGQ[@YP]VW\XW^VWSW^Q@IHDX]^\_VUAUQGBQDHD^ALIAWFQ@XTSTW@dA@T^]\UTPTZRWS	UR[SoF][A_noWQSU SP]VPSQU	RT
SYW	S	 U	WTZSQZFDHCQ VWF_W
VR\XG_QVBXUXF	2F]WCAVS
	TV	US	 
SWrTE[[I[Z[\@Q^VSTW^Q@IHDX]^\_VUAUQGBQDHD^ALIAWFQ@XTSTW@dA@T^]\UTPTZRWS	UR[SoAW_M\noWQSU SPT

S W
RU	ZSWP WVRR	SUP]
QSUQ 		T
WVPS	PZDFBCPT^D_U V[^YG]S\BQWYF	8DJ_[S^WQVUS[TPU TWTPWYTTpTGSSHXXY\BYVWUQWPVRSUQ
WZSQmAUWE]mmU 	SS]PP	UWRQ	YTZW
QQUQ
W WVRR	SZDL@BS^TD_UWQ^ZG]Y^C[WZF	:G^UAA
WSVQ
	T	TP
R TrHQRD\US
U\QBA@E[_\^W^TCWQEJYEKF^CDHBUFSHYWQVWBlIAW\]^]WPVRSUQ
WZSQmAUWE]mmU 	SS]PP	UWRQ	YTZW
QQUQ
W WVRR	SZDL@BS^TD_UWQ^ZG]Y^C[WZF	:;