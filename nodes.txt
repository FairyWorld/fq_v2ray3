D]W@C	WG]TyppV{]tXjpx{ZkK|YxH|I~JI}dsZ|r^V{ssTy^wAhs{yYh{YExyppV{sx\R {Z]ZR^ghwtE|^c kFXR]|DPx]yZFz{ssTyp{Ahs{yYx hw`[gZ~dUI}xE|tcJiZkk|dZk]{}wZKkdUJpxBqYsTyppXP]dyY^XVZ|r^V{ssTy]sYVwUZZxGQpETp	X~q]TyppV{^pES]`X}Y{~w|X~q]TyppV{^pIyY^Xf[vb`pIdgT}YpHID}JIcsD}g^Kc{@sZpV{ssZTtIK{Z]ZTtIK{YExyppV{sxUks]{Z]ZR^Dhc{@sZpV{ssZTZx{Z{Zs]8F_VC@UE\WzrpUy_u[irxyXvH}r~K~HJ}azCpXpUyqrYjf]YyX\Y}[`[|s\WzrpUy_[FP`[[y P_gQuiQv^S~EiygXQ aEPHDS_PYp^UyqrWz\]YyX\Y~eRJ~ff~KZF}efGjXfu[fw_}ebD}\xifr|f`EubHzXFyyqrWzr{GjjbY|X{SKzCpXpUyqrYPvwQqzzX_ie@QyZDy[D{zrpUyqyGQ{yX\Y}u`Hy[D{zrpUyqyGPHxyY`atdU}fvHzuxE}X~D~u|F}fvW~ut}HvYp^UyqrWz_cASKzz_cASKzCpXpUyqrYWy]Ejazz\DR_fYp^UyqrWz_h[[zIzVA:D^U@BWD_TxrsW{^vXkr{{YiK}[{I|JJ}[Q{ZGxxrsW{pz[PfcY}Zyr{CqZqTxrsYSt	IUr{{^z_S\dPH_S\|\~^bXS_EP^fxXE{{pqTxrx@hpyx[QH}wT^kfx\~giIegD|wqKHht}J}e^]|de|eY}tbZkb{CqZqTxrsYP^fx[]YV }Z}p]W{pqTx_pXVtWZ~X{FkvJkb
Y~r_TxrsW{]rER_cY}ZyuY~r_TxrsW{]rIx[]YfX	vcbsHIqT|[sIJ D|HH`qD|e]J`y@rXsW{pqZUvJJ{Y_ZUvJJ{ZGxxrsW{pzTip\{Y_ZS\Eh`y@rXsW{pqZUX{{YyZr_8E]VBBVG\VxqqUz]uZkqyzZvIq}I|aJ|dTX}s_UzsrVx_vBiszxXizYDzxqqUzsy^S~zZ\XU f[iwuG}_bjGZS\}GQy_x[GyzsrVxqzBiszxXfY~trH~uzZdiZheiF}wuYhKZiZ}X}ffZidqY|XSE~ZTFk[yApYrVxqq[Q]exX_[W~X}s_UzsrVx\rZWwTX~[yDQguF}KyApYrVxqq[Pw
HUqyzZb|KyApYrVxqq[Px~X~[z}g awxvuJ~IrH|vyHdrK}fuJztrI~X}JzYDzxqqUzsySz}[|YySz}[q\VxqqUz^aRue[|YyDS ^zYDzxqqUzsyxX_[~YzzWc9F_TBA
PWT
WR		
UQS QT	PTrH[QE]VC
T_QBKCDZ^_^]]UBTQE@ZDJE^CGICTFSBXVPUWBfJ@V_]^WVPVQRTQ 	
TPP
PnU
QSTW

S
VSRWpoT

RPWQSUTRPSW
PV	PQU
P V

TWRQ	RYEF@ART UD\TTP^[D\S^@ZW[E:D_U@BP
VUPU WQRS SqRZY\RXF\P\B^\	W]SAHAFY]]]^_WAVSFCXFIG\@EK@WDPAZUSWUAeHBU]_]TURUSPWR	VSR	SlVRT	QQPnU
PSWQP	VVSR	SUPV
QRTQ 	T

WVQSPZDFCCPTUE_UVP_YG]S]BZVYF	9DA^[S^W	UPRVWP  UVR	T
pU^UT\T]^	URUSPWR	VSR	SlVRT	QQPnU
PSWQP	VVSR	SUPV
QRTQ 	T

WVQSPZDFCCPTUE_UVP_YG]S]BZVYF	9F_TBA
QST	WUQQR Ur][_[T^V]UR
U\PBJAE[_\^\_TCWPEAXEKF_CEHBUGSCYWQVVBgHAW\\^VWQVSSUQWQRQmUSVSRS nWPPU
RSWUQRQVRU	SSVS
T	 TTPP
PYFDB@ P VVG\W US]YD_Q\AYTYE	8E\VBBWSPW	VRSW	
SUPqQX[]Q[CQV T\S@J@GX^\\\^VBWSGAYGHF\ADJATDQC[TPVU@gICT\_\VTRTRQTS
WQSPmW
SVRQQlT

RPWQSUTRP	QW
PV	PQU
P V

TWRQ	RYEF@ART UD\TTP^[D\S^@ZW[E:D_U@BSW
RRP	UWQT Q	RqV_UU^UEZ V_R@IBGY\_\_\V@TRGB[GIE]AFJ@VEQ@[URUT@dKCU_^\UUSTPQVS
	TRQ	RnW
PU	PPQmU	SRV	PQ	TWRQ	RTQWQPUQW
 VVSR	S[DGABSUTD^UWQ^ZF]R_C[WZG	
;G^UA@

UPP

 TP
V   P	sT\VTV_UVPWU]RCK@FZ_]_]^WCVRD@YFJG]BDKCUERBZVQWTCfIBV]^_WVSWRPUP 
VPS
QlTP
SW
T	U	USoV	QSUSP
VWPS
QT	RT
RRW	R UWUQRQZGDCBQVWF_VWR\XG^Q]CXUXF
	9G]WCA	 WW R	
TST  SrT]VV\WUB
U\PBJAE[_\^\_TCWPEAXEKF_CEHBUGSCYWQVVBgHAW\\^VWQVSSUQWQRQmUSQVT	T	TRnfjWU VPRRWUSSWVP	Q l VTUUSQRVQTSQTS
 W	UTRPSXFG@@S UWE]WUR_ZE_R^AXVZD
:E\TACVFyyqrYWXxyqzIzXF|s[rWz_sHyX\WzDTEdY^Tb
]^@]_^]kXzAGZ Fbu\\~k]Z@iB_B{@TkaDFxC_WycESH\F`GRefFj]TeXQ_{Bj [ |eZ[|s{zrp[iea[z[^Uy_WDifUFja^jbxAtc\Wzr{ERy z[^UyXb ~HxAtc\Wzr{BjqzzrxJ~XqZie{X}q|f`K|fvHifxFiee]~H~XrG~u|}XeYjfh[|s{zrp[ie_[z[^UyXvIzXF|s[rWz_XUazzr{ZTjaFzXF|s[rWz\^Tqzzr{SKzCw`^Uyqy Vis^yX\Wz\DR_fYpyyqrYRvHTqzzr{\Ree^QfdGj vYpyyqrYPvwQqzzrxDU\WhPyceUuTFzXF|s[rWz_cASKzzr{Rz~YpyyqrYPByX\WzXx|s\9G\WCA	TF{{pqZUX{{pyJxXE~qZqTx_pJ{Y_TxDWGgZ\Ta__C_\\_  i[xCFYDbsWc^C\R{ahudIRPy` Q{}}H ~^_}|ES{fGhfISdT\UuY{ZG}rXsW{^vXkr{{pzZPfVJVkyFhkY~r xxrsYQt	JUr{{pyuY~r xxrsYSdaZ~XsY|gbXuZYeG~u^]|` K|fdY~ducD|giD|usJ|wyh\`Z{ZG}rXsW{^vCkr{{pyK|X{Cvb_TxrxJk [Z~XsYkkfSH{Cvb_TxrxEhkaZ~XsYV }Z}p{{pqZUy^Gh`yxrxEP_xXE~qZqTx\ZFQ aZ~XsYk^\]RdI~^~^xXE~qZqTx_pXVtWZ~XsY~ T`i|fbY}H{Cvb_Txrx P{}Z~XsYVtHIxXE~qZqTx_|ES`yxr{Yvb@
;E@_XR^		PTQUPP 
R UV PpGC^FB]]_USTPQVS
	TRQ	RnW	
VPU	QSVmU	SRV	PQ	TQWQPUQW
 VVSR	SUUSQRXGEAARW VF]VTS\[E^P_@YU[D
;D\W@C	SQPU
  WR
V   	VpUDRYH[R_UT_Z_\TTPU]RCK@FZ_]_]^WCVRD@YFJG]BDKCUERBZVQWTCfIBV]^_WVSWRPUP 
VPS
QlE^YI]llT

RPWQSUTRPSW
PV	PQU
P V

TWRQ	RYEF@ART UD\TTP^[D\S^@ZW[E:D_U@B	UP	  	WUWQ
  QUqWGSYKYYX_BY\TPWU]RCK@FZ_]_]^WCVRD@YFJG]BDKCUERBZVQWTCfIBV]^_WVSWRPUP 
VPS
QlBT]E^llT

RPWQSV	P U	 P
VRQT	RTTPP
PW
SURPW
RV		 	UUSQRXGEAARW VF]VTS\[E^P_@YU[D
;FB]YQ]

TSTWQSVRVVUWST
QVVsWDQ[JZZZ_A[^UWRUSTPQVS
	TRQ	RnBW_G_onWPPU
RSWUQRQVRU	SSVS
T	 TTPP
PYFDB@ P VVG\W US]YD_Q\AYTYE	8E\VBB TPTS
WVR	P  	WqJYPF^VP V_R@IBGY\_\_\V@TRGB[GIE]AFJ@VEQ@[URUT@dKCU_^\UUSTPQVS
	TRQ	RnBW_G_onWPPU
RSWUQRQVRU	SSVS
T	 TTPP
PYFDB@ P VVG\W US]YD_Q\AYTYE	89