D]WABWG]UxqsU{]tYkq{{ZwJq|I|[ |c{Ar[sU{ss[he^Y{Z][Xc[~q]UxqsU{]ZDRc[}YxkexYkg
GkzdXS`GRKDQ]Q[}s]U{ssUx_^Y{Z][hHd[kghXkfsFkd^^|akJV_}ew}tsFkvUJgEhXdZ|gkx[Ey{ssUxqxGhhc[~[xQI{Ar[sU{ss[RutSs{x[SwKSd\Ss
[}s]U{ssUx\pDQ^c[~[{|t[}s]U{ssUx\pH{Z][eYw`csJ|fUZsK|[JYK|[sKZ]H|a{AqYsUxqs[VwJHxX][VwJHx[Ey{ssUxqxWhp^xX][P]Gka{AqYsUxqs[VY{xX{[q^;D_WACWE]UyqsV{_tYjq{{XwJ~q|K}a }a{As[sV{qs[ie^Z{X][~XcX~s]UyqsV{_ZDScX}[x[je]V_Aje[haYjuK~_^Tq{Bq[sUyqsXSec[[xXud^jehYKvg~f`Y~X{E}fg ~[[XHi_`\Ht[}ucX~s]UyqsV{_^Tq{{\VHy[Ez{qsUyqxFkj`]yX]X~ ZTq
X~s]UyqsV{\pDS\cX}[{~vX~s]UyqsV{\pHyX]XfYwbasIHsU}XsH[J}[H[sK}X]Ka{As[sV{qs[TuJK{X][TuJK{[EyyqsV{qxUjp]{X][R_Dha{As[sV{qs[T[{{X{[s\8D_WCAWE]W{qpU{_t[hqx{XwH|q|K[|[{Cq[pU{qsYke]Y{X]Y|X`[~s]W{qpU{_ZFQ`[}[xEhjcYke
EhzgXS `EQKDQ_QY~s^U{qsW{_]Y{X]Y|ft |fkIk_hF|Hd\}qhXs~e{^k DhfR}vU|ew[|u{{[Fy{qsW{q{GhjcY}[{QK{Cq[pU{qsYQuwSq{{[HheJ]~KxAq[sW{qp[QuIVqx{Xc KxAq[sW{qp[QzY}[{}f`v{vtJ|asIvxK~fwI~fxK{v{I}X|J{[E{{qpU{qx Pz|[}[x Pz|[~s]W{qpU{\`Qud[}[xEP ^{[E{{qpU{qx{X^[[{{Tc8D_UAAWE_U{rsU{_vYhr{{XuJ|r|K|bKH[[~p]U{qqU{\tBhqy{[k{[Gy{rsU{qz]P|{X_[VyxVuX_VfJGhj~H~\`k DYP_GPz\{XEy{qqU{rxBhqy{\hejYkKV_~ff^h\F|v\X}b|uaE~fc|v\^|[gEk_aHhr{Aq[qU{rs[P_f{[][V}[~p]U{qqU{_pZVuW[}X{DhjXhfHSjj^~H{Aq[qU{rs[Qu	KVr{{XaH{Aq[qU{rs[Qz}[}Xx}fbt{uwJaqKu{K~fuK~e{K{vyK}[J{[Gy{rsU{qzPy[}[zPy[~s_U{rsU{\bQvg[}[zGP^{[Gy{rsU{qz {[][[yyT`8D\WAB STW	 WS

	WRPSTSWqJ[PG^U@W\R@KBFY]\\]\WAWRG@[FIF]AFK@WEQBZUSVT@fKBU\^\WUSTPPWS 	WPQ	SmW
SPWW	P	WPPWqmW	
QST
PPWTPSPW	SW
SSW	SU	WTPQQZFEBAQ W TF_W TQ\XG_P\@[UXF8D^WCAPTVSW

 WPQP  QrQY[\SZE_S_@_^
W\QBKBE[]\^]\TAWQE@[EKF^CFHBWFSBYWSVWBfKAW\]^WWPVPSWQ WPQSmUSWQSSmW

SPW
RSWTPQSWPU	SSWS W
	TTPQSYFFBAS T VF\W TS\ZD_S\@YUZE8FB]XP\T
 TSQUTS VVS 
W	rU_WW_W_^WPVPSWQ WPQSmUSWQSSmW

SPW
RSWTPQSWPU	SSWS W
	TTPQSYFFBAS T VF\W TS\ZD_S\@YUZE8D\WABS PWT WRS QVq_[^YW]U^USW\Q@IBFX]\\_\WAWQGB[FHF^AFKAWFQ@ZTSVW@dKBT\]\UTPTPPWSWRQSmWSUQSQmT

SSW
PPWTRQSWPW
PSUP W
WWPQ	SZEFBAST TD_T TQ^ZG\S\@[WZF8D^UAA TPS W

WPPT QVSrRZ[\SX@RTW_Q@KBD[]_\]\UATQG@[DKE^AFIBWFQBXWSUW@fK@W_]\WWPTPRWS 	TPQSnW	PWQSQoW	
QST
PPWTPS
RW	SW
SSW	SU	WTPQQZFEBAQ W TF_W TQ\XG_P\@[UXF8D^WCASV	QQS
V WPW  PQrU\WU_WFYU\QCKBF[_\_]\WCWQD@[FKF^BFKBUFRBZWQVWCfKBW\]_WWPWPPUP WPQQmTSWSSRmW
SSU
SPWTPQQWRT
SSWS WWTPQSZFDBAS V WF_W TR\ZG_Q\@XUZF	8D]WAA	WP
S	

WS
WSrV_UWU]UWSTW^Q@HBF[]^\^\WAUQGC[FKD^AFKBWFQAZWSTW@eKBW^]\TWPTPPWSUSQSoWP	PTV
WVPmW

SSWPPUTSQSWPW
SQTS W
WTRQSZFF@AS T TE_WTQ_ZG_S^@[VZF:D^TAATTQ
	
WP
VPrU_UU_TUCW\Q@IBFX]\\_\WAWQGB[FHF^AFKAWFQ@ZTSVW@dKBT\]\UTPTPPWSWRQSmWPPUV
WTPmeiWVWSQPWWPSVUSPo  T W WVPRSUPW
SSWS 	T
WTPSPZFFBCP TTF_W VQ\YG_S\B[UYF8F_WBAUEz{qs[T[{{q{Ky[Eq[sUy\pK{X]UyGWGe[]Wa	_^B^\]_h[yCG[Eav_^~j_YCjA]BzBWhbGDxB]Tz`FQH]D|cDPegDi ^VeZR\xAh ZfYX~syyqsXke`YyX]V{_VFjeVEha\ia{Bvc]UyqxFPxyX]V{Xc}K{Bvc]UyqxAhq{yq{I|XpXjfx[qecH~fwJje{Eked_}K |XsE}vXd[iekX~syyqsXke^YyX]V{XwKy[Eq[sUy\|[Wa{yqxYVj`Dy[Eq[sUy_]Vq{yqxQK{Atc]V{qxUjp]{X]Uy_GP_g[|sz{qs[QuKVq{yqx_Ped\RegDh w[|sz{qs[SutSq{yq{GW\VjSz`fWuUDy[Eq[sUy\`BQK{yqxPz[|sz{qs[S A{X]Uy[{q\:D_TAAWEy{qsYV[x{q{I{[F|q[sW{\sH{X]W{GTGeY_Wb
_^@\_^_jXzCG[ GapUa]@^SybkvfKQSzcQz~K~_\~ GSzdDkeKSeV_VvZ{[E~q[pU{_t[hqx{qxYSeUHVj{Ek h[~s{{qp[QuIVqx{q{ |v|[~s{{qp[SecY}[p[|f`[|vY[ gD}v]_|aHeg[~ew| `F|fkGvpH|v{k_cX{[E~q[pU{_t@hqx{q{H[xAvc]W{q{HkYY}[p[kjd PKxAvc]W{q{GhjcY}[p[VY~sy{qsYVz]Eha{{q{GP \{[F|q[sW{_YDQcY}[p[k_^^QgK~_|]{[F|q[sW{\sZVuUY}[p[~Vc k|g`Z~KxAvc]W{q{PzY}[p[VuJJ{[F|q[sW{\GSa{{qx[vcB	8FC]XS\
S VP VSS
PVU QrD@]E@]_\WPWPPUP WPQQmTTSWRPUmW
SSU
SPWRT
SSWS WWTPQSWVPRSZDFBBSTTF_U WQ\ZG]S\C[UZF	8G^WAA
PSPV


TPUVrVGQZJ[S]VW\Y]\UWSW^Q@HBF[]^\^\WAUQGC[FKD^AFKBWFQAZWSTW@eKBW^]\TWPTPPWSUSQSoF]ZK]moW	
QST
PPWTPSPW	SW
SSW	SU	WTPQQZFEBAQ W TF_W TQ\XG_P\@[UXF8D^WCAVS

TV WP	  PWrTDQYJ[Z[\A[\USTW^Q@HBF[]^\^\WAUQGC[FKD^AFKBWFQAZWSTW@eKBW^]\TWPTPPWSUSQSoAW^G^moW	
QST
PPW

S
 W
PUPPWP WWPQ	STPW
QSWQ W
WVPRSZDFBBSTTF_U WQ\ZG]S\C[UZF	8E@]XS^
WPTVRQVPU VTTPW	SVTpTGRYJ[XY\BX\UUQWPWPPUP WPQQmAT]G^mmT

SSW
PPWTRQSWPW
PSUP W
WWPQ	SZEFBAST TD_T TQ^ZG\S\@[WZF8D^UAAWSWS
	TWP
S  TrI[PG\USU\QCKBF[_\_]\WCWQD@[FKF^BFKBUFRBZWQVWCfKBW\]_WWPWPPUP WPQQmAT]G^mmT

SSW
PPWTRQSWPW
PSUP W
WWPQ	SZEFBAST TD_T TQ^ZG\S\@[WZF88