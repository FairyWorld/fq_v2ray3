D]WACWG]Uy{qU{]tYj{y{ZkJ|RyK|IK}{c{AsQqU{ss[io\Y{Z][~Ra[~q]Uy{qU{]ZDSa[}YxjozYkg
GjbGQIGj`a[~q]Uy{qU{]^YyR_[kZd[}|f_dgFilT[kc~aH~gwHiBiFhg|[jRWkgk~|z^{YEyy{qU{sxGj`a[}YxSAyAqYsUy{q[QwtQ{y{YHQoTG~I{AsQqU{ss[S	KVs{yRaI{AsQqU{ss[Sp}[}Yx}dbt{twJ~AqKt{K|lq~dsKy|q}ZJyQGy{ssUy{zPx[QzPx[|y_U{ssUyVbQwg[QzGP^yQGy{ssUy{z {Z][}QyyTa:N]WAC]G]UyqsWq]tYjq{qZkJ|X{IvI}qIws{As[sWqss[ie^[qZ][~XcYtq]UyqsWq]ZDScYwYx[je\\]AjeZbcYjuJt]^Tq{C{YsUyqsYYgc[[xZbgh_jfcvs[~utd`[~HcDaZg~KHudYjfUuJ`X}ugYtq]UyqsWq]^Tq{q^VHy[E{qssUyqxGah`]yX]Yt|Di ^\\xYDy[E{qssUyqxGZxyX]YvtcHy[E{qssUyqxG[I{yY`jugU}fGqt{E}X{DutUF}v{Wutg}HwYtq]UyqsWq^`ASK{q^`ASK{C{YsUyqsY\x^Eja{q]DR_gYtq]UyqsWq^k[[{IqWB:D_UKCWE__yqsW{_vSjq{{Xu@~q |K}q}qyKs[sW{qqQie^[{X_Q~XcY~s__yqsW{_XNScY}[zjex[keMjzdZS bMSKFQ_SQ|s]W{qq_y_^[{X_QiX{J}e~TvcDvyAj[ kXS|fUGuiL}HYJhXuje`ZkHqy[E{{qq_yqxEhjaQ[xQKyKs[sW{qqQSut Sqyy[]PzLjj{F{[GsyqsW{qzORx {X_Q~vcJ{[GsyqsW{qzOSK{{YhbwgWfuByv{GXyL}vUDvy_}vgHuQ|s]W{qq_y\`CQKyy\`CQKyKs[sW{qqQTz^Ghayy_FP_eQ|s]W{qq_y\kY}[yAyUB	8D]]CAWGWW{qqU{]~[hqy{Z}H|q|I|qK{YO{{qqU{srXSea[}Yq|qyAqYyW{qq[SwJVqy{]\VubZPI[Ve~@hwJ~_	KhIqCq[qU{syYSea[}YqH|evZ|]i|aXkJnZ~faZ}DkXTY}s	\|vy }t_I aH|ZSY~s_U{syW{_^Vsq{\TH{YO{{qqU{srGkjb]{ZWY~ X^kgj[Q_fHQI Y~s_U{syW{\rDQ^iY}[y|tuY~s_U{syW{\rH{ZWYfY	w`cyHfeUZyI[ E}sG[qE|dWJayAqYyW{qq[Vw@J{X_[Vw@J{[Gy{syW{qzWhz\{X_[P]EhayAqYyW{qq[VYq{Xy[q^8D\WAC STW
US

WRPYV SWp@YPG^UAW\SJIBFY]\V_\WAWSMB[FIF\KFK@WD[@ZUSVUJdKBU\_VUUR^PPWY	WRQ	Sm]SPVU	PWPZUqmWQSU PP]VPSQU	RW
SYW	S	U	WTZSQZFDHCQ VTF_W
VQ\XG_QVB[UXF	2F^WCARTVR]

	UPQP 		QrQXQ^SZE_S^J_^
U\QBKBDQ_\^]\UCWQE@[DAF^CFIHUFSBX]QVWBfK@]\]^W]PVPRUQ 	WPQQmU	SWSSSm]
SQU
RRWTPQQWRUYSWYW		U^PQSXLDBAS
V VF]] TS\ZEUQ\@YUZD	8FB]XQV
T

	TSQ	UTRVTS 
WxW_WW_WU\]PVPRUQ 	WPQQmU	SWSSSm]
SQU
RRWTPQQWRUYSWYW		U^PQSXLDBAS
V VF]] TS\ZEUQ\@YUZD	8D\WACS PW	TWRY  QVpUY^YW]U_WS]^Q@IBFYW^\_\WKUQGB[FID^AFK@]FQ@ZUYTW@dKBU^]\UUPTPP]S	URQ	YoWQU	[SQmU 
SS]PP	UTRQ	YWZW
QQUQ
W WVRQ	SZDL@AS^ TD_UTQ^ZG]Y^@[WZF	:D^UAA
 TPR
U

	WPPT  QVSrSPY\SX@S^
W^[BKBD[]^^]\UAU[E@[DKDTCFIBWLSBXWST]BfK@W^W^WWZVPRWQ 	UPQSoU	QWQYSoWQSU PP]VPS
SU	RW
SYW	S	U	WTZSQZFDHCQ VTF_W
VQ\XG_QVB[UXF	2F^WCAQV	QQR
V	UPW 
PQrU]]W_WFY
U\QBA@F[_\^W^WCWQEJYFKF^CDKBUFSHZWQVWBlIBW\]^]WPVRPUQ
WZSQmUS]SSS	oW
QSU
RPWTZSQW	RU
SS]	SU	WTPQQZFDBAQ V VL_W TSVXG_Q\@Y_XF	8D\]CA]R
S WRW R	rV_UWTWWWSTW^Q@IHD[]^\_VUAUQGBQDKD^ALIBWFQ@XWSTW@dA@W^]\UWPTZRWS	UR[SoWR	PUV
]VPgW

YQWPRUTR[SWPWSQUS ]	
UTRQ	YXFF@AY T TD]WTQ^PE_S^@[WPD:D^UKCTUQ
 WP 	V  P pU_UU_UWC]^Q@IBFYW^\_\WKUQGB[FID^AFK@]FQ@ZUYTW@dKBU^]\UUPTPP]S	URQ	YoWP	PU	\
WVPmehUV	WSQZUWPQVURPo 	 T V
WVPS	SU	PW QSW	Q 	U
]VPSQPDFBCQTTFUU VQ\XM]S\B[UXL	8F_WCK
UE{qss[T[{qs{Ky[E~{YsUy\pJqZ]UyGWMe[]WaU\B^\\Uh[xIE[Eav^T|j_YCj@W@zBWhbFNzB]Tz`G[J]D|cEZggDi _\gZR\x@bZfYYtqyyqsYag`YyX]Wq]VFjeVDbc\ia{C|a]UyqxGZxyX]WqZc}K{C|a]Uyqx@bs{yq{HvZpXjfxZusecItdwJje{Dagd_}KvZsE}v uZd[iekYtqyyqsYag^YyX]WqZwKy[E~{YsUy\|Z]c{yqxX\h`Dy[E~{YsUy_\\s{yqx[I{Atc]WqsxUjp\qZ]Uy_FZ]g[|s{qss[QuJ\s{yqx^Zgd\RegEbw[|s{qss[Sut Ys{yq{F]^VjSz`g]wUDy[E~{YsUy\`C[I{yqx Zx[|s{qss[S @qZ]Uy[{~{^:D_UKCWE syqsYV[yyq{I{[Gvs[sW{\rByX]W{GUEeY_Wc ]^@\^T]jYpAG[ Gaq_a]ATSybkwlKQSzbSz~K	|_\~ ~MQzdDkeAQeV_Vv[y[E~q[q_y_t[hqyyqxYSeTBTj{Ek iQ|s{{qqQSuIVqyyq{ |v}Q|s{{qqQQecY}[qQ~f`[|vXQ} gD}v\U~aHefQ|ew| aL~fkGvqB~v{k_bRy[E~q[q_y_t@hqyyq{H[yKtc]W{qzBiYY}[qQijd PKyKtc]W{qzMjjcY}[qQTY~s syqsYVz\Oja{{qzMR \{[Gvs[sW{_XNScY}[qQi_^^QfA|_|]{[Gvs[sW{\rPTuUY}[qQ|Vc a~g`Z~KyKtc]W{qzRzY}[qQTuJJ{[Gvs[sW{\~MQa{{qyQtcB	8FBWZS\
S
VP VSRPVTQrD@]DJ__\WPVRPUQ
WZSQmUTS]RPToW
QSU
RPW	RU
SS]	SU	WTPQQWVPS	SZDFBCST^D_U V[^ZG]S\BQWZF	8FTUAA
QYRV 
UZU 	TrVGQ[@YS]VW\XW^UWSW^Q@IHD[]^\_VUAUQGBQDKD^ALIBWFQ@XWSTW@dA@W^]\UWPTZRWS	UR[SoF][A_moWQSU PP]VPSQU	RW
SYW	S	U	WTZSQZFDHCQ VTF_W
VQ\XG_QVB[UXF	2F^WCAVS

TV	UP	 
PWrTE[[J[Z[\@Q^USTW^Q@IHD[]^\_VUAUQGBQDKD^ALIBWFQ@XWSTW@dA@W^]\UWPTZRWS	UR[SoAW_M\moWQSU PPW

S W
RU	ZPWP WVRQ	SUP]
QSUQ 		W
WVPS	SZDFBCST^D_U V[^ZG]S\BQWZF	8DJ_XS^WQVVS[TPU TTTPWYTTpTGSSH[XY\BYVWUQWPVRPUQ
WZSQmAUWE^mmU 
SS]PP	UTRQ	YWZW
QQUQ
W WVRQ	SZDL@AS^ TD_UTQ^ZG]Y^@[WZF	:D^UAA
WSVQ
	T	WP
R TrHQRG\US
U\QBA@F[_\^W^WCWQEJYFKF^CDKBUFSHZWQVWBlIBW\]^]WPVRPUQ
WZSQmAUWE^mmU 
SS]PP	UTRQ	YWZW
QQUQ
W WVRQ	SZDL@AS^ TD_UTQ^ZG]Y^@[WZF	:8