D]WAB
WG]Uxss^{]tYks{{ZwJs	|IJ|dsLdJxYEr{ssUxsxQSgc[~Y{|s{ArYs^{ss[PwCVs{x^`@Vh`]k^dJP]dHRIRVg|@kwC~]KkI{JqYsUxssPSgc[~Y{@|]kdk|I gc@~dc~t{MkdcK~ckdskZs
}dxX|dQP~q]Uxss^{]^Us{{^VHxYEr{ssUxsxNkh`]xZ]P~d khxVZ^R]gO{YEyxss^{sxESx	{Z][tcC{YEyxss^{sxERI{{[bcug^dwJxt{NZ{F|dsMZYU|twJw[}q]^{ssUx^`JQI{x^`JQI{ArYs^{ss[Ux^Nhc{x]OP]g[}q]^{ssUx^kP}Y{KxWB 8F_WBCUE]VyqxUy_tZjqpyXwI~q~Kq~K{Bs[xUyqsXieUYyX]X~Xh[|s]VyqxUy_ZGSh[[xXje^T_BjeXjaZjuH|_]TqpAs[sVyqx[QecX[s^~HV]i_l iK\i kY|fcIj_hFecF}[ZvcF}HcXi hYiHl[|s]VyqxUy_]Tqpy\VKy[NyyqsVyqsEij`^yXV[| d\j_oXTu^ja[|s]VyqxUy\pGS\h[[{~vt[|s]VyqxUy\pKyXV[dYtbaxJ}HsV}XxK}[I}q	KasF}fVH}a{Bs[xUyqsXTuAHyX]XTuAHy[EzyqxUyqxUj{^yX]XR_ Gja{Bs[xUyqsXT[pyX{Xs\	:D_TCAWE^W{zsW{_w[hz{{XhH~S{I|Kz|axCqPsW{qpYkn^[{X^Y|ScY~s^W{zsW{_YFQ
cY}[{hnx[ke	EhqdZS cEQ@FQ_RY~x]W{qpW{T^[{X^YSxX}vwX|wD|X`Gkj |f` ~nxYXtDh~whfVnkk x{PE{{qpW{zxEhj`Y}PxQKxCqPsW{qpYQ~t Sqx{PXV_@h~tEk dF{PE{{qpW{zxGP{ {S]Y|v`J{PE{{qpW{zxGQKx{R``wdWmwJ{vxGS{DfpDSYWvtCwY~s^W{zsW{\cCQ@{{\cCQ@{Cq[pW{zsYVz]Ghj{{_FPTgY~s^W{zsW{\hY}P{I{UA	8O_UAA\E_U{rqUp_vYhrypXuJ|rwK|Xw[yAqXqUpqq[kf\YpX_[|[a[us_U{rqUp_XDQa[v[zGhibY`eGhyfXX bGQHDZ_S[~p_UpqqU{\\YpX_[kezX`fW|aFtHiJ|X tHiK~fuEw iFh\awfu|[S`XjX{XGypqqU{rzGcja[}XzZKyAqXqUpqq[QvvXqy{X	B[\vSizuKyAqXqUpqq[Qv	K]qy{[atKyAqXqUpqq[Qy}[v[z}fbtpvuJ|bqKtvyK~euEufy{uqJvX}J{XGypqqU{rz[z}[}Xz[z}[~p_UpqqU{_bZue[}XzG[ ^{XGypqqU{rz pX_[Xyy_c8G\WJA
ST\
WS

TR[ QT	S\rH[PD^^C
WWQBKBEY]W^]\TA\QE@[EIM^CFH@WFSBYUS]WBfKAUW]^WUPVPSWQ 	\PQ	SfU
P[TW	P
W[RWqn\

QSWPP UTSS SW	PW
XQT	X U
W_RQQZMF@AQT TE_\TQ_XGTS^@[VXF :D^TCAPWVPU
	WPQ[ 
RrZZY\SYE_X\B_]
W\RBKIFY]\^]WWAWRE@PFIF]CMK@WESBZUSVTBf@BU\^^WUSV[PWQ 	WPZ	SmUSW	QPSfU
	XSW
RP	WWPZ	ST PU
QSW Q \
	WVPRXZDFBBXTVF_U WS\QG]S\CYUQF	8EB]SS^TT SZUTP ]VS
\
pU_TW_\]^USV[PWQ 	WPZ	SmUSW	QPSfU
	XSW
RP	WWPZ	ST PU
QSW Q \
	WVPRXZDFBBXTVF_U WS\QG]S\CYUQF	8G\WJA
P P\	_TR Q	 Q]r][^ZW]^]US
U\QCIBM[_\__\\CWQDB[MKF^BF@BUFR@QWQVWCdKIW\]_UWPWP[UP WRQQmT SUSSRmW
SXU
S[WTRQQWRTSSUS W \TPQ	SQFDBAS V WDTW TR^ZL_Q\@XWZM	8D]UAJT[PW	
 WSP_	 	RVSyQX[\PX@QV\\S@KAD[V\\]_UJWSG@XDKF\AEIB\DQBXWXVU@fH@W\_\WWRTSR\S 	WPRXmW	SWZQQ o\

QSWPP UTSSQW	PW
XQT	X U
W_RQQZMF@AQT TE_\TQ_XGTS^@[VXF :D^TCASV	QZP
VWP\ 
PQr^_UU_TFRU\Z@IBFX_\\_\WCWZGB[FHFUAFKAUMQ@ZTQV\@dKBT\V\UT[TPPUSWRQQmWSUSXQmTSSU
PPW_RQQ\RW
PSUP WWWPZ	SZEDBJSVTD_T _Q^ZG\Q\K[WZF	8O^UAA

UP	S

\P
W  P	rU_U\V_UWSTT^QKK@F[^^W]^WBUQL@YFKD^JDKBTFZBZWPTWKfIBW^]WWWP_RPTX UPSPo\P	PWU
 UV[oW	
QST[PUTPSPW	S\
SQW	SU	 WTRQQZFE@AQ W _F_WTZ\XG_P^@PUXF:DUWCA_W  Q
 W[U [rU\UUTWUC
U\QCIBM[_\__\\CWQDB[MKF^BF@BUFR@QWQVWCdKIW\]_UWPWP[UP WRQQmT[PUT
W	TSmnjWV WSZRWT[SVUP	Po 	  WTTV[QSUPWSP\S 	W	
 
UTSS SXFFAC
S TTM]WVQWZE_S_B[^ZD;F_\ACUE	yyqsXT[pyq{Hy[N|s[sVy\{HyX]VyG\EeX]Wj
]^A^W^]hPzAG[Ea}\\~j\YCaB_BzAWhiDFxB^TzkESH]G|hGRegGi ]TeYR\sBj ZfR[|szyqx[ie`ZyXVUy_VEje]Fja_iapAtc]VyqsERxyXVUyXc}KpAtc]VyqsBjq{yqpJ~Xp[jfsX}qehK|fwIjepFied\}K	~XsF}vt}XdXie`[|szyqx[ie^ZyXVUyXwHy[N|s[sVy\wXUa{yqsZTj`Gy[N|s[sVy_^Tq{yqsSK{BtcVUyqxUj{^yX]Vy_DR_gX|s	yyqsXQu HTq{yqs\Red_RelGj wX|s	yyqsXSuQq{yqpDU\ViSzkeUuUGy[N|s[sVy\kASK{yqsRzX|s	yyqsXS ByX]Vy[p|s\:DTWCAWN{{qpYVP{{qxI{PE~q[pW{WpJ{X^W{LWGfY_\a_^@\\\_j[xCGX GjsWbVC\Szb`udHQSq` Qz|~@ ~_ \~|ESzgDknISeU_V}Y{[F~qPsW{_w[hz{{q{YSnVJVjxEkkY~s{{zsYQuIVz{{qx |}Y~s{{zsYSe`Y}PsY|fc[|}ZY dD}}^]|aHndY~et|cD|fhG}sJ|vxkT`Z{[F~qPsW{_w@hz{{qxHP{Cvc^W{zxJkZY}PsYkjg P@{Cvc^W{zxEhj`Y}PsYV|Y~x{{qpYVq^Ghax{zxEP \{PE~q[pW{TZFQ`Y}PsYk_]^Q
dI~_]{PE~q[pW{WpXVuVY}PsY~Uci|gcZ~@{Cvc^W{zx Pz|Y}PsYVuIJ{PE~q[pW{W|ESax{z{YvcA	8M@_XS_
	S U	PVSP 
S]V QqD@VFB]\\T[TPPUSWRQQmW	WS UR[VmTSSU
PP\RW
PSUP WWWPZ	STV[QSYDFIAST VF\UTS\ZD]SW@YUZE	3D\WAB
SQPV	

WRU	VqVGZYH[S^VWWZ_\UWST^QKK@F[^^W]^WBUQL@YFKD^JDKBTFZBZWPTWKfIBW^]WWWP_RPTX UPSPoFVYI]m o\

QSWPP UTSS SW	PW
XQT	X U
W_RQQZMF@AQT TE_\TQ_XGTS^@[VXF :D^TCAVS  
TVWP		 
PTr_GSYJXZ[WBY\USTT^QKK@F[^^W]^WBUQL@YFKD^JDKBTFZBZWPTWKfIBW^]WWWP_RPTX UPSPoA\]E^mo\

QSWPP W	
X T PURPW	S \TPQ	SWPU	QXWQ W
	TV[QSYDFIAST VF\UTS\ZD]SW@YUZE	3FB]XP^
\STVQSVSU VTTP\
QVWpTLQ[J[[Y\I[^UVQT[TPPUSWRQQmJW_G^nmW
SXU
S[WTRQQWRTSSUS W \TPQ	SQFDBAS V WDTW TR^ZL_Q\@XWZM	8D]UAJWXTS		T	WS
P  	 TyJYPG_UXU\Z@IBFX_\\_\WCWZGB[FHFUAFKAUMQ@ZTQV\@dKBT\V\UT[TPPUSWRQQmJW_G^nmW
SXU
S[WTRQQWRTSSUS W \TPQ	SQFDBAS V WDTW TR^ZL_Q\@XWZM	88