D]WACWG]Uy{pT{]tYj{x{ZwJ~{|I~AJZ[|y^T{ssUyUwChs{yRh{YEyy{pT{sx]R{Z][T
gZhwtD|UckFYRV|FPx\yQFx{ssUy{{Chs{yRc[tY }odI~gko`G|tU}k Z|JY|lsZk]dZlY^|ZUK}Qx@qYsUy{pZP]dyR^ZV[|y^T{ssUyVs[VwU[QxEQwdKjUJPgtGi
dE{YEyy{pT{sxER{{Z][~|`I{YEyy{pT{sxESAx{[bb}dTdwHy|xDZ{F}|VGdU}RtJw[|y^T{ssUyVc@QI{yVc@QI{AsQpT{ss[Tp]Dhc{yUEP]g[|y^T{ssUyVhZ}Y{Ky_A
8F_WCKUE]WqrrUy_t[brzyXkHt[zK~KvrJ}fwYtp\UyqsWq\uBjq{q[jy[E{qrrUyqx_Z}yX]Ya\eGjjhFZveGi gEbvaGSKEbib[|s]WqrrUy_^[q[\[jv{IueT}_{Dueb~K a\e[|fY b[zFjXsJwe[_}_gJuaXy[E{qrrUyqxEbib[[x[HzAs[sWqrr[Sut Yrzy[GYfK^|K{C{XrUyqsY[v
KTq{q[b}K{C{XrUyqsY[y~[[xlatyvwJurrK}v{Iter|fwJquzJXHqXDyyqsWqryRzYwXyRzYtp\UyqsWq_aSugYwXyGR \qXDyyqsWqry yX]YuXzyVc2G^WCATD]W{qq_x^t[hqyxYkH~XyAJ aAxZE{{qq_xpxXSeaQ~Z{|qyKrZsW{qqQPtJVqyx^\VubPSJ[Ve~JktJ~_	AkJ{Cq[q_xpsYSeaQ~ZxXHzRd]}qSkdcH~faOY{D}fTQk`]kXyXeAhY~s__xpsW{_TUp{{\TBxZE{{qq_xpxGkjbWxY]Y~ jPR^F{[GsxpsW{qzOS x {X_QwcJ{[GsxpsW{qzORJ{{YhcvgWfu	xw{GXyL|wUDf}_|YwHuQ}r]W{qq_x]`CQKyx]`CQKyKrZsW{qqQU{^Ghayx^FP_eQ}r]W{qq_x]kY}[yAxTB	8D]]B@WGWVzqqU{]~Ziqy{ZaIXyK|I}qKJ[Xs_U{syVz_vBhsqzXi{YOzzqqU{sr^Q~{ZWXW f[hw~G_bYP^uDQ_f{YOzzqqU{srAiqy{Zm|fukdTZfqE}t}E}vzXkY~HrX~dP]iXu}ga~evYsqBp[qU{syXQ_f{ZWXW}[~qWVzqqU{^zYWuW[}YqGQrBP]TGQ[[~qWVzqqU{^zGP\a[}Yq}v}[~qWVzqqU{^zKzX_[f[taaqJd[V~XqKYF|q JIyH~f_HcqBp[qU{syXWuHH{ZWXWuHH{YOzzqqU{srVjr^{ZWXQ_	GhcqBp[qU{syXW[y{ZqXp\ 8FTT@A
[WV
WS 	
UZQ QT	[VrH[PEVTC
T]QBKBDQ^]^]\UBVQE@[DAG^CFIHTFSBX]PWWBfK@]]]^W]PVPRTQ 	VPQPlU
QQTWS
WQRWqoV

YPWPS
UTR[
SWPW	RQUR ]
TURQ	YYGF@AYT TD\VTQ^PD^S^@[WPE
:D^UKB	PV^PU
  WPYQ  SqPZY\SXM\R\B_\W\SJHCFY]\V^]WAWSMCZFIF\KGK@WD[AZUSVUJeJBU\_VTUR^QPWY	WSP	Sm]ST	QQ[lU
RSW
ZP	WVSP	SU
P]
QST
Q 		V
WVPSRZDFBCRT^E_U V[_[G]S\BQV[F	8DJ^YS^\TPP]WP WVS	V
pU_U_\V]^UR^QPWY	WSP	Sm]ST	QQ[lU
RSW
ZP	WVSP	SU
P]
QST
Q 		V
WVPSRZDFBCRT^E_U V[_[G]S\BQV[F	8FTT@A
QSV	 UUZ
Q Y Wr][^[_^T]US
 U\QBAAG[_\^W_VCWQEJXGKF^CEJBUFSH[WQVWBlHCW\]^]WPVSQUQ

WZRQmU
S]SSSnW
PRU
RQWTZRQWRUSS]ST
	VTPQP[FDBAP V VL^W TSVYF_Q\@Y_YG	8D\]B@WQPW 	
WRSU	S^PsQX[\QPCQVV\S@K@LX\\\]^]@WSG@YLHF\ADAAVDQBPTRVU@fIHT\_\WTRTRZVS WPSRmWSWPQQgV

YPWPS
UTR[QWPW	RQUR ]
TURQ	YYGF@AYT TD\VTQ^PD^S^@[WPE
:D^UKB	SVRPP
	^WP V  P	YqT_UU_UEX]_P@IBFYW_\_\WKTPGB[FIE_AFK@]GQ@ZUYUV@dKBU_\\UUQTPP]S	TRQ	YnWPU	[RQmU SS]	PP	TURQ	YVZW
QPUQ

W  WVSP	SZDLA@S^TD_UUQ^ZG]Y_A[WZF	;E^UAA
 
UP[

	 VP
W  
P	rTWVVV_UW[W	UVRAK@F[_V]]^WC]RF@YFKL]@DKBUEPBZWQ\TAfIBWV^]WWSURPUR ]PSQgVPSWT	
U	^QoW	QSU QP]WPSQT	RV
SYW	SU	
WTZRQZFDHBQ VUF_W
WP\XG_QVCZUXF	2G_WCA UW Y
	TQT 	QrU]]V^WUC
 U\QBAAG[_\^W_VCWQEJXGKF^CEJBUFSH[WQVWBlHCW\]^]WPVSQUQ

WZRQmUQP]T
	T	TRndjW U WPPRWU QSV]P	P g  VTU^QQS]PTSQVS  W	
 UTR[
SXFF@K S T
WG]W^R]ZE_S^JXTZD:N\VAC]FyyqsY\Xzyq{IqXD|s[sWq_qHyX]WqDVEeYUT`
]^@V]^]`ZzAG[ Mbw\\~j]Q@kB_Bz@_kcDFxB_\yaESH]FtbGRegFa]TeXZ_yBj Z weX[|s{qrr[ie`[q[\Uy_VDbfWFja^abzAtc]WqryERx q[\UyXc uHzAtc]WqryBjq{qrzJ~XpZbeyX}qwfbK|fwHbfzFied]uH~XsGuu~}XdYafj[|s{qrr[ie^[q[\UyXwIqXD|s[sWq_}XUa{qryZTj`FqXD|s[sWq\^Tq{qrySK{C|`\Uyqx ]iq^yX]Wq\DR_gYtpyyqsYYv
HTq{qry\Red^ZffGj wYtpyyqsY[vuQq{qrzDU\Vh[yaeUuUFqXD|s[sWq_aASK{qryRzYtpyyqsY[ByX]WqXz|s\2G^WCATD{{qqQUZ{{qyAxZE~q[q_x]pJ{X__xFWGgQ\Va_^H_\\_ i[xCGYD`sWc	\C\S{jjudIYP{` Qz}}J ~_T}|ESzfLhdISeTWUwY{[GvrZsW{_vSkp{{qzQPdVJVjyMhkY~s sxpsYQu	AUp{{qywY~s sxpsYSeaQ~ZsY|fbSwZY eL~w^]|a @|ddY~eu	cD|fiO|wsJ|vy
h^`Z{[GvrZsW{_vHkp{{qy@|Z{Cvc__xpxJk[Q~ZsYkjfSJ{Cvc__xpxEhjaQ~ZsYV}Q}r{{qqQU{^GhayxpxEP TxZE~q[q_x^ZFQaQ~ZsYk_\VR dI~_~UxZE~q[q_x]pXVuWQ~ZsY~T`i|gbR}J{Cvc__xpx Pz}Q~ZsYVuHBxZE~q[q_x]|ESayxp{Yvc@;G@_XS^	[
TP^PP 
RWV QpLC\FB]]TUQTPP]S	TRQ	YnW	VP
U	ZQVmU SS]	PP	VZW
QPUQ

W  WVSP	SU^QQSXLECAS
W VF]]TS\ZEUP]@YUZD9D\WACSQPU

 WR] 	Vp^DPYH[S_^T]Z_\U_P	UVRAK@F[_V]]^WC]RF@YFKL]@DKBUEPBZWQ\TAfIBWV^]WWSURPUR ]PSQgE\YI]mgV

YPWPS
UTR[
SWPW	RQUR ]
TURQ	YYGF@AYT TD\VTQ^PD^S^@[WPE
:D^UKB		^P  
	\UWP   PUqUGSYJYRX]BY\U[W	UVRAK@F[_V]]^WC]RF@YFKL]@DKBUEPBZWQ\TAfIBWV^]WWSURPUR ]PSQgBV]E^mgV

YPWPS
W	R U P]RPT	RVTPQPWSUYRWYW			U^QQSXLECAS
W VF]]TS\ZEUP]@YUZD9FB]XQV
VSTVQSVR]VT\SV
QVVxWFQ[J[ZQ_C[^UWYUQTPP]S	TRQ	Yn@W_G^o
nW
PRU
RQWTZRQWRUSS]ST
	VTPQP[FDBAP V VL^W TSVYF_Q\@Y_YG	8D\]B@TRTSWWR	P  	\sJYPG^VR]_P@IBFYW_\_\WKTPGB[FIE_AFK@]GQ@ZUYUV@dKBU_\\UUQTPP]S	TRQ	Yn@W_G^o	nW
PRU
RQWTZRQWRUSS]ST
	VTPQP[FDBAP V VL^W TSVYF_Q\@Y_YG	88