D]W@CWG]TyqsQ{]tXjq{ {ZwK~q|IqN|tQZ|s]Q{ssTy_tFhs{yXk{YExyqsQ{sx\R|{Z]Zi_dChhhERudCkgFju`CQIFjjc_~q]TyqsQ{]^XyX]_kdtX}_gkJcGvghsiXY~dYvcBhtgi d]htgJ}vY{YExyqsQ{sxFjjc_}Yx SK{EqYsTyqs_QwtQq{ {Y^S_dNVgdFiY@{YExyqsQ{sxDRx{Z]Z~vcL{YExyqsQ{sxDSK{ {[cbwgQdDyv{AZG}v{BZkT}f{ twZ|s]Q{ssTy\`EQI{y\`EQI{@s[sQ{ssZTz^Ahc{y_@P]gZ|s]Q{ssTy\k_}Y{JyUB8F_VCAUE\W{qwUy_u[hqyXjH~XK~KHaJ~vfY~sYUyqrW{_pBjqz{Xoy[D{{qwUyqy_PxyX\YV `[juuF~_di G[P\{GRy^{[AyyqrW{q|Bjqz{_ojvq]}vw|ejvQF~u}Xhq}vzI~fd_~ f kflY~veY|KAs[rW{qw[R_e {XY[T~Y~sYUyqrW{\tZTuTY}[DSu[Q ZXieDF{[AyyqrW{q|ERy {XY[~vbJ{[AyyqrW{q|ESKz{YbbwfWfsHyvzGX{F}vzDXoU}fzvs[|s\W{qwUy\aCQKy\aCQKAs[rW{qw[Tz_Ghay_FP_c[|s\W{qwUy\jY}[KyUC	8D[WCA	WA]W{pqU{[t[hpy{\wH|p|O}pKbkY~r_U{usW{^vBhu{{Yi{_E{{pqU{ux_P ~{\]YV{zVqZ]VdHGhn|J~^bkF[P]}GPx^{ZGy{usW{pzBhu{{^fY|\ k^aH~bc}wyF|rQhp |\{~gr[kL{J|df[h[h\hZyAq_sW{pq[P[d {Y_[VY~r_U{usW{]rZVqUY}ZyDQ[^[h`[~w]W{pqU{XpFQ]a[}_{ |w}[~w]W{pqU{XpJ{Y_[f]u``qJbwWYqKOGZ K|_sHY_Ee{CqZqU{usYVtHH{\]YVtHH{_E{{pqU{ux Wkr^{\]YP^	Ghe{CqZqU{usYVZy{\{Yq] 8@_UA@
SE_UzssU_vYis{XuJ}sxK}YK{Hu[q]UqqUz]tBlqyzZk[GyzssUqz]Q|X_[Q]dluvD]`o DYQ^GTz\zYEyqqUzsxBlqyzZ{XjX}ZdZzf[E}gkFxvuiY{ev[ddYo b_|goX[KjI{Au[qUzss[T_fzZ][R}[q]UqqUz^pZRuW[|Y{DU\f\I{Au[qUzss[Uu	KWs{Xa~I{Au[qUzss[Uz}[|Yx}bbtztwJxaqK~t{HzfqKd{ vuK|ZsJ[GyzssUqzQx[y[zQx[zs_UzssU\bPwg[y[zGQ^[GyzssUqz zZ][{[yyUa<D\W@C STV WW
WRQST SVpJ[TG^TAW]S@KFFY]]\]XWAVSG@_FIG\ABK@WDQBZUSWU@fOBU]_\WURTTPWS 	VPU	SlW
SQVW	PSQPWumV
QSU
TP
WTPS
QW	RS
RSW	RUWUPQQZGDBAQV PF_V TU\XG^Q\@_UXF
	8DZWCA	PTVRW
WTQQ   QrPX[\WZE_R^@[^
WXQBKCD[]X^]]UASQE@ZDKB^CGIBWFSBXWSRWBfJ@WX]^WWPVQRWQ 	SPPSiU	WWQSSlW

RQWRRSTPPSW
PUSWW
S V	
	UTTQRXFFFAR T VF]WTS\[E_SX@YU[D<FB]YQ\T PSPUTR WVW 
VrU[WW_V_^WPVQRWQ 	SPPSiU	WWQSSlW

RQWRRSTPPSW
PUSWW
S V	
	UTTQRXFFFAR T VF]WTS\[E_SX@YU[D<D\W@CS PV	UWR
S QWp_[ZYW]T_UW W\U@IBGY]\\_\VAWUGB[GIFZAFJ@WBQ@[USVS@dKCU\Y\UUTTPQWS
	WRQ	SmW
SU	QWQmU
SRW
PQ	WPRQ	SSPWQSUQ W

VVPU	S[DFBESTTD^U PQ^ZF]S\D[WZG	8@^UA@
 TQR W


SPPU  QVSsSZ[XSX@STV^Q@OBD[\^\Y\U@UQGD[DKD^AFIBVFQFXWRTW@bK@W^]\SWPTPRVS	UTQRoW 	QSPSQoV
QSU
TP
WTPSSW	RS
RSW	RUWUPQQZGDBAQV PF_V TU\XG^Q\@_UXF
	8DZWCA	SR	QPRVWTV    TQrT]WU[WFX
U\PBKBB[_\^]\SCWPE@[BKF_CFOBUGSB^WQVVBfKFW\\^WWQVPTUQ WPQQmUSWSRSmWSWU
RTWUPQQVRUSSWS
W	STPPS^FDB@S VVF[W US\ZC_Q\AYUZB	8E\WAE WP
S

VR
S
RvV_UVT]USST		W^QAIBF_]^]_\WAUQFB[FOD^@FKFWFP@ZSSTWAdKBS^]]USPUPPWRURQSoVP	PUV

WVQmS

SSWQPUTRQSWPV
WQUW W

WPRQ	SZBF@AST UD_STP^ZG[S^@ZWZF:D_UAAUUQ
WQ
V Q rQ_UU^UUG W\U@IBGY]\\_\VAWUGB[GIFZAFJ@WBQ@[USVS@dKCU\Y\UUTTPQWS
	WRQ	SmWQTU	VWTPmdhW V	SSPPWWQSRURTo TV WVQSWU	TW
SSV	S	U WTPS
QZFBBC Q PTG_W VQ]XG_W\B[TXF8F_VCAUE{{qw[T[z{qKy[D~q[wUy\qJ{XYUyGVGa[]W`_^B^]\_hZxCG_Eaw^^~n_YCk@]B~BWhcFDxF]TzaGQHYD|bEPecDi _VeZR\y@h ^fXY~syyqrYkedYyX\W{_RFjeWDha\iazCvcYUyqyGP|yX\W{Xg}KzCvcYUyqy@hqyqzH|XtXjfyZqebI~fsJjezDke`_}K|XwE}v~ X`[iejY~syyqrYkeZYyX\W{XsKy[D~q[wUy\}ZWayqyXVjdDy[D~q[wUy_\VqyqyQKAtc\W{q|Ujq\{XYUy_FP_c[|s{{qw[Qu
JVqyqy^Pe`\RefEh s[|s{{qw[Suu SqyqzFW\RjSzagWuQDy[D~q[wUy\aCQKyqy Pz{[|s{{qw[S @{XYUy[z~q\:D^UAAWD y{usYVZy{u{I{ZG|q_sW{]rH{\]W{FUGeY_Vc
_Z@\^^_jYzCC[ G`qUa\A^WybjwfKQS{bQ~~J	~[\~~GS~dDkdKSaV_Vw[{_E~qZqU{[t[hpy{uxYSdTHVn{Eki[~w{{pq[QqIVpy{u{ |w}[~w{{pq[SacY}Zq[|b`[|wX[gD}w\_|eHdf[~aw|aF|bkGwqH|r{k^bX{_E~qZqU{[t@hpy{u{HZyAvg]W{pzHkYY}Zq[knd PJyAvg]W{pzGhncY}Zq[VY~r y{usYV{\Ehe{{pzGP\{ZG|q_sW{^XDQcY}Zq[k[^^Q fK~[|]{ZG|q_sW{]rZVqUY}Zq[~Vck|c`Z~JyAvg]W{pzP~Y}Zq[VqJJ{ZG|q_sW{]~GSe{{py[vgB	8GB]XW\
S
 VT VSR
PWT UrD@\D@]_\WQVPTUQ WPQQmUTS
WRQTmWSWU
RTVRUSSWS
W	STPPSWVQSWZDFCCWTTF_UVQ\^G]S]B[U^F	9F^WEA
QSPV

UPU	V rVGP[J[W]VW]X]\QWS		W^QAIBF_]^]_\WAUQFB[FOD^@FKFWFP@ZSSTWAdKBS^]]USPUPPWRURQSoF\[K]ioV
QSU
TP
WTPS
QW	RS
RSW	RUWUPQQZGDBAQV PF_V TU\XG^Q\@_UXF
	8DZWCA	VSTVWT	    TWrUEQYN[Z[]@[\QST		W^QAIBF_]^]_\WAUQFB[FOD^@FKFWFP@ZSSTWAdKBS^]]USPUPPWRURQSoAV_G^ioV
QSU
TP
S

R
 WPU	PTWP VVPU	SUPW
QRWQ 	S
WVQSWZDFCCWTTF_UVQ\^G]S]B[U^F	9D@]\S^
VQTRSQVPU VPTPVSVTpTFSYJ_XY\CY\UUQWQVPTUQ WPQQm@U]GZmmU
SRW
PQ	WPRQ	SSPWQSUQ W

VVPU	S[DFBESTTD^U PQ^ZF]S\D[WZG	8@^UA@
WRVS
	TSP
R   TsH[PC\UR
U\PBKBB[_\^]\SCWPE@[BKF_CFOBUGSB^WQVVBfKFW\\^WWQVPTUQ WPQQm@U]GZmmU
SRW
PQ	WPRQ	SSPWQSUQ W

VVPU	S[DFBESTTD^U PQ^ZF]S\D[WZG	8<