D]WACWG]Uyts_{]tYjt{{ZwJ~t|I}^@Zc[|v]_{ssUyZtHhs{y]k{YEyyts_{sx]R|{Z][TdQhwtD|Z`	kFYRYMPx\y^Es{ssUytxHhs{yZdU|J`Y~cUO~g~`kL|ts~d}dU|`k|dZY}M{@hwxXjt{KqYsUytsQP]dy]]QV[|v]_{ssUyYpPVwU[^{NQ^dAjd
Q~q]Uyts_{^pDSYcQ}Y{~sQ~q]Uyts_{^pHy]]Qf[wbds@dU}]sAYE~NA}ssJ~c]Oc{As^s_{ss[TpJB{Z][TpJB{YEyyts_{sxUopT{Z][RZMhc{As^s_{ss[T^{{Z{[sY8F_WCDUE]W~qyUy_t[mqqyXwHyq~KxaK}fkY{sWUyqsW~_~Bjq{~Xay[E{~qyUyqx_UvyX]YU_njutF{_ji F[U\uGRx^~[OyyqsW~qrBjq{~XzY}Hkzv}|fZ]mfmF~vIxqiHc{eufpYmX_ifQGn[qAs[sW~qy[R_d ~XW[TY{sWUyqsW~\zZTuUYx[qDie`DVjr^|K{Ct[yUyqsYTuKTq{~Xi}K{Ct[yUyqsYTzu[[xcjtyvwHyayK}v{I{fy|f{~v}XsH~[OyyqsW~qrRzYx[rRzY{sWUyqsW~\jSugYx[rGR \~[OyyqsW~qr yX]Yz[qyVc=DUWCAWO]W{qqP{Ut[hqy{RwH|q|A}a}{{Cq[qP{{sYke\\{R]Y|Xa^~y]W{qqP{UZFQa^}QxYhe[VUChe]hk[huM~U\VqyDqQsW{qq^SocY}[z]hlQvXZ|kkfW~lchv}C}h\k[ MBwJvf\|U|HS^~y]W{qqP{U\Vqy{VVJ{[G|{{sW{qz@k``_{X_^~
|FP_TNk``Puvhk
Y~s_P{{sW{\rAQVcY}[y||Y~s_P{{sW{\rM{R]YfY	r`ksHHqPRsI[ @|AI}qqO|l]GayDqQsW{qq^VJJ{X_^VJJ{[G|{{sW{qzW`p\{X_^PUEhayDqQsW{qq^VQ{{Xy^qV8D]RAKWGXUqqqU{]qYbqy{ZrJvq|I va }c~A{[qU{sv[ae\Y{ZX[vXa[~qXUqqqU{]_D[a[}Y}bezYkgGbubGQIGbja[~qXUqqqU{][YqX_[|t\KuXuhd\FuuasvfXY~d_ZwvWFkdq_vfyt\Kaea{Y@yqqqU{s}Gbja[}Y}[KyAqYvUqqq[QwqYqy{YG\jzHhc[ts_U{svUq\rDQ^f[w[y|tz[ts_U{svUq\rH{ZX[lY	w`cvJufSUZvKu[ E|IKwqqJ|dXEuayAqYvUqqq[VwOHqX_[VwOHq[Gy{svUqqzWhu^qX_[P]GbayAqYvUqqq[VY~qXy[q^2D\WAC STWWY

	WRPVT 	SWpO[ZG^UAW\SEKHFY]\Y]VWAWSB@QFIF\DLK@WDTBZUSVUEfABU\_YWURQZPWV 	WP[	SmR
SPVW	P]PUW{mW
QSUZPRTPSQW	R]
SVW	S	UWTUQQZFDGAQ V ^F_WT[\XG_QY@QUXF	=DTWCAPTVRR 
WZQP QrQX^\YZE_S^EU^
WVQBKBD^]V^]\UA]QE@[DNL^CFIGWFSBXRS\WBfK@RV]^WRPVPRWQ 	]PQSgU	 YWQSSmR

SQW RR]TPQSWPUVYWV W	
		UQZQSXCFHAST VF]R
TS\ZEZSV@YUZD2FB]XQYT
^SQUTR VVY 
WwUUWW_WZ^RPVPRWQ 	]PQSgU	 YWQSSmR

SQW RR]TPQSWPUVYWV W	
		UQZQSXCFHAST VF]R
TS\ZEZSV@YUZD2D\WACS PW	T	WRV 
QVpZ[TYW]U_UYR\[@IBFYX\\_\WDW[GB[FI
FTAFK@RLQ@ZUVV]@dKBU
\W\UU ZTPPRS	WRQ	VmWSU	TYQmU SSR
PP	W^RQ	V]UW
QSUQWWVP[	SZDCBKSQ
TD_U ^Q^ZG]V\J[WZF	8N^UAA
	 TPRW

]PPT  QVSrS_[VSX@SQW^T@ABD[]^
\W\UAUTGJ[DKD[AFIBWCQHXWSTR@lK@W^X\]WUTPRWS
	UZQSoW	Q]QVQ	oW
QSUZPRTPS
SW	R]
SVW	S	UWTUQQZFDGAQ V ^F_WT[\XG_QY@QUXF	=DTWCAS\	QQR VWZW ZQrU]RUUWFY
U\QBNBL[_\^X\]CWQEE[LKF^CFABUFSGPWQVWBcKHW\]^RWPVPZUQWUQQmUSRSSSmW
SYU
RZWTUQQWRU SSRSW	]TPQSPFDBAS V VCUW TSYZM_Q\@YPZL	8D\RAKRP
S
WR
]RxV_UWTXU]STW^Q@IGFQ]^\_YWAUQGB^FAD^ACKHWFQ@Z]STW@dNB]^]\U]PTUPWSURTSoWP	PUV
RVPh]

VSWPPUTRTSWPW
YQUY R
W^RQ	VZLF@AV
T TD_]TQ^_GUS^@[W_F:D^UDATUQ
WPV P  r__UU_UUIR\[@IBFYX\\_\WDW[GB[FI
FTAFK@RLQ@ZUVV]@dKBU
\W\UU ZTPPRS	WRQ	VmWPZU	S WTPmehWV	]SQUWWPS\URZo 
T VWVPSYU	ZWSSW	S
	U RTPSQ_FLBCQ ^TFZW VQ\XB_Y\B[UXC8F_WCDUE{~qy[T[{~qqKy[E~t[yUy\pJ~XWUyGWBo[]WaZ^B^\\Zh[xFGQEav^[~`_YCj@XBpBWhbFAxH]Tz`GTHWD|cEUemDi _Se	ZR\x@m PfYY{syyqsYnejYyX]W~_\FjeVDma\ia{CscWUyqxGUryX]W~Xi}K{CscWUyqx@mqqyq{HyXzXjfxZzqecI{f}Jje{Dnen_}KyXyE}v zXn[iekY{syyqsYneTYyX]W~X}Ky[E~t[yUy\|ZRaqyqxXSjjDy[E~t[yUy_\SqqyqxTKqAtc]W~qrUjp\~XWUy_FU_m[|s{~qy[QuJSqqyqx^Uen\RegEm }[|s{~qy[Sut Vqqyq{FR\\jSz`gRu_Dy[E~t[yUy\`CTKqyqx Uzu[|s{~qy[S @~XWUy[{~t\:D_UDAWE |{{sYV[y{{{I{[GyqQsW{\rM{R]W{GUGeY_Wc_T@\^[_jYCM[ GaqPa]A[YybkwcKQSzbQp~K	~U\~ ~BSpdDkeNSoV_Vv[{QE~q[qP{Ut[hqy{{xYSeTMV`{Ek i^~y{{qq^QIVqy{{{ |v}^~y{{qq^SocY}[q^|l`[|vX^
gD}v\Z|kHef^~ow| aC|lkGvqM||{k_b]{QE~q[qP{Ut@hqy{{{H[yDvi]W{qzMkYY}[q^k`d PKyDvi]W{qzBh`cY}[q^VY~s |{{sYVz\@hk{{qzBP
\{[GyqQsW{_XAQcY}[q^kU^^QfN~U|]{[GyqQsW{\r_VUY}[q^~Vc n|m`Z~KyDvi]W{qzPpY}[q^VJJ{[GyqQsW{\~BSk{{qy^viB	8FBXXY\
	SVZ VSR
	PVT [rD@]DE]_\WPVPZUQWUQQmUTSRRPTmW
SYU
RZWRU SSRSW	]TPQSWVPSYZDFBCYTQF_U VT\PG]S\B^UPF	8F[WKA
QVPV
 UUU	VrVGQ[O[Y]VW\XX\_WSW^Q@IGFQ]^\_YWAUQGB^FAD^ACKHWFQ@Z]STW@dNB]^]\U]PTUPWSURTSoF][N]goW
QSUZPRTPSQW	R]
SVW	S	UWTUQQZFDGAQ V ^F_WT[\XG_QY@QUXF	=DTWCAVS
 TVWZ	 ZWrTETY@[Z[\@^\_STW^Q@IGFQ]^\_YWAUQGB^FAD^ACKHWFQ@Z]STW@dNB]^]\U]PTUPWSURTSoAW_B^goW
QSUZP]

S W
PU	UZWP WVP[	SU PR
QSWQ 	]
WVPSYZDFBCYTQF_U VT\PG]S\B^UPF	8DE]RS^
WQT\STVPU V^TPWVVTpTGS\JQXY\BYYUUQWPVPZUQWUQQmAUXGTmmU SSR
PP	W^RQ	V]UW
QSUQWWVP[	SZDCBKSQ
TD_U ^Q^ZG]V\J[WZF	8N^UAA
WSVS
	T]P
R  TrH^PM\US
U\QBNBL[_\^X\]CWQEE[LKF^CFABUFSGPWQVWBcKHW\]^RWPVPZUQWUQQmAUXGTmmU SSR
PP	W^RQ	V]UW
QSUQWWVP[	SZDCBKSQ
TD_U ^Q^ZG]V\J[WZF	82