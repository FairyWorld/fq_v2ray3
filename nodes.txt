D]WACWG]Uy{p_{]tYj{x{ZkJ|RxA|IK}A@|dY[|y^_{ssUyUwHhs{yRh{YEyy{p_{sx]R{Z][iUgMhhhDRgMkgGjcMQIGj``Q~q]Uy{p_{]^YyR^Q`_}RtgFwTc||~g{hLdY}BRB}w{ ~|d{YEyy{p_{sxGj``Q}YxSAxKqYsUy{pQQwtQ{x{YBRVcAP`i
dN{YEyy{p_{sxER{{Z][~|`B{YEyy{p_{sxESAx{[bb}d_dEy|xOZ{F}|VLdUU}||Jw[|y^_{ssUyVcKQI{yVcKQI{AsQp_{ss[Tp]Ohc{yUNP]g[|y^_{ssUyVhQ}Y{Ky_A8F_WCKUE]WqryUy_t[brqyXwHvr~KHuumGvgYtpWUyqsWq\~Bjq{q[ay[E{qryUyqx_ZvyX]Y\n[jutFt\ji F[Z_uGRx^qXOyyqsWqrrBjq{q\vY~HUGvKzZ|fZYa[}F~vcab	Ziekte\Xifkweuj_|\wbqAs[sWqry[R_d q[W[TYtpWUyqsWq_zZTuUYwXqDie`birQj|\ZfnGTq
YtpWUyqsWq_zDS\cYwXq~vYtpWUyqsWq_zHyX]YlZwbasHueuU}XsIuXEqHwryE}H]JubqAs[sWqry[TuJJq[W[TuJJqXOyyqsWqrrUjp\q[W[R_EbbqAs[sWqry[T[{q[q[s\2GUWCATO]W{qq_xUt[hqyxRwH|qA|aA|lwY~s__x{sW{_vHk{{{XixQE{{qq_x{x_P~xR]YP_fktF~_b	h
F[P\}MSx^{[Gsx{sW{qzHk{{{XqBBQvS	}lsIfiLgqPhRsI~fvR
{ a@k|p\ayKrQsW{qqQSUd {X_QUY~s__x{sW{\rPUUY}[yNStZSKQ}y]W{qq_xVpFQ\aQ~Q{ |v}Q}y]W{qq_xVpJ{X_QeSu`aq@|lgWXqA|QG}q @~{sGH_B|k{Cq[q_x{sYVuHBxR]YVuHBxQE{{qq_x{x WjrTxR]YP_	Mkk{Cq[q_x{sYV[yxR{Yq\ ;N_UAA
]E_U{syVq_vYhsqqXuJ|svKJt}DufqJ{YOzqqqU{srYYea[}YqvqyAqYyVqqq[SwK\qy{^\]a_bZPIZbuH~]]\qyAqYyVqqq[SgiXw[y |tuKbubXcvXi~divueFkZTZva hZuafqEht~[uHS[~qWVqqqU{]]\qy{^\Kq[Gy{syVqqzEkhj^qX_[~~A[[[~qWVqqqU{^zG[\a[}Yqvv}[~qWVqqqU{^zKqX_[f[tjaqJd[VuXqKYFwq J}syFuH_HcqB{[qU{syX\uHH{ZWX\uHH{YOzqqqU{sr]jr^{ZWXZ_	GhcqB{[qU{syX\[y{ZqX{\ 8FTTKA
[W]
WS 	 
UZZ QT	[]rH[PEV_C
TVQBKBDQ^V^]\UB]QE@[DAL^CFIHTFSBX]P\WBfK@]V]^W]PVPRTQ 	]PQPgU
QZTWS
WZRWqo]

YPWPSUTR[SWPW	YQUY ]
T^RQ	YYLF@AY
T TD\]TQ^PDUS^@[WPE:D^UKBPV^PU
  WPYZ Sq[ZY\SXM\Y\B_\W\SJHHFY]\V^VWAWSMCQFIF\KLK@WD[AZUSVUJeABU\_VTUR^ZPWY	WS[	Sm]ST	QQ[gU
YSW
ZP	WVS[	SUP]
QSTQ 		]
WVPSYZDFBCYT^E_U V[_PG]S\BQVPF	8DJ^RS^\ TP[]WP \VS	]
pU_U_\]]^UR^ZPWY	WS[	Sm]ST	QQ[gU
YSW
ZP	WVS[	SUP]
QSTQ 		]
WVPSYZDFBCYT^E_U V[_PG]S\BQVPF	8FTTKA
QS]	 ^UZQ Y \r][^[_^_]US
U\QBAAL[_\^W_]CWQEJXLKF^CEABUFSHPWQVWBlHHW\]^]WPVSZUQ
WZRQmUS]SSSnW
PYU
RZWTZRQWRU SS]ST	]TPQPPFDBAP V VLUW TSVYM_Q\@Y_YL	8D\]BKWZPW 	WRS^	S^PxQX[\QPCQV]\S@K@LXW\\]^]KWSG@YLHF\ADAA]DQBPTYVU@fIHT\_\WTRTRZ]S WPSYmWSW[QQg]

YPWPSUTR[ QWPW	YQUY ]
T^RQ	YYLF@AY
T TD\]TQ^PDUS^@[WPE:D^UKBSVR[P
	^WP ] P	Yq__UU_UES]_[@IBFYW_\_\WKT[GB[FIETAFK@]LQ@ZUYU]@dKBU_W\UUZTPP]S	TRQ	YnWPU	[YQmU  SS]	PP	T^RQ	Y]ZW
QPUQ
W  WVS[	SZDLAKS^
TD_U^Q^ZG]Y_J[WZF	;N^UAA

UP[

	 ]P
W  P	rTWV]V_UW[WUVRJK@F[_VV]^WC]RM@YFKL]KDKBUE[BZWQ\TJfIBWV^VWWS^RPUY ]PSQg]PSWT	U	^ZoW	QSU ZP]WPSQT	R]
SYW	S	U	WTZRQZFDHBQ V^F_W
W[\XG_QVCQUXF	2GTWCA ^W Y 
	TZT 	ZrU]]VUWUC
U\QBAAL[_\^W_]CWQEJXLKF^CEABUFSHPWQVWBlHHW\]^]WPVSZUQ
WZRQmUZP]T
	T	TRnojW U WP[RWU ZSV]P	P g  V
TU^ZQS]PTSQ]S  W	
UTR[SXFF@KS T
WL]W^RVZE_S^JX_ZD:N\]AC]FyyqsY\Xqyq{IqXO|s[sWq_zHyX]WqD]EeYUTk
]^@VV^]`QzAG[ Mb|\\~j]Q@`B_Bz@_khDFxB_\yjESH]FtiGRegFa]TeXZ_rBj Z weS[|s{qry[ie`[q[WUy_VDbf\Fja^abqAtc]WqrrERx q[WUyXc uHqAtc]WqrrBjq{qrqJ~XpZberX}qwfiK|fwHbfqFied]uH~XsGuuu}XdYafa[|s{qry[ie^[q[WUyXwIqXO|s[sWq_vXUa{qrrZTj`FqXO|s[sWq\^Tq{qrrSK{C|`WUyqx ]iz^yX]Wq\DR_gYtpyyqsYYvHTq{qrr\Red^ZfmGj wYtpyyqsY[v~Qq{qrqDU\Vh[yjeUuUFqXO|s[sWq_jASK{qrrRzYtpyyqsY[ByX]WqXq|s\2GUWCATO{{qqQUQ{{qyAxQE~q[q_xVpJ{X__xMWGgQ\]a_^H_\\_ i[xCGYDksWc	WC\S{jaudIYPp` Qz}}A ~_T}
|ESzfLhoISeTWU|Y{[GvrQsW{_vSk{{{qzQPoVJVjyMh
kY~s sx{sYQu	AU{{{qy|Y~s sx{sYSeaQ~QsY|fbS|ZY eL~|^]|a @|odY~eu	
cD|fiO||sJ|vy
hU`Z{[GvrQsW{_vHk{{{qy@|Q{Cvc__x{xJk[Q~QsYkjfSA{Cvc__x{xEhjaQ~QsYV}Q}y{{qqQUp^Ghayx{xEP TxQE~q[q_xUZFQaQ~QsYk_\VRdI~_~UxQE~q[q_xVpXVuWQ~QsY~T`
i|gbR}A{Cvc__x{x Pz}Q~QsYVuHBxQE~q[q_xV|ESayx{{Yvc@;L@_XS^	[TP^PP 
R\V QpLCWFB]]TUZTPP]S	TRQ	YnW	VPU	ZZVmU  SS]	PP	]ZW
QPUQ
W  WVS[	SU^ZQSXLEHAS
W VF]]
TS\ZEUPV@YUZD2D\WACSQPU

 	WR] 		Vp^D[YH[S_^TVZ_\U_PUVRJK@F[_VV]^WC]RM@YFKL]KDKBUE[BZWQ\TJfIBWV^VWWS^RPUY ]PSQgEWYI]mg]

YPWPSUTR[SWPW	YQUY ]
T^RQ	YYLF@AY
T TD\]TQ^PDUS^@[WPE:D^UKB	^P   
	\UWP  PUq^GSYJYRXVBY\U[WUVRJK@F[_VV]^WC]RM@YFKL]KDKBUE[BZWQ\TJfIBWV^VWWS^RPUY ]PSQgB]]E^mg]

YPWPSW	Y U  P]RPT	R]TPQPWSUYYWYW				U^ZQSXLEHAS
W VF]]
TS\ZEUPV@YUZD2FB]XQV
]STVQSVR]VT\S]
QVVxWMQ[J[ZQ_H[^UWYUZTPP]S	TRQ	YnKW_G^o
nW
PYU
RZWTZRQWRU SS]ST	]TPQPPFDBAP V VLUW TSVYM_Q\@Y_YL	8D\]BKTYTSWWR	P  	\xJYPG^VY]_[@IBFYW_\_\WKT[GB[FIETAFK@]LQ@ZUYU]@dKBU_W\UUZTPP]S	TRQ	YnKW_G^o	nW
PYU
RZWTZRQWRU SS]ST	]TPQPPFDBAP V VLUW TSVYM_Q\@Y_YL	88