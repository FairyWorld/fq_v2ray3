D]WACWG]Uy{pS{]tYj{x{ZwJ~{|I~AMZ[|y^S{ssUyUwDhs{yRh{YEyy{pS{sx]R{Z][T
g]hwtD|UckFYRV|APx\yQF{ssUy{{Dhs{yRc\tY }odN~gko`@|tU}k ]|JY|ls]k]dZlYY|ZUK}QxGqYsUy{p]P]dyR^]V[|y^S{ssUyVs\VwU[QxBQwdKjUMPgtGi
dB{YEyy{pS{sxER{{Z][~|`N{YEyy{pS{sxESAx{[bb}dSdwHy|xCZ{F}|V@dcU}||Jw[|y^S{ssUyVcGQI{yVcGQI{AsQpS{ss[Tp]Chc{yUBP]g[|y^S{ssUyVh]}Y{Ky_A8F_WCKUE]WqruUy_t[br}yXkHt[}K~Kvr K}HQYtp[UyqsWq\rBjq{q[my[E{qruUyqx_ZzyX]Y\b[jutFt\fYR\EZ\by[E{qruUyqx@br}yXg weqif^[teuEvwDvu~Xi[uKvX|fZ\b[qekufrY}q{C{XuUyqsYZ\byX]Y\y[|s]WqruUy\pX\vS[[{FZvBR_^FZX[|s]WqruUy\pF[_e[[{ vuy[|s]WqruUy\pJq[[[dYujbuJ}fQWu[uK}[GwrJ~qsGuK[H}a{C{XuUyqsY\vLHyX]Y\vLHy[E{qruUyqx ]iv^yX]YZ\Gja{C{XuUyqsY\X}yX{Y{_:D_UKBWE__xwsW{_vSkw{{Xi@}^{I|K	wHfuQ}u]W{qq_xYt@hqyx^k {[GsxwsW{qzWS| {X_QhYdEhjjNSsdEk eMks`EQKMklcY~s__xwsW{_\Sx^]YhvyA|`U_yL|`c |K hYdY~f[k^{DhXqB~`Z]_eB|`Z{[GsxwsW{qzMklcY}[zRM{Cq[q_xwsYQuvPw{{[	OPcJ\~KyKr]sW{qqQRsIVqyx^c KyKr]sW{qqQR|Y}[zwe`v{vuB|wsIvyA}`s~fuxpsJ}X}@x]E{{qq_xwx Pz}Q~]x Pz}Q}u]W{qq_xZ`QueQ~]xEP Tx]E{{qq_xwx{X_Q|]{{Tc;B_UAA
QE_U{syV}_vYhsq}XiJ~ZqHzKcH}[Gy{syV}qzZSgiX{[y |sqBw[qU{syXUu	HVsq}_^VwjYVKYVgvCnuH~]HnKyAqYyV}qq[SgiX{[zZJr[z f_}s	ZneaJ~diFzXyF}d\Xna_kZqz }ZmHm }[~qWV}qqU{]]Pqy{^\K}[Gy{syV}qzEkhj^}X_[~bYW_ D{YOz}qqU{srFVz{ZWXzvaH{YOz}qqU{srFWKy{[afweUd} }vyEZqEyvWFdiVyv}J}Xxs_U{syV}\bAQIq}\bAQIqBw[qU{syXPz\Ehcq}_DP]mXxs_U{syV}\i[}YqH}U@8FTTGA
[WQ
WS 	
UZV QT	[QrH[PEVSC
TZQBKBDQ^Z^]\UBQQE@[DA@^CFIHT	FSBX]PPWBfK@]Z]^W]PVPRTQ 	QPQPkU
QVTWS
WVRWqoQ

YPWPSUTR[SWPW	UQUU ]
TRRQ	YY@F@AYT TD\QTQ^PDYS^@[WPE:D^UKBPV^ PU
  WPYV SqWZY\SXM\U\B_\ W\SJHDFY]\V^ZWAWSMC]FIF\K@K@WD[AZUSVUJeMBU\_VTUR^VPWY	WSW	Sm]ST	QQ[kU
USW
ZP	WVSW	SUP]
QSTQ 		Q
WVPSUZDFBCUT^E_U V[_\G]S\BQV\F	8DJ^^S^\TPW]WP PVS	Q
pU_U_\Q]^UR^VPWY	WSW	Sm]ST	QQ[kU
USW
ZP	WVSW	SUP]
QSTQ 		Q
WVPSUZDFBCUT^E_U V[_\G]S\BQV\F	8FTTGA
QSQ	 RUZQ Y Pr][^[_^S]US
U\QBAA@[_\^W_QCWQEJX@KF^CEMBUFSH\WQVWBlHDW\]^]WPVSVUQ
WZRQmUS]SSSnW
PUU
RVWTZRQW RUSS]ST	QTPQP\FDBAP V VLYW TSVYA_Q\@Y_Y@	8D\]BGWVPW 	WRSR	S^PtQX[\QPCQVQ\S@K@LX[\\]^]GWSG@YLH	F\ADAAQDQBPTUVU@fIHT	\_\WTRTRZQS WPSUmWSWWQQgQ

YPWPSUTR[QWPW	UQUU ]
TRRQ	YY@F@AYT TD\QTQ^PDYS^@[WPE:D^UKBSVRWP
	^WP Q P	YqS_UU_UE_]_W@IBFYW_	\_\WKTWGB[FIEXAFK@]@Q@ZUYUQ@dKBU_[\UUVTPP]S	T RQ	YnWPU	[UQmU SS]	PP	TRRQ	YQZW
QPUQ
W  WVSW	SZDLAGS^TD_URQ^ZG]Y_F[WZF	;B^UAA

UP[

	 QP
W  P	rTWVQV_UW[WUVRFK@F[_VZ]^WC]RA@YFKL]GDKBUEWBZWQ\TFfIBWV^ZWWSRRPUU ]PSQgQPSWT	U	^VoW	QSU VP]WPSQT	RQ
SYW	SU	WTZRQZFDHBQ VRF_W
WW\XG_QVC]UXF	2GXWCA RW Y
	TVT 	VrU]]VYWUC
U\QBAA@[_\^W_QCWQEJX@KF^CEMBUFSH\WQVWBlHDW\]^]WPVSVUQ
WZRQmUVP]T
	T	TRncjW U WPWRWU VSV]P	P g  VTU^VQS]PTSQQS  W	
UTR[SXFF@KS T
W@]W^RZZE_S^JXSZD:N\QAC]FyyqsY\X}yq{IqXC|s[sWq_vHyX]WqDQEeYUTg
]^@VZ^]`]zAG[ Mbp\\~j]Q@lB_Bz@_kdDFxB_\yfESH]FteGRegFa]TeXZ_~Bj Z we_[|s{qru[ie`[q[[Uy_VDbfPFja^ab}Atc]Wqr~ERx q[[UyXc uH}Atc]Wqr~Bjq{qr}J~XpZbe~X}qwfeK|fwHbf}Fied]uH~XsGuuy}XdYafm[|s{qru[ie^[q[[UyXwIqXC|s[sWq_zXUa{qr~ZTj`FqXC|s[sWq\^Tq{qr~SK{C|`[Uyqx ]iv^yX]Wq\DR_gYtpyyqsYYvHTq{qr~\Red^ZfaGj wYtpyyqsY[vrQq{qr}DU\Vh[yfeUuUFqXC|s[sWq_fASK{qr~RzYtpyyqsY[ByX]WqX}|s\2GYWCATC{{qqQU]{{qyAx]E~q[q_xZpJ{X__xAWGgQ\Qa_^H_\\_ i[xCGYDgsWc	[C\S{jmudIYP|` Qz}}M ~_T}|ESzfLhcISeTWUpY{[Gvr]sW{_vSkw{{qzQPcVJVjyMhkY~s sxwsYQu	AUw{{qypY~s sxwsYSeaQ~]sY|fbSpZY eL~p^]|a @|cdY~eu	cD|fiO|psJ|vy
hY`Z{[Gvr]sW{_vHkw{{qy@|]{Cvc__xwxJk[Q~]sYkjfSM{Cvc__xwxEhjaQ~]sYV}Q}u{{qqQU|^GhayxwxEP Tx]E~q[q_xYZFQaQ~]sYk_\VRdI~_~Ux]E~q[q_xZpXVuWQ~]sY~T`i|gbR}M{Cvc__xwx Pz}Q~]sYVuHBx]E~q[q_xZ|ESayxw{Yvc@;@@_XS^	[TP^PP 
RPV QpLC[FB]]T UVTPP]S	T RQ	YnW	VPU	ZVVmU SS]	PP	QZW
QPUQ
W  WVSW	SU^VQSXLEDAS
W VF]]TS\ZEUPZ@YUZD>D\WACSQPU

 WR] 	Vp^DWYH[S_^TZZ_\U_PUVRFK@F[_VZ]^WC]RA@YFKL]GDKBUEWBZWQ\TFfIBWV^ZWWSRRPUU ]PSQgE[YI]mgQ

YPWPSUTR[SWPW	UQUU ]
TRRQ	YY@F@AYT TD\QTQ^PDYS^@[WPE:D^UKB	^P  
	\UWP  PUqRGSYJYRXZBY\U[WUVRFK@F[_VZ]^WC]RA@YFKL]GDKBUEWBZWQ\TFfIBWV^ZWWSRRPUU ]PSQgBQ]E^mgQ

YPWPSW	U U P]RPT	RQTPQPWSUYUWYW			U^VQSXLEDAS
W VF]]TS\ZEUPZ@YUZD>FB]XQV
QSTV QSVR]VT\SQ
QVVxWAQ[J[ZQ_D[^UWY UVTPP]S	T RQ	YnGW_G^o
nW
PUU
RVWTZRQW RUSS]ST	QTPQP\FDBAP V VLYW TSVYA_Q\@Y_Y@	8D\]BGTUTSWWR	P  	\tJYPG^VU]_W@IBFYW_	\_\WKTWGB[FIEXAFK@]@Q@ZUYUQ@dKBU_[\UUVTPP]S	T RQ	YnGW_G^o	nW
PUU
RVWTZRQW RUSS]ST	QTPQP\FDBAP V VLYW TSVYA_Q\@Y_Y@	88