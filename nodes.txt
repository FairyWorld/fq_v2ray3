D]WACWG]UyzsW{]tYjz{{ZwJ~z |I~@HJQ[|x]W{ssUyTt@hs{ySk {YEyyzsW{sx]R
| {Z][TdYhwtD|T`kFYRWEPx\yPE{{ssUyzx@hs{yTh]k]h_}mZ\~dwJ~kD|w{}@ww|nkJ`[~c wxX~j{CqYsUyzsYP]dyS]YV[|x]W{ssUyWpXVwU[P{FVZDSgF{YEyyzsW{sxER
x {Z][~}cJ{YEyyzsW{sxES@{{[bb|gWdwHy}{GZ{F}}YDZsU}}{Jw[|x]W{ssUyW`CQI{yW`CQI{AsPsW{ss[Tq^Ghc{yTFP]g[|x]W{ssUyWkY}Y{Ky^B	8F_WCJUE]WpqqUy_t[cqyyXwHwq~KHtvaG}f{p[GyyqsWpqzZQecYv[y ~q{Cz[qUyqsYXu	HTq{p\bKTj`_c\fAR_dJZKYTe|BcuH|_IcKyAs[sWpqq[QecYv[z_}uhYwe}j[w_}|f`\cvuFuvq }XQJwei ~Xgvfa[|s]WpqqUy_\]qyy\VJp[GyyqsWpqzEij`_pX_[|V\`jb]jj{Fp[GyyqsWpqzERx pX_[~vcJp[GyyqsWpqzESK{pYbbwgWtfuJyv{GtXyF}vYDtXqU}v{tHu[|s]WpqqUy\`CZKyy\`CZKyAs[sWpqq[Tz^Gcayy_F[_e[|s]WpqqUy\kYv[yKyUB	3D]WCAWG]W{qq^{]t[hqy{ZkH~Xy@|II|qAJYY~s_^{ssW{_vIhs{{Xi	{YE{{qq^{sx_P~	{Z]YP_f	hwtF~_bkF[P\}LPx^{[Gr{ssW{qzIhs{{XuA}dd]k a~d`]kXyM|wwkaPkc~fa	JwH}v\Th]wG}ayJqYsW{qqPP]d {X_PVY~s_^{ssW{\rQVwUY}[yOk^IkfJkh{F{[Gr{ssW{qzNPx {X_P|tcJ{[Gr{ssW{qzNQI{{Yi`ugWfu{t{GXyMtYDXq^t{HuP~q]W{qq^{^`CQKy{^`CQKyJqYsW{qqPVx^Ghay{]FP_eP~q]W{qq^{^kY}[y@{WB	8D]\ACWGVUyqqU{]Yjqy{Z`J|XyK|IK}KJ}tt[|s_U{sxUy_vBhspyXi{YNyyqqU{ss]R~{ZV[i_fGhhcDRufGklGjubGQIGjja[~qVUyqqU{]UYyX_[htlj_zXkd|F~XfZkc	} a ~g^}X[FhZ[ie}K|wc[juv_{YNyyqqU{ssGjja[}YsSKyAqYxUyqq[QwQqy{Y ^Uu~]kg\ja[~qVUyqqU{^{DS\a[}Yp~v}[~qVUyqqU{^{HyX_[f[ wbaqJJxU}XqKY	Ea KsxE}X_HcpAs[qU{sx[TuHH{ZV[TuHH{YNyyqqU{ssUjr^{ZV[R_	GhcpAs[qU{sx[T[y{Zp[s\ 8FUWCA
ZTU
WS

U[R QT 	ZUrH[PEWWC
W^QBKBDP]^^]\UAUQE@[D@D^CFIIWFSBX\STWBfK@\^]^W\PVPRWQ 	 UPQ SoU
QRTW P
WRRWqoU

XSWPP	UTRZ	SW PW
QQU Q \
WVRQ	XZDF@AXT TD_UTQ^QG]S^@[WQF	:D^UJA
PV_PU
WPXR 	SrSZY\SXL_Q\B_\W\SKK@FY]\W]^WAWSL@YFIF\JDK@WDZBZUSVUKfIBU\_WWUR_RPWX 	WPS	Sm\SW	QQZoU
QSW
[P	WVPS	SU	P\
QSW	Q 	U
 WVPSQZDFBCQT_F_U VZ\XG]S\BPUXF	8DK]ZS^]TSS\TP 
TVS
U
pU_U^_U]^UR_RPWX 	WPS	Sm\SW	QQZoU
QSW
[P	WVPS	SU	P\
QSW	Q 	U
 WVPSQZDFBCQT_F_U VZ\XG]S\BPUXF	8FUWCA
Q	PU	VU[	Q  XTr][^[^]W]US
U\QB@BD[_\^V\UCWQEK[DKF^CFIBUFSIXWQVWBmK@W\]^\WPVPRUQ	W[QQmU	S\SSS
mW
SQU
RRWT[QQWRUSS\SW		
UTPQ SXFDBA
S V VM]W TSWZE_Q\@Y^ZD	8D\\ACTRPW
	WRPV		 S_SpQX[\QQ@QV
U\S@K@M[_\\]^\CWSG@YMKF\AD@BUDQBQWQVU@fIIW\_\WWRTR[US  WPSQmW SWSQQfU

XSWPP	UTRZQW PW
QQU Q \
WVRQ	XZDF@AXT TD_UTQ^QG]S^@[WQF	:D^UJA
SV QSP
	_WPU 	P	XrW_UU_UF[\\S@IBFYV\\_\WJWSGB[FIF\AFK@\DQ@ZUXVU@dKBU\_\UURTPP\S	WRQ	XmWSU	ZQQmUSS\
PP	WVRQ	XU[W
QSUQ	WWVPS	SZDMBCS_TD_U VQ^ZG]X\B[WZF	 8F^UAA

UPZ

UP
W
 	P	rTVUUV_UWZT
UWQBK@F[_W^]^WC\QE@YFKM^CDKBUFSBZWQ]WBfIBWW]^WWPVRPUQ \PSQfUP PWT
	U	_RoW
QSURP\TPSQW	RU
SXW	SU	WT[QQZFDIAQ V VF_WTS\XG_QW@YUXF	3D\WCAVW X
WRT RrU]\U]WUC
U\QB@BD[_\^V\UCWQEK[DKF^CFIBUFSIXWQVWBmK@W\]^\WPVPRUQ	W[QQmURP\T
	W	TRmgjWV WSSRWURSV\P	P f    VTU_RQS\PWSQUS  W	
UTRZ	SXFF@JS TTD]W_Q^ZE_S^K[WZD:O_UAC\E yyqsY][yyq{Ip[G|s[sWp\rHyX]WpGUEeYTWc
]^@W^^]aYzAG[ Lat\\~j]PChB_Bz@^h`DFxB_]zbESH]FuaGRegF` ]TeX[\zBj Z vf[[|s{pqq[ie`[pX_Uy_VDceTFja^`ayAtc]WpqzERx pX_UyXc tKyAtc]WpqzBjq{pqyJ~XpZcfzX}qveaK|fwHceyFied]tK ~XsGtv}}XdY`ei[|s{pqq[ie^[pX_UyXwIp[G|s[sWp\~XUa{pqzZTj`Fp[G|s[sWp_^Tq{pqzSK{C}c_Uyqx \jr^yX]Wp_DR_gYus yyqsYXu	HTq{pqz\Red^[eeGj wYus yyqsYZuvQq{pqyDU\VhZzbeUuUFp[G|s[sWp\bASK{pqzRzYus yyqsYZ ByX]Wp[y|s\3D]WCAWG{{qqPVY{{qy@{YE~q[q^{^pJ{X_^{EWGgP_Ua_^I\\\_ 
j[xCGY	GcsWc_C\S{kiudIXSx` Qz}~I ~_U~|ESzfMkgISeTVVtY{[GwqYsW{_vRhs{{qzPSgVJVjyLkkY~s r{ssYQu	@Vs{{qy	|tY~s r{ssYSeaP}YsY|fbR|tZY eM}t^]|a AgdY~eu|cD|fiNtsJ|vyk]`Z{[GwqYsW{_vIhs{{qyAY{Cvc_^{sxJk[P}YsYkjf	PI{Cvc_^{sxEhjaP}YsYV}P~q{{qqPVx^Ghay{sxEP U{YE~q[q^{]ZFQaP}YsYk_\WQdI~_~T{YE~q[q^{^pXVuWP}YsY~Tci|gbS~I{Cvc_^{sx Pz}P}YsYVuHC{YE~q[q^{^|ESay{s{Yvc@ 8D@_XS^	Z	T P_SP 
R
TV QpM@_FB]]UURTPP\S	WRQ	XmW	VS	U	[RVmUSS\
PP	U[W
QSUQ	WWVPS	SU_RQSXMF@AST VF]\TS\ZETS^@YUZD :D\WACSQPV 

WR\ 
	Vp_GSYH[S__W^Z_\U^S
UWQBK@F[_W^]^WC\QE@YFKM^CDKBUFSBZWQ]WBfIBWW]^WWPVRPUQ \PSQfF_YI]mfU

XSWPP	UTRZ	SW PW
QQU Q \
WVRQ	XZDF@AXT TD_UTQ^QG]S^@[WQF	:D^UJA
	_S  
	]VWP   	PUrVGSYJYS[^BY\UZT
UWQBK@F[_W^]^WC\QE@YFKM^CDKBUFSBZWQ]WBfIBWW]^WWPVRPUQ \PSQfAU]E^mfU

XSWPP	W
Q U P\RPW	R	UTPQ SWPUXQWX W	
	U_RQSXMF@AST VF]\TS\ZETS^@YUZD :FB]XQW
USTVQSVR\ VT]PU
QVVyTEQ[J[ZP\@[^UWXURTPP\S	WRQ	XmCW_G^omW
SQU
RRWT[QQWRUSS\SW		
UTPQ SXFDBA
S V VM]W TSWZE_Q\@Y^ZD	8D\\AC
WQTS T WR
P 	  	]pJYPG^UQ\\S@IBFYV\\_\WJWSGB[FIF\AFK@\DQ@ZUXVU@dKBU\_\UURTPP\S	WRQ	XmCW_G^omW
SQU
RRWT[QQWRUSS\SW		
UTPQ SXFDBA
S V VM]W TSWZE_Q\@Y^ZD	88