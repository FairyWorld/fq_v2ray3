D]W@C	WG]Typp_{]tXjpx{ZkK|YxA|I}J@}tgZ|r^_{ssTy^wHhs{yYh{YExypp_{sx\R {Z]Zi^gMhhhERtgMkgFjtcMQIFjk`Q~q]Typp_{]^XyY^QkdQ j^h	JgGwkRkc~wV~gtZitLtt[jYtA|d_iYcT{YExypp_{sxFjk`Q}Yx SJxKqYsTyppQQwtQpx{YIR gMhs
Z|r^_{ssTy]sNQ^cZZx|tZ|r^_{ssTy]sB{Z]ZdX}`csK}Ip_ZsJ}JOIKpp@J]I}`xKqYsTyppQVwJIyY^QVwJIyZFs{ssTyp{Whp_yY^QP]Fj`xKqYsTyppQVY{yYxQq^:E\]ACVFWUyqrWz\~Yjqzz[aJ|XzI}HJ}K~bqAs[rWzry[ie_[z[W[~XbYpWUyqrWz\PDSbY|Xrjey[jf GjzeZRjGSKFP\[[|s\WzryUy__[z[W[~_j}[Sj_vDj~[}q }rY|fX ~[SF~Ha\jeu~fu\}ay[D{zryUyqyEiii[[yPHqAs[rWzry[Suu Rrqy[
JjiSDy[D{zryUyqyGQryX\Y}uiHy[D{zryUyqyGPHqyY`atmU}fvJzuqE}X~D~uuF}fTW~eu}HvYpWUyqrWz_jASKzz_jASKzCpXyUyqrYWyTEjazz\DR_fYpWUyqrWz_a[[zIzVH:D^U@BWD_Tx{sW{^vXk{{{YiK}R{I|J{I|waZ}y]W{pqTxUt@hpyxRk {ZGxx{sW{pz\S| {Y_ZUpxVtX^UoJEhk~I}U`kDXSVEP z]xQE{{pqTx{x@hpyxRg hYTZ~|t\~gSDhRD|tuhk}taI}oc |guBUJ|w}hk{CqZqTx{sYP^fxR]YV }Z}y]W{pqTxVpXVtWZ~Q{Fk^	[U{
Y~r_Tx{sW{]rERVcY}Zy|Y~r_Tx{sW{]rIxR]YfX	vcksHguT|RsIJ D|AH}pqK|B]J`y@rQsW{pqZUJJ{Y_ZUJJ{ZGxx{sW{pzT`p\{Y_ZSUEh`y@rQsW{pqZUQ{{YyZrV8E]VBKVG\VqqqUz]uZbqyzZvIvq}Iv[J~J~Xts_UzsrVq_vBiszqXizYDzqqqUzsy^Z~zZ\XZ_fiwuGt_bjGZZ\}GQy_q[GyzsrVqqzBiszq_uH}ZeYbf~YgaYvvqF}tvIu[ iZi\te}j]~vHr^iZjbqyApYrVqqq[Q]eqX_[W~Xts_UzsrVq\rZWwTXw[yDP]eZtKyApYrVqqq[Pw
H\qyzZbuKyApYrVqqq[Px~Xw[z}g awqvuJ}crHuvyHdrKtfuztvKwX}JzYDzqqqUzsyZz}[|YyZz}[q\VqqqUz^a[ue[|YyDZ ^zYDzqqqUzsyqX_[~Yzz^c9F_TKA
PW]
WR	 
UQZ QT	P]rH[QE]_C
TVQBKCDZ^V^]]UB]QE@ZDJL^CGICTFSBXVP\WBfJ@VV]^WVPVQRTQ 	
]PP
PgU
QZTW

S
VZRWpo]

RPWQSUTRPSW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@BP
VUPU WQRZ Sq[ZY\RXF\Y\B^\	W]SAHHFY]]]^VWAVSFCQFIG\@LK@WDPAZUSWUAeABU]_]TURUZPWR	VS[	SlVRT	QQPgU
YSWQP	VVS[	SUPV
QRTQ 	]

WVQSYZDFCCYTUE_UVP_PG]S]BZVPF	9DA^RS^W UP[VWP  \VR	]
pU^UT\]]^	URUZPWR	VS[	SlVRT	QQPgU
YSWQP	VVS[	SUPV
QRTQ 	]

WVQSYZDFCCYTUE_UVP_PG]S]BZVPF	9F_TKA
QS]	^UQQR \r][_[T^_]UR
U\PBJAL[_\^\_]CWPEAXLKF_CEABUGSCPWQVVBgHHW\\^VWQVSZUQWQRQmUSVSRS nWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	8E\VBKWZPW	VRS^	
SUPxQX[]Q[CQV ]\S@J@GXW\\\^VKWSGAYGHF\ADJA]DQC[TYVU@gICT\_\VTRTRQ]S
WQSYmW
SV[QQl]

RPWQSUTRP QW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@BSW
R[P	UWQ] Q	Rq__UU^UES V_[@IBGY\_\_\V@T[GB[GIETAFJ@VLQ@[URU]@dKCU_W\UUZTPQVS
	TRQ	RnW
PU	PYQmU SRV	PQ	T^RQ	R]QWQPUQW
 VVS[	S[DGAKSU
TD^U^Q^ZF]R_J[WZG	
;N^UA@

UPP

 ]P
V   P	sT\V]V_UVPWU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
Ql]P
SW
T	U	UZoV	QSUZP
VWPS
QT	R]
RRW	R	UWUQRQZGDCBQV^F_VW[\XG^Q]CQUXF
	9GTWCA	 ^W R 
TZT  ZrT]VVUWUB
U\PBJAL[_\^\_]CWPEAXLKF_CEABUGSCPWQVVBgHHW\\^VWQVSZUQWQRQmUZQVT	T	TRnojWU VP[RWUZSWVP	Q l V
TUUZQRVQTSQ]S
 W	UTRPSXFG@@S UWL]WURVZE_R^AX_ZD
:E\]ACVFyyqrYWXqyqzIzXO|s[rWz_zHyX\WzD]EdY^Tk
]^@]V^]kQzAGZ Fb|\\~k]Z@`B_B{@TkhDFxC_WyjESH\FiGRefFj]TeXQ_rBj [ |eS[|s{zry[iea[z[WUy_WDif\Fja^jbqAtc\WzrrERy z[WUyXb ~HqAtc\WzrrBjqzzrqJ~XqZierX}q|fiK|fvHifqFiee]~H~XrG~uu}XeYjfa[|s{zry[ie_[z[WUyXvIzXO|s[rWz_vXUazzrrZTjaFzXO|s[rWz\^TqzzrrSKzCw`WUyqy Viz^yX\Wz\DR_fYpyyqrYRvHTqzzrr\Ree^QfmGj vYpyyqrYPv~QqzzrqDU\WhPyjeUuTFzXO|s[rWz_jASKzzrrRz~YpyyqrYPByX\WzXq|s\9GUWCA	TO{{pqZUQ{{pyJxQE~qZqTxVpJ{Y_TxMWGgZ\]a__C_\\_  i[xCFYDksWcWC\R{aaudIRPp` Q{}}A ~^_}
|ES{fGhoISdT\U|Y{ZG}rQsW{^vXk{{{pzZPoVJVkyFh
kY~r xx{sYQt	JU{{{py|Y~r xx{sYSdaZ~QsY|gbX|ZYeG~|^]|` K|odY~du
cD|giD||sJ|wyhU`Z{ZG}rQsW{^vCk{{{pyK|Q{Cvb_Tx{xJk [Z~QsYkkfSA{Cvb_Tx{xEhkaZ~QsYV }Z}y{{pqZUp^Gh`yx{xEP_xQE~qZqTxUZFQ aZ~QsYk^\]RdI~^~^xQE~qZqTxVpXVtWZ~QsY~ T`
i|fbY}A{Cvb_Tx{x P{}Z~QsYVtHIxQE~qZqTxV|ES`yx{{Yvb@
;L@_XR^		PTQUPP 
R \V PpGCWFB]]_UZTPQVS
	TRQ	RnW	
VPU	QZVmU SRV	PQ	]QWQPUQW
 VVS[	SUUZQRXGEHARW VF]V
TS\[E^PV@YU[D
2D\W@C	SQPU
 	WR
V  		VpUD[YH[R_UTVZ_\TTPU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
QlEWYI]ll]

RPWQSUTRPSW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@B	UP   	WUWQ
  QUq^GSYKYYXVBY\TPWU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
QlB]]E^ll]

RPWQSV	Y U  P
VRQT	R]TPP
PW
SURYW
RV				UUZQRXGEHARW VF]V
TS\[E^PV@YU[D
2FB]YQ]

]STWQSVRVVUWS]
QVVsWMQ[JZZZ_H[^UWRUZTPQVS
	TRQ	RnKW_G_onWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	8E\VBK TYTS
WVR	P  	WxJYPF^VY V_[@IBGY\_\_\V@T[GB[GIETAFJ@VLQ@[URU]@dKCU_W\UUZTPQVS
	TRQ	RnKW_G_onWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	89