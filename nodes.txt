D]W@CWG]TyrrV{]tXjrz{ZwK~r|I}rIZ{Z|p\V{ssTy\uAhs{y[j{YExyrrV{sx\R}{Z]ZR\ehwtE|\a kFXR_~DPx]yXDz{ssTyryAhs{y[W[dj[f~d|XjfbE|wkjbY]hZ|fb kghYuv hwciHzBqYsTyrrXP]dy[\XVZ|p\V{ssTy_qYVwUZXzGk]JETHX~q]TyrrV{^pES_bX}Y{~u~X~q]TyrrV{^pIy[\Xf[vbbrIdgT}[rHID}bKcsDe\Fc{@sXrV{ssZTvKK{Z]ZTvKK{YExyrrV{sxUiq]{Z]ZR\
Dhc{@sXrV{ssZTXz{Z{Zs_8F_VCB	UE\WxppUy_u[kpxyXjH}YxK~KJ~`K~v~Y}r^UyqrWx^wBjqzxYhy[D{xppUyqy_S yX\Yh^gGjjiFStgGi fEktcGSKEkk`[|s\WxppUy__[xY^[} }[|tkZvrD|wZK}[ IsX|eyZ|xF~XeZkwtjvXh^x y[D{xppUyqyEkk`[[yRJxAs[rWxpp[Suu Ppxy[
IkksAUaY}r^UyqrWx]sDS\bY~Zx~v~Y}r^UyqrWx]sHyX\YeXwbarH|IpU}XrI|JE}aJ|`pEf\G|`xAs[rWxpp[TuKJxY^[TuKJxZFyyqrWxp{Ujq\xY^[R_
Ek`xAs[rWxpp[T[zxYx[s\;E\WCA	VF]W{pqVz\t[hpyz[wH|p}H|`H~ucY~r_VzrsW{^vAir{{YizXE{{pqVzrx_P ~z[]YV{z WvZ]VdHDii|J~^b jF[P]}DQx^{ZGzzrsW{pzAir{{Yb]}eg|}fkGYSE}ug|` ~[c~d~YjepYYr]jKUG}`yBpXsW{pqXQ\d {Y_XWY~r_VzrsW{]rYWvUY}ZyGi\d\PpXp]W{pqVz_pFQ]aX|X{ |w}Xp]W{pqVz_pJ{Y_XgZu``qI~ewWYqH~HG` K~bsG}g_F~b{CqZqVzrsYVtHKz[]YVtHKzXE{{pqVzrx Wkr]z[]YP^	Dib{CqZqVzrsYVZyz[{Yq] 9G_UA@
TE_UzspTx_vYisxxXuJ}sK}IKfu[q^TxqqUz]wCkqyzZhx[GyzspTxqz]QxX_[WgZkuvD]ch DYQ^|FSz\zYFxxqqUzs{CkqyzZZ| ijJkY}faKjJtGufZ~Y Zk_udZfuH}tI~vy}Yx@r[qUzspZS_fzZ^ZU}[q^TxqqUz^s[UuW[|YxER_fYWgPe	GIx@r[qUzspZRu	KWsxxXa~Ix@r[qUzspZRz}[|Y{|ebtzttK|KqK~txI}fqJd|Kxvq|ZpKx[GyzspTxqzQx|Z~[zQx|Z}s_UzspTx\bPwdZ~[zGQ_x[GyzspTxqz zZ^Z|[yyUa;D\W@C STVVP
 WRQPU  SVpIZSG^TAW]SCJAFY]]_\_WAVSDAXFIG\BEK@WDRCZUSWUCgHBU]__VURWSPWP	VQR	SlTSQVV	PTQSVrmVQSU	SP
TUPS
QV	RT
RPW	R
 U WUSPQZGDA@QVWF_VUR\XG^Q_AXUXF
	;E]WCA	QTVRT	
 VSQQ   
QrPXX]PZE_R^C\^
V_QBKCDX\_^]]U@TQE@ZDHE^CGIAVFSBXTRUWBfJ@T_]^WTPVQRVQ 	TPPRnU	PWPSSlT
RQV	RRTTPPRW
QUPPW
PV	 	UWSQRXEGAARU VF]TTS\[E\R_@YU[D
;FB]YQ_	T
WSP UTRWWP 
VqT\WW_V\_TPVQRVQ 	TPPRnU	PWPSSlT
RQV	RRTTPPRW
QUPPW
PV	 	UWSQRXEGAARU VF]TTS\[E\R_@YU[D
;D\W@CS PV	 U WR
P QWp\Z]YW]T_TP T]R@IBGY^]\_\VBVRGB[GIG]AFJ@TEQ@[UPWT@dKCU]^\UUSTPQTS
	VRQ	PlW
RU	RPQmU		SRTPQ	VWRQ	PTSWQRUQW
	VVQR	S[DECBSWTD^UWQ^ZF]P]C[WZG	9G^UA@
  TQRV


 TPPU  QVSsSYZ_SX@SW	V^RAHBD[\^]^\U@URFC[DKD]@FIBVEPAXWRTTAeK@W^^]TWSUPRVR	USQRoV	QTPPP oVQSU	SP
TUPSSV	RT
RPW	R
 U WUSPQZGDA@QVWF_VUR\XG^Q_AXUXF
	;E]WCA	RU	QPR	V VSV  SQrT]TT\WFX
U\PBHCE[_\^^]TCWPECZEKF_CGHBUGSAYWQVVBeJAW\\^TWQVQSUQWSPQmUSTSRS lWRPU
RSWUSPQV
RU	SST
S
V	TTPPRYFDB@R VVE\W US_[D_Q\AYV[E	8E\T@B TQ
S	VRT
R
qV_UVT^TTST	 W^QAIAGX]^]__VAUQFBXGHD^@EJAWFP@[TSTWAdHCT^]]UTPUSQWR
URRSoVQ	PUV

TVQnT

PRWQQUTRRSWPVPQUP T


VWRQ	P[EF@APT UD^TTP^YF\S^@ZWYG:D_UB@UU Q	WQ	
V Q sV_UU^UT@ T]R@IBGY^]\_\VBVRGB[GIG]AFJ@TEQ@[UPWT@dKCU]^\UUSTPQTS
	VRQ	PlWQ
SU	U	WUPmdhVV	TSPSVWQRUURSo  TVWVQS
PU	SW	RSV	R	U	 TUPS
QYGEBC QWTG\V VQ]XD^P\B[TXE
8F_VCB	UE{xpp[T[zxpxKy[D~rZpUy\qJxY^UyGVDf[]W`\_B^]\\hZx@FXEaw^]i_YCk@^CyBWhcFGyA]TzaGRI^D|bESddDi _Ud ZR\y@kYfXY}ryyqrYhdcYyX\Wx^UFjeWDk`\iazCub^UyqyGS {yX\WxY`}KzCub^Uyqy@kpxyqzHYsXjfyZ|pebI}gtJjezDhdg_}KYpE}v~ |Yg[iejY}ryyqrYhd]YyX\WxYtKy[D~rZpUy\}ZT`xyqyXUkcDy[D~rZpUy_\UpxyqyRJxAtc\Wxp{Ujq\xY^Uy_FS^d[|s{xpp[Qu
JUpxyqy^Sdg\RefEkt[|s{xpp[Suu PpxyqzFT]UjSzagTtVDy[D~rZpUy\aCRJxyqy S{|[|s{xpp[S @xY^Uy[z~r]:D^UB@WD zzrsYVZyzr{I{ZGpXsW{]rKz[]W{FUFeY_Vc	^]@\^]^jYyBD[ G`qVa\A]PybjweKQS{bPy~J	\\~~DRydDkdHRfV_Vw[zXE~qZqVz\t[hpyzrxYSdTKWi{EkiXp{{pqXPvIVpyzr{ |w}Xp{{pqXRfcY}ZqX}e`[|wXX~gD}w\\}bHdfXfw|aE}ekGwqK}u{k^b[zXE~qZqVz\t@hpyzr{HZyBw`]W{pzKjYY}ZqXjid PJyBw`]W{pzDiicY}ZqXWY~r zzrsYV{\Fib{{pzDQ\{ZGpXsW{^XGPcY}ZqXj\^^Q fH\|]{ZGpXsW{]rYWvUY}ZqXVch}d`Z~JyBw`]W{pzQyY}ZqXWvJJ{ZGpXsW{]~DRb{{pyXw`B	8GB^YP\
 S
VS VSR PWTRrD@\DC\_\WQVQSUQWSPQmUTS
TRQTlWRPU
RSV
RU	SST
S
V	TTPPRWVQS
PZDFCC PTWG_UVR]YG]S]BXTYF	9F]VBA
QPQV		USU	WrVGP[IZP]VW]X^]VWS	 W^QAIAGX]^]__VAUQFBXGHD^@EJAWFP@[TSTWAdHCT^]]UTPUSQWR
URRSoF\[H\noVQSU	SP
TUPS
QV	RT
RPW	R
 U WUSPQZGDA@QVWF_VUR\XG^Q_AXUXF
	;E]WCA	 VS	TV VS	  SWrUERXI[Z[]@X]VST	 W^QAIAGX]^]__VAUQFBXGHD^@EJAWFP@[TSTWAdHCT^]]UTPUSQWR
URRSoAV_D_noVQSU	SP
T

R	WQU	SSWP VVQR	SUPT
QRVQ 	 T
 WVQS
PZDFCC PTWG_UVR]YG]S]BXTYF	9DC\[S^VQUUSRWPU WWTPVPWTpTFSZKXXY\CY_TUQWQVQSUQWSPQm@U^F]mmU		SRTPQ	VWRQ	PTSWQRUQW
	VVQR	S[DECBSWTD^UWQ^ZF]P]C[WZG	9G^UA@
WRVR
	T TP
R TsHXQD\UR
U\PBHCE[_\^^]TCWPECZEKF_CGHBUGSAYWQVVBeJAW\\^TWQVQSUQWSPQm@U^F]mmU		SRTPQ	VWRQ	PTSWQRUQW
	VVQR	S[DECBSWTD^UWQ^ZF]P]C[WZG	9;