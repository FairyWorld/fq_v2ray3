D]W@CWG]TyrsS{]tXjr{{ZwK~r|I}r|c{@sXsS{ssZif^_{Z]Z~[c]~q]TyrsS{]ZESc]}Yx jfx_kg
Fjyd^S`FSHBQ]QZ|p]S{ssTy\^_{Z]Zi\hYhd~\g@}thZ~HZV[|ftXkdYG~uZ^htYi\wN}w yXE{ssTyrxAhhcZXxQI{@sXsS{ssZSvtSs{yXNVgV]ji|~I{@sXsS{ssZSvMVs{y[cI{@sXsS{ssZSy]}Yx|d`r{twK}HsMt{I|esL~d{yuwL}ZsKyXE{ssTyrxPxZXxPxZ|p]S{ssTy_`QwgZXxAP_yXE{ssTyrx{Z]Z}X{Ta:G_QACTE[UyqrWx_rYjqzxXqJ~q K a~a}As[rWxqu[ie_[xX[[~XbY}s[UyqrWx_\DSbY~[~S\e PunRu\RyGjzeZP fGSKFR_W[|s\WxquUy__[xX[[}XyY| r_iefDhfXZ}[ hHa |ey]hfuF~fb_n^}fWX|H_y[D{xquUyqyEkje[[yRK}As[rWxqu[Suu Pq}y[
ZkeTjy}K}As[rWxqu[Su
IUq}yXb |K}As[rWxqu[Sz~Y~[~}davxvqJ}arI|v}H|frH}f}yvvH~XuJy[D{xquUyqy Szy[[y Szy[|s\WxquUy\aRua[[yES ^y[D{xquUyqyxX[[}[z{Wc	:D^UBAWD_V{wsW{^vZhw{{YuI|w |J}gH}gyX~u]W{pqV{Yt@hpy{^k {ZGz{wsW{pz^P| {Y_XPYd htvG~Y`kDZPZEP z_{]E{{pqV{wx@hpy{YhX|ycg~gi|pUD|wi|gY}w~\~cwI|dvY||]y}w{CqZqV{wsYP^f{^]YV }X~u]W{pqV{ZpXVtWX}]{FhtvPs^^S{aG{]E{{pqV{wxGP z{^]Y|waK{]E{{pqV{wxGQJy{_``veV`w{wyF^DwuE^cWgupwY~r_V{wsW{]bBQM{{]bBQM{CqZqV{wsYV{\Fhg{{^GPYgY~r_V{wsW{]iX}]{I{T@8B_UA@
QE_UzspU}_vYisx}XiJZxKzK ~YzayApYpU}qq[jg]Y}X_[}Z`[xs_UzspU}_XDP`[{[z[ig^P_	AigXnaYiwHx_^WsxAw[qUzsp[Uea[|Y{^yfr_~Jp{q[~ZYZxfa}xFmf}HiYy_z_jZx {feKjJx[xs_UzspU}_^Wsx}\THzYFy}qqUzs{Emjb]zZ^[x ~DQg BPzb^ic	[xs_UzspU}\rDP^`[{[y}t|[xs_UzspU}\rHzZ^[`Y	wacpJyHqU~ZpKyK E~cKzqqJ~d^EyayApYpU}qq[WwIH}X_[WwIH}[GyzspU}qzVhs^}X_[Q]GnayApYpU}qq[WYx}Xy[p^>D\W@C STVWU
WRQPT SVpI[VG^TA W]SCKDFY]]_]ZWAVSD@]FIG\B@K@WDRBZUSWUCfMBU]__WURWVPWP 	VPW	SlT
SQVW	PQQSWwmV
QSU	VP
TTPS
QW	RQ
RPW	RU WUSQQZGDAAQV RF_VTW\XG^Q_@]UXF
	;DXWCA	PTVRT
 WVQQ   QrPXX\UZE_R^CY^
WZQBKCDX]Z^]]UAQQE@ZDH@^CGIAW	FSBXTSPWBfJ@TZ]^WTPVQRWQ 	QPPSkU	UWQSSlT

RQWRRQTPPSW
PUPUW
P V	
	UWVQRXEFDART VF]TTS\[E\SZ@YU[D>FB]YQ_TRSP  UTR WVU 
VqUYWW_V\^TPVQRWQ 	QPPSkU	UWQSSlT

RQWRRQTPPSW
PUPUW
P V	
	UWVQRXEFDART VF]TTS\[E\SZ@YU[D>D\W@CS PV	UWR
P QWp\[XYW]T_UU T\W@IBGY^\	\_\VBWWGB[GIFXAFJ@T@Q@[UPVQ@dKCU\[\UUVTPQTS
	W RQ	PmW
SU	RUQmU	SRT
PQ	WRRQ	PQSWQSUQW
	VVPW	S[DEBGSWTD^U RQ^ZF]P\F[WZG	8B^UA@
 TQRW


 QPPU  QVSsSY[ZSX@SW V^R@MBD[\^\[\U@URGF[DKD]AFIBVEQDXWRTT@`K@W^^\QWSTPRVS	UVQRoW	QQPPQoV
QSU	VP
TTPSSW	RQ
RPW	RU WUSQQZGDAAQV RF_VTW\XG^Q_@]UXF
	;DXWCA	SP	QPRV WVV  VQrT]TUYWFX
U\PBHB@[_\^^\QCWPEC[@KF_CFMBUGSA\WQVVBeKDW\\^TWQVPVUQWSQQmUSTSRS mWSUU
RVWUSQQV RUSSTS
W	QTPPS\FDB@S VVEYW US_ZA_Q\AYVZ@	8E\TAG TP
S	
VR
Q
RtV_UVT^UQST	W^QAIAF]]^]__WAUQFBXFMD^@EKDWFP@ZQSTWAdHBQ^]]UQPUSPWRURRSoVP 	PUV

TVQnQ

PSWQPUTRRSWPV
UQUU T

WRRQ	PZ@F@APT UD_QTP^YGYS^@ZWYF:D_UBAUUQ	WQ	V Q rS_UU^UUE T\W@IBGY^\	\_\VBWWGB[GIFXAFJ@T@Q@[UPVQ@dKCU\[\UUVTPQTS
	W RQ	PmWQVU	UWTPmdhWV	QSPSWWQSPURVo  TVWVQSUU	VW	SSV	S	U TTPS
QYF@BC Q RTG\W VQ]XD_U\B[TXE8F_VCBUE{xqu[T[zxq}Ky[D~r[uUy\qJxX[UyGVDc[]W`\^B^]\\hZx@G]Eaw^]~l_YCk@^B|BWhcFGxD]TzaGRH[D|bESeaDi _UeZR\y@k \fXY}syyqrYhefYyX\Wx_PFjeWDka\iazCuc[UyqyGS~yX\WxXe}KzCuc[Uyqy@kq}yqzHXvXjfyZ|qebI}fqJjezDheb_}KXuE}v~ |Xb[iejY}syyqrYheXYyX\WxXqKy[D~r[uUy\}ZTa}yqyXUjfDy[D~r[uUy_\Uq}yqyRK}Atc\Wxq~Ujq\xX[Uy_FS_a[|s{xqu[Qu
JUq}yqy^Seb\RefEk q[|s{xqu[Suu Pq}yqzFT\PjSzagTuSDy[D~r[uUy\aCRK}yqy Szy[|s{xqu[S @xX[Uy[z~r\:D^UBAWD z{wsYVZy{w{I{ZGq]sW{]rK{^]W{FUGeY_Vc	_X@\^]_jYyCA[ G`qVa\A]UybjweKQS{bQ|~J	~Y\~~DS|dDkdHScV_Vw[{]E~qZqV{Yt[hpy{wxYSdTKVl{EkiX~u{{pqXQsIVpy{w{ |w}X~u{{pqXSccY}ZqX|``[|wXXgD}w\\|gHdfX~cw|aE|`kGwqK|p{k^b[{]E~qZqV{Yt@hpy{w{HZyBve]W{pzKkYY}ZqXkld PJyBve]W{pzDhlcY}ZqXVY~r z{wsYV{\Fhg{{pzDP\{ZGq]sW{^XGQcY}ZqXkY^^Q fH~Y|]{ZGq]sW{]rYVsUY}ZqX~Vch|a`Z~JyBve]W{pzP|Y}ZqXVsJJ{ZGq]sW{]~DSg{{pyXveB	8GB^XU\
S
VV VSR
PWT WrD@\DC]_\WQVPVUQWSQQmUTS
TRQTmWSUU
RVV RUSSTS
W	QTPPSWVQSUZDFCCUTWF_UVR\\G]S]BXU\F	9F]WGA
QPPV	
USU	VrVGP[I[U]VW]X^\SWS	W^QAIAF]]^]__WAUQFBXFMD^@EKDWFP@ZQSTWAdHBQ^]]UQPUSPWRURRSoF\[H]koV
QSU	VP
TTPS
QW	RQ
RPW	RU WUSQQZGDAAQV RF_VTW\XG^Q_@]UXF
	;DXWCA	 VSTV WV	  VWrUERYL[Z[]@X\SST	W^QAIAF]]^]__WAUQFBXFMD^@EKDWFP@ZQSTWAdHBQ^]]UQPUSPWRURRSoAV_D^koV
QSU	VP
Q

R	 WPU	SVWP VVPW	SUPT
QRWQ 	 Q
WVQSUZDFCCUTWF_UVR\\G]S]BXU\F	9DC]^S^
VQTPSRVPU VRTPVPVTpTFSZJ]XY\CY_UUQWQVPVUQWSQQm@U^GXmmU	SRT
PQ	WRRQ	PQSWQSUQW
	VVPW	S[DEBGSWTD^U RQ^ZF]P\F[WZG	8B^UA@
WRVS
	T QP
R  TsHXPA\UR
U\PBHB@[_\^^\QCWPEC[@KF_CFMBUGSA\WQVVBeKDW\\^TWQVPVUQWSQQm@U^GXmmU	SRT
PQ	WRRQ	PQSWQSUQW
	VVPW	S[DEBGSWTD^U RQ^ZF]P\F[WZG	8>