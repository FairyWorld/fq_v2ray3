D]W@CWG]TyqqU{]tXjqy{ZwK~q|I ~KKJQZ|s_U{ssTy_vBhs{yXi{YExyqqU{sx\R~{Z]ZT f[hwtE|_bkFXR\}GPx]y[Gy{ssTyqzBhs{yXbZhZgjXf^~d{I~v[F|wkD}K[kI|fb^k`[}H[|tQ~KyAqYsTyqq[P]dyX_[VZ|s_U{ssTy\rZVwUZ[yDWgdITufKhwt|KyAqYsTyqq[QwJTqy{Zc}KyAqYsTyqq[QxZ[z}f `uyvuJIsJ}vyH~dsJ|fqK{tsXqJ{YExyqqU{sxRz}[}YxRz}[~q]TyqqU{^`Sue[}YxFR ^{YExyqqU{sxyX_[Y{xVc8F_VCA
UE\W{ssUy_u[hs{yXjH~Z{K~K I~azCqYsUyqrYkg^YyX\Y|Zc[|s\W{ssUy_[FQc[[yYhg^T_
ChgXja[hwH|_\Vs{As[rW{ss[QebY}Y{~fzG}dYjakJ|fbHkZ{FefI|sK~vaZ|J{Ejvy[h]w[|s\W{ssUy_\Vs{y\WJ{YEyyqrW{sxEija_{Z][| }QwxDijy[~I{As[rW{ss[Su
IVs{yXb I{As[rW{ss[Sz~Y}Yx}dav{twH}qrIt{H|frI~dsKyvr}ZsJy[D{{ssUyqy Px[[y Px[|s\W{ssUy\aQwg[[yEP^y[D{{ssUyqy{Z][}[z{Ta:D^UACWD_UyqsW{^vYjq{{YiJ|X{I|J~q|ZyAs[sW{pq[ie^[{Y_[~XcY~r_UyqsW{^XDScY}ZzS\d StjRu\Q }GjzdZSbGSKFQ^S[|s]W{pqUy_^[{Y_[iegG|tuiHQD^e ~q w\Y|fUI}taF}vwIqi_{kIay[E{{pqUyqxEhka[[xQJyAs[sW{pq[Sut Spyy[GS{\HQe|XPp[|s]W{pqUy\pFQ]a[[{ |w}[|s]W{pqUy\pJ{Y_[dYu``qJ}fwWYqK}KGZ E}[sG|g_E}a{CqZqUyqsYVtHHyX]YVtHHy[E{{pqUyqx Wkr^yX]YP^	Gja{CqZqUyqsYVZyyX{Yq] :D_UA@
WE_UzssW{_vYis{{XiJZ{I|K~sJ[yApYsW{qq[jg^[{X_[}ZcY~s_UzssW{_XDPcY}[zGih`[keGixdZS bGPIFQ_S[q]W{qqUz]^[{X_[igt\k_z^}JgD_}~s hXaKdZ]hfiF}J{XW }JZ]}fX^zYE{{qqUzsxEhja[|YxQKyApYsW{qq[Pwt SqyzYGPufZPtEVq[q]W{qqUz^pFQ\a[|Y{ |v}[q]W{qqUz^pJ{X_[g[u`aqJ~dgWXqK~IG[ E~YsG|f_E~c{Cq[qUzssYVuHHzZ]YVuHHzYE{{qqUzsx Wjr^zZ]YP_	Gic{Cq[qUzssYV[yzZ{Yq\ 9F^UAA
QVW
WR


UPP QT 	QWrH[QE\UC
U\QBKCD[_\^]]UCWQE@ZDKF^CGIBUFSBXWQVWBfJ@W\]^WWPVQRUQ 	WPPQmU
QPTW
R
V	PRWpoW

SQWQRUTRQSWPVSQUS W	

UTRQ	SXFF@AS T UD]WTP^ZE_S^@ZWZD:D_UACP
VTPU
WQS P  SpQZY\RXG]S\B^\W]S@IBFY]]\_\WAVSGB[FIG\AFK@WDQ@ZUSWU@dKBU]_\UURTPPWS	VRQ	SlWRU	QQQmU
SSWPP	VVRQ	SUPW
QRUQ 	W
WVQS	SZDFCCSTTD_UVQ^ZG]S]B[WZF	9D@_XS^V
UQQWVP VVRW
pU^UU]W]^	URTPPWS	VRQ	SlWRU	QQQmU
SSWPP	VVRQ	SUPW
QRUQ 	W
WVQS	SZDFCCSTTD_UVQ^ZG]S]B[WZF	9F^UAA
QRW	
	TUPQ SVr][_[U_U]UR
U\PBK@F[_\^]^WCWPE@YFKF_CDKBUGSBZWQVVBfIBW\\^WWQVRPUQ WPSQmUSWSRSoWQSU
RPWUPSQV	RU
SSW	S
U	WTPPQZFDB@Q VVF_W US\XG_Q\AYUXF	8E\WCAVPPW
VRRT	 
STQrQX[]QZBQVW\S@J@FY]\\\^WAWSGAYFIF\ADK@WDQCZUSVU@gIBU\_\VURTRPWS	WQS	SmWSV	QQQmW

SQWQRUTRQ
QWPVSQUS W	

UTRQ	SXFF@AS T UD]WTP^ZE_S^@ZWZD:D_UACSWSQP	TWQ
 W  Q	SpU_UU^UDY W^Q@IBGY]^\_\VAUQGB[GID^AFJ@WFQ@[USTW@dKCU^]\UUPTPQWS
	URQ	SoW
QU	QSQmU

SRWPQ	UTRQ	SWPWQQUQ W

VVRQ	S[DF@AST TD^UTQ^ZF]S^@[WZG	:D^UA@

UPQ 

WP
V P	sT]WWV_UVQVU\S@K@FZ_\\]^WCWSG@YFJF\ADKCUDQBZVQVU@fIBV\_\WVRTRPUS 
WPS
QmWPRW
TU	TPoVQSU
PP
WVPS
QU	RW
RSW	R	UWUPSQZGDBCQVTF_V VQ\XG^Q\B[UXF
	8F^WCA	TW S

UPT  	PrT]WW_WUB
U\PBK@F[_\^]^WCWPE@YFKF_CDKBUGSBZWQVVBfIBW\\^WWQVRPUQ WPSQmUPQWT	U	TRoejW
T VQQRWU
PSWWP	Q m V TUTPQRWQUSQWSW		UTRQSXFG@AS U VF]WTS\ZE_R^@YUZD
:D]WACWGyyqrYVY{yqzI{YE|s[rW{^pHyX\W{EWEdY_Ua
]^@\\^]j[zAGZ Gcv\\~k][AjB_B{@UjbDFxC_Vx`ESH\F~cGRefFk]TeXP^xBj [ }dY[|s{{ss[iea[{Z]Uy_WDhgVFja^kc{Atc\W{sxERy {Z]UyXb I{Atc\W{sxBjqz{s{J~XqZhdxX}q}gcK|fvHhg{Fiee]I~XrGt}XeYkgk[|s{{ss[ie_[{Z]UyXvI{YE|s[rW{^|XUaz{sxZTjaF{YE|s[rW{]^Tqz{sxSKzCva]Uyqy Whp^yX\W{]DR_fY~qyyqrYSwHTqz{sx\Ree^PggGj vY~qyyqrYQwtQqz{s{DU\WhQx`eUuTF{YE|s[rW{^`ASKz{sxRz~Y~qyyqrYQByX\W{Y{|s\8F_WCA	UE{{pq[T[{{pyKy[E~qZqUy\pJ{Y_UyGWGg[]Wa__B^\\_ h[xCFYEasWc]C\R{`kudISQz` Q{}|K ~^^| |ES{fFieISdT]TvY{ZG|s[sW{^vYjq{{pz[QeVJVkyGi kY~r yyqsYQt	KTq{{py~vY~r yyqsYSda[[sY|gbY~vZYeFv^]|` J}edY~du~ cD|giE}vsJ|wy i_`Z{ZG|s[sW{^vBjq{{pyJ}[{Cvb_UyqxJk [[[sYkkfRK{Cvb_UyqxEhka[[sYV }[|s{{pq[Tz^Gh`yyqxEP^y[E~qZqUy_ZFQ a[[sYk^\\SdI~^~_y[E~qZqUy\pXVtW[[sY~ Ta i|fbX|K{Cvb_Uyqx P{}[[sYVtHHy[E~qZqUy\|ES`yyq{Yvb@:F@_XR^	QTQTQP 
RVV PpFB]FB]]^
UPTPQWS
	URQ	SoW	
VQU	PPVmU

SRWPQ	WPWQQUQ W

VVRQ	SUTPQRXFDBAR V VF]W TS\[E_Q\@YU[D	8D\W@CSQPT
WR
W 	VpTEQYH[R_TU\Z_\TUQU\S@K@FZ_\\]^WCWSG@YFJF\ADKCUDQBZVQVU@fIBV\_\WVRTRPUS 
WPS
QmD]YI]lmW

SQWQRUTRQSWPVSQUS W	

UTRQ	SXFF@AS T UD]WTP^ZE_S^@ZWZD:D_UAC	TQ
  	VTWQ  QUpTGSYKYXY\BY\TQVU\S@K@FZ_\\]^WCWSG@YFJF\ADKCUDQBZVQVU@fIBV\_\WVRTRPUS 
WPS
QmCW]E^lmW

SQWQRVS U
 P
WRQU	RWTPPQW
RUSSW
SV		UTPQRXFDBAR V VF]W TS\[E_Q\@YU[D	8FB]YQ\


WSTWQSVRWVUVRW
QVVrVGQ[JZZ[^B[^UWS
UPTPQWS
	URQ	SoAW_G_o oWQSU
RPWUPSQV	RU
SSW	S
U	WTPPQZFDB@Q VVF_W US\XG_Q\AYUXF	8E\WCAUSTSVVRP   	VrJYPF^WS W^Q@IBGY]^\_\VAUQGB[GID^AFJ@WFQ@[USTW@dKCU^]\UUPTPQWS
	URQ	SoAW_G_ooWQSU
RPWUPSQV	RU
SSW	S
U	WTPPQZFDB@Q VVF_W US\XG_Q\AYUXF	89