D]W@CWG]TyqpV{]tXjqx{ZkK|XxH|I aI}tZ|s^V{ssTy_wAhs{yXh{YExyqpV{sx\R{Z]Zi_gDhhhERugDkgFjucDQIFjj`X~q]TyqpV{]^XyX^X}tsvcZ}wcG~XV|si t ~dYiXVEkZQjvYZhdcI~_w\{YExyqpV{sxFjj`X}Yx SKxBqYsTyqpXQwtQqx{YDRugYQdJja	X~q]TyqpV{^pES\`X}Y{~v|X~q]TyqpV{^pIyX^Xf[vbapIJsT}XpHID}[IcsD}f^Kc{@s[pV{ssZTuIK{Z]ZTuIK{YExyqpV{sxUjs]{Z]ZR_Dhc{@s[pV{ssZT[x{Z{Zs\8F_VCAUE\W{rpUy_u[hrxyXvH|r~KbK}XbY~p^UyqrW{\wBjqz{[hy[D{{rpUyqy_PyX\YVy{Tu[]VfIGjj}J~\ci G[P_|GRy^{XFyyqrW{r{Bjqz{[hJ}_uYu| |ev KpF~vi]}r~ejH~epifvJu`EiHr |HxAs[rW{rp[R_e {[^[T~Y~p^UyqrW{_sZTuTY}XxDS }\P_`Dy[D{{rpUyqyGP{yX\Y|u`Hy[D{{rpUyqyGQHxyY``tdU}fvH{uxE}X~DuxF}fvWut}HvY~p^UyqrW{_cASKz{_cASKzCqXpUyqrYVy]Ejaz{\DR_fY~p^UyqrW{_h[[zI{VA:D^UABWD_UxrsW{^vYkr{{YuJr |J|bJ|ZyArXsW{pq[hf^[{Y_[[cY~r_UxrsW{^XDRcY}ZzGki`[kdGkydZSbGRHFQ^S[}p]W{pqUx\^[{Y_[KpYkIf^|KsD|ge|X |IuH}eZYkyF|[^[grX~eY kYb^xXE{{pqUxrxEhka[~XxQJyArXsW{pq[Rvt SpyxXXh z^kb
Y~r_UxrsW{]rDR_cY}ZyuY~r_UxrsW{]rHx[]YfX	wcbsHgeU|[sIJ E|XH`qE|e]J`yArXsW{pq[UvJJ{Y_[UvJJ{ZGyxrsW{pzTip\{Y_[S\Eh`yArXsW{pq[UX{{Yy[r_8E]WBBVG]VxqqUz]tZkqyzZwIq}I~aJ|tkX}s_UzssVx_vBis{xXizYEzxqqUzsx^S~zZ]XU f[iwtG}_bjFZS\}GQx_x[GyzssVxqzBis{xXa}]xZkvag{I|XeF}tQ kq[~]w}ea~J|\hHb^jZQkqyApYsVxqq[Q]dxX_[WX}s_UzssVx\rZWwUX~[yDRgKUuvGWs
X}s_UzssVx\rDP^cX~[y}tX}s_UzssVx\rHzZ]XeY	wacsI|f}U~ZsH|K E~YI|aqE~d]K|ayApYsVxqq[WwJKxX_[WwJKx[GyzssVxqzVhp]xX_[Q]DkayApYsVxqq[WY{xXy[p^;D\W@C STV TP
  WRQSW  SVpJXSG^TAW]S@HAFY]]\^_WAVSGCXFIG\AEK@WDQAZUSWU@eHBU]_\TURTSPWS	VSR	SlW	SQVT	PTQPTrmV	QSU
SP
WWPS
QT	RT
RSW	R UWUPRQZGDBBQVWF_V WR\XG^Q\CXUXF
	8G]WCA	STVRW	
TSQQ  QrPX[_PZE_R^@\^
T_QBKCD[^_^]]UBTQE@ZDKE^CGIBTFSBXWPUWBfJ@W_]^WWPVQRTQ 	TPPPnU	PWRSSlW	
RQT	RRTTPPPW
SUSPW
SV		 	UTSQRXFEAAR W VF]WTS\[E_P_@YU[D;FB]YQ\T WSPUTRWUP 
VrV\WW_V_]WPVQRTQ 	TPPPnU	PWRSSlW	
RQT	RRTTPPPW
SUSPW
SV		 	UTSQRXFEAAR W VF]WTS\[E_P_@YU[D;D\W@CS PV	U  WR
S QWp_X]YW]T_VP W_R@IBGY]_\_\VATRGB[GIE]AFJ@WEQ@[USUT@dKCU_^\UUSTPQWS
	TRQ	SnW
PU	QPQmU
	SRW	PQ	TWRQ	STPWQPUQ W

 VVSR	S[DFABSTTD^UWQ^ZF]S_C[WZG	;G^UA@
  TQR T


 TPPU   QVSsSZX_SX@STV^QCHBD[\^_^\U@UQDC[DKD^BFIBVFRAXWRTWCeK@W^]_TWPWPRVP	USQRoT	QTPSR oV	QSU
SP
WWPSST	RT
RSW	R UWUPRQZGDBBQVWF_V WR\XG^Q\CXUXF
	8G]WCA	PU	QPR	VTSV   SQrT]WV\WFX
U\PBKAE[_\^]_TCWPE@XEKF_CEHBUGSBYWQVVBfHAW\\^WWQVSSUQ WPRQmUSWSRSnWPPU
RSWUPRQVRU	SSWS
T	TTPPPYFDB@P VVF\W US\YD_Q\AYUYE	8E\WBB WS
S
	VR	T
RqV_UVT]VTST	W^QAIBEX]^]_\TAUQFB[EHD^@FHAWFP@YTSTWAdKAT^]]UTPUPSWRURQSoVS	PUV

WVQmT

SPWQSUTRQSWPV	PQUP W

TWRQ	SYEF@AST UD\TTP^ZD\S^@ZWZE:D_UABUUQ
WQ
V Q qV_UU^UV@ W_R@IBGY]_\_\VATRGB[GIE]AFJ@WEQ@[USUT@dKCU_^\UUSTPQWS
	TRQ	SnWQSU	V	WWPmdhTV	TSPPTWQPUURSo TV WVQSPU	SW
PSV	P	U	 WWPS
QZEEBC QWTG_T VQ]XG\P\B[TXF8F_VCAUE{{rp[T[z{rxKy[D~qXpUy\qJ{[^UyGVGf[]W`_]B^]\_hZxCDXEaw^^}i_YCk@]AyBWhcFD{A]TzaGQK^D|bEPfdDi _Vf ZR\y@hYfXY~pyyqrYkfcYyX\W{\UFjeWDhb\iazCv`^UyqyGP{yX\W{[`}KzCv`^Uyqy@hrxyqzH|[sXjfyZrebI~etJjezDkfg_}K|[pE}v~ [g[iejY~pyyqrYkf]YyX\W{[tKy[D~qXpUy\}ZWbxyqyXVicDy[D~qXpUy_\VrxyqyQHxAtc\W{r{Ujq\{[^Uy_FP\d[|s{{rp[Qu
JVrxyqy^Pfg\RefEht[|s{{rp[Suu SrxyqzFW_UjSzagWvVDy[D~qXpUy\aCQHxyqy Py|[|s{{rp[S @{[^Uy[z~q_:D^UABWD yxrsYVZyxr{I{ZG|rXsW{]rHx[]W{FUDeY_Vc
\]@\^^\jYz@D[ G`qUa\A^PybjwfKQS{bRy~J	}\\~~GPydDkdKPfV_Vw[xXE~qZqUx\t[hpyxrxYSdTHUi{Eki[}p{{pq[RvIVpyxr{ |w}[}p{{pq[PfcY}Zq[e`[|wX[|gD}w\_bHdf[}fw|aFekGwqHu{k^bXxXE~qZqUx\t@hpyxr{HZyAu`]W{pzHhYY}Zq[hid PJyAu`]W{pzGkicY}Zq[UY~r yxrsYV{\Ekb{{pzGS\{ZG|rXsW{^XDRcY}Zq[h\^^Q fK}\|]{ZG|rXsW{]rZUvUY}Zq[}Vckd`Z~JyAu`]W{pzSyY}Zq[UvJJ{ZG|rXsW{]~GPb{{py[u`B	8GB][P\
 S
 VS VSR	 PWTRrD@\D@^_\WQVSSUQ WPRQmUTS
WRQTnWPPU
RSVRU	SSWS
T	TTPPPWVQSPZDFCCPTTE_UVQ_YG]S]B[VYF	9F^TBA
QSSV
		UPU	UrVGP[JXP]VW]X]_VWS	W^QAIBEX]^]_\TAUQFB[EHD^@FHAWFP@YTSTWAdKAT^]]UTPUPSWRURQSoF\[K^noV	QSU
SP
WWPS
QT	RT
RSW	R UWUPRQZGDBBQVWF_V WR\XG^Q\CXUXF
	8G]WCA	VS	TVTS	   SWrUEQZI[Z[]@[_VST	W^QAIBEX]^]_\TAUQFB[EHD^@FHAWFP@YTSTWAdKAT^]]UTPUPSWRURQSoAV_G]noV	QSU
SP
T

R
WSU	PSWP VVSR	SUPW
QRTQ 	T
WVQSPZDFCCPTTE_UVQ_YG]S]B[VYF	9D@^[S^	VQWUSQUPU UWTPVSUTpTFSYIXXY\CY\VUQWQVSSUQ WPRQm@U]D]mmU
	SRW	PQ	TWRQ	STPWQPUQ W

 VVSR	S[DFABSTTD^UWQ^ZF]S_C[WZG	;G^UA@
WRVP
	T TP
R TsH[SD\UR
U\PBKAE[_\^]_TCWPE@XEKF_CEHBUGSBYWQVVBfHAW\\^WWQVSSUQ WPRQm@U]D]mmU
	SRW	PQ	TWRQ	STPWQPUQ W

 VVSR	S[DFABSTTD^UWQ^ZF]S_C[WZG	;;