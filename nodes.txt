D]W@C	WG]Typq^{]tXjpy{ZwK~p	|I~pA|JYZ|r_^{ssTy^vIhs{yYi	{YExypq^{sx\R ~	{Z]ZR^f	hwtE|^bkFXR]}LPx]yZGr{ssTypzIhs{y^~T}dV_ida~dgi^yM|wIiJ |gxY|giNgkJ~eCJkJ}JyJqYsTypqPP]dyY_PVZ|r_^{ssTy]rQVwUZZyOQd[S	L~I{@sZq^{ssZSt	@Vs{yYa	I{@sZq^{ssZS{}P}Yx|db{twK~`q@t{I|gqC~dsywy@}ZKyZGr{ssTypz	PxZZz	PxZ|r_^{ssTy]bQwgZZzLP_yZGr{ssTypz{Z]Z}ZyrTa:E]\ACVGVUyqrWz]YjqzzZ`J|XzI}IKqI}t^[|s\WzsxUy_u@ispyXj zYNyyqrWzss]R} zZV[T eYiwD|_ajMYR\~EQs\y[D{zsxUyqy@ispyXq\}tZjefd` ~efD}wl}a}t`J|eeXiwh jfj~J`KazCpYxUyqrYQ]oyX\YWt[|s\WzsxUy\qXWw^[[zFjhsXQqYqVUyqrWz^{DS\bY|Yp~v~YqVUyqrWz^{HyX\Yg[ wbarH~dtU}XrI~I	E}KG|cxK}H\G~cpAs[rWzsx[TuKJzZV[TuKJzYNyyqrWzssUjq\zZV[R_
EicpAs[rWzsx[T[zzZp[s\9FTWCA	UN]W{pqTyTt[hpyySwH|p~@|ZK}mQY~r_TyzsW{^vCjz{{YiyPE{{pqTyzx_P ~yS]YV{zT~Z]VdHFja|J~^biF[P]}FR
x^{ZGxyzsW{pzCjz{{^e~k I~X|m`[}wyG~~`\k`[}~dinkJ|gSmcpy@sPsW{pqZRTd {Y_ZT
Y~r_TyzsW{]r[T~UY}ZyER
d Pt\Fjj
Y~r_TyzsW{]rESWcY}Zy~}Y~r_TyzsW{]rIyS]YfX	vbjsHguT}SsIJ D}@G}`qJ}C]G`y@sPsW{pqZT~JJ{Y_ZT~JJ{ZGxyzsW{pzUap\{Y_ZRTEh`y@sPsW{pqZTP{{YyZsW8E]VCJVG\WpqqUz]u[cqyzZjHuXyK}IIvaH}IzCz[qUzsrY`e\YzZ\YwXa[q\WpqqUz][FZa[|YyYce^W]
CceXic[cuH]\]qyApYrWpqq[RgbYv[yigbGvvvY|c\tv}Hda[w_yF|gft[ }t~ve} ~Zbceu[q\WpqqUz]\]qyz^WJp[GyzsrWpqzEjha_pX_[eXZ_HIzCz[qUzsrYZu	KWszpXa~IzCz[qUzsrYZz}[|YymbtztvJtqqK~tzJufqHdrpvyH|ZrHp[GyzsrWpqzQx~Yv[zQx~Yus_UzsrWp\bPwfYv[zGQ\p[GyzsrWpqz zZ\Yt[yyUa3D\W@C	 STVUX
WRQRV  SVpKY[G^TA	W]SAIIFY]]]_WWAVSFBPFIG\@MK@WDP@ZUSWUAd@BU]_]UURU[PWR	VRZ	SlVSQVU 	P\QQUzmVQSU[P
VVPS
QU	R\
RRW	R	U WUQSQZGDCCQV_F_VVZ\XG^Q]BPUXF
	9FUWCA	R TVRV
U[QQ  	QrPXZ^XZE_R^AT^
UWQBKCDZ_W^]]UC\QE@ZDJM^CGICUFSBXVQ]WBfJ@VW]^WVPVQRUQ 	
\PP
QfU	XW
SSSlV
RQURR
\TPP
QW
RURXW
RV		UU[QRXGDIARV VF]VTS\[E^QW@YU[D
	3FB]YQ]
T	_SPUTR W TX 
VsWTWW_V^\VPVQRUQ 	
\PP
QfU	XW
SSSlV
RQURR
\TPP
QW
RURXW
RV		UU[QRXGDIARV VF]VTS\[E^QW@YU[D
	3D\W@C	S PV	
	UWR
R  QWp^YUYW]T_WX V^Z@IBGY\^\_\V@UZGB[GIDUAFJ@VMQ@[URT\@dKCU^V\UU[TPQVS
	URQ	RoW
QU	PXQmUSRVPQ	U_RQ	R\QWQQUQ W
VVRZ	S[DG@JSUTD^U_Q^ZF]R^K[WZG	
:O^UA@
 TQRU


\PPU 
  QVSsS[YWSX@SU
V^PB@BD[\^^V\U@UPEK[DKD_CFIBVGSIXWRTVBmK@W^\^\WQVPRVQ	U[QRoU	Q\PRSoVQSU[P
VVPSSU	R\
RRW	R	U WUQSQZGDCCQV_F_VVZ\XG^Q]BPUXF
	9FUWCA	Q]	QPRVU[V  [QrT]VWTWFX

U\PBJ@M[_\^\^\CWPEAYMKF_CD@BUGSCQWQVVBgIIW\\^VWQVR[UQ WQSQmU SVSRSoWQXU
R[WUQSQV	RUSSV	S
U 	 \TPP
QQFDB@ Q VVGTW US]XL_Q\AYTXM	8E\VCJ VR
SVR\ 	
R
	yV_UVT\W\ST	W^QAICDP]^]_]UAUQFBZD@D^@GIIWFP@X\STWAdJ@\^]]U\PUQRWR	 URP SoVR	PU V

VVQl\

RQWQR UTRP SW
PVXQU
X V	

U_RQ	RXMF@ART UD]\TP^[ETS^@ZW[D :D_U@CUU	QWQ	V  
Q p^_UU^UWH V^Z@IBGY\^\_\V@UZGB[GIDUAFJ@VMQ@[URT\@dKCU^V\UU[TPQVS
	URQ	RoWQ	[U	WW
VPmdhUV	\SPQUWQQ]UR
[o TVWVQS	XU	[WQSV	Q	U
 VVPS
Q[DMBC Q_TG^U VQ]XF]X\B[TXG	 8F_VC@
UE{zsx[T[zzspKy[D~pYxUy\qJzZVUyGVFn[]W`^\B^]\^	hZxBEPEaw^_|a_YCk@\@qBWhcFEzI]TzaGPJVD|bEQglDi _WgZR\y@iQfXYq	yyqrYjgkYyX\Wz]]FjeWDic\iazCwaVUyqyGQsyX\WzZh}KzCwaVUyqy@ispyqzH}Z{XjfyZ~s	ebId|JjezDjgo_}K}ZxE}v~ ~Zo[iejYq	yyqrYjgUYyX\WzZ|Ky[D~pYxUy\}ZVcpyqyXWhkDy[D~pYxUy_\WspyqyPIpAtc\WzssUjq\zZVUy_FQ]l[|s{zsx[Qu
JWspyqy^Qgo\RefEi|[|s{zsx[Suu RspyqzFV^]jSzagVw^Dy[D~pYxUy\aCPIpyqy Qxt[|s{zsx[S @zZVUy[z~p^	:D^U@CWD xyzsYVZyyz{I{ZG}sPsW{]rIyS]W{FUEeY_Vc]U@\^_]jY{AL[ G`qTa\A_XybjwgKQS{bSq~J	|T\~~FQqdDkdJQnV_Vw[yPE~qZqTyTt[hpyyzxYSdTITa{EkiZ|x{{pqZS~IVpyyz{ |w}Z|x{{pqZQncY}ZqZ~m`[|wXZ}gD}w\^~jHdfZ|nw|aG~mkGwqI~}{k^bYyPE~qZqTyTt@hpyyz{HZy@th]W{pzIi
YY}ZqZiad PJy@th]W{pzFjacY}ZqZT
Y~r xyzsYV{\Djj{{pzFR\{ZG}sPsW{^XES
cY}ZqZiT^^Q fJ|T|]{ZG}sPsW{]r[T~UY}ZqZ|
Vcj~l`Z~Jy@th]W{pzRqY}ZqZT~JJ{ZG}sPsW{]~FQj{{pyZthB	8GB\ZX\

S
V [ VSRPWTZrD@\DA__\ WQVR[UQ WQSQmU
 TS
VRQT oWQXU
R[V	RUSSV	S
U 	 \TPP
QWVQS	XZDFCCXTUD_UVP^QG]S]BZWQF	9F_UJA
QRR	VUQ U 		
TrVGP[KYX]VW]X\^^WS	W^QAICDP]^]_]UAUQFBZD@D^@GIIWFP@X\STWAdJ@\^]]U\PUQRWR	 URP SoF\[J_foVQSU[P
VVPS
QU	R\
RRW	R	U WUQSQZGDCCQV_F_VVZ\XG^Q]BPUXF
	9FUWCA	VSTVU[	  [WrUEP[A[Z[]@Z^^ST	W^QAICDP]^]_]UAUQFBZD@D^@GIIWFP@X\STWAdJ@\^]]U\PUQRWR	 URP SoAV_F\foVQSU[P
\

RWR U	Q[W
P VVRZ	SU PV
QRU Q 	\

WVQS	XZDFCCXTUD_UVP^QG]S]BZWQF	9DA_SS^  VQV]SPTPU T_TPVRTTpTFSXHPXY\CY]WUQ WQVR[UQ WQSQm@U\EUmmUSRVPQ	U_RQ	R\QWQQUQ W
VVRZ	S[DG@JSUTD^U_Q^ZF]R^K[WZG	
:O^UA@
WRVQ
	T\P
R TsHZRL\UR

U\PBJ@M[_\^\^\CWPEAYMKF_CD@BUGSCQWQVVBgIIW\\^VWQVR[UQ WQSQm@U\EUmmUSRVPQ	U_RQ	R\QWQQUQ W
VVRZ	S[DG@JSUTD^U_Q^ZF]R^K[WZG	
:3