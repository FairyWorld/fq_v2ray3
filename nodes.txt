D]W@CWG]TyqsS{]tXjq{{ZkK|X{M|I}q}s{@s[sS{ssZie^_{Z]Z~Xc]~q]TyqsS{]ZESc]}YxZjeXV]@je^hcXjuN~]_Tq{GqYsTyqs]SgcZ[{ }tY }uc |I_jXZ_~dcie{@kg|^}KLhw`^}u|YZdX~e]~q]TyqsS{]_Tq{{^VIy[E{ssTyqxCkh`\yX]]~VJRQB{YExyqsS{sxDRx{Z]Z~vcN{YExyqsS{sxDSK{{[cbwgSdDyv{CZG}v{@ZcT}vstwZ|s]S{ssTy\`GQI{y\`GQI{@s[sS{ssZTz^Chc{y_BP]gZ|s]S{ssTy\k]}Y{JyUB8F_VCAUE\W{quUy_u[hq}yXjH~X}K~KH}a J}[zCq[uUyqrYkeXYyX\Y|Xe[|s\W{quUy_[FQe[[yhe~YieEhzbXQ aEQKDS_PY~s[UyqrW{_XYyX\Y}eeKje~XyFjXf|a}fa[~eq}XfD_f_vaZvmHifvH{[CyyqrW{q~GjjbY}[~SKzCq[uUyqrYQurQqz{[KjjqCkez^|KzCq[uUyqrYQuKTqz{Xe}KzCq[uUyqrYQzy[[yfftyvvHKuK}vzJ~fuK|fz {vuEXrH{[CyyqrW{q~Rz~Y}[~Rz~Y~s[UyqrW{\fSufY}[~GR \{[CyyqrW{q~ yX\Y[}yVc8DYWCA	WC]W{pqU{Yt[hpy{^wH|p|M}`w{CqZqU{wsYkd\Y{^]Y|Ya[~u]W{pqU{YZFQ a[}]xEhkbYkc
Eh{fXS`EQJDQYQY~r_U{wsW{^\Y{^]Y|IT^hpVZhg}Fh`p\}` h^~gW swD|IihphXhdvY|ck{ZGy{wsW{pzGhlcY}ZzQM{CqZqU{wsYQtvSw{{Z	\Vc^CVp[~u]W{pqU{ZpFQ]a[}]{ |w}[~u]W{pqU{ZpJ{Y_[f_u``qJ`gWYqKMGZ K|wsGw_Eg{CqZqU{wsYVtHH{^]YVtHH{]E{{pqU{wx Wkr^{^]YP^	Ghg{CqZqU{wsYVZy{^{Yq] 8B_UA@
QE_UzssU}_vYis{}XiJZ{KzK}Yz[yApYsU}qq[jg^Y}X_[}Zc[xs_UzssU}_XDPc[{[zP^dUujQw^W}GixdXU bGPIDW_S[q]U}qqUz]^Y}X_[~dknXj_~ggFmfaJisyHz_d^XneuFj]kEnX\_~gzuiJzYEy}qqUzsxGnja[|YxWKyApYsU}qq[PwtUqyzYDn_iDzYEy}qqUzsxEVzzZ][zvaHzYEy}qqUzsxEWKyz[bfweU~dwJ}vyE~ZFyvyF~ZcUyvq~tw[xs_UzssU}\bAPI{}\bAPI{Aw[qUzss[Pz\Eic{}_DQ]g[xs_UzssU}\i[|Y{K}U@9F^WGA
QTQ
WR


UPV QT	QQrH[QE\SC
WZQBKCD[]Z^]]UAQQE@ZDK@^CGIBW	FSBXWSPWBfJ@WZ]^WWPVQRWQ 	QPPSkU
QVTW
P
VVRWpoQ

SSWQPUTRQSWPV
UQUU W

WRRQ	SZ@F@AST UD_QTP^ZGYS^@ZWZF:D_UAAP
VT PU
WQSV SrWZY\RXG_U\B^\ W]S@KDFY]]\]ZWAVSG@]FIG\A@K@WDQBZUSWU@fMBU]_\WURTVPWS 	VPW	SlWRW	QQQkU
USWPP	VVPW	SUPW
QRWQ 	Q
WVQSUZDFCCUTTF_UVQ\\G]S]B[U\F	9D@]^S^VUSWWTP PVR
Q
pU^UU_Q]^	URTVPWS 	VPW	SlWRW	QQQkU
USWPP	VVPW	SUPW
QRWQ 	Q
WVQSUZDFCCUTTF_UVQ\\G]S]B[U\F	9F^WGA
QPQ	
RUPQSPr][_[U]S]UR
U\PBKB@[_\^]\QCWPE@[@KF_CFMBUGSB\WQVVBfKDW\\^WWQVPVUQ WPQQmUSWSRSmWSUU
RVWUPQQV RUSSWS
W	QTPPS\FDB@S VVFYW US\ZA_Q\AYUZ@	8E\WAGTVPW

VRPR	
STStQX[]QZ@QVQ\S@J@F[[\\\^WGWSGAYFK	F\ADKBQDQCZWUVU@gIBW	\_\VWRTRPQSWQSUmWSVWQQmQ

SSWQPUTRQQWPV
UQUU W

WRRQ	SZ@F@AST UD_QTP^ZGYS^@ZWZF:D_UAASWQWP	TWQ
Q Q	SrS_UU^UF_ W\W@IBGY]\	\_\VAWWGB[GIFXAFJ@W@Q@[USVQ@dKCU\[\UUVTPQWS
	W RQ	SmW
SU	QUQmU
SRW
PQ	WRRQ	SQPWQSUQ W

VVPW	S[DFBGSTTD^U RQ^ZF]S\F[WZG	8B^UA@

UPQ

QP
V P	sT]UQV_UVQTU\QFK@FZ_\Z]^WCWQA@YFJF^GDKCUFWBZVQVWFfIBV\]ZWVPRRPUU 
WPS
QmQPPW
T
U	TVoV
QSU
VP
WTPS
QW	RQ
RSW	RUWUPQQZGDBAQV RF_V TW\XG^Q\@]UXF
	8DXWCA	RW S
WVT  VrT]WUYWUB
U\PBKB@[_\^]\QCWPE@[@KF_CFMBUGSB\WQVVBfKDW\\^WWQVPVUQ WPQQmUVQWT	W	TRmcjW
V VSWRWU
VSWWP	Q m  VTUTVQRWQWSQQSW	UTRQSXFG@AS U T@]WTQZZE_R^@[SZD
:D_QACWEyyqrYV[}yqzI{[C|s[rW{\vHyX\W{GQEdY_Wg
]^@\Z^]j]zAGZ Gap\\~k][ClB_B{@UhdDFxC_VzfESH\F~eGRefFk ]TeXP\~Bj [ }f_[|s{{qu[iea[{X[Uy_WDhePFja^ka}Atc\W{q~ERy {X[UyXb K}Atc\W{q~Bjqz{q}J~XqZhf~X}q}eeK|fvHhe}Fiee]K~XrGvy}XeYkem[|s{{qu[ie_[{X[UyXvI{[C|s[rW{\zXUaz{q~ZTjaF{[C|s[rW{_^Tqz{q~SKzCvc[Uyqy Wjv^yX\W{_DR_fY~syyqrYSuHTqz{q~\Ree^PeaGj vY~syyqrYQurQqz{q}DU\WhQzfeUuTF{[C|s[rW{\fASKz{q~Rz~Y~syyqrYQ ByX\W{[}|s\8DYWCA	WC{{pq[V]{{pyK{]E~qZqU{ZpJ{Y_U{AWGg[_Qa__B\\\_ j[xCFYGgsWc[C\R{`mudISS|` Q{}~M ~^^~|ES{fFkcISdT]VpY{ZG|q]sW{^vYhw{{pz[ScVJVkyGkkY~r y{wsYQt	KVw{{py|pY~r y{wsYSda[}]sY|gbY|pZYeF}p^]|` JcdY~du|cD|giEpsJ|wy kY`Z{ZG|q]sW{^vBhw{{pyJ]{Cvb_U{wxJk [[}]sYkkfPM{Cvb_U{wxEhka[}]sYV }[~u{{pq[V|^Gh`y{wxEP^{]E~qZqU{YZFQ a[}]sYk^\\QdI~^~_{]E~qZqU{ZpXVtW[}]sY~ Tci|fbX~M{Cvb_U{wx P{}[}]sYVtHH{]E~qZqU{Z|ES`y{w{Yvb@8@@_XR^	QTQTSP 
RPV PpF@[FB]]^ UVTPQWS
	W RQ	SmW	
VSU	PVVmU
SRW
PQ	QPWQSUQ W

VVPW	SUTVQRXFFDAR T VF]WTS\[E_SZ@YU[D>D\W@CSQPV
WR
W 	VpTGWYH[R_TWZZ_\TUSU\QFK@FZ_\Z]^WCWQA@YFJF^GDKCUFWBZVQVWFfIBV\]ZWVPRRPUU 
WPS
QmF[YI]lmQ

SSWQPUTRQSWPV
UQUU W

WRRQ	SZ@F@AST UD_QTP^ZGYS^@ZWZF:D_UAA	TS  	VVWQ QUrRGSYKYX[ZBY\TQTU\QFK@FZ_\Z]^WCWQA@YFJF^GDKCUFWBZVQVWFfIBV\]ZWVPRRPUU 
WPS
QmAQ]E^lmQ

SSWQPV
U U P
WRQW	RQTPPSW
PUSUW
S V	
	UTVQRXFFDAR T VF]WTS\[E_SZ@YU[D>FB]YQ\

QSTW QSVRW VUVPQ
QVVrTAQ[JZZ[\D[^UWS UVTPQWS
	W RQ	SmGW_G_o mWSUU
RVWUPQQV RUSSWS
W	QTPPS\FDB@S VVFYW US\ZA_Q\AYUZ@	8E\WAGWUTSTVR
P  	VtJYPF^UU W\W@IBGY]\	\_\VAWWGB[GIFXAFJ@W@Q@[USVQ@dKCU\[\UUVTPQWS
	W RQ	SmGW_G_omWSUU
RVWUPQQV RUSSWS
W	QTPPS\FDB@S VVFYW US\ZA_Q\AYUZ@	89