D]W@CWG]TyrqS{]tXjry{ZkK|[yM|IJ}rL}tZ|p_S{ssTy\vDhs{y[i{YExyrqS{sx\R~{Z]Zi\fAhhhERvfAkgFjvbAQIFjia]~q]TyrqS{]^Xy[_]kZd_vz\|tGjurX|Y~ea~gtZfu@gtXvvXcK}\jX{YExyrqS{sxFjia]}Yx SHyGqYsTyrq]QwtQry{YZifDX~I{@sXqS{ssZSv	MVs{y[aI{@sXqS{ssZSy}]}Yx|dbr{twI}rqMt{I|eqL~dsyuu}ZKyXG{ssTyrzPxZXzPxZ|p_S{ssTy_bQwgZXzAP_yXG{ssTyrz{Z]Z}XyTa:G]QACTG[UyqrWx]rYjqzxZqJ~q I }q Y}As[rWxsu[ie_[xZ[[~XbY}q[UyqrWx]\DSbY~Y~jey[hgGjzeZPfGSKFR]W[|s\WxsuUy__[xZ[[ifbh]eHjvvDhJW jq kdm|f_Z|gaFjv~|mjuy\ktzXy[D{xsuUyqyEkhe[[yRI}As[rWxsu[Suu Ps}y[
hgLA|KzCrYuUyqrYRwKTqzxZe}KzCrYuUyqrYRxy[[ye ftyvvH|IuK}vzJ}duJ|fr xtq X~HxYCyyqrWxs~Rz~Y~Y~Rz~Y}q[UyqrWx^fSufY~Y~GR \xYCyyqrWxs~ yX\Y|Y}yVc;FYWCA	UC]W{pqVyYt[hpyy^wH|p~M`H~`Y~r_VywsW{^vAjw{{Yiy]E{{pqVywx_P ~y^]YV{z TsZ]VdHDjl|J~^b iF[P]}DRx^{ZGzywsW{pzAjw{{^y}Nd]YX]|cgHgWE~ptZ}pXiYt]~dbY}`xZ|wqF~`w`yBs]sW{pqXRYd {Y_XTY~r_VywsW{]rYTsUY}ZyGiEQ~AjcZh`X|u]W{pqVyZpFQ]aX]{ |w}X|u]W{pqVyZpJ{Y_Xd_u``qI}`wWYqH}MG` F~wsH|Y_K}g{CqZqVywsYVtHKy^]YVtHKy]E{{pqVywx Wkr]y^]YP^	Djg{CqZqVywsYVZyy^{Yq] :B_UA@
QE_UzspW}_vYisx}XiJZxIzKH}sHyfa[q^W}qqUz]w@nqyzZh }[GyzspW}qz]Q }X_[Q]g nuvD]cm DYQ^|EVz\zYF{}qqUzs{@nqyz]`y jYidVxfuK~JZDzu~_}I XnuygZne}Eid]zveK|cxCw[qUzspYV_fzZ^YP}[q^W}qqUz^sXPuW[|YxFUu	KRhAFV\bZQs	Yxs_UzspW}\rDP^`Y{[y}t|Yxs_UzspW}\rHzZ^Y`Y	wacpHyfeU~ZpIyK E~cGzqqJ}Z^JyayApYpW}qq[WwIJ}X_[WwIJ}[GyzspW}qzVhs\}X_[Q]EnayApYpW}qq[WYx}Xy[p^>D\W@C STVUU
WRQPV SVpIYVG^TA W]SCIDFY]]__ZWAVSDB]FIG\B@K@WDR@ZUSWUCdMBU]__UURWVPWP	VRW	SlTSQVU	PQQSUwmVQSU	VP
TVPS
QU	RQ
RPW	R	U WUSSQZGDACQVRF_VVW\XG^Q_B]UXF
	;FXWCA	RTVRT
 UVQQ   	QrPXX^UZE_R^CY^
UZQBKCDX_Z^]]UCQQE@ZDH@^CGIAU	FSBXTQPWBfJ@TZ]^WTPVQRUQ 	QPPQkU	UWSSSlT
RQURRQTPPQW
RUPUW
PV		UWVQRXEDDARV VF]TTS\[E\QZ@YU[D	>FB]YQ_
T	RSP  UTRWTU 
VqWYWW_V\\TPVQRUQ 	QPPQkU	UWSSSlT
RQURRQTPPQW
RUPUW
PV		UWVQRXEDDARV VF]TTS\[E\QZ@YU[D	>D\W@CS PV	UWR
P QWp\YXYW]T_WU T^W@IBGY^^	\_\VBUWGB[GIDXAFJ@T@Q@[UPTQ@dKCU^[\UUVTPQTS
	U RQ	PoW
QU	RUQmU	SRTPQ	URRQ	PQSWQQUQW
	VVRW	S[DE@GSWTD^URQ^ZF]P^F[WZG	:B^UA@
 TQRU


 QPPU  QVSsSYYZSX@SW
 V^RBMBD[\^^[\U@UREF[DKD]CFIBVESDXWRTTB`K@W^^^QWSVPRVQ	UVQRoU	QQPPSoVQSU	VP
TVPSSU	RQ
RPW	R	U WUSSQZGDACQVRF_VVW\XG^Q_B]UXF
	;FXWCA	QP	QPRV UVV  VQrT]TWYWFX
U\PBH@@[_\^^^QCWPECY@KF_CDMBUGSA\WQVVBeIDW\\^TWQVRVUQWSSQmUSTSRS oWQUU
RVWUSSQV	 RUSST	S
U	QTPPQ\FDB@Q VVEYW US_XA_Q\AYVX@	8E\TCG TR
S	VRQ 
R	tV_UVT^WQST	W^QAIAD]]^]__UAUQFBXDMD^@EIDWFP@XQSTWAdH@Q^]]UQPUSRWR	URRSoVR 	PUV

TVQnQ

PQWQRUTRRSWPVUQUU T	

URRQ	PX@F@APT UD]QTP^YEYS^@ZWYD:D_UBCUUQ	WQ		V  Q pS_UU^UWE T^W@IBGY^^	\_\VBUWGB[GIDXAFJ@T@Q@[UPTQ@dKCU^[\UUVTPQTS
	U RQ	PoWQ	VU	UWVPmdhUV	QSPSUWQQPURVo  TVWVQS	UU	VW	QSV	Q	U TVPS
QYD@BC QRTG\U VQ]XD]U\B[TXE	8F_VCB
UE{xsu[T[zxs}Ky[D~rYuUy\qJxZ[UyGVDc[]W`\\B^]\\hZx@E]Eaw^]|l_YCk@^@|BWhcFGzD]TzaGRJ[D|bESgaDi _UgZR\y@k\fXY}qyyqrYhgfYyX\Wx]PFjeWDkc\iazCua[UyqyGS~yX\WxZe}KzCua[Uyqy@ks}yqzHZvXjfyZ|sebI}dqJjezDhgb_}KZuE}v~ |Zb[iejY}qyyqrYhgXYyX\WxZqKy[D~rYuUy\}ZTc}yqyXUhfDy[D~rYuUy_\Us}yqyRI}Atc\Wxs~Ujq\xZ[Uy_FS]a[|s{xsu[Qu
JUs}yqy^Sgb\RefEkq[|s{xsu[Suu Ps}yqzFT^PjSzagTwSDy[D~rYuUy\aCRI}yqy Sxy[|s{xsu[S @xZ[Uy[z~r^:D^UBCWD zywsYVZyyw{I{ZGs]sW{]rKy^]W{FUEeY_Vc	]X@\^]]jYyAA[ G`qVa\A]UybjweKQS{bS|~J	|Y\~~DQ|dDkdHQcV_Vw[y]E~qZqVyYt[hpyywxYSdTKTl{EkiX|u{{pqXSsIVpyyw{ |w}X|u{{pqXQccY}ZqX~``[|wXX}gD}w\\~gHdfX|cw|aE~`kGwqK~p{k^b[y]E~qZqVyYt@hpyyw{HZyBte]W{pzKiYY}ZqXild PJyBte]W{pzDjlcY}ZqXTY~r zywsYV{\Fjg{{pzDR\{ZGs]sW{^XGScY}ZqXiY^^Q fH|Y|]{ZGs]sW{]rYTsUY}ZqX|Vch~a`Z~JyBte]W{pzR|Y}ZqXTsJJ{ZGs]sW{]~DQg{{pyXteB	8GB^ZU\
S
VV VSRPWTWrD@\DC__\WQVRVUQWSSQmUTS
TRQToWQUU
RVV	 RUSST	S
U	QTPPQWVQS	UZDFCCUTWD_UVR^\G]S]BXW\F	9F]UGA
QPRV	USU 	TrVGP[IYU]VW]X^^SWS	W^QAIAD]]^]__UAUQFBXDMD^@EIDWFP@XQSTWAdH@Q^]]UQPUSRWR	URRSoF\[H_koVQSU	VP
TVPS
QU	RQ
RPW	R	U WUSSQZGDACQVRF_VVW\XG^Q_B]UXF
	;FXWCA	 VSTV UV	  VWrUER[L[Z[]@X^SST	W^QAIAD]]^]__UAUQFBXDMD^@EIDWFP@XQSTWAdH@Q^]]UQPUSRWR	URRSoAV_D\koVQSU	VP
Q

R	WRU	SVWP VVRW	SUPT
QRUQ 	 Q
WVQS	UZDFCCUTWD_UVR^\G]S]BXW\F	9DC_^S^VQVPSRTPU TRTPVPTTpTFSZH]XY\CY_WUQWQVRVUQWSSQm@U^EXmmU	SRTPQ	URRQ	PQSWQQUQW
	VVRW	S[DE@GSWTD^URQ^ZF]P^F[WZG	:B^UA@
WRVQ
	T QP
R TsHXRA\UR
U\PBH@@[_\^^^QCWPECY@KF_CDMBUGSA\WQVVBeIDW\\^TWQVRVUQWSSQm@U^EXmmU	SRTPQ	URRQ	PQSWQQUQW
	VVRW	S[DE@GSWTD^URQ^ZF]P^F[WZG	:>