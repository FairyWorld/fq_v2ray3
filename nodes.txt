D]WACWG]UyzsR{]tYjz{{ZkJ|S{L|I }PMtQ[|x]R{ssUyTtEhs{ySk{YEyyzsR{sx]R
|{Z][iTd@hhhDR~d@kgGj~`@QIGjac\~q]UyzsR{]^YyS]\}dQjTgB}tQFjSgOkc}Cw~dYKm{Akk~C|]}tsK}~`Y{YEyyzsR{sxGjac\}YxS@{FqYsUyzs\QwtQz{{YDST^[SgDyPE~{ssUyzxBPxyS]\|tcHyPE~{ssUyzxBQI{yRe`ugU}mB{t{E}S{AtYF}SgRZs}Cw\~q]UyzsR{^`AS@{{^`AS@{FqYsUyzs\Vx^Ejj{{]DRTg\~q]UyzsR{^k[P{L{WB:O_PAC\EZUyqsWp_sYjq{pXpJ~q wKJ}vsEwfp[|s]WpqtUy_t@cq|yXk p[ByyqsWpq]R| pXZ[R_d cusD|_`` AYR\E[\y[E{pqtUyqx@cq|y_ t_oXjvcuflKukDwvl ~[`egX|fQw | e`YcXx}[{Cz[tUyqsY[_cyX]Y]x[|s]WpqtUy\pX]uR[[{FZ_Y|K{Cz[tUyqsYZuKTq{pXd}K{Cz[tUyqsYZzx[[xmgtyvwHwatK}v{Iuft|f{pv|EXHp[ByyqsWpqRzYv[RzYusZUyqsWp\gSugYv[GR \p[ByyqsWpq yX]Yt[|yVc3DXWCAWB]W{qq^{Xt[hqy{_kH~Xy@|LH|[Cf{Cq[q^{vsYke\R{_]Y|XaP~t]W{qq^{XZFQaP}\xhezRkb
EhzfSS`EQKOQXQY~s_^{vsW{_\R{_]Y|HWAkXkXuMhb}a 	h_Y ~eu
|rD| bS|a`\|fjT|aU{[Gr{vsW{qzLhmcY}[z
QL{Cq[q^{vsYQuv	Sv{{[	CVrd\QqP~t]W{qq^{[pFQ\aP}\{ |v}P~t]W{qq^{[pJ{X_Pf^u`aqAaWXq@\G}a @|fsIv_Cf{Cq[q^{vsYVuHC{_]YVuHC{\E{{qq^{vx WjrU{_]YP_	Lhf{Cq[q^{vsYV[y{_{Yq\ 8C_UAA
PE_U{sxU|_vYhsp|XuJ|s{KJttGxf}{YNy|qqU{ssZTea[}Yp {qyAqYxU|qq[Sw HQqy{^kKQjb]h^oAW_fHQIYQe~@hwHy_	KhIpAv[qU{sx[Tea[}Ypxf\Y|doXxa  |Zhyfa httFl_eJhs	ofSJ|gsZzuj[t^[ys_U{sxU|_^Vsp|\TH{YNy|qqU{ssEljb]{ZV[yrKP]Koj~H~IpAv[qU{sx[Vu	KVsp|XaIpAv[qU{sx[Vz}[}Ys}abt{t|JxaqKtpKyfq~dp|vyE}ZtJ|[Gy{sxU|qzPxt[z[zPxt[ys_U{sxU|\bQwl[z[zGP^|[Gy{sxU|qz {ZV[x[yyTa?D\WAC STWWT

WRPXT 
SWpA[WG^UAW\SKKEFY]\W][WAWSL@\FIF\JAK@WDZBZUSVUKfLBU\_WWUR_WPWX 	WPV	Sm\
SPVW	PPP[WvmW
QSUWP\TPSQW	RP
SXW	SUWT[QQZFDIAQ V SF_WTV\XG_QW@\UXF	3DYWCAPTVR\
WWQP QrQXP\TZE_S^KX^
W[QBKBDP][^]\UAPQE@[D@A^CFIIWFSBX\SQWBfK@\[]^W\PVPRW Q 	 PPQ SjU	TW QSSm\

SQWRR PTPQ SWP UXTWX W	
	U_WQSXMFEAST VF]\TS\ZETS[@YUZD ?FB]XQWT
SSQUTR
  V
VT 
WyUXWW_WT^\PVPRW Q 	 PPQ SjU	TW QSSm\

SQWRR PTPQ SWP UXTWX W	
	U_WQSXMFEAST VF]\TS\ZETS[@YUZD ?D\WACS PW	 TWRX 
QVpT[YYW]U_UT\\V@IBFYV\\_\WJWVGB[FIFYAFK@\AQ@ZUXVP@dKBU\Z\UUWTPP\S	WRQ	XmWS U	ZTQmUSS\
PP	WSRQ	XP[W
QS UQWWVPV	SZDMBFS_TD_U SQ^ZG]X\G[WZF	 8C^UAA
 TPRW

PPPT    QVSrSQ[[SX@S_W^Z@LBD[]^\Z\UAUZGG[DKDUAFIBWMQEXWST\@aK@W^V\PW[TPRWS	UWQSoW	QPQXQoW
QSUWP\TPS
SW	RP
SXW	SUWT[QQZFDIAQ V SF_WTV\XG_QW@\UXF	3DYWCASQ	QQRVWWW WQrU]\UXWFY
U\QB@BA[_\^V\PCWQEK[AKF^CFLBUFSI]WQVWBmKEW\]^\WPVPWUQW[QQmUS\SSSmW
STU
RWWT[QQWRUSS\SW	
PTPQ S]FDBA
S V VMXW TSWZ@_Q\@Y^ZA	8D\\AF\P
S
WR
P	R uV_UWTVUPST
W^Q@IIF\]^\_WWAUQGBPFLD^AMKEWFQ@ZPSTW@d@BP^]\UPPT[PWSURZSoWP	PUV
\VPfP

XSWPPUTRZSW PW
TQU T \
WSRQ	XZAF@AXT TD_PTQ^QGXS^@[WQF:D^UJATU	Q
WPV 	P rR_UU_UUD\\V@IBFYV\\_\WJWVGB[FIFYAFK@\AQ@ZUXVP@dKBU\Z\UUWTPP\S	WRQ	XmWPWU	]W TPmehWV		PSQ[WWPSQUR Wo T VWVPSTU	WWSSW	S	U \TPSQQFABCQ STFTW VQ\XL_T\B[UXM8F_WCJUE{pqt[T[{pq|Ky[E~z[tUy\pJpXZUyGWLb[]WaT^B^\\Th[xHG\Eav^U~m_YCj@VB}BWhbFOxE]Tz`GZHZD|cE[e`Di _]eZR\x@c ]fYYusyyqsY`egYyX]Wp_QFjeVDca \ia{C}cZUyqxG[yX]WpXd}K{C}cZUyqx@cq|yq{HwXwXjfxZtqecIufpJje{D`ec_}KwXtE}v tXc[iekYusyyqsY`eYYyX]WpXpKy[E~z[tUy\|Z\a|yqxX]jgDy[E~z[tUy_\]q|yqxZK|Atc]WpqUjp\pXZUy_F[_`[|s{pqt[QuJ]q|yqx^[ec\RegEc p[|s{pqt[Sut Xq|yq{F\\QjSz`g\uRDy[E~z[tUy\`CZK|yqx [zx[|s{pqt[S @pXZUy[{~z\:D_UJAWE r{vsYV[y{v{I{[Gwq\sW{\rC{_]W{GUGeY_Wc_Y@\^U_jYqC@[ Gaq^ a]AUTybkwmKQSzb	Q}~K		~X\~ ~LS}dDke@SbV_Vv[{\E~q[q^{Xt[hqy{vxYSeTCVm{Ek iP~t{{qqPQrIVqy{v{ |v}P~t{{qqPSbcY}[qP|a`[|vXPgD}v\T|fHefP~bw| aM|akGvqC|q{k_bS{\E~q[q^{Xt@hqy{v{H[yJvd]W{qzCkYY}[qPkmd PKyJvd]W{qzLhmcY}[qPVY~s r{vsYVz\Nhf{{qzLP\{[Gwq\sW{_XOQcY}[qPkX^^Qf@~X|]{[Gwq\sW{\rQVrUY}[qP~Vc `|``Z~KyJvd]W{qz	P}Y}[qPVrJJ{[Gwq\sW{\~LSf{{qyPvdB	8FBVXT\
 SV
W VSR	
PVT VrD@]DK]_\
WPVPWUQW[QQmU TS\RPT
mW
STU
RWWRUSS\SW	
PTPQ SWVPSTZDFBCTT_F_U VZ\]G]S\BPU]F	8FUWFA
QXPV
U[U	 VrVGQ[A[T]VW\XV\RWS
W^Q@IIF\]^\_WWAUQGBPFLD^AMKEWFQ@ZPSTW@d@BP^]\UPPT[PWSURZSoF][@]joW
QSUWP\TPSQW	RP
SXW	SUWT[QQZFDIAQ V SF_WTV\XG_QW@\UXF	3DYWCAVS
	TVWW	 WWrTEZYM[Z[\@P\RST
W^Q@IIF\]^\_WWAUQGBPFLD^AMKEWFQ@ZPSTW@d@BP^]\UPPT[PWSURZSoAW_L^joW
QSUWPP

S W
PU	[WW P WVPV	SUP\
QSWQ 	P
 WVPSTZDFBCTT_F_U VZ\]G]S\BPU]F	8DK]_S^

WQTQSZVPU VSTPWXVTpTGSRJ\XY\BYWUUQ
WPVPWUQW[QQmAUVGYmmUSS\
PP	WSRQ	XP[W
QS UQWWVPV	SZDMBFS_TD_U SQ^ZG]X\G[WZF	 8C^UAA
 WSVS
	TPP
R	   TrHPP@\US
U\QB@BA[_\^V\PCWQEK[AKF^CFLBUFSI]WQVWBmKEW\]^\WPVPWUQW[QQmAUVGYmmUSS\
PP	WSRQ	XP[W
QS UQWWVPV	SZDMBFS_TD_U SQ^ZG]X\G[WZF	 8?