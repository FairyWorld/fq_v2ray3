D]WABWG]UxqrW{]tYkqz{ZwJq |I aIdc[}s\W{ssUx_u@hs{xXj {YEyxqrW{sx]S} {Z][h_eEhhhDSueEkgGkuaEQIGkjbY~q]UxqrW{]^YxX\Yhw|[|_vhtQFk_e]}c v~dY~u~D]cKkvP|Zs~v_[{YEyxqrW{sxGkjbY}YxRKzCqYsUxqrYQwtPqz{YDUeW_Vs
[}s\W{ssUx\qFQ^c[~[z |t[}s\W{ssUx\qJ{Z][eY
u`csJ|HrWZsK|[HYH|qrH|J]E|azCqYsUxqrYVwJHxX\YVwJHx[D{{ssUxqy Whp^xX\YP]GkazCqYsUxqrYVY{xXzYq^;D^UACWD_UyqsV{^vYjq{{YuJ~q|J}aHwa[|s]V{pqUy_tAhpyyXk{ZGyyqsV{pz]R|{Y_[T dXhtvD|_` kDYR\DP z\y[Ez{pqUyqxAhpyyXhXhdiHjegK~gSH~u{E|t}J}Khty|ewFkeH} gh^}HiK{BqZqUyqsXP^fyX]XV }[|s]V{pqUy\pYVtW[[{GVXZTudhkyDy[Ez{pqUyqxFP zyX]X|waHy[Ez{pqUyqxFQJyyYa`veU}fwK{wyE}X{EgyF}HsVgS}vwX~r_UyqsV{]bASK{{]bASK{BqZqUyqsXV{\Eja{{^DR_gX~r_UyqsV{]i[[{H{T@:D_TA@
WE^UzssW{_wYis{{XhJZ{I|K|cIXt[q]W{qpUz]t@hqxzZk {[FyzssW{q{]Q| {X^[Q]d huwD]`k EYQ^EP{\zYE{{qpUzsx@hqxz]wHU[~tkI~fZE}tsD|vp|skHdHd}vUXi]x]hv|Kjc{Cq[pUzssYP_gzZ]YV|[q]W{qpUz^pXVuV[|Y{Fk AQ{F{[FyzssW{q{EQx {X^[}tcJ{[FyzssW{q{EPI{{YbaugWftzt{GXxF~d{DHpU~dQvt[q]W{qpUz^`CQKxz^`CQKxApYsW{qp[Wx^Ghaxz]FP_d[q]W{qpUz^kY}[xKzWB	8D\W@CWF]TyqqU{\tXjqy{[wK~q|H~aJ[sZ|s_U{rsTy_vBhr{yXi{XExyqqU{rx\R~{[]ZTzzVvZ^TeHGhi|I|_bkFXR\}GPx]y[Gy{rsTyqzBhr{yXv_|\|^jXq~eYifyF|uhZiK[kdZ|fa|esjXzYhfwIqyAqXsTyqq[P\dyX_[VZ|s_U{rsTy\rZVvUZ[yDVfCT_fKQ^Ua[~p]TyqqU{_pES\a[}X{~v}[~p]TyqqU{_pIyX_[fZvbaqJewT}XqKXK}[ HrsK~H_Eb{@s[qU{rsZTuHH{[]ZTuHH{XExyqqU{rxUjr^{[]ZR_	Ghb{@s[qU{rsZT[y{[{Zs\ 8G^VCA
QUU
WS

TPR QT QUrH[PD\WC
V^QBKBE[\^^]\T@UQE@[EKD^CFHBVFSBYWRTWBfKAW^]^WWPVPSVQ UPQRoU
PRTWQ
W
RRWqnU

SRWPQ	UTSQ	SWPWQQTQ W

VVRQS[DF@AST TE^UTQ_ZF]S^@[VZG	:D^TA@
PWTPU
	
WPSRRsSZY\SYG^Q\B_]W\R@J@FY]\\\^WAWRGAYFIF]ADK@WEQCZUSVT@gIBU\^\VUSTRPWS	WQS	SmWSV	QPQoU
	QSW
PP	WWQS	ST	PW
QSV	Q U
 WVPR
QZDFBB QTTG_U WQ]XG]S\C[TXF	8E@\ZS^VT RSWUP TVSU
pU_TU^U]^ USTRPWS	WQS	SmWSV	QPQoU
	QSW
PP	WWQS	ST	PW
QSV	Q U
 WVPR
QZDFBB QTTG_U WQ]XG]S\C[TXF	8G^VCA
PQU	

VTP	Q  STr][^ZU\W]USU\QCKCD[_\_]]UCWQD@ZDKF^BGIBUFRBXWQVWCfJ@W\]_WWPWQRUP 	WPPQmT	SWSSRlW
RQU
SRWTPPQW
RTSSW
S V	UTPQRXFDBAR V WF]W TR\[E_Q\@XU[D	8D]W@CURPW	
	WSQV	 RTRpQX[\PZAQVU\S@KAFZ_\\]_WCWSG@XFJF\AEKCUDQBZVQVU@fHBV\_\WVRTSPUS 
WPR
QmWSW
SQQ mU

SRWPQ	UTSQQWPWQQTQ W

VVRQS[DF@AST TE^UTQ_ZF]S^@[VZG	:D^TA@
SVPSP
TWP
UPSsW_UU_TG[W]S@IBFX]]\_\WAVSGB[FHG\AFKAWDQ@ZTSWU@dKBT]_\UTRTPPWSVRQSlWRUQQQmT
SSWPPVVRQSUPW
PRUP 	W
WWQS	SZEFCCSTTD_TVQ^ZG\S]B[WZF9F^UAA
UP	Q

UP
W 	P	rU]TUV_UWQU
T\PBK@F[^\^]^WBWPE@YFKF_CDKBTGSBZWPVVBfIBW\\^WWQVRPTQ WPSPmUPQWU	UTRoW	QST
RPWUPSPV	SU
SSW	S
U		WTPPQZFEB@Q WVF_W US\XG_P\AYUXF8E\WCAVW  S
 VRU 
RrU\WT]WUCU\QCKCD[_\_]]UCWQD@ZDKF^BGIBUFRBXWQVWCfJ@W\]_WWPWQRUP 	WPPQmTRPWT
V	TSlgjW
W WRSRWT
RSVWP	Pm   WTTTRQSWPVSPUS W	
 
UTSQ	SXFFAAS T UD]WTP^ZE_S_@ZWZD;D^UACWD yyqsXVZyyq{H{ZG|s[sV{]rHyX]V{FUEeX_Vc
]^A\^^]jYzAG[G`t\\~j\[BhB_BzAUi`DFxB^V{bESH]G~ aGRegGk]TeYP]zBj Z}g[[|sz{pq[ie`Z{Y_Uy_VEhdTFja_k`yAtc]V{pzERx{Y_UyXcJyAtc]V{pzBjq{{pyJ~Xp[hgzX}q}daK|fwIhdyFied\J ~XsFw}}XdXkdi[|sz{pq[ie^Z{Y_UyXwH{ZG|s[sV{]~XUa{{pzZTj`G{ZG|s[sV{^^Tq{{pzSK{Bvb_UyqxWkr^yX]V{^DR_gX~r yyqsXSt	HTq{{pz\Red_PdeGj wX~r yyqsXQtvQq{{pyDU\ViQ{beUuUG{ZG|s[sV{]bASK{{pzRzX~r yyqsXQByX]V{Zy|s\8E]WCAVG{{qp[WY{{qxKzYE~q[pUz^pJ{X^UzEWGf[^Ua_^B]\\_k[xCGXFcsWb_C\Sz`iudHSRx` Qz|I ~_ ^|ESzgFjgISeU]WtY{[F|pYsW{_wYis{{q{[RgVJVjxGjkY~syzssYQuKWs{{qx}tY~syzssYSe`[|YsY|fcY}tZY dF|t^]|aJ~gdY~et}cD|fhE~tsJ|vx j]`Z{[F|pYsW{_wBis{{qxJ~Y{Cvc^UzsxJkZ[|YsYkjgQI{Cvc^UzsxEhj`[|YsYV|[q{{qp[Wx^GhaxzsxEP ^zYE~q[pUz]ZFQ`[|YsYk_]\PdI~__zYE~q[pUz^pXVuV[|YsY~Ubi|gcXI{Cvc^Uzsx Pz|[|YsYVuIHzYE~q[pUz^|ESaxzs{YvcA9D@_XS_	Q	U PTRP 
S TV QqFA_FB]\^	TRTPPWSVRQSlW	WR	UPRVmT
SSWPPUPW
PRUP 	W
WWQS	STTRQSYFG@AS U VF\WTS\ZD_R^@YUZE
:D\WABSQPW 

WRW	VqTFSYH[S^TV^Z_\UUR
T\PBK@F[^\^]^WBWPE@YFKF_CDKBTGSBZWPVVBfIBW\\^WWQVRPTQ WPSPmG_YI]m mU

SRWPQ	UTSQ	SWPWQQTQ W

VVRQS[DF@AST TE^UTQ_ZF]S^@[VZG	:D^TA@
TR  
VWWP PTsVGSYJXXZ^BY\UQU
T\PBK@F[^\^]^WBWPE@YFKF_CDKBTGSBZWPVVBfIBW\\^WWQVRPTQ WPSPm@U]E^mmU

SRWPQ	W	Q T PWRPV	SUTPQRWQU	SQWSW	TTRQSYFG@AS U VF\WTS\ZD_R^@YUZE
:FB]XP\	
USTVQSVSWVTVQU
QVWrUEQ[J[[[]@[^UVS	TRTPPWSVRQSlCW_G^n lW
RQU
SRWTPPQW
RTSSW
S V	UTPQRXFDBAR V WF]W TR\[E_Q\@XU[D	8D]W@CVQTS	U WSP   VpJYPG_TQW]S@IBFX]]\_\WAVSGB[FHG\AFKAWDQ@ZTSWU@dKBT]_\UTRTPPWSVRQSlCW_G^nlW
RQU
SRWTPPQW
RTSSW
S V	UTPQRXFDBAR V WF]W TR\[E_Q\@XU[D	88