D]WACWG]UyzpW{]tYjzx{ZkJ|SxI|IK}jJ|c{AsPpW{ss[in][{Z][~S`Y~q]UyzpW{]ZDS
`Y}YxSWg SwhR~\QGjqgZS`GS@FQ]Q[|x^W{ssUyT][{Z][iCk]J^^}hDZ^Xz hZcK|n{Z|JUF}k[|tQmZG|w|_yPF{{ssUyz{Ehhc[P{QI{AsPpW{ss[S~w Ss{yPZShxXR~dF{YEyyzpW{sxER
{ {Z][~}`J{YEyyzpW{sxES@x{[bb|dWdwJy}xGZ{F}}ZDdsU}}ptw[|x^W{ssUyWcCQI{yWcCQI{AsPpW{ss[Tq]Ghc{yTFP]g[|x^W{ssUyWhY}Y{Ky^A	8F_WCJUE]WprqUy_t[cryyXwHwr~Ktr~[{CzXqUyqsY`f\YyX]Yw[a[|s]WprqUy_ZFZa[[xEcibYie
EcyfXQ `EZHDS_QYup_UyqsWp\\YyX]Yvf}Ki cvu[F~f`]tr i {HufvZ}vDwvu~v|]wu\X}fHpXGyyqsWprzGjjcYvXzSK{CzXqUyqsYZvvQq{pX	HTuI[b[|s]WprqUy\pFZ_a[[{ wu}[|s]WprqUy\pJp[_[dYukbqJ}fgWt[qK}[Gvb J}qsGtu_E}a{CzXqUyqsY]vHHyX]Y]vHHy[E{prqUyqx \ir^yX]Y[\	Gja{CzXqUyqsY]XyyX{Yz_ :D_UJB
WE_^xssW{_vRks{{XiA}Z{I|K
sHHWP}q]W{qq^x]t@hqyxZk {[GrxssW{qzVS| {X_Ph]dEhjjOSwdEk eLkw`EQKLkhcY~s_^xssW{_\RxZ]Y|_zR|J HSMkZYh[ 	|ww~ey|ZsD}vWChdQh_}g`X{[GrxssW{qzLkhcY}[z
RI{Cq[q^xssYQuv	Ps{{[	Mhg|_SeU}I{Cq[q^xssYQu	@Us{{Xa	|I{Cq[q^xssYQz}P~YxfbxtwJqq@|t{I~fq}dwG{vqN~ZsH{[GrxssW{qz	SxY}[z	SxY~s_^xssW{\bRwgY}[zLS\{[GrxssW{qzxZ]Y[yrWa8D]\BCWGVVyqqU{]Zjqy{Z`I|XyK|I~[H|YpBs[qU{sxXie\Y{ZVX~Xa[~qVVyqqU{]QGSa[}YsjezYkgDjzfXSkDSKDQ]ZX|s_U{sxVy_\Y{ZVXiey|J`juaF|g`H}q ]| |ev_kdlEi yHhtpj_ekwXy[Gy{sxVyqzGhhhX[zQIpBs[qU{sxXSuvSspy[	^Pwo[TzzBkIX|s_U{sxVy\rDQ^hX[y|ttX|s_U{sxVy\rH{ZVXdY	w`cxI}f}UZxH}[ E}c	I}qqEtVF}ayAqYxVyqq[VwAKyX_[VwAKy[Gy{sxVyqzWh{]yX_[P] DjayAqYxVyqq[VYpyXy[q^	:D\WAC STWTQ

 WRPXW 
SWpAXRG^UAW\SKH@FY]\W^^WAWSLCYFIF\JDK@WDZAZUSVUKeIBU\_WTUR_RPWX	WSS	Sm\	SPVT		PUP[TsmW	QSURP\WPSQT	RU
SXW	SU	WT[RQZFDIBQ VVF_WWS\XG_QWCYUXF	3G\WCAS	TVR\
TRQP QrQXP_QZE_S^K]^
T^QBKBDP^^^]\UBUQE@[D@D^CFIITFSBX\PTWBfK@\^]^W\PVPRTQ 	 UPQ PoU	QW RSSm\	
SQTRR UTPQ PWSUXQWXW			U_RQSXME@ASW VF]\TS\ZETP^@YUZD :FB]XQWT
VSQUTR
V
UQ 
WyV]WW_WT]
\PVPRTQ 	 UPQ PoU	QW RSSm\	
SQTRR UTPQ PWSUXQWXW			U_RQSXME@ASW VF]\TS\ZETP^@YUZD :D\WACS PW	  T WRX 
QVpTX\YW]U_VQ\_S@IBFYV_\_\WJTSGB[FIE\AFK@\DQ@ZUXUU@dKBU__\UURTPP\S	TRQ	XnWPU	ZQQmUSS\	PP	TVRQ	XU[W
QPUQ	W WVSS	SZDMACS_TD_UVQ^ZG]X_B[WZF	 ;F^UAA
 TPRT

 UPPT    	QVSrSQX^SX@S_W^ZCIBD[]^__\UAUZDB[DKDUBFIBWMR@XWST\CdK@W^V_UW[WPRWP	URQSoT	QUQXRoW	QSURP\WPS
ST	RU
SXW	SU	WT[RQZFDIBQ VVF_WWS\XG_QWCYUXF	3G\WCAPT	QQRVTRW RQrU]\V]WFY
U\QB@AD[_\^V_UCWQEKXDKF^CEIBUFSIXWQVWBmH@W\]^\WPVSRUQ	W[RQmU	S\SSSnW
PQU
RRWT[RQWRUSS\ST		
UTPQ PXFDBA
P V VM]W TSWYE_Q\@Y^YD	8D\\BC\S
S	WR	U	 R pV_UWTVVUSTW^Q@IIEY]^\_WTAUQGBPEID^AMH@WFQ@YUSTW@d@AU^]\UUPT[SWS	URZ	SoWS	PU	V
\VPfU

XPWPS	UTRZ	SW PW	QQU Q \
TVRQ	XYDF@AXT TD\UTQ^QD]S^@[WQE	:D^UJB
TU	 Q
WPV 	P qW_UU_UVA\_S@IBFYV_\_\WJTSGB[FIE\AFK@\DQ@ZUXUU@dKBU__\UURTPP\S	TRQ	XnWPRU	]W WPmehTV		USQ[TWPPTUR Ro T VWVPSQU	RWPSW	P	U \WPSQQEDBCQVTFTT VQ\XL\Q\B[UXM	8F_WCJUE{prq[T[{pryKy[E~zXqUy\pJp[_UyGWLg[]WaT]B^\\T h[xHDYEav^U}h_YCj@VAxBWhbFO{@]Tz`GZK_D|cE[feDi _]fZR\x@cXfYYup yyqsY`fbYyX]Wp\TFjeVDcb\ia{C}`_UyqxG[zyX]Wp[a}K{C}`_Uyqx@cryyq{Hw[rXjfxZtr ecIueuJje{D`ff_}Kw[qE}v t[f[iekYup yyqsY`f\YyX]Wp[uKy[E~zXqUy\|Z\byyqxX]ibDy[E~zXqUy_\]ryyqxZHyAtc]WprzUjp\p[_Uy_F[\e[|s{prq[QuJ]ryyqx^[ff\RegEcu[|s{prq[Sut Xryyq{F\_TjSz`g\vWDy[E~zXqUy\`CZHyyqx [y}[|s{prq[S @p[_Uy[{~z_ :D_UJB
WE rxssYV[yxs{I{[GwrYsW{\rCxZ]W{GUDeY_Wc\\@\^U\jYq@E[ Gaq^a]AUQybkwmKQSzb	Rx~K		}]\~ ~LPxdDke@PgV_Vv[xYE~q[q^x]t[hqyxsxYSeTCUh{Ek iP}q{{qqPRwIVqyxs{ |v}P}q{{qqPPgcY}[qPd`[|vXP|gD}v\TcHefP}gw| aMdkGvqCt{k_bSxYE~q[q^x]t@hqyxs{H[yJua]W{qzChYY}[qPhhd PKyJua]W{qzLkhcY}[qPUY~s rxssYVz\Nkc{{qzLS\{[GwrYsW{_XORcY}[qPh]^^Qf@}]|]{[GwrYsW{\rQUwUY}[qP}Vc `e`Z~KyJua]W{qz	SxY}[qPUwJJ{[GwrYsW{\~LPc{{qyPuaB	8FBV[Q\
 SV
R VSR		PVTSrD@]DK^_\
WPVSRUQ	W[RQmU 	TS\RPT
nW
PQU
RRWRUSS\ST		
UTPQ PWVPSQZDFBCQT_E_U VZ_XG]S\BPVXF	8FUTCA
QXS V	U[	U 	 UrVGQ[AXQ]VW\XV_WWSW^Q@IIEY]^\_WTAUQGBPEID^AMH@WFQ@YUSTW@d@AU^]\UUPT[SWS	URZ	SoF][@^ooW	QSURP\WPSQT	RU
SXW	SU	WT[RQZFDIBQ VVF_WWS\XG_QWCYUXF	3G\WCAVS
	TVTR	 RWrTEZZH[Z[\@P_WSTW^Q@IIEY]^\_WTAUQGBPEID^AMH@WFQ@YUSTW@d@AU^]\UUPT[SWS	URZ	SoAW_L]ooW	QSURPU

SW
S	U	[RW P WVSS	SU	P\
QST	Q 	U
 WVPSQZDFBCQT_E_U VZ_XG]S\BPVXF	8DK^ZS^
		WQWTSZUPU UVTPWXUTpTGSRIYXY\BYWVUQ
WPVSRUQ	W[RQmAUVD\mmUSS\	PP	TVRQ	XU[W
QPUQ	W WVSS	SZDMACS_TD_UVQ^ZG]X_B[WZF	 ;F^UAA
WSVP
	T UP
R	 TrHPSE\US
U\QB@AD[_\^V_UCWQEKXDKF^CEIBUFSIXWQVWBmH@W\]^\WPVSRUQ	W[RQmAUVD\mmUSS\	PP	TVRQ	XU[W
QPUQ	W WVSS	SZDMACS_TD_UVQ^ZG]X_B[WZF	 ;: