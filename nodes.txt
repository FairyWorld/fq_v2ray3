D]W@CWG]TyrsP{]tXjr{{ZkK|[{N|IJ}bO|dcZ|p]P{ssTy\tGhs{y[k{YExyrsP{sx\R|{Z]ZTyxVwZ^TfJBhh|I|\`kFXR_BPx]yXE|{ssTyrxGhs{y\xZk]kid[~dYuYC|w{ib^hZYI|ec@th^je{ht|X}r{DqYsTyrs^P]dy[]^VZ|p]P{ssTy_p_VwUZX{AQxxEjyd]Vw^ERX
^~q]TyrsP{^pES_c^}Y{~u^~q]TyrsP{^pIy[]^f[vbbsOdwT}[sNID}bN|IsD~e]Mc{@sXsP{ssZTvJM{Z]ZTvJM{YExyrsP{sxUip[{Z]ZR\Bhc{@sXsP{ssZTX{{Z{Zs_
8F_VCBUE\WxqvUy_u[kq~yXjH}X~K~K|qK}XjY}sXUyqrWx_qBjqzxXny[D{xqvUyqy_SyyX\YS_ajuuF}_ei G[S\zGRy^x[@yyqrWxq}BjqzxXu^}XW[h_y_|eyYfTF~vT~aZjXi[}fn ~fz |_bE}vaYK~As[rWxqv[R_e xXX[T~Y}sXUyqrWx\uZTuTY~[~DTu
DS}KRPFx[@yyqrWxq}ERy xXX[~vbJx[@yyqrWxq}ESKzxYbbwfW|fryvzG|XzF}vvD|XTU}vf|Hr[|s\WxqvUy\aCRK~y\aCRK~As[rWxqv[Tz_Gka~y_FS_b[|s\WxqvUy\jY~[~KyUC	;DZWCA	W@]W{pqV{Zt[hpy{]kH~YyH|N}pI|sYY~r_V{tsW{^vAht{{Yi{^E{{pqV{tx_P ~{]]YVfXhptF~^b kF[P]}DPx^{ZGz{tsW{pzAht{{YXXM|\|tvX~cs}taE|sVXk` |pd]~gb[}pwH|^eKkZw`yBq^sW{pqXPZd {Y_XVY~r_V{tsW{]rYVpUY}ZyGVpZ\kkb]Q^
Y~r_V{tsW{]rGQYcY}Zy|sY~r_V{tsW{]rK{]]YfX	t`dsHg}V]sIJ FdI|JqF|c]J`yBq^sW{pqXVpJJ{Y_XVpJJ{ZGz{tsW{pzWop\{Y_XPZEh`yBq^sW{pqXV^{{YyXqY8E]TADVG^U~qqUz]wYmqyzZtJyq}IzqH}sxAt[qUzsp[ne\YzZ^[yXa[q^U~qqUz]YDTa[|Y{[me^W]AmeXicYmuH]^SqyApYpU~qq[Rg`[x[y~Zg^mu}}s Yxfa dcXzeiFj]dKn[Z~|Hz_ijJkYz y[q^U~qqUz]^Sqyz^UH~[GyzspU~qzEjhc]~X_[IDneDzYFy~qqUzs{EUzzZ^[yvaHzYFy~qqUzs{ETKyz[beweU~d|E~vyE~Z|FzvuF~ZRUzve~Jt[{s_UzspU~\bAPIx~\bAPIxAt[qUzsp[Sz\Eicx~_DQ]d[{s_UzspU~\i[|YxK~U@9F]WDA
RTR
WR	

USU QT	RRrH[QE_PC
WYQBKCDX]Y^]]UARQE@ZDHC^CGIAW
FSBXTSSWBfJ@TY]^WTPVQRWQ 	RPPShU
QUTW
P
VURWpoR

PSWQPUTRRSWPV
VQUV T

WQRQ	PZCF@APT UD_RTP^YGZS^@ZWYF:D_UBAP
VWPU	WQPU SrTZY\RXD_V\B^\W]SCKGFY]]_]YWAVSD@^FIG\BCK@WDRBZUSWUCfNBU]__WURWUPWP 	VPT	SlTRW	QQRhU
VSWSP	VVPT	SUPT
QRWQ 	 R
WVQSVZDFCCVTWF_UVR\_G]S]BXU_F	9DC]]S^UUSTTTP SVR
R
pU^UV_R]^	URWUPWP 	VPT	SlTRW	QQRhU
VSWSP	VVPT	SUPT
QRWQ 	 R
WVQSVZDFCCVTWF_UVR\_G]S]BXU_F	9F]WDA
QPR		QUSQPSr][_[V]P]UR
U\PBHBC[_\^^\RCWPEC[CKF_CFNBUGSA_WQVVBeKGW\\^TWQVPUUQWSQQmUSTSRSmWSVU
RUWUSQQVRUSSTS
W	RTPPS_FDB@S VVEZW US_ZB_Q\AYVZC	8E\TADTUPW	
VRPQ	
SWSwQX[]QY@QVR\S@J@E[X\\\^TDWSGAYEK
F\ADHBRDQCYWVVU@gIAW
\_\VW RTRSRSWQSVmWSVTQQnR

PSWQPUTRRQWPV
VQUV T

WQRQ	PZCF@APT UD_RTP^YGZS^@ZWYF:D_UBASWQTP	WWQ	R Q	PrP_UU^UF\ T\T@IBGY^\
\_\VBWTGB[GIF[AFJ@TCQ@[UPVR@dKCU\X\UUUTPQTS
	WRQ	PmW
SU	RVQmU	SRT
PQ	WQRQ	PRSWQSUQW
	VVPT	S[DEBDSWTD^U QQ^ZF]P\E[WZG	8A^UA@

UPR

 RP
V P	sT^URV_UVRTU_QEK@FZ__Y]^WCTQB@YFJE^DDKCUFTBZVQUWEfIBV_]YWVPQRPUV 
TPS
QnRPPW
T
U	WUoV
 QSU	UP
TTPS
QW 	RR
RPW	RU WUSQQZGDAAQV QF_VTT\XG^Q_@^UXF
	;D[WCA	QW P
 WUT   UrT]TUZWUB
U\PBHBC[_\^^\RCWPEC[CKF_CFNBUGSA_WQVVBeKGW\\^TWQVPUUQWSQQmUUQTT	W 	TRm`jW	V VSTRWU	USWTP	Q n  VTUWUQRTQWSQRSW	UTRRSXFG@BS UTC]WWQYZE_R^C[PZD
:G_RACTEyyqrYU[~yqzIx[@|s[rWx\uHyX\WxGREdY\Wd
]^@_Y^]i^zAGZ Das\\~k]XCoB_B{@VhgDFxC_UzeESH\F}fGRefFh ]TeXS\}Bj [ ~f\[|s{xqv[iea[xXXUy_WDkeSFja^ha~Atc\Wxq}ERy xXXUyXb |K~Atc\Wxq}Bjqzxq~J~XqZkf}X}q~efK|fvHke~Fiee]|K~XrG|vz}XeYhen[|s{xqv[ie_[xXXUyXvIx[@|s[rWx\yXUazxq}ZTjaFx[@|s[rWx_^Tqzxq}SKzCucXUyqy Tju^yX\Wx_DR_fY}syyqrYPuHTqzxq}\Ree^SebGj vY}syyqrYRuqQqzxq~DU\WhRzeeUuTFx[@|s[rWx\eASKzxq}Rz~Y}syyqrYR ByX\Wx[~|s\;DZWCA	W@{{pqXV^{{pyH{^E~qZqV{YpJ{Y_V{BWGgX_Ra__A\\\_ j[xCFYGdsWc XC\R{cnudIPS` Q{}~N ~^]~|ES{fEk`ISdT^VsY{ZGq^sW{^vZht{{pzXS`VJVkyDkkY~r z{tsYQt	HVt{{py|sY~r z{tsYSdaX}^sY|gbZ|sZYeE}s^]|` I`dY~du |cD|giFssJ|wykZ`Z{ZGq^sW{^vAht{{pyI^{Cvb_V{txJk [X}^sYkkfPN{Cvb_V{txEhkaX}^sYV }X~v{{pqXV^Gh`y{txEP]{^E~qZqV{ZZFQ aX}^sYk^\_QdI~^~\{^E~qZqV{YpXVtWX}^sY~ Tci|fb[~N{Cvb_V{tx P{}X}^sYVtHK{^E~qZqV{Y|ES`y{t{Yvb@8C@_XR^	RTQWSP 
RSV PpE@XFB]]]UUTPQTS
	WRQ	PmW	
VSU	SUVmU	SRT
PQ	RSWQSUQW
	VVPT	SUWUQRXEFGART VF]TTS\[E\SY@YU[D=D\W@CSQPV
WR
T 	VpWGTYH[R_WWYZ_\TVSU_QEK@FZ__Y]^WCTQB@YFJE^DDKCUFTBZVQUWEfIBV_]YWVPQRPUV 
TPS
QnFXYI]lnR

PSWQPUTRRSWPV
VQUV T

WQRQ	PZCF@APT UD_RTP^YGZS^@ZWYF:D_UBA	WS  	UVWQ QUrQGSYKY[[YBY\TRTU_QEK@FZ__Y]^WCTQB@YFJE^DDKCUFTBZVQUWEfIBV_]YWVPQRPUV 
TPS
QnAR]E^lnR

PSWQPV
V U P
TRQW	RRTPPSW
PUPVW
P V	
	UWUQRXEFGART VF]TTS\[E\SY@YU[D=FB]YQ_

RSTWQSVRT VUUPR
QVVqTBQ[JZZX\G[^UWPUUTPQTS
	WRQ	PmDW_G_omWSVU
RUWUSQQVRUSSTS
W	RTPPS_FDB@S VVEZW US_ZB_Q\AYVZC	8E\TADWVTSTVR
P  	UwJYPF^UV T\T@IBGY^\
\_\VBWTGB[GIF[AFJ@TCQ@[UPVR@dKCU\X\UUUTPQTS
	WRQ	PmDW_G_o mWSVU
RUWUSQQVRUSSTS
W	RTPPS_FDB@S VVEZW US_ZB_Q\AYVZC	89