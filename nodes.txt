D]WABWG]UxrqP{]tYkry{ZwJr|I~r|Y{ArXqP{ss[hf\\{Z][[a^~q]UxrqP{]ZDRa^}Yx[kf[V]Akf]hcYkvM~]^UryDqYsUxrq^Sgc[~XzZ|J fakI|[yM~dcku}CkZUE|b |tVXhe\[|Z{Jua^~q]UxrqP{]^Ury{^VHxXG|{ssUxrz@kh`]x[_^~|R\GA{YEyxrqP{sxESz{Z][uaM{YEyxrqP{sxERHy{[bctePdExuy@Z{F|euCtQU|u[tw[}p_P{ssUx_bDQI{x_bDQI{ArXqP{ss[Uy\@hc{x\AP]g[}p_P{ssUx_i^}Y{KxV@8F_WBB
UE]VxsvUy_tZks~yXwIs~KI|tbG}K{BrYvUyqsXhg[YyX]XZf[|s]VxsvUy_ZGRf[[xkg}Yie
DkxaXQ `DRIDS_QX}qXUyqsVx][YyX]X~tvjvkhZzFjXYK|s}XQ}gr} {E]z iX|Y}Xje{ xY@yyqsVxs}GjjcX~Y}SK{BrYvUyqsXRwqQq{xY]ijpFTc[|s]VxsvUy\pGR^f[[{tz[|s]VxsvUy\pKxZX[dYtccvJ}fV|ZvK}[I|cE~KsF~dXE}a{BrYvUyqsXUwOHyX]XUwOHy[EzxsvUyqxThu^yX]XS]Gja{BrYvUyqsXUY~yX{Xr^:D_TBCWE^VytsW{_wZjt{{XtI~t |KI}sQEfVy^E{{qpVytxXSe`X^{|qxBs^sW{qpXQpJVqxyY`IVjc^jYdCP_gKSN[VeCjpJ~_HjN{Cq[pVytsYSe`X^{|X{Yi]c }a Ys ~fcX}scD}vp}^}ekZ~McG}fZcsY~s^VytsW{_]Tt{{\UKy^E{{qpVytxGkjc^y]]Y~ w_jd
Y~s^VytsW{\sGSYcY}[x~sY~s^VytsW{\sKy]]YfYtbdsHftV}]sI[I}dG|KpFc]GaxBs^sW{qpXTpJJ{X^XTpJJ{[FzytsW{q{Uop\{X^XRZEhaxBs^sW{qpXT^{{XxXsY8D\TCDWF^W~qqU{\w[mqy{[tHyq|HHzveGeR~[Gy{rpW~qzZSf`Yx[y |rxCt[qU{rpYVu	HVrx~_^VvcXUKYVfBmuH~\ImKyAqXpW~qq[Sf`Yx[z^hu`nfa ryv\Z~e`HnfSF}ehGyK[uVImuavxJzu}[~p^W~qqU{\\Sqy{_UJ~[Gy{rpW~qzEkic_~X_[~YFTueD{XF{~qqU{r{GUz{[^YyvaH{XF{~qqU{r{GTKy{Z`eweUet~vyE[xDzfuFuRWzv[utY{s_U{rpW~\bAQHx~\bAQHxCt[qU{rpYSz\Ehbx~_DP\dY{s_U{rpW~\i[}XxI~U@8G]UDA
RVR
WS	
TSU QT RRrH[PD_PC
UYQBKBEX_Y^]\TCRQE@[EHC^CFHAU
FSBYTQSWBfKATY]^WTPVPSUQ RPQQhU
PUTWR
W	URWqnR

PQWPRUTSRSWPWVQTV T	
UQRQPXCF@APT TE]RTQ_YEZS^@[VYD:D^TBCPWWPU
		WPP U RpTZY\SYD]V\B_]W\RCIGFY]\__YWAWRDB^FIF]BCK@WER@ZUSVTCdNBU\^_UUSWUPWP	WRT	SmTSU	QPRhU
	VSW
SP	WWRT	STPT
QSUQ  R
WVPR	VZDFBBVTWD_U WR^_G]S\CXW_F	8EC_]S^UT QTTVP SVSR
pU_TV]R]^USWUPWP	WRT	SmTSU	QPRhU
	VSW
SP	WWRT	STPT
QSUQ  R
WVPR	VZDFBBVTWD_U WR^_G]S\CXW_F	8G]UDA
PRR			QTSQ  PSr][^ZV_P]USU\QCH@C[_\_^^RCWQDCYCKF^BDNBUFRA_WQVWCeIGW\]_TWPWRUUPWSSQmTSTSSRoW
QVU
SUWTSSQW	RTSST	S URTPQQ_FDBAQ V WEZW TR_XB_Q\@XVXC	8D]TCDVUPW		WSRQ	 RWQwQX[\PYBQVR\S@KAEYX\\]_TDWSG@XEI
F\AEH@RDQBYUVVU@fHAU
\_\WU RTSSRS 	WPR	VmWSW	TQQ nR

PQWPRUTSRQWPWVQTV T	
UQRQPXCF@APT TE]RTQ_YEZS^@[VYD:D^TBCSVSTP
WWP	 R PPpP_UU_TD\T^T@IBFX^^
\_\WBUTGB[FHD[AFKATCQ@ZTPTR@dKBT^X\UTUTPPTSURQPoWQURVQmT	SSTPPUQRQPRSW
PQUPW	WWRT	SZEE@DSWTD_TQQ^ZG\P^E[WZF:A^UAA
UP	R 

 RP
W P	rU^WRV_UWRVT_SEK@F[^_Y]^WBTSB@YFKE\DDKBTDTBZWPUUEfIBW__YWWRQRPTV TPSPnRPRWUUWUoW	 QST	UPTVPSPU 	SR
SPW	S	U	 WTSSQZFEACQ WQF_WVT\XG_P_B^UXF;F[WCAQW  P
  UUU  	UrU\TWZWUCU\QCH@C[_\_^^RCWQDCYCKF^BDNBUFRA_WQVWCeIGW\]_TWPWRUUPWSSQmTUPTT
U 	TSo`jW	T WQTRWT	USVTP	Pn  WTTWUQSTPUSPRS W	
 	UTSRSXFFABS TVC]WWSYZE_S_CYPZD;G]RACTGyyqsXUY~yq{HxY@|s[sVx^uHyX]VxEREeX\Ud
]^A_Y^]i^zAG[Dcs\\~j\XAoB_BzAVjgDFxB^UxeESH]G}fGRegGh]TeYS^}Bj Z~d\[|szxsv[ie`ZxZXUy_VEkgSFja_hc~Atc]Vxs}ERxxZXUyXc|I~Atc]Vxs}Bjq{xs~J~Xp[kd}X}q~gfK|fwIkg~Fied\|I~XsF|tz}XdXhgn[|szxsv[ie^ZxZXUyXwHxY@|s[sVx^yXUa{xs}ZTj`GxY@|s[sVx]^Tq{xs}SK{BuaXUyqxThu^yX]Vx]DR_gX}qyyqsXPwHTq{xs}\Red_SgbGj wX}qyyqsXRwqQq{xs~DU\ViRxeeUuUGxY@|s[sVx^eASK{xs}RzX}qyyqsXRByX]VxY~|s\;FZWCAU@{{qpXT^{{qxHy^E~q[pVyYpJ{X^VyBWGfX]Ra_^A^\\_h[xCGXEdsWb XC\SzcnudHPQ` Qz||N ~_ ]||ESzgEi`ISeU^TsY{[Fs^sW{_wZjt{{q{XQ`VJVjxDikY~szytsYQuHTt{{qx~sY~szytsYSe`X^sY|fcZ~sZY dEs^]|aI}`dY~et ~cD|fhF}ssJ|vxiZ`Z{[Fs^sW{_wAjt{{qxI}^{Cvc^VytxJkZX^sYkjgRN{Cvc^VytxEhj`X^sYV|X|v{{qpXT^GhaxytxEP ]y^E~q[pVyZZFQ`X^sYk_]_SdI~_\y^E~q[pVyYpXVuVX^sY~Uai|gc[|N{Cvc^Vytx Pz|X^sYVuIKy^E~q[pVyY|ESaxyt{YvcA:C@_XS_	RUPWQP 
SSV QqEBXFB]\]
TUTPPTSURQPoW	WQUSUVmT	SSTPPRSW
PQUPW	WWRT	STWUQSYEDGASV VF\TTS\ZD\QY@YUZE	=D\WABSQPT

WRT	VqWETYH[S^WUYZ_\UVQT_SEK@F[^_Y]^WBTSB@YFKE\DDKBTDTBZWPUUEfIBW__YWWRQRPTV TPSPnDXYI]m nR

PQWPRUTSRSWPWVQTV T	
UQRQPXCF@APT TE]RTQ_YEZS^@[VYD:D^TBCWQ  
UTWP PTpQGSYJX[YYBY\URVT_SEK@F[^_Y]^WBTSB@YFKE\DDKBTDTBZWPUUEfIBW__YWWRQRPTV TPSPnCR]E^mnR

PQWPRW	V T PTRPU	SRTPQQWRU	PVWPW	TWUQSYEDGASV VF\TTS\ZD\QY@YUZE	=FB]XP_

RSTVQSVSTVTURR
QVWqVBQ[J[[X^G[^UVP
TUTPPTSURQPoDW_G^noW
QVU
SUWTSSQW	RTSST	S URTPQQ_FDBAQ V WEZW TR_XB_Q\@XVXC	8D]TCDUVTS	VWSP   UwJYPG_WVT^T@IBFX^^
\_\WBUTGB[FHD[AFKATCQ@ZTPTR@dKBT^X\UTUTPPTSURQPoDW_G^n oW
QVU
SUWTSSQW	RTSST	S URTPQQ_FDBAQ V WEZW TR_XB_Q\@XVXC	88