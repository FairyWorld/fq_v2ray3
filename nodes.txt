D]WACWG]Uy{pQ{]tYj{x {ZkJ|RxO|I{NtY[|y^Q{ssUyUwFhs{yRh{YEyy{pQ{sx]R{Z][T
g_hwtD|UckFYRV|CPx\yQF}{ssUy{{Fhs{yRU^|tYj|~dQK}BVB|wc ~A _Z|otA|gt[i
|OkwKjQxEqYsUy{p_P]dyR^_V[|y^Q{ssUyVs^VwU[Qx@Q]tEQo`@{YEyy{pQ{sxER{{Z][~|`L{YEyy{pQ{sxESAx {[bb}dQdwHy|xAZ{F}|VBdkU}lV Jw[|y^Q{ssUyVcEQI{yVcEQI{AsQpQ{ss[Tp]Ahc{yU@P]g[|y^Q{ssUyVh_}Y{Ky_A8F_WCKUE]WqrwUy_t[bryXwHvr~KwbJ}vsYtpYUyqsWq\pBjq{q[oy[E{qrwUyqx_ZxyX]Ya\`GjjhFZv`Gi gEbvdGSKEbig[|s]WqrwUy_^[q[Y[iXYu[c~XwDaKUK~a wu{|e{vKoFiXdZb[sHie|ZaK^[y[E{qrwUyqxEbig[[x[HAs[sWqrw[Sut Yry[\ai|AUa
YtpYUyqsWq_tDS\cYwX~vYtpYUyqsWq_tHyX]YlZwbasHuKwU}XsIuXEqHvXwJv]JubAs[sWqrw[TuJJq[Y[TuJJqXAyyqsWqr|Ujp\q[Y[R_EbbAs[sWqrw[T[{q[[s\2G[WCATA]W{qq_x[t[hqyx\kH~XyAOq|u{Cq[q_xusYke\Sx\]Y|XaQ}w]W{qq_x[ZFQaQ~_xEhjbSha
EhzfRP`EQKNR[QY~s__xusW{_\Sx\]Yfu~qeaL|Lck[ ~qcJ~fXTkbUDHS|bxY|_u\k{[GsxusW{qzMkncY}[zRO{Cq[q_xusYQuvPu{{[	MkaVChe~}O{Cq[q_xusYQu	AUu{{Xa|O{Cq[q_xusYQz}Q~_xfb~xrwH|aqA|r{I~fq}bw{vu~\H{[GsxusW{qzS~Y}[zS~Y~s__xusW{\bRqgY}[zMS\{[GsxusW{qz
x\]Y[ysWg8D]]BEWGWVqqU{]~Zlqy{ZaIzXyK|IHxqJ|ZyXzs_U{syV_vBhsqXi{YOzqqU{sr^T~{ZWXR f[hw~Gz_bYP^uDT_f{YOzqqU{srAlqy{ZuH{viE|ZSzfSJaExu~XIlXa~dix_iKhwaoXukcqBu[qU{syXT_f{ZWXR}[~qWVqqU{^zYRuW[}YqGleEShr]zKyAqYyVqq[QwHRqy{Zi{KyAqYyVqq[QxuXy[z}f jwvuJ|IyH{vyK~dyzfu {t}yX}J{YOzqqU{srTz}[}YrTz}[~qWVqqU{^jUue[}YrDT ^{YOzqqU{srX_[YqzPc8FTTEA
[WS
WS 	
UZT QT	[SrH[PEVQC
TXQBKBDQ^X^]\UBSQE@[DAB^CFIHTFSBX]PRWBfK@]X]^W]PVPRTQ 	SPQPiU
QTTWS
WTRWqoS

YPWPSUTR[SWPW	WQUW ]
TPRQ	YYBF@AYT TD\STQ^PD[S^@[WPE:D^UKBPV^PU
  WPYT SqUZY\SXM\W\B_\W\SJHFFY]\V^XWAWSMC_FIF\KBK@WD[AZUSVUJeOBU\_VTUR^TPWY	WSU	Sm]ST 	QQ[iU
WSW
ZP	WVSU	SUP]
QSTQ 		S
WVPSWZDFBCWT^E_U V[_^G]S\BQV^F	8DJ^\S^\TPU]WP RVS	S
pU_U_\S]^UR^TPWY	WSU	Sm]ST 	QQ[iU
WSW
ZP	WVSU	SUP]
QSTQ 		S
WVPSWZDFBCWT^E_U V[_^G]S\BQV^F	8FTTEA
QSS	 PUZQ Y Rr][^[_^Q]US
U\QBAAB[_\^W_SCWQEJXBKF^CEOBUFSH^WQVWBlHFW\]^]WPVSTUQ
WZRQmUS]SSSnW
PWU
RTWTZRQWRUSS]ST	STPQP^FDBAP V VL[W TSVYC_Q\@Y_YB	8D\]BEWTPW 	WRSP	S^PvQX[\QPCQVS\S@K@LXY\\]^]EWSG@YLHF\ADAASDQBPTWVU@fIHT\_\WTRTRZSS WPSWmWSWUQQgS

YPWPSUTR[QWPW	WQUW ]
TPRQ	YYBF@AYT TD\STQ^PD[S^@[WPE:D^UKBSVRUP
	^WP S P	YqQ_UU_UE]]_U@IBFYW_\_\WKTUGB[FIEZAFK@]BQ@ZUYUS@dKBU_Y\UUTTPP]S	TRQ	YnWPU	[WQmU SS]	PP	TPRQ	YSZW
QPUQ
W  WVSU	SZDLAES^TD_UPQ^ZG]Y_D[WZF	;@^UAA

UP[

	 SP
W  P	rTWVSV_UW[WUVRDK@F[_VX]^WC]RC@YFKL]EDKBUEUBZWQ\TDfIBWV^XWWSPRPUW ]PSQgSPSWT	U	^ToW	QSU TP]WPSQT	RS
SYW	SU	WTZRQZFDHBQ VPF_W
WU\XG_QVC_UXF	2GZWCA PW Y
	TTT  	TrU]]V[WUC
U\QBAAB[_\^W_SCWQEJXBKF^CEOBUFSH^WQVWBlHFW\]^]WPVSTUQ
WZRQmUTP]T
	T	TRnajW U WPURWU TSV]P	P g  VTU^TQS]PT SQSS  W	
UTR[SXFF@KS T
WB]W^RXZE_S^JXQZD:N\SAC]FyyqsY\Xyq{IqXA|s[sWq_tHyX]WqDSEeYUTe
]^@VX^]`_zAG[ Mbr\\~j]Q@nB_Bz@_kfDFxB_\ydESH]FtgGRegFa]TeXZ_|Bj Z we][|s{qrw[ie`[q[YUy_VDbfRFja^abAtc]Wqr|ERx q[YUyXc uHAtc]Wqr|Bjq{qrJ~XpZbe|X}qwfgK|fwHbfFied]uH~XsGuu{}XdYafo[|s{qrw[ie^[q[YUyXwIqXA|s[sWq_xXUa{qr|ZTj`FqXA|s[sWq\^Tq{qr|SK{C|`YUyqx ]it^yX]Wq\DR_gYtpyyqsYYvHTq{qr|\Red^ZfcGj wYtpyyqsY[vpQq{qrDU\Vh[ydeUuUFqXA|s[sWq_dASK{qr|RzYtpyyqsY[ByX]WqX|s\2G[WCATA{{qqQU_{{qyAx_E~q[q_xXpJ{X__xCWGgQ\Sa_^H_ \\_ i[xCGYDesWc	YC\S{joudIYP~` Qz}}O ~_T}|ESzfLhaISeTWUrY{[Gvr_sW{_vSku{{qzQPaVJVjyMhkY~s sxusYQu	AUu{{qyrY~s sxusYSeaQ~_sY|fbSrZY eL~r^]|a @|adY~eu	cD|fiO|rsJ|vy
h[`Z{[Gvr_sW{_vHku{{qy@|_{Cvc__xuxJk[Q~_sYkjfSO{Cvc__xuxEhjaQ~_sYV}Q}w{{qqQU~^GhayxuxEP Tx_E~q[q_x[ZFQaQ~_sYk_\VRdI~_~Ux_E~q[q_xXpXVuWQ~_sY~T`i|gbR}O{Cvc__xux Pz}Q~_sYVuHBx_E~q[q_xX|ESayxu{Yvc@;B@_XS^	[TP^PP 
RRV QpLCYFB]]TUTTPP]S	TRQ	YnW	VPU	ZTVmU SS]	PP	SZW
QPUQ
W  WVSU	SU^TQSXLEFAS
W VF]]TS\ZEUPX@YUZD<D\WACSQPU

 WR] 	Vp^DUYH[S_^TXZ_\U_PUVRDK@F[_VX]^WC]RC@YFKL]EDKBUEUBZWQ\TDfIBWV^XWWSPRPUW ]PSQgEYYI]mgS

YPWPSUTR[SWPW	WQUW ]
TPRQ	YYBF@AYT TD\STQ^PD[S^@[WPE:D^UKB	^P  
	\UWP  PUqPGSYJYRXXBY\U[WUVRDK@F[_VX]^WC]RC@YFKL]EDKBUEUBZWQ\TDfIBWV^XWWSPRPUW ]PSQgBS]E^mgS

YPWPSW	W U P]RPT 	RSTPQPWSUYWWYW			U^TQSXLEFAS
W VF]]TS\ZEUPX@YUZD<FB]XQV
SSTVQSVR]VT\SS
QVVxWCQ[J[ZQ_F[^UWYUTTPP]S	TRQ	YnEW_G^o
nW
PWU
RTWTZRQWRUSS]ST	STPQP^FDBAP V VL[W TSVYC_Q\@Y_YB	8D\]BETWTSWWR	 P  	\vJYPG^VW]_U@IBFYW_\_\WKTUGB[FIEZAFK@]BQ@ZUYUS@dKBU_Y\UUTTPP]S	TRQ	YnEW_G^o	nW
PWU
RTWTZRQWRUSS]ST	STPQP^FDBAP V VL[W TSVYC_Q\@Y_YB	88