D]WACWG]UyzpW{]tYjzx{ZkJ|SxI|I~zHJU[|x^W{ssUyTw@hs{ySh {YEyyzpW{sx]R
 {Z][iTgEhhhDR~gEkgGj~cEQIGja`Y~q]UyzpW{]^YyS^Y|]xY}C| JQFjSZhY}~t~g{ }SpD}tUHimRh]~ncX{YEyyzpW{sxGja`Y}YxS@xCqYsUyzpYQwtQzx{YFin_Sg^|@xCqYsUyzpYQwKTzx{Zc}@xCqYsUyzpYQx[P{f `ty}tJssK}}xI~ds|mtG{tsHS|H{YEyyzpW{sxRq|Y}YxRq|Y~q]UyzpW{^`S~dY}YxGR\{YEyyzpW{sx yS^YY{yVh8F_WCJUE]WprqUy_t[cryyXkHu[yK~KItbH~a{CzXqUyqsY`f\YyX]Yw[a[|s]WprqUy_ZFZa[[x Z_fQuh[v^SEcyfXQ `EZHDS_QYup_UyqsWp\\YyX]Y`Kj_}H^\vuiF}X^Zvr jXcIufzX~HUDtjY~vQve[E~u|]pXGyyqsWprzGjjcYvXzSK{CzXqUyqsYZvvQq{pX	XQjxZ[veDy[E{prqUyqxG[zyX]YwuaHy[E{prqUyqxGZHyyY`kteU}fwHpuyE}X{Dtu[F}fsWtu}}HwYup_UyqsWp_bASK{p_bASK{CzXqUyqsY]y\Eja{p\DR_gYup_UyqsWp_i[[{IpV@:D_UJB
WE_^xssW{_vRks{{XiA}Z{I|KYJ|[yJrYsW{qqPhg^[{X_PZcY~s_^xssW{_XORcY}[z
kgx[keLkxdZS bLRIFQ_SP}q]W{qq^x]^[{X_Phg{|Hi	kwcD|ei@|s _u}gt]kfeMh{Jhvy
k]gk ~PxYE{{qq^xsxEhjaP~YxQKyJrYsW{qqPRwt SqyxY\PufSUxx@kKP}q]W{qq^x^pFQ\aP~Y{ |v}P}q]W{qq^x^pJ{X_Pe[u`aqA|dWXq@|YG}a A|ssGH_C|c{Cq[q^xssYVuHCxZ]YVuHCxYE{{qq^xsx WjrUxZ]YP_	Lkc{Cq[q^xssYV[yxZ{Yq\ ;F_UAA
UE_U{sxVy_vYhspyXuJ|s~Ks ~[yAqYxVyqq[kgUZyX_[|ZhX|s_U{sxVy_XDQhX[zGhhkZieGhxo[Q bGQIGS_S[~qVVyqqU{]UZyX_[}gtHi a }tRE~fb_s	i yJ~gY}v}F|w|~v~_|tU[}f}J{YNzyqqU{ssDjja[}YsSKyAqYxVyqq[QwQqy{Y KTu	KPcX|s_U{sxVy\rDQ^hX[y|ttX|s_U{sxVy\rH{ZVXdY	w`cxI}feUZxH}[ E}c	I}qqEJVK}ayAqYxVyqq[VwAKyX_[VwAKy[Gy{sxVyqzWh{]yX_[P] DjayAqYxVyqq[VYpyXy[q^	:D\WAC STWTQ

 WRPXW 
SWpAXRG^UAW\SKH@FY]\W^^WAWSLCYFIF\JDK@WDZAZUSVUKeIBU\_WTUR_RPWX	WSS	Sm\	SPVT		PUP[TsmW	QSURP\WPSQT	RU
SXW	SU	WT[RQZFDIBQ VVF_WWS\XG_QWCYUXF	3G\WCAS	TVR\
TRQP QrQXP_QZE_S^K]^
T^QBKBDP^^^]\UBUQE@[D@D^CFIITFSBX\PTWBfK@\^]^W\PVPRTQ 	 UPQ PoU	QW RSSm\	
SQTRR UTPQ PWSUXQWXW			U_RQSXME@ASW VF]\TS\ZETP^@YUZD :FB]XQWT
VSQUTR
V
UQ 
WyV]WW_WT]
\PVPRTQ 	 UPQ PoU	QW RSSm\	
SQTRR UTPQ PWSUXQWXW			U_RQSXME@ASW VF]\TS\ZETP^@YUZD :D\WACS PW	  T WRX 
QVpTX\YW]U_VQ\_S@IBFYV_\_\WJTSGB[FIE\AFK@\DQ@ZUXUU@dKBU__\UURTPP\S	TRQ	XnWPU	ZQQmUSS\	PP	TVRQ	XU[W
QPUQ	W WVSS	SZDMACS_TD_UVQ^ZG]X_B[WZF	 ;F^UAA
 TPRT

 UPPT    	QVSrSQX^SX@S_W^ZCIBD[]^__\UAUZDB[DKDUBFIBWMR@XWST\CdK@W^V_UW[WPRWP	URQSoT	QUQXRoW	QSURP\WPS
ST	RU
SXW	SU	WT[RQZFDIBQ VVF_WWS\XG_QWCYUXF	3G\WCAPT	QQRVTRW RQrU]\V]WFY
U\QB@AD[_\^V_UCWQEKXDKF^CEIBUFSIXWQVWBmH@W\]^\WPVSRUQ	W[RQmU	S\SSSnW
PQU
RRWT[RQWRUSS\ST		
UTPQ PXFDBA
P V VM]W TSWYE_Q\@Y^YD	8D\\BC\S
S	WR	U	 R pV_UWTVVUSTW^Q@IIEY]^\_WTAUQGBPEID^AMH@WFQ@YUSTW@d@AU^]\UUPT[SWS	URZ	SoWS	PU	V
\VPfU

XPWPS	UTRZ	SW PW	QQU Q \
TVRQ	XYDF@AXT TD\UTQ^QD]S^@[WQE	:D^UJB
TU	 Q
WPV 	P qW_UU_UVA\_S@IBFYV_\_\WJTSGB[FIE\AFK@\DQ@ZUXUU@dKBU__\UURTPP\S	TRQ	XnWPRU	]W WPmehTV		USQ[TWPPTUR Ro T VWVPSQU	RWPSW	P	U \WPSQQEDBCQVTFTT VQ\XL\Q\B[UXM	8F_WCJUE{prq[T[{pryKy[E~zXqUy\pJp[_UyGWLg[]WaT]B^\\T h[xHDYEav^U}h_YCj@VAxBWhbFO{@]Tz`GZK_D|cE[feDi _]fZR\x@cXfYYup yyqsY`fbYyX]Wp\TFjeVDcb\ia{C}`_UyqxG[zyX]Wp[a}K{C}`_Uyqx@cryyq{Hw[rXjfxZtr ecIueuJje{D`ff_}Kw[qE}v t[f[iekYup yyqsY`f\YyX]Wp[uKy[E~zXqUy\|Z\byyqxX]ibDy[E~zXqUy_\]ryyqxZHyAtc]WprzUjp\p[_Uy_F[\e[|s{prq[QuJ]ryyqx^[ff\RegEcu[|s{prq[Sut Xryyq{F\_TjSz`g\vWDy[E~zXqUy\`CZHyyqx [y}[|s{prq[S @p[_Uy[{~z_ :D_UJB
WE rxssYV[yxs{I{[GwrYsW{\rCxZ]W{GUDeY_Wc\\@\^U\jYq@E[ Gaq^a]AUQybkwmKQSzb	Rx~K		}]\~ ~LPxdDke@PgV_Vv[xYE~q[q^x]t[hqyxsxYSeTCUh{Ek iP}q{{qqPRwIVqyxs{ |v}P}q{{qqPPgcY}[qPd`[|vXP|gD}v\TcHefP}gw| aMdkGvqCt{k_bSxYE~q[q^x]t@hqyxs{H[yJua]W{qzChYY}[qPhhd PKyJua]W{qzLkhcY}[qPUY~s rxssYVz\Nkc{{qzLS\{[GwrYsW{_XORcY}[qPh]^^Qf@}]|]{[GwrYsW{\rQUwUY}[qP}Vc `e`Z~KyJua]W{qz	SxY}[qPUwJJ{[GwrYsW{\~LPc{{qyPuaB	8FBV[Q\
 SV
R VSR		PVTSrD@]DK^_\
WPVSRUQ	W[RQmU 	TS\RPT
nW
PQU
RRWRUSS\ST		
UTPQ PWVPSQZDFBCQT_E_U VZ_XG]S\BPVXF	8FUTCA
QXS V	U[	U 	 UrVGQ[AXQ]VW\XV_WWSW^Q@IIEY]^\_WTAUQGBPEID^AMH@WFQ@YUSTW@d@AU^]\UUPT[SWS	URZ	SoF][@^ooW	QSURP\WPSQT	RU
SXW	SU	WT[RQZFDIBQ VVF_WWS\XG_QWCYUXF	3G\WCAVS
	TVTR	 RWrTEZZH[Z[\@P_WSTW^Q@IIEY]^\_WTAUQGBPEID^AMH@WFQ@YUSTW@d@AU^]\UUPT[SWS	URZ	SoAW_L]ooW	QSURPU

SW
S	U	[RW P WVSS	SU	P\
QST	Q 	U
 WVPSQZDFBCQT_E_U VZ_XG]S\BPVXF	8DK^ZS^
		WQWTSZUPU UVTPWXUTpTGSRIYXY\BYWVUQ
WPVSRUQ	W[RQmAUVD\mmUSS\	PP	TVRQ	XU[W
QPUQ	W WVSS	SZDMACS_TD_UVQ^ZG]X_B[WZF	 ;F^UAA
WSVP
	T UP
R	 TrHPSE\US
U\QB@AD[_\^V_UCWQEKXDKF^CEIBUFSIXWQVWBmH@W\]^\WPVSRUQ	W[RQmAUVD\mmUSS\	PP	TVRQ	XU[W
QPUQ	W WVSS	SZDMACS_TD_UVQ^ZG]X_B[WZF	 ;: