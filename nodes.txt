D]WACWG]Uy{sW{]tYj{{{ZkJ|R{I|IH}AI|Y{AsQsW{ss[io^[{Z][~RcY~q]Uy{sW{]ZDScY}Yxjox[kg
Gj`EQIGj`cY~q]Uy{sW{]^YyR]YhtYl^\]F|ciR`Y~gtX~|kDt{J}Rg}ts}|w {YEyy{sW{sxGj`cY}YxSA{CqYsUy{sYQwtQ{{{Y]i`xhh||A{CqYsUy{sYQwKT{{{Zc}A{CqYsUy{sYQx[Qxf `ty|wH|IsK}|{I~ds|l{G{twHRH{YEyy{sW{sxRpY}YxRpY~q]Uy{sW{^`SgY}YxGR
\{YEyy{sW{sx yR]YY{yVi8F_WCKUE]WqqqUy_t[bqyyXwHvq~KHuvyG}X{q[GyyqsWqqzZQecYw[y ~q{C{[qUyqsYYu	HTq{q\T^i_`XZKYTe|BbuH|_IbKyAs[sWqqq[QecYw[y}Xh]aXT^j[afq|fcIbeeFe{a[ ~vsGvX}jecGbvi[|s]WqqqUy_\\qyy\VJq[GyyqsWqqzEij`_qX_[| hCaj~]|K{C{[qUyqsY[u	KTq{qXa}K{C{[qUyqsY[z}[[xlbtyvwHuKqK}v{Itfq|f{GqvyHXsHq[GyyqsWqqzRzYw[zRzYts_UyqsWq\bSugYw[zGR \q[GyyqsWqqz yX]Yu[yyVc2D]WCAWG]W{qq_{]t[hqy{ZwH|q|IHvuM|JQY~s__{ssW{_vHhs{{Xi{YE{{qq_{sx_P~{Z]Yk_fMhhhFPufMkgEhubMQIEhjaQ~q]W{qq_{]^[{X_Qh]c}vzRkgkDkHu	}c }vS	~gt[|u}LkgghfytVX}fq{YE{{qq_{sxEhjaQ}YxQKyKqYsW{qqQQwt Sqy{YJP TP\~KyKqYsW{qqQQwIVqy{Zc KyKqYsW{qqQQxY}[zwf `v{vuBssIvyA~ds~fyO{t{J}Xq@{YE{{qq_{sx Pz}Q}Yx Pz}Q~q]W{qq_{^`QueQ}YxEP T{YE{{qq_{sx{X_QY{{Tc8F_UAA
UE_U{syUy_vYhsqyXuJ|s~KJtqGayAqYyUyqq[kgTYyX_[|Zi[|s_U{syUy_XDQi[[zGhhjYieGhxnXQ bGQIDS_S[~qWUyqqU{]TYyX_[b^}XSK|tSFiX[kcjXuE~grX~fSFht}j_ukZyiHf_{YOyyqqU{srGjja[}YrSKyAqYyUyqq[Qw~Qqy{YAR~H~IqAs[qU{sy[Su	KVsqyXaIqAs[qU{sy[Sz}[}Yr}dbt{t}J~aqKtqK|fq~dqEyvyH}ZyJy[Gy{syUyqzPxu[[zPxu[|s_U{syUy\bQwm[[zGP^y[Gy{syUyqz {ZW[}[yyTa:D\WAC STW
WQ

WRPYT SWp@[RG^UAW\SJK@FY]\V]^WAWSM@YFIF\KDK@WD[BZUSVUJfIBU\_VWUR^RPWY 	WPS	Sm]
SPVW		PUPZWsmW
QSU RP]TPSQW	RU
SYW	SU		WTZQQZFDHAQ V VF_W
TS\XG_QV@YUXF	2D\WCAP	TVR]
	WRQP 	QrQXQ\QZE_S^J]^
W^QBKBDQ]^^]\UAUQE@[DAD^CFIHWFSBX]STWBfK@]^]^W]PVPRWQ 	UPQSoU	QWQSSm]

SQWRRUTPQSWPUYQWY W	
	U^RQSXLF@AS
T VF]]TS\ZEUS^@YUZD:FB]XQVT

VSQ	UTR VVQ 
WxU]WW_WU^
]PVPRWQ 	UPQSoU	QWQSSm]

SQWRRUTPQSWPUYQWY W	
	U^RQSXLF@AS
T VF]]TS\ZEUS^@YUZD:D\WACS PW	 TWRY QVpU[\YW]U_UQ]\S@IBFYW\\_\WKWSGB[FIF\AFK@]DQ@ZUYVU@dKBU\_\UURTPP]S	WRQ	YmWSU	[QQmU SS]
PP	WVRQ	YUZW
QSUQ
	W WVPS	SZDLBCS^TD_U VQ^ZG]Y\B[WZF	8F^UAA
 TPR
W

	UPPT  	QVSrSP[^SX@S^W^[@IBD[]^\_\UAU[GB[DKDTAFIBWLQ@XWST]@dK@W^W\UWZTPRWS	URQSoW	QUQYQoW
QSU RP]TPS
SW	RU
SYW	SU		WTZQQZFDHAQ V VF_W
TS\XG_QV@YUXF	2D\WCAST	QQRV	WRW 
RQrU]]U]WFY
U\QBABD[_\^W\UCWQEJ[DKF^CFIBUFSHXWQVWBlK@W\]^]WPVPRUQ
	WZQQmU	S]SSS	mW
SQU
RRWTZQQWRUSS]SW		UTPQSXFDBAS V VL]W TSVZE_Q\@Y_ZD	8D\]AC]P
S 
WR
U RpV_UWTWUUSTW^Q@IHFY]^\_VWAUQGBQFID^ALK@WFQ@ZUSTW@dABU^]\UUPTZPWS	UR[	SoWP	PU	V
]VPgU

YSWPP	UTR[	SWPW
QQUQ ]
WVRQ	YZDF@AYT TD_UTQ^PG]S^@[WPF	:D^UKA
TU Q
 WP V P rW_UU_UUA]\S@IBFYW\\_\WKWSGB[FIF\AFK@]DQ@ZUYVU@dKBU\_\UURTPP]S	WRQ	YmWPRU	\WTPmehWV	USQZWWPSTURRo 	T V
WVPSQU	RW SSW	S	U]TPSQPFDBCQ VTFUW VQ\XM_Q\B[UXL	8F_WCKUE{qqq[T[{qqyKy[E~{[qUy\pJqX_UyGWMg[]WaU^B^\\U h[xIGYEav^T~h_YCj@WBxBWhbFNx@]Tz`G[H_D|cEZeeDi _\eZR\x@b XfYYts yyqsYaebYyX]Wq_TFjeVDba\ia{C|c_UyqxGZzyX]WqXa}K{C|c_Uyqx@bqyyq{HvXrXjfxZuq ecItfuJje{Daef_}KvXqE}v uXf[iekYts yyqsYae\YyX]WqXuKy[E~{[qUy\|Z]ayyqxX\jbDy[E~{[qUy_\\qyyqx[KyAtc]WqqzUjp\qX_Uy_FZ_e[|s{qqq[QuJ\qyyqx^Zef\RegEb u[|s{qqq[Sut Yqyyq{F]\TjSz`g]uWDy[E~{[qUy\`C[Kyyqx Zz}[|s{qqq[S @qX_Uy[{~{\ :D_UKA
WE s{ssYV[y{s{I{[GvqYsW{\rB{Z]W{GUGeY_Wc _\@\^T_jYpCE[ Gaq_a]ATQybkwlKQSzbQx~K	~]\~ ~MSxdDkeASgV_Vv[{YE~q[q_{]t[hqy{sxYSeTBVh{Ek iQ~q{{qqQQwIVqy{s{ |v}Q~q{{qqQSgcY}[qQ|d`[|vXQgD}v\U|cHefQ~gw| aL|dkGvqB|t{k_bR{YE~q[q_{]t@hqy{s{H[yKva]W{qzBkYY}[qQkhd PKyKva]W{qzMhhcY}[qQVY~s s{ssYVz\Ohc{{qzMP\{[GvqYsW{_XNQcY}[qQk]^^QfA~]|]{[GvqYsW{\rPVwUY}[qQ~Vc a|e`Z~KyKva]W{qzPxY}[qQVwJJ{[GvqYsW{\~MSc{{qyQvaB	8FBWXQ\
S
VR VSR
PVT SrD@]DJ]_\WPVPRUQ
	WZQQmU	TS]RPTmW
SQU
RRWRUSS]SW		UTPQSWVPSQZDFBCQT^F_U V[\XG]S\BQUXF	8FTWCA
QYP V 
UZ	U 	VrVGQ[@[Q]VW\XW\WWSW^Q@IHFY]^\_VWAUQGBQFID^ALK@WFQ@ZUSTW@dABU^]\UUPTZPWS	UR[	SoF][A]ooW
QSU RP]TPSQW	RU
SYW	SU		WTZQQZFDHAQ V VF_W
TS\XG_QV@YUXF	2D\WCAVS
TV	WR	 
RWrTE[YH[Z[\@Q\WSTW^Q@IHFY]^\_VWAUQGBQFID^ALK@WFQ@ZUSTW@dABU^]\UUPTZPWS	UR[	SoAW_M^ooW
QSU RPU

S  W
P	U	ZRWP WVPS	SU	P]
QSW	Q 		U
WVPSQZDFBCQT^F_U V[\XG]S\BQUXF	8DJ]ZS^
	WQTTS[VPU VVTPWYVTpTGSSJYXY\BYVUUQWPVPRUQ
	WZQQmAUWG\mmU SS]
PP	WVRQ	YUZW
QSUQ
	W WVPS	SZDLBCS^TD_U VQ^ZG]Y\B[WZF	8F^UAA
WSVS
	T	UP
R  TrHQPE\US
U\QBABD[_\^W\UCWQEJ[DKF^CFIBUFSHXWQVWBlK@W\]^]WPVPRUQ
	WZQQmAUWG\mmU SS]
PP	WVRQ	YUZW
QSUQ
	W WVPS	SZDLBCS^TD_U VQ^ZG]Y\B[WZF	8: