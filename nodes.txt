D]WACWG]UyzqU{]tYjzy{ZwJ~z|I~PKZ{[|x_U{ssUyTvBhs{ySi{YEyyzqU{sx]R
~{Z][RTfhwtD|TbkFYRW}GPx\yPGy{ssUyzzBhs{ySj[k]wj~uJ~dYi}F|t^X}@ hgcE|neJgKjnz[hZ{KjyAqYsUyzq[P]dyS_[V[|x_U{ssUyWrZVwU[PyDhhZZi
aD{YEyyzqU{sxER
z{Z][~}aH{YEyyzqU{sxES@y{[bb|eUdwy}yEZ{F}}[Ft{U}SuJw[|x_U{ssUyWbAQI{yWbAQI{AsPqU{ss[Tq\Ehc{yTDP]g[|x_U{ssUyWi[}Y{Ky^@8F_WCJ
UE]WpssUy_t[cs{yXkHuZ{K~KHvcK}fUYuq]UyqsWp]tBjq{pZky[E{pssUyqx_[|yX]Y]d[jutFu]`i F[[^GRx^pYEyyqsWpsxBjq{pZU ~XsItwh^|fwH`wF~v^ZtY[iHQug{i_wJ`Y}ekvc{As[sWpss[R_d pZ][TYuq]UyqsWp^pZTuUYvY{DjjZX[g^Gja
Yuq]UyqsWp^pDS\cYvY{~vYuq]UyqsWp^pHyX]Ym[wbasHtdU}XsItYEaGtYsK}f]Jtc{As[sWpss[TuJJpZ][TuJJpYEyyqsWpsxUjp\pZ][R_Ecc{As[sWpss[T[{pZ{[s\3F_WCAUE]W{qq^y_t[hqyyXwH|q	~KHvqL}XsJ{[GryqsW{qzQQecY}[y~q{Cq[q^yqsYSu	CTq{{\b@Tj`_h\fJR_dJQKRTe|BhuC|_IhKyJs[sW{qqPQecY}[yCje{ebU}KkHjQ|fcI|fiMiXUJha A}XhX_vU}_{k eP|s]W{qq^y_\Vqyy\VJ{[GryqsW{qzNij`_{X_P| xXP_aOy[E{{qq^yqxGPz	yX]Y|vaCy[E{{qq^yqxGQKyyY``we^}fwH{vyN}X{Dv[M}v{WXu}HwY~s_^yqsW{\bJSK{{\bJSK{Cq[q^yqsYVz\Nja{{_OR_gY~s_^yqsW{\iP[{I{U@ :D_UAA
WE_U{sxW{_vYhsp{XuJ|s |KIH|X[[~qVW{qqU{]@hqy{Z` {[Gy{sxW{qz]Pw {X_[k]oEhjjDPwoEk eGhwkEQKGhhhY~s_U{sxW{_\Y{ZVYheikdpG_eFhgl kK htt ~f[HkJ^D|_}Hkth_}|Jt{[Gy{sxW{qzGhhhY}[zQIpCq[qU{sxYQuvSsp{[	^Ph{@Q_eD{YN{{qqU{ssGPz{ZVY|vaH{YN{{qqU{ssGQKy{[``weUdtG{vyEZpDv[FtpWXuJ|Y~s_U{sxW{\bAQIp{\bAQIpCq[qU{sxYVz\Ehcp{_DP]lY~s_U{sxW{\i[}YpI{U@8FUUAA
ZVW
WS

U[P QT 	ZWrH[PEWUC
U\QBKBDP_\^]\UCWQE@[D@F^CFIIUFSBX\QVWBfK@\\]^W\PVPRUQ 	 WPQ QmU
QPTW R
W	PRWqoW

XQWPRUTRZSW PWSQU S \	
UTRQ	XXFF@AX T TD]WTQ^QE_S^@[WQD:D^UJCPV_PU
WPX P 	 SpQZY\SXL]S\B_\W\SKIBFY]\W_\WAWSLB[FIF\JFK@WDZ@ZUSVUKdKBU\_WUUR_PPWX	WRQ	Sm\SU	QQZmU
SSW
[P	WVRQ	SUP\
QSUQ 	W
 WVPS	SZDFBCST_D_U VZ^ZG]S\BPWZF	8DK_XS^]
TQQ\VP 
VVSW
pU_U^]W]^UR_PPWX	WRQ	Sm\SU	QQZmU
SSW
[P	WVRQ	SUP\
QSUQ 	W
 WVPS	SZDFBCST_D_U VZ^ZG]S\BPWZF	8FUUAA
Q	RW		TU[Q  XVr][^[^_U]US
U\QB@@F[_\^V^WCWQEKYFKF^CDKBUFSIZWQVWBmIBW\]^\WPVRPUQW[SQmUS\SSS
oW
QSU
RPWT[SQW	RU
SS\	SU	
WTPQ QZFDBA
Q V VM_W TSWXG_Q\@Y^XF	8D\\CAVPPWWRRT		 S_QrQX[\QQBQV
W\S@K@MY]\\]^\AWSG@YMIF\AD@@WDQBQUSVU@fIIU\_\WURTR[WS  	WPS	SmW SW	QQQfW

XQWPRUTRZ
QW PWSQU S \	
UTRQ	XXFF@AX T TD]WTQ^QE_S^@[WQD:D^UJCSV SQP
	_WP W 	 P	XpU_UU_UDY\^Q@IBFYV^\_\WJUQGB[FID^AFK@\FQ@ZUXTW@dKBU^]\UUPTPP\S	URQ	XoWQU	ZSQmU
SS\PP	UTRQ	XW[W
QQUQWWVRQ	SZDM@AS_ TD_UTQ^ZG]X^@[WZF	 :D^UAA

UPZ 

WP
W
 P	rTVWWV_UWZVUWS@K@F[_W\]^WC\SG@YFKM\ADKBUDQBZWQ]U@fIBWW_\WWRTRPUS \PSQfWP RWTU	_PoWQSUPP\VPSQU	RW
SXW	S	UWT[SQZFDICQ VTF_WVQ\XG_QWB[UXF	3F^WCATW X

UPT 	PrU]\W_WUC
U\QB@@F[_\^V^WCWQEKYFKF^CDKBUFSIZWQVWBmIBW\]^\WPVRPUQW[SQmUPP\T
	U	TRoejWT WQQRWUPSV\P	P f  V TU_PQS\PUSQWS  W	
	UTRZSXFF@JS TVF]W_S\ZE_S^KYUZD:O]WAC\GyyqsY]Y{yq{IpYE|s[sWp^pHyX]WpEWEeYTUa
]^@W\^]a[zAG[ Lcv\\~j]PAjB_Bz@^jbDFxB_]x`ESH]FucGRegF`]TeX[^xBj Z vdY[|s{pss[ie`[pZ]Uy_VDcgVFja^`c{Atc]WpsxERx pZ]UyXc tI{Atc]WpsxBjq{ps{J~XpZcdxX}qvgcK|fwHcg{Fied]tI~XsGtt}XdY`gk[|s{pss[ie^[pZ]UyXwIpYE|s[sWp^|XUa{psxZTj`FpYE|s[sWp]^Tq{psxSK{C}a]Uyqx \hp^yX]Wp]DR_gYuqyyqsYXwHTq{psx\Red^[ggGj wYuqyyqsYZwtQq{ps{DU\VhZx`eUuUFpYE|s[sWp^`ASK{psxRzYuqyyqsYZByX]WpY{|s\3F_WCAUE{{qqPT[{{qy@y[E~q[q^y\pJ{X_^yGWGgP]Wa_^I^\\_ 
h[xCGY	EasWc]C\S{kkudIXQz` Qz}|K ~_U| |ESzfMieISeTVTvY{[Gws[sW{_vRjq{{qzPQeVJVjyLi kY~s ryqsYQu	@Tq{{qy	~vY~s ryqsYSeaP[sY|fbR~vZY eMv^]|a A}edY~eu~ cD|fiN}vsJ|vyi_`Z{[Gws[sW{_vIjq{{qyA}[{Cvc_^yqxJk[P[sYkjf	RK{Cvc_^yqxEhjaP[sYV}P|s{{qqPTz^GhayyqxEP Uy[E~q[q^y_ZFQaP[sYk_\WSdI~_~Ty[E~q[q^y\pXVuWP[sY~Ta i|gbS|K{Cvc_^yqx Pz}P[sYVuHCy[E~q[q^y\|ESayyq{Yvc@ :F@_XS^	ZTP_QP 
R
VV QpMB]FB]]U
UPTPP\S	URQ	XoW	VQU	[PVmU
SS\PP	W[W
QQUQWWVRQ	SU_PQSXMDBASV VF]\ TS\ZETQ\@YUZD 	8D\WACSQPT

WR\ 
	Vp_EQYH[S__U\Z_\U^QUWS@K@F[_W\]^WC\SG@YFKM\ADKBUDQBZWQ]U@fIBWW_\WWRTRPUS \PSQfD]YI]mfW

XQWPRUTRZSW PWSQU S \	
UTRQ	XXFF@AX T TD]WTQ^QE_S^@[WQD:D^UJC	_Q
  
	]TWP  	 PUpTGSYJYSY\BY\UZVUWS@K@F[_W\]^WC\SG@YFKM\ADKBUDQBZWQ]U@fIBWW_\WWRTRPUS \PSQfCW]E^mfW

XQWPRWS U
 P\RPU	R	WTPQ QWRUXSWXW		U_PQSXMDBASV VF]\ TS\ZETQ\@YUZD 	8FB]XQW

WSTVQSVR\VT]RW
QVVyVGQ[J[ZP^B[^UWX
UPTPP\S	URQ	XoAW_G^ooW
QSU
RPWT[SQW	RU
SS\	SU	
WTPQ QZFDBA
Q V VM_W TSWXG_Q\@Y^XF	8D\\CA
USTS VWRP 	  	]rJYPG^WS\^Q@IBFYV^\_\WJUQGB[FID^AFK@\FQ@ZUXTW@dKBU^]\UUPTPP\S	URQ	XoAW_G^ooW
QSU
RPWT[SQW	RU
SS\	SU	
WTPQ QZFDBA
Q V VM_W TSWXG_Q\@Y^XF	88