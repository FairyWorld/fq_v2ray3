D]W@C	WG]Typp_{]tXjpx{ZkK|YxA|I}J@}tgZ|r^_{ssTy^wHhs{yYh{YExypp_{sx\R {Z]Zi^gMhhhERtgMkgFjtcMQIFjk`Q~q]Typp_{]^XyY^QkdQ j^h	JgGwkRkc~wV~gtZitLtt[jYtA|d_iYcT{YExypp_{sxFjk`Q}Yx SJxKqYsTyppQQwtQpx{YIR gMhs
Z|r^_{ssTy]sNQ^cZZx|tZ|r^_{ssTy]sB{Z]ZdX}`csK}Ip_ZsJ}JOIKppO|J]D}`xKqYsTyppQVwJIyY^QVwJIyZFs{ssTyp{Whp_yY^QP]Fj`xKqYsTyppQVY{yYxQq^:E\]ACVFWUyqrWz\~Yjqzz[aJ|XzI}H }KH~[q[|s\WzryUy_u@irqyXj zXOyyqrWzrr]R} z[W[T eYiv~D|_ajLYR\~EQr\y[D{zryUyqy@irqyXi]}[a~uiXfvZiXrD}u\[jq}uq|fP if}HvfHie\_azCpXyUyqrYQ\nyX\YWu[|s\WzryUy\qXWv_[[zFP~|KzCpXyUyqrYPvKTqzz[i}KzCpXyUyqrYPyu[[ygjtyvvH~HyK}vzJeyH|fvzuyXrHzXOyyqrWzrrRz~Y|XrRz~YpWUyqrWz_jSufY|XrGR \zXOyyqrWzrr yX\Y~XqyVc9GUWCA	TO]W{pqTxUt[hpyxRkH~YyJAJA{CqZqTx{sYkd\XxR]Y|YaZ}y]W{pqTxUZFQ aZ~QxEhkbXho
Eh{fYP
`EQJERUQY~r_Tx{sW{^\XxR]Ykg}ot\aGkw p |lwI~gX^UkDkIXZhBctf^R^[{ZGxx{sW{pzFk`cY}Zz RA{CqZqTx{sYQtvP{{{Z	JkocF{ZGxx{sW{pzDSx {Y_Z|cJ{ZGxx{sW{pzDRA{{Xcc}gWgux|{GY}G||DgWT||QwuZ}y]W{pqTxV`CQJyxV`CQJy@rQsW{pqZUp^Gh`yxUFP^eZ}y]W{pqTxVkY}ZyJx_B	8E]VBKVG\VqqqUz]uZbqyzZjItXyK}IKvqJ}JPXts_UzsrVq_vBiszqXizYDzqqqUzsy^Z~zZ\X\zzWw[\\eHGih}Kt_bjGZZ\}GQy_q[GyzsrVqqzBiszqXeiZWXwvv^dPFaX}F}wvaa |wbKtea}dvvHWH}t~aayApYrVqqq[Q]eqX_[W~Xts_UzsrVq\rZWwTXw[yDj]
Y\q[q\VqqqUz^qG[\a[|Yzvv}[q\VqqqUz^qKqX_[g[
tjaqJ~dvVuXqK~IFuK J|srFvH_E~czB{[qUzsrX\uHHzZ\X\uHHzYDzqqqUzsy]jr^zZ\XZ_	GiczB{[qUzsrX\[yzZzX{\ 9F_TKA
PW]
WR	 
UQZ QT	P]rH[QE]_C
TVQBKCDZ^V^]]UB]QE@ZDJL^CGICTFSBXVP\WBfJ@VV]^WVPVQRTQ 	
]PP
PgU
QZTW

S
VZRWpo]

RPWQSUTRPSW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@BP
VUPU WQRZ Sq[ZY\RXF\Y\B^\	W]SAHHFY]]]^VWAVSFCQFIG\@LK@WDPAZUSWUAeABU]_]TURUZPWR	VS[	SlVRT	QQPgU
YSWQP	VVS[	SUPV
QRTQ 	]

WVQSYZDFCCYTUE_UVP_PG]S]BZVPF	9DA^RS^W UP[VWP  \VR	]
pU^UT\]]^	URUZPWR	VS[	SlVRT	QQPgU
YSWQP	VVS[	SUPV
QRTQ 	]

WVQSYZDFCCYTUE_UVP_PG]S]BZVPF	9F_TKA
QS]	^UQQR \r][_[T^_]UR
U\PBJAL[_\^\_]CWPEAXLKF_CEABUGSCPWQVVBgHHW\\^VWQVSZUQWQRQmUSVSRS nWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	8E\VBKWZPW	VRS^	
SUPxQX[]Q[CQV ]\S@J@GXW\\\^VKWSGAYGHF\ADJA]DQC[TYVU@gICT\_\VTRTRQ]S
WQSYmW
SV[QQl]

RPWQSUTRP QW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@BSW
R[P	UWQ] Q	Rq__UU^UES V_[@IBGY\_\_\V@T[GB[GIETAFJ@VLQ@[URU]@dKCU_W\UUZTPQVS
	TRQ	RnW
PU	PYQmU SRV	PQ	T^RQ	R]QWQPUQW
 VVS[	S[DGAKSU
TD^U^Q^ZF]R_J[WZG	
;N^UA@

UPP

 ]P
V   P	sT\V]V_UVPWU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
Ql]P
SW
T	U	UZoV	QSUZP
VWPS
QT	R]
RRW	R	UWUQRQZGDCBQV^F_VW[\XG^Q]CQUXF
	9GTWCA	 ^W R 
TZT  ZrT]VVUWUB
U\PBJAL[_\^\_]CWPEAXLKF_CEABUGSCPWQVVBgHHW\\^VWQVSZUQWQRQmUZQVT	T	TRnojWU VP[RWUZSWVP	Q l V
TUUZQRVQTSQ]S
 W	UTRPSXFG@@S UWL]WURVZE_R^AX_ZD
:E\]ACVFyyqrYWXqyqzIzXO|s[rWz_zHyX\WzD]EdY^Tk
]^@]V^]kQzAGZ Fb|\\~k]Z@`B_B{@TkhDFxC_WyjESH\FiGRefFj]TeXQ_rBj [ |eS[|s{zry[iea[z[WUy_WDif\Fja^jbqAtc\WzrrERy z[WUyXb ~HqAtc\WzrrBjqzzrqJ~XqZierX}q|fiK|fvHifqFiee]~H~XrG~uu}XeYjfa[|s{zry[ie_[z[WUyXvIzXO|s[rWz_vXUazzrrZTjaFzXO|s[rWz\^TqzzrrSKzCw`WUyqy Viz^yX\Wz\DR_fYpyyqrYRvHTqzzrr\Ree^QfmGj vYpyyqrYPv~QqzzrqDU\WhPyjeUuTFzXO|s[rWz_jASKzzrrRz~YpyyqrYPByX\WzXq|s\9GUWCA	TO{{pqZUQ{{pyJxQE~qZqTxVpJ{Y_TxMWGgZ\]a__C_\\_  i[xCFYDksWcWC\R{aaudIRPp` Q{}}A ~^_}
|ES{fGhoISdT\U|Y{ZG}rQsW{^vXk{{{pzZPoVJVkyFh
kY~r xx{sYQt	JU{{{py|Y~r xx{sYSdaZ~QsY|gbX|ZYeG~|^]|` K|odY~du
cD|giD||sJ|wyhU`Z{ZG}rQsW{^vCk{{{pyK|Q{Cvb_Tx{xJk [Z~QsYkkfSA{Cvb_Tx{xEhkaZ~QsYV }Z}y{{pqZUp^Gh`yx{xEP_xQE~qZqTxUZFQ aZ~QsYk^\]RdI~^~^xQE~qZqTxVpXVtWZ~QsY~ T`
i|fbY}A{Cvb_Tx{x P{}Z~QsYVtHIxQE~qZqTxV|ES`yx{{Yvb@
;L@_XR^		PTQUPP 
R \V PpGCWFB]]_UZTPQVS
	TRQ	RnW	
VPU	QZVmU SRV	PQ	]QWQPUQW
 VVS[	SUUZQRXGEHARW VF]V
TS\[E^PV@YU[D
2D\W@C	SQPU
 	WR
V  		VpUD[YH[R_UTVZ_\TTPU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
QlEWYI]ll]

RPWQSUTRPSW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@B	UP   	WUWQ
  QUq^GSYKYYXVBY\TPWU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
QlB]]E^ll]

RPWQSV	Y U  P
VRQT	R]TPP
PW
SURYW
RV				UUZQRXGEHARW VF]V
TS\[E^PV@YU[D
2FB]YQ]

]STWQSVRVVUWS]
QVVsWMQ[JZZZ_H[^UWRUZTPQVS
	TRQ	RnKW_G_onWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	8E\VBK TYTS
WVR	P  	WxJYPF^VY V_[@IBGY\_\_\V@T[GB[GIETAFJ@VLQ@[URU]@dKCU_W\UUZTPQVS
	TRQ	RnKW_G_onWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	89