D]WAB
WG]Uxsp^{]tYksx{ZkJ}Zx@|IH|s|s{ArYp^{ss[hg]R{Z][Z`P~q]Uxsp^{]ZDR`P}Yx[kgUV]AkgShcYkwC~]^UsxJqYsUxspPSgc[~YxC|ZxYJYRIHJx
~dc ZRMkdpYks|wk|g{S|dgHhJZP~q]Uxsp^{]^Usx{^VHxYFr{ssUxs{Nkh`]xZ^P~|]PgIRSwDks	P~q]Uxsp^{^pDR^`P}Y{t|P~q]Uxsp^{^pHxZ^Pf[wccpAJsU|Zp@YJ|sA}csK|Z^Cc{ArYp^{ss[UwIC{Z][UwIC{YEyxsp^{sxThsU{Z][S]Lhc{ArYp^{ss[UYx{Z{[r^8F_WBCUE]VyrxUy_tZjrpyXkI|[pK~KH~b}[{BsXxUyqsXifUYyX]X~[h[|s]VyrxUy_ZGSh[[xS_oQuh Rv^SDjyoXQ `DSHDS_QX|pVUyqsVy\UYyX]XvpH}ugIjuxFv^\~r	~XH|fp~v{E}elet\iKcXvw yXNyyqsVyrsGjjcXXsSK{BsXxUyqsXSvQq{yX BR_`GRpDy[EzyrxUyqxFRsyX]X~uhHy[EzyrxUyqxFSHpyYabtlU}fwIyupE}X{E}exF}fYV}[p}HwX|pVUyqsVy_kASK{y_kASK{BsXxUyqsXTyUEja{y\DR_gX|pVUyqsVy_`[[{HyVI:D_TCBWE^WxzsW{_w[kz{{XtHz |KjH|XRY}x]W{qpWxTt@hqxxSk {[F{xzsW{q{_S
| {X^YUdYhuwF}T`k E[SWEP{^xPE{{qpWxzx@hqxxSY ketICs~fsZk~kD|vd~z hJ}nt\}fcZ|~g g[P{Cq[pWxzsYP_g xS]YV|Y}x]W{qpWxWpXVuVY~P{FVuEPnV_Vq	Y}x]W{qpWxWpFQ\`Y~P{ |v|Y}x]W{qpWxWpJ{X^YeRu`apH|mWXpI|PHqH~jsIX^J|j{Cq[pWxzsYVuIJxS]YVuIJxPE{{qpWxzx Wjs\xS]YP_Ekj{Cq[pWxzsYV[xxS{Yq\;O_UAA\E_U{rqVp_vYhrypXiJ~[yHwKK|H vqyAqXqVpqq[kf\ZpX_[|[aXus_U{rqVp_XDQaXv[zGhibZ`eGhyf[X bGQHGZ_S[~p_VpqqU{\\ZpX_[kK[`ee |KuEw_yb wHqE~e[IwHaFhu}F`XeJue wHi {XGzpqqU{rzDcja[}XzZKyAqXqVpqq[QvvXqy{X	K]zzDP\SGp[Gy{rqVpqzEPzpX_[|uaKp[Gy{rqVpqzEQHypYb`teVtfu{uyFtXyFeqEtf[U[ytHu[~p_VpqqU{_bBZKy{_bBZKyAqXqVpqq[Vy\Fcay{\G[_e[~p_VpqqU{_iXv[yK{V@3D\WAB
 STW	TX

	 WRPQWSWqHX[G^U@
W\RBHIFY]\^^WWAWRECPFIF]CMK@WESAZUSVTBe@BU\^^TUSV[PWQ	WSZ	SmU	SPWT 	P	\PRTzmW		QST[PUWPSPT	S\
SQW	SU	 WTRRQZFE@BQ W_F_WWZ\XG_P^CPUXF:GUWCAS TVSU
 T[QP  QrQYY_XZE_S_BT^
TWQBKBEY^W^]\TB\QE@[EIM^CFH@TFSBYUP]WBfKAUW]^WUPVPSTQ 	\PQ	PfUXW	RSSmU	
SPTRS	\TPQ	PWSU	QXWQW		TV[QSYDEIASW VF\UTS\ZD]PW@YUZE	3FB]XP^T
_SQUTSVUX 
W	pVTWW_W]]UPVPSTQ 	\PQ	PfUXW	RSSmU	
SPTRS	\TPQ	PWSU	QXWQW		TV[QSYDEIASW VF\UTS\ZD]PW@YUZE	3D\WAB
S PW		T  WRQQVq]XUYW]U^VXU_Z@IBFX__\_\WCTZGB[FHEUAFKAUMQ@ZTQU\@dKBT_V\UT[TPPUSTRQQnWPUSXQmTSSU	PPT_RQQ\RW
PPUP W WWSZ	SZEDAJSVTD_T_Q^ZG\Q_K[WZF	;O^UAA TPST

 \PPT	   QVSrRXXWSX@RVW_SC@BD[]__V\UATSDK[DKE\BFIBWDRIXWSUUCmK@W___\WRWPRWP	T[QSnT	P\QQRoW		QST[PUWPS
RT	S\
SQW	SU	 WTRRQZFE@BQ W_F_WWZ\XG_P^CPUXF:GUWCAP]	QQSV T[W [QrU\UVTWFY
U\QCIAM[_\___\CWQDBXMKF^BE@BUFR@QWQVWCdHIW\]_UWPWS[UP WRRQmT SUSSRnW
PXU
S[WTRRQWRTSSUS T \TPQ	PQFDBAP V WDTW TR^YL_Q\@XWYM	8D]UBJ	US
S		WS	\ 	S	yV_UWU_V\STW^Q@H@EP]^\^^TAUQGCYE@D^ADHIWFQAY\STW@eIA\^]\T\PTRSWS USS SoWS	PT V
UVPo\

QPWPS UTSS SW	PW	XQT	X U
T_RQQYMF@AQT TE\\TQ_XDTS^@[VXE :D^TCBTT 	Q
	WPV 
Pq^_UU_TVHU_Z@IBFX__\_\WCTZGB[FHEUAFKAUMQ@ZTQU\@dKBT_V\UT[TPPUSTRQQnWP[UTW	WPmeiTV \SQRTWPP]US	[o T WWVPRXU[WPSWP	T	UWPSPXEMBCP_TF]T VQ\YE\X\B[UYD 8F_WBCUEzyrx[T[{yrpKy[EsXxUy\pKy[VUyGWEn[]Wa	]]B^\]]	h[yADPEav_\}a_YCjA_AqBWhbGF{I]Tz`FSKVD|cDRflDi ^TfZR\xAjQfYX|p	yyqsXifkYyX]Vy\]FjeVEjb\ia{Bt`VUyqxFRsyX]Vy[h}K{Bt`VUyqxAjrpyq{I~[{Xjfx[}r	ecH|e|Jje{Eifo_}K ~[xE}v}[o[iekX|p	yyqsXifUYyX]Vy[|Ky[EsXxUy\|[UbpyqxYTikDy[EsXxUy_]TrpyqxSHpAtc]VyrsUjp]y[VUy_GR\l[|szyrx[QuKTrpyqx_Rfo\RegDj|[|szyrx[SutQrpyq{GU_]jSz`fUv^Dy[EsXxUy\`BSHpyqxRyt[|szyrx[S Ay[VUy[{s_	:D_TCBWE{xzsYV[xxz{I{[F~rPsW{\sJxS]W{GTDeY_Wb\U@\_\\jXx@L[ GapWa]@\XybkvdKQSzc Rq~K }T\~ EPqdDkeIPnV_VvZxPE~q[pWxTt[hqxxzxYSeUJUa{Ek hY}x{{qpYR~IVqxxz{ |v|Y}x{{qpYPncY}[pYm`[|vYY|gD}v]]jHegY}nw| `DmkGvpJ}{k_cZxPE~q[pWxTt@hqxxz{H[xCuh]W{q{Jh
YY}[pYhad PKxCuh]W{q{EkacY}[pYU
Y~s{xzsYVz]Gkj{{q{ES\{[F~rPsW{_YFR
cY}[pYhT^^QgI}T|]{[F~rPsW{\sXU~UY}[pY}
Vc il`Z~KxCuh]W{q{ SqY}[pYU~JJ{[F~rPsW{\EPj{{qxYuhB	8FC_[X\
	SV[ VSS 	PVUZrD@]EB^_\WPWS[UP WRRQmT	 TSURPUnW
PXU
S[WRTSSUS T \TPQ	PWVPRXZDFBBXTVE_U WS_QG]S\CYVQF	8G\TJA
PQS	V	TR U		UrVGQZHXX]VW\Y__^WSW^Q@H@EP]^\^^TAUQGCYE@D^ADHIWFQAY\STW@eIA\^]\T\PTRSWS USS SoF]ZI^foW		QST[PUWPSPT	S\
SQW	SU	 WTRRQZFE@BQ W_F_WWZ\XG_P^CPUXF:GUWCAVS
 TV T[	 [WrTDSZA[Z[\AY_^STW^Q@H@EP]^\^^TAUQGCYE@D^ADHIWFQAY\STW@eIA\^]\T\PTRSWS USS SoAW^E]foW		QST[P\

SW
S UR[W	P WWSZ	ST PU
QST Q \
	WVPRXZDFBBXTVE_U WS_QG]S\CYVQF	8EB^SS^	 WPW]RSUPU U_TPW	QUTpTGR[IPXY\BX^VUQWPWS[UP WRRQmAT_DUmmTSSU	PPT_RQQ\RW
PPUP W WWSZ	SZEDAJSVTD_T_Q^ZG\Q_K[WZF	;O^UAAWSWP
	T \P
S  TrIYSL\US
U\QCIAM[_\___\CWQDBXMKF^BE@BUFR@QWQVWCdHIW\]_UWPWS[UP WRRQmAT_DUmmTSSU	PPT_RQQ\RW
PPUP W WWSZ	SZEDAJSVTD_T_Q^ZG\Q_K[WZF	;3