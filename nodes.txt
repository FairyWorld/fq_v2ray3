D]WAB
WG]UxsqS{]tYksy{ZwJs|IJ|teAZJxYG{ssUxsz\Sgc[~Yy|s{ArYqS{ss[Pw	NVs{x^bMVh`]k^fGP]dHRI_Vg|@kwN~]KkIyGqYsUxsq]Sgc[~Yy|tQJwz]|Y^~gi~d`ZZu@}wckY d{gv^hZchZ}]~q]UxsqS{]^Usy{^VHxYG{ssUxszCkh`]xZ_]~`^hzXkh|^}IyGqYsUxsq]QwKUsy{Zc|IyGqYsUxsq]Qx[~Yz{f `txtuLcsK|tyM~dwE}dq{twK~ZqL{YEyxsqS{sxSx}]}YxSx}]~q]UxsqS{^`Rwe]}YxGSX{YEyxsqS{sx xZ_]Y{yWa	8F_WBC
UE]VysuUy_tZjs}yXwI~s ~KI}tyG}fwHyYCyyqsVys~ZQecXY} ~q{BsYuUyqsXQwHTq{y]^Tu`YRIYTe|CjwH|_HjI}As[sVysu[QecXY}~vZYjdnX~[H~g~^|fc}t}FifsjYX}HUH}gaE}XsH}q[|s]VysuUy_]Ts}y\VKyYCyyqsVys~Eij`^yZ[[| tXS]Zjq
X|q[UyqsVy^vDS\cXY}~vX|q[UyqsVy^vHyX]Xd[wbasI}daU}XsH}YJ}qF~suJ}X]F}c}As[sVysu[TuJKyZ[[TuJKyYCyyqsVys~Ujp]yZ[[R_Djc}As[sVysu[T[{yZ}[s\:FYWCAUC]W{qpWyYt[hqxy^kH~XxI~MJK~]{Cq[pWywsYke][y^]Y|X`Y|u]W{qpWyYZFQ`Y]xYhe\TYCheZjg[huJ|Y\VqxCs]sW{qpYQccY}[xHict]|_`gZ| dH|`cGedDcghq \~Nk | x~^{IhedY|u]W{qpWyY\VqxyZVJ{[F{ywsW{q{Gil`_{X^Y|XVugIQctC~KxCs]sW{qpYSsIVqxy^c KxCs]sW{qpYS|Y}[{d`v{vtJ}wsIvxI|`wG~fp ypwI}XpHy]E{{qpWywx Pz|Y]x Pz|Y|u]W{qpWyZ`QudY]xEP \y]E{{qpWywx{X^Y}]{{Tc:B_UAAQE_U{rqW}_vYhry}XuJ|r zKJuyEyfi{XG{}qqU{rzXUea[}XyzqyAqXqW}qq[Sv	JPqy{_T\m_bZPH[Pe~@hvJx_	KhHyCw[qU{rqYUea[}Xz\yejXheiyK J|[TYxfb_}uiD{eiHZ{frZhujZz_i |e[Yxs_U{rqW}_^Vry}\TH{XG{}qqU{rzGmjb]{[_Yx~ki[F}[Gy{rqW}qzEPz }X_[|uaJ}[Gy{rqW}qzEQHy}Yb`teWyfuH{uyGyXyFeqDyvaUeyyvu[~p_W}qqU{_bCWKy{_bCWKyAqXqW}qq[Vy\Gnay{\FV_e[~p_W}qqU{_iY{[yK{V@	>D\WAB
 STW	UU

	WRPQVSWqHYVG^U@
 W\RBIDFY]\^_ZWAWREB]FIF]C@K@WES@ZUSVTBdMBU\^^UUSVVPWQ	WRW	SmUSPWU	P	QPRUwmW	QSTVPUVPSPU	SQ
SQW	S	U	WTRSQZFE@CQ WRF_WVW\XG_P^B]UXF:FXWCARTVSU
 UVQP  	QrQYY^UZE_S_BY^
UZQBKBEY_Z^]\TCQQE@[EI@^CFH@U	FSBYUQPWBfKAUZ]^WUPVPSUQ 	QPQ	QkUUW	SSSmU
SPURS	QTPQ	QWRU	QUWQW	TVVQSYDDDASV VF\UTS\ZD]QZ@YUZE		>FB]XP^
T
	RSQ UTSVTU 
W	pWYWW_W]\UPVPSUQ 	QPQ	QkUUW	SSSmU
SPURS	QTPQ	QWRU	QUWQW	TVVQSYDDDASV VF\UTS\ZD]QZ@YUZE		>D\WAB
S PW	T WRQQVq]YXYW]U^WUU^W@IBFX_^	\_\WCUWGB[FHDXAFKAU@Q@ZTQTQ@dKBT^[\UTVTPPUSU RQQoWQUSUQmTSSUPPURRQQQRW
PQUPWWWRW	SZED@GSVTD_TRQ^ZG\Q^F[WZF	:B^UAA TPSU

QPPT	 QVSrRXYZSX@RV
 W_SBMBD[]_^[\UATSEF[DKE\CFIBWDSDXWSUUB`K@W__^QWRVPRWQ	TVQSnU	PQQQSoW	QSTVPUVPS
RU	SQ
SQW	S	U	WTRSQZFE@CQ WRF_WVW\XG_P^B]UXF:FXWCAQP	QQSV UVW VQrU\UWYWFYU\QCI@@[_\__^QCWQDBY@KF^BDMBUFR@\WQVWCdIDW\]_UWPWRVUPWRSQmTSUSSRoW
QUU
SVWTRSQW	 RTSSU	S UQTPQ	Q\FDBAQ V WDYW TR^XA_Q\@XWX@	8D]UCG	UR
S	WSQ  S		tV_UWU_WQSTW^Q@H@D]]^\^^UAUQGCYDMD^ADIDWFQAXQSTW@eI@Q^]\TQPTRRWS	USSSoWR 	PTV
UVPoQ

QQWPRUTSSSW	PWUQT	U U	
URRQQX@F@AQT TE]QTQ_XEYS^@[VXD:D^TCCTT Q
	WP	V  PpS_UU_TWEU^W@IBFX_^	\_\WCUWGB[FHDXAFKAU@Q@ZTQTQ@dKBT^[\UTVTPPUSU RQQoWP	VUTW	VPmeiUV QSQRUWPQPUS	Vo T WWVPR	UUVWQSWQ	T	UVPSPXD@BCPRTF]U VQ\YE]U\B[UYD	8F_WBC
UEzysu[T[{ys}Ky[EsYuUy\pKyZ[UyGWEc[]Wa	]\B^\]]h[yAE]Eav_\|l_YCjA_@|BWhbGFzD]Tz`FSJ[D|cDRgaDi ^TgZR\xAj\fYX|qyyqsXigfYyX]Vy]PFjeVEjc\ia{Bta[UyqxFR~yX]VyZe}K{Bta[UyqxAjs}yq{I~ZvXjfx[}secH|dqJje{Eigb_}K ~ZuE}v}Zb[iekX|qyyqsXigXYyX]VyZqKy[EsYuUy\|[Uc}yqxYThfDy[EsYuUy_]Ts}yqxSI}Atc]Vys~Ujp]yZ[Uy_GR]a[|szysu[QuKTs}yqx_Rgb\RegDjq[|szysu[SutQs}yq{GU^PjSz`fUwSDy[EsYuUy\`BSI}yqxRxy[|szysu[S AyZ[Uy[{s^:D_TCCWE{ywsYV[xyw{I{[F~s]sW{\sJy^]W{GTEeY_Wb]X@\_\]jXxAA[ GapWa]@\UybkvdKQSzc S|~K |Y\~ EQ|dDkeIQcV_VvZy]E~q[pWyYt[hqxywxYSeUJTl{Ek hY|u{{qpYSsIVqxyw{ |v|Y|u{{qpYQccY}[pY~``[|vYY}gD}v]]~gHegY|cw| `D~`kGvpJ~p{k_cZy]E~q[pWyYt@hqxyw{H[xCte]W{q{JiYY}[pYild PKxCte]W{q{EjlcY}[pYTY~s{ywsYVz]Gjg{{q{ER\{[F~s]sW{_YFScY}[pYiY^^QgI|Y|]{[F~s]sW{\sXTsUY}[pY|Vc i~a`Z~KxCte]W{q{ R|Y}[pYTsJJ{[F~s]sW{\EQg{{qxYteB	8FC_ZU\
	SVV VSS PVUWrD@]EB__\WPWRVUPWRSQmT	TSURPUoW
QUU
SVW	 RTSSU	S UQTPQ	QWVPR	UZDFBBUTVD_U WS^\G]S\CYW\F	8G\UGA
PQRVTRU 	TrVGQZHYU]VW\Y_^SWSW^Q@H@D]]^\^^UAUQGCYDMD^ADIDWFQAXQSTW@eI@Q^]\TQPTRRWS	USSSoF]ZI_koW	QSTVPUVPSPU	SQ
SQW	S	U	WTRSQZFE@CQ WRF_WVW\XG_P^B]UXF:FXWCA VS
 TV UV	 VWrTDS[L[Z[\AY^SSTW^Q@H@D]]^\^^UAUQGCYDMD^ADIDWFQAXQSTW@eI@Q^]\TQPTRRWS	USSSoAW^E\koW	QSTVPQ

SW
RURVW	P WWRW	STPU
QSUQ Q
	WVPR	UZDFBBUTVD_U WS^\G]S\CYW\F	8EB_^S^WPVPRSTPU TRTPW	QTTpTGR[H]XY\BX^WUQWPWRVUPWRSQmAT_EXmmTSSUPPURRQQQRW
PQUPWWWRW	SZED@GSVTD_TRQ^ZG\Q^F[WZF	:B^UAAWSWQ
	TQP
S  TrIYRA\USU\QCI@@[_\__^QCWQDBY@KF^BDMBUFR@\WQVWCdIDW\]_UWPWRVUPWRSQmAT_EXmmTSSUPPURRQQQRW
PQUPWWWRW	SZED@GSVTD_TRQ^ZG\Q^F[WZF	:>