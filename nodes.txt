D]WACWG]Uy{pQ{]tYj{x {ZkJ|RxO|I~QOd[|y^Q{ssUyUwFhs{yRh{YEyy{pQ{sx]R{Z][iUgChhhDRgCkgGjcCQIGj``_~q]Uy{pQ{]^YyR^_hwx_}|RhZsF~RU_}c}
g\~gxXiUhBh]xZiBxAk }Rp{YEyy{pQ{sxGj``_}YxSAxEqYsUy{p_QwtQ{x {YYj`s^Q^`Fjo~I{AsQpQ{ss[SOVs{yR`I{AsQpQ{ss[Sp|_}Yx}dcp{twH}{pOt{K|lp~dw y|pA}ZJyQF}{ssUy{{Px[Q{Px[|y^Q{ssUyVcQwg[Q{CP^yQF}{ssUy{{{Z][}Qx}Ta:N\SAC]FYUyqsWq\pYjq{q[sJ~q vHJ}vwEwus[|s]WqrwUy_t@bryXk qXAyyqsWqr|]R| q[Y[T dYbvpD|_`[Z_{GR_d qXAyyqsWqr|Bjq{q[{K~_Huvg |fsIu[oF~vVXuH}ektesju|ZvKQj_wbAs[sWqrw[R_d q[Y[TYtpYUyqsWq_tZTuUYwXDS @ZvcDy[E{qrwUyqxGZ|yX]YvugHy[E{qrwUyqxG[HyY`jtcU}fwquE}X{DuuQF}fkWuuw}HwYtpYUyqsWq_dASK{q_dASK{C{XwUyqsY\yZEja{q\DR_gYtpYUyqsWq_o[[{IqVF:D_UKBWE__xusW{_vSku{{Xu@u |K|eHHiQ}w]W{qq_x[t@hqyx\k {[GsxusW{qzWS| {X_QS[d huvN}[`k DSSXEPzVx_E{{qq_xux@hqyx\ZZkHi	w~e~S~acD|ubQ|_Y|ueB}b{|v[AhbY}v~Phe{Cq[q_xusYP_fx\]YV}Q}w]W{qq_xXpXVuWQ~_{FQ fAU[^ZhaQ}w]W{qq_xXpFQ\aQ~_{ |v}Q}w]W{qq_xXpJ{X_Qe]u`aq@|bgWXqA|_G}q @_sGv_B|e{Cq[q_xusYVuHBx\]YVuHBx_E{{qq_xux WjrTx\]YP_	Mke{Cq[q_xusYV[yx\{Yq\ ;@_UAA
SE_U{syV_vYhsqXiJ~ZqHxKHcIyfS[~qWVqqU{]~Alqy{Za[Gy{syVqz]PvX_[VnXluvD~]j o DYP^uDTz\{YOzqqU{srAlqy{ZrY{XiEkd} zf\YhtuExv}H|YoHq~dyH{euE|j[xfr_|cqBu[qU{syXT_f{ZWXR}[~qWVqqU{^zYRuW[}YqGoeb hgRjz^~IqBu[qU{syXUu	KVsqXaIqBu[qU{syXUz}[}Yr~bbt{t}I{KqKtqHzfq~d}vqE}ZuI[Gy{syVqzPxuXy[zPxuXzs_U{syV\bQwmXy[zGP][Gy{syVqz {ZWX{[yyTa<D\WAC STW
TW

 WRPYW SWp@XTG^UAW\SJHFFY]\V^XWAWSMC_FIF\KBK@WD[AZUSVUJeOBU\_VTUR^TPWY	WSU	Sm]	SPVT	PSPZTumW	QSU TP]WPSQT	RS
SYW	SU	WTZRQZFDHBQ VPF_W
WU\XG_QVC_UXF	2GZWCASTVR]
	TTQP  	QrQXQ_WZE_S^J[^
TXQBKBDQ^X^]\UBSQE@[DAB^CFIHTFSBX]PRWBfK@]X]^W]PVPRTQ 	SPQPiU	WWRSSm]	
SQTRRSTPQPWSUYWWYW			U^TQSXLEFAS
W VF]]TS\ZEUPX@YUZD<FB]XQVT

PSQ	UTRVUW 
WxV[WW_WU]]PVPRTQ 	SPQPiU	WWRSSm]	
SQTRRSTPQPWSUYWWYW			U^TQSXLEFAS
W VF]]TS\ZEUPX@YUZD<D\WACS PW	T WRY QVpUXZYW]U_VW]_U@IBFYW_\_\WKTUGB[FIEZAFK@]BQ@ZUYUS@dKBU_Y\UUTTPP]S	TRQ	YnWPU	[WQmU SS]	PP	TPRQ	YSZW
QPUQ
W  WVSU	SZDLAES^TD_UPQ^ZG]Y_D[WZF	;@^UAA
 TPR
T

	 SPPT   QVSrSPXXSX@S^W^[COBD[]^_Y\UAU[DD[DKDTBFIBWLRFXWST]CbK@W^W_SWZWPRWP	UTQSoT 	QSQYRoW	QSU TP]WPS
ST	RS
SYW	SU	WTZRQZFDHBQ VPF_W
WU\XG_QVC_UXF	2GZWCAPR	QQRV	TTW  
TQrU]]V[WFY
U\QBAAB[_\^W_SCWQEJXBKF^CEOBUFSH^WQVWBlHFW\]^]WPVSTUQ
WZRQmUS]SSS	nW
PWU
RTWTZRQWRUSS]ST	STPQP^FDBAP V VL[W TSVYC_Q\@Y_YB	8D\]BE]S
S 	WR	SRvV_UWTWVSST	W^Q@IHE_]^\_VTAUQGBQEOD^ALHFWFQ@YSSTW@dAAS^]\USPTZSWSUR[SoWS	PUV
]VPgS

YPWPSUTR[SWPW	WQUW ]
TPRQ	YYBF@AYT TD\STQ^PD[S^@[WPE:D^UKBTUQ
 WP V P qQ_UU_UVG]_U@IBFYW_\_\WKTUGB[FIEZAFK@]BQ@ZUYUS@dKBU_Y\UUTTPP]S	TRQ	YnWPTU	\WWPmehT V	SSQZTWPPRURTo 	T V
WVPSWU	TW PSW	P	U]WPSQPEBBCQPTFUT VQ\XM\W\B[UXL8F_WCKUE{qrw[T[{qrKy[E~{XwUy\pJq[YUyGWMa[]WaU]B^\\Uh[xID_Eav^T}n_YCj@WA~BWhbFN{F]Tz`G[KYD|cEZfcDi _\fZR\x@b^fYYtpyyqsYafdYyX]Wq\RFjeVDbb\ia{C|`YUyqxGZ|yX]Wq[g}K{C|`YUyqx@bryq{Hv[tXjfxZurecItesJje{Daf`_}Kv[wE}v u[`[iekYtpyyqsYafZYyX]Wq[sKy[E~{XwUy\|Z]byqxX\idDy[E~{XwUy_\\ryqx[HAtc]Wqr|Ujp\q[YUy_FZ\c[|s{qrw[QuJ\ryqx^Zf`\RegEbs[|s{qrw[Sut Yryq{F]_RjSz`g]vQDy[E~{XwUy\`C[Hyqx Zy{[|s{qrw[S @q[YUy[{~{_:D_UKBWE sxusYV[yxu{I{[Gvr_sW{\rBx\]W{GUDeY_Wc \Z@\^T\jYp@C[ Gaq_a]ATWybkwlKQSzbR~~K	}[\~ ~MP~dDkeAPaV_Vv[x_E~q[q_x[t[hqyxuxYSeTBUn{Ek iQ}w{{qqQRqIVqyxu{ |v}Q}w{{qqQPacY}[qQb`[|vXQ|gD}v\UeHefQ}aw| aLbkGvqBr{k_bRx_E~q[q_x[t@hqyxu{H[yKug]W{qzBhYY}[qQhnd PKyKug]W{qzMkncY}[qQUY~s sxusYVz\Oke{{qzMS\{[Gvr_sW{_XNRcY}[qQh[^^QfA}[|]{[Gvr_sW{\rPUqUY}[qQ}Vc ac`Z~KyKug]W{qzS~Y}[qQUqJJ{[Gvr_sW{\~MPe{{qyQugB	8FBW[W\
S
VT VSR	PVTUrD@]DJ^_\WPVSTUQ
WZRQmUTS]RPTnW
PWU
RTWRUSS]ST	STPQPWVPSWZDFBCWT^E_U V[_^G]S\BQV^F	8FTTEA
QYSV 	UZU	U rVGQ[@XW]VW\XW_QWS	W^Q@IHE_]^\_VTAUQGBQEOD^ALHFWFQ@YSSTW@dAAS^]\USPTZSWSUR[SoF][A^ioW	QSU TP]WPSQT	RS
SYW	SU	WTZRQZFDHBQ VPF_W
WU\XG_QVC_UXF	2GZWCAVS
TV	TT	  
TWrTE[ZN[Z[\@Q_QST	W^Q@IHE_]^\_VTAUQGBQEOD^ALHFWFQ@YSSTW@dAAS^]\USPTZSWSUR[SoAW_M]ioW	QSU TPS

S W
SU	ZTWP WVSU	SUP]
QSTQ 		S
WVPSWZDFBCWT^E_U V[_^G]S\BQV^F	8DJ^\S^	WQWRS[UPU UPTPWYUTpTGSSI_XY\BYVVUQWPVSTUQ
WZRQmAUWDZmmU SS]	PP	TPRQ	YSZW
QPUQ
W  WVSU	SZDLAES^TD_UPQ^ZG]Y_D[WZF	;@^UAA
WSVP
	T	 SP
R  TrHQSC\US
U\QBAAB[_\^W_SCWQEJXBKF^CEOBUFSH^WQVWBlHFW\]^]WPVSTUQ
WZRQmAUWDZmmU SS]	PP	TPRQ	YSZW
QPUQ
W  WVSU	SZDLAES^TD_UPQ^ZG]Y_D[WZF	;<