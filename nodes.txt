D]WACWG]Uyts_{]tYjt{{ZwJ~t|Id}s{As^s_{ss[i`^S{Z][~]cQ~q]Uyts_{]ZDScQ}Yx[j`TV]Aj`RhcYjpB~]^Tt{KqYsUytsQSgc[^xRhdQ}sZU|cicU	~dc jsL}wh^i^BJwH}sdS|]~MQQ~q]Uyts_{]^Tt{{^VHy^Es{ssUytxOkh`]y]]Q~|DRZVAkh`Rpthc
[|v]_{ssUyYpNQ^c[^{|t[|v]_{ssUyYpB{Z][d\}`csJ}Ms_ZsK}^O|IKtsO|J]E}d{KqYsUytsQVwJHy]]QVwJHy^Es{ssUytxWhp^y]]QP]Gjd{KqYsUytsQVY{y]{Qq^:A_]ACREWUyqsW~_~Yjq{~XaJ|X{IyKJazqqAs[sW~qy[ie^[~XW[~XcY{sWUyqsW~_PDScYx[rGjj`[ne GjzdZV jGSKFT_[[|s]W~qyUy_^[~XW[}ucJyX[E}fYDxub^~a zHq|fZZyvSFiHUzur_vdXyHz[y[E{~qyUyqxEmji[[xTKqAs[sW~qy[Sut Vqqy[Xmu	BS_gF~[OyyqsW~qrERx ~XW[~vcJ~[OyyqsW~qrESK{~YbbwgWzf}yv{GzXqF}vQDzX_U}vQzv}[|s]W~qyUy\`CTKqy\`CTKqAs[sW~qy[Tz^Gmaqy_FU_m[|s]W~qyUy\kYx[qKyUB	=DUWCAWO]W{qqP{Ut[hqy{RkH~XyN|A q{{Cq[qP{{sYke\\{R]Y|Xa^~y]W{qqP{UZFQa^}Qxhez\ko
EhubBQAEhja^~y]W{qqP{U^[{X_^||YIXuhlYDua{ |fX\~lZX}vWCklt]|fy|YIkea{QE{{qqP{{xEhja^}QxQKyDqQsW{qq^Qt Sqy{QEVjzMhk
Y~s_P{{sW{\rAQVcY}[y||Y~s_P{{sW{\rM{R]YfY	r`ksHfSPRsI[ @|AI}qq@|B]GayDqQsW{qq^VJJ{X_^VJJ{[G|{{sW{qzW`p\{X_^PUEhayDqQsW{qq^VQ{{Xy^qV8D]RAKWGXUqqqU{]qYbqy{ZnJtXyK|IHwaJ}tT[ts_U{svUq_vBhs~qXi{Y@yqqqU{s}]Z~{ZX[\ f[hwqDt_bkCYZ\}GP}\q[Gy{svUqqzBhs~q_f_|JeYvfWE~gzveiF|tvva }dPtei|d_YuHyJhw}XbqyAqYvUqqq[P]aqX_[Vz[ts_U{svUq\rZVwP[w[yDQ^aAba[~qXUqqqU{^uD[\a[}Y~vv}[~qXUqqqU{^uHqX_[f[wjaqJdzUuXqKYEvK K}svEvH_Ec~A{[qU{sv[\uHH{ZX[\uHH{Y@yqqqU{s}]jr^{ZX[Z_	Ghc~A{[qU{sv[\[y{Z~[{\ 8F[WKA
TT]
WS
 
UUZ QT	T]rH[PEY_C
WVQBKBD^]V^]\UA]QE@[DNL^CFIGWFSBXRS\WBfK@RV]^WRPVPRWQ 	]PQSgU
QZTWP
WZRWqo]

VSWPPUTRTSWPW
YQUY R
W^RQ	VZLF@AV
T TD_]TQ^_GUS^@[W_F:D^UDAPVQPU
WPVZ Sr[ZY\SXB_Y\B_\W\SEKHFY]\Y]VWAWSB@QFIF\DLK@WDTBZUSVUEfABU\_YWURQZPWV 	WP[	SmRSW	QQTgU
 YSW
UP	WVP[	SU PR
QSWQ 	]
WVPSYZDFBCYTQF_U VT\PG]S\B^UPF	8DE]RS^S TS[RTP \VS
]
pU_UP_]]^URQZPWV 	WP[	SmRSW	QQTgU
 YSW
UP	WVP[	SU PR
QSWQ 	]
WVPSYZDFBCYTQF_U VT\PG]S\B^UPF	8F[WKA
QP]	^UUQ V\r][^[P]_]US
U\QBNBL[_\^X\]CWQEE[LKF^CFABUFSGPWQVWBcKHW\]^RWPVPZUQWUQQmUSRSSSmW
SYU
RZWTUQQWRU SSRSW	]TPQSPFDBAS V VCUW TSYZM_Q\@YPZL	8D\RAKTZPW
WRP^	SQSxQX[\Q_@QV]\S@K@C[W\\]^RKWSG@YCKF\ADNB]DQB_WYVU@fIGW\_\WWRTRU]S WPSYmWSW[QQh]

VSWPPUTRT QWPW
YQUY R
W^RQ	VZLF@AV
T TD_]TQ^_GUS^@[W_F:D^UDASVQ[P
	QWP] P	Vr__UU_UFSR\[@IBFYX\\_\WDW[GB[FI
FTAFK@RLQ@ZUVV]@dKBU
\W\UU ZTPPRS	WRQ	VmWSU	TYQmU SSR
PP	W^RQ	V]UW
QSUQWWVP[	SZDCBKSQ
TD_U ^Q^ZG]V\J[WZF	8N^UAA

UPT

]P
W P	rTXU]V_UWTTUYQJK@F[_YV]^WCRQM@YFKC^KDKBU
F[BZWQSWJfIBWY]VWWP^RPUY RPSQh]PPWT
U	QZoW
QSUZPRTPSQW	R]
SVW	S	UWTUQQZFDGAQ V ^F_WT[\XG_QY@QUXF	=DTWCA^W V 
WZT ZrU]RUUWUC
U\QBNBL[_\^X\]CWQEE[LKF^CFABUFSGPWQVWBcKHW\]^RWPVPZUQWUQQmUZPRT
	W	TRmojWV WS[RWUZSVRP	P h   V
TUQZQSRPWSQ]S W	
UTRTSXFF@DS TTL]WQQVZE_S^E[_ZD:A_]ACREyyqsYS[qyq{I~[O|s[sW~\zHyX]W~G]EeYZWk
]^@YV^]oQzAG[ Ba|\\~j]^C`B_Bz@PhhDFxB_SzjESH]F{iGRegFn ]TeXU\rBj Z xfS[|s{~qy[ie`[~XWUy_VDme\Fja^naqAtc]W~qrERx ~XWUyXc zKqAtc]W~qrBjq{~qqJ~XpZmfrX}qxeiK|fwHmeqFied]zK~XsGzvu}XdYnea[|s{~qy[ie^[~XWUyXwI~[O|s[sW~\vXUa{~qrZTj`F~[O|s[sW~_^Tq{~qrSK{CscWUyqx Rjz^yX]W~_DR_gY{syyqsYVuHTq{~qr\Red^UemGj wY{syyqsYTu~Qq{~qqDU\VhTzjeUuUF~[O|s[sW~\jASK{~qrRzY{syyqsYT ByX]W~[q|s\=DUWCAWO{{qq^VQ{{qyN{QE~q[qP{VpJ{X_P{MWGg^_]a_^G\\\_ j[xCGYGksWcWC\S{eaudIVSp` Qz}~A ~_[~
|ESzfCkoISeTXV|Y{[GyqQsW{_v\h{{{qz^SoVJVjyBk
kY~s |{{sYQu	NV{{{qy||Y~s |{{sYSea^}QsY|fb\||ZY eC}|^]|a OodY~eu|
cD|fi@|sJ|vykU`Z{[GyqQsW{_vGh{{{qyOQ{Cvc_P{{xJk[^}QsYkjfPA{Cvc_P{{xEhja^}QsYV}^~y{{qq^Vp^Ghay{{xEP [{QE~q[qP{UZFQa^}QsYk_\YQdI~_~Z{QE~q[qP{VpXVuW^}QsY~Tc
i|gb]~A{Cvc_P{{x Pz}^}QsYVuHM{QE~q[qP{V|ESay{{{Yvc@8L@_XS^	TTPQSP 
R\V QpC@WFB]][U ZTPPRS	WRQ	VmW	VSU	UZVmU SSR
PP	]UW
QSUQWWVP[	SUQZQSXCFHAST VF]R
TS\ZEZSV@YUZD2D\WACSQPV

	WRR 		VpQG[YH[S_QWVZ_\UPSUYQJK@F[_YV]^WCRQM@YFKC^KDKBU
F[BZWQSWJfIBWY]VWWP^RPUY RPSQhFWYI]mh]

VSWPPUTRTSWPW
YQUY R
W^RQ	VZLF@AV
T TD_]TQ^_GUS^@[W_F:D^UDA	QS   
	SVWP PUr^GSYJY][VBY\UTTUYQJK@F[_YV]^WCRQM@YFKC^KDKBU
F[BZWQSWJfIBWY]VWWP^RPUY RPSQhA]]E^mh]

VSWPPW
Y U   PRRPW	R]TPQSWPUVYWV W	
		UQZQSXCFHAST VF]R
TS\ZEZSV@YUZD2FB]XQY
 ]STVQSVRR VTSP]
QVVwTMQ[J[Z^\H[^UWVU ZTPPRS	WRQ	VmKW_G^omW
SYU
RZWTUQQWRU SSRSW	]TPQSPFDBAS V VCUW TSYZM_Q\@YPZL	8D\RAKWYTSTWR
P  	SxJYPG^UYR\[@IBFYX\\_\WDW[GB[FI
FTAFK@RLQ@ZUVV]@dKBU
\W\UU ZTPPRS	WRQ	VmKW_G^omW
SYU
RZWTUQQWRU SSRSW	]TPQSPFDBAS V VCUW TSYZM_Q\@YPZL	88