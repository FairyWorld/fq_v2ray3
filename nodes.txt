D]WACWG]Uy{sW{]tYj{{{ZwJ~{ |I ~{H|J[|y]W{ssUyUt@hs{yRk {YEyy{sW{sx]R| {Z][iUdEhhhDRdEkgGj`EQIGj`cY~q]Uy{sW{]^YyR]Yht|_~Bgh]gF~RskI|sI~d^Y~BwDh]gEjR{J|Jx[}R^X{YEyy{sW{sxGj`cY}YxSA{CqYsUy{sYQwtQ{{{Y^Upp\kcDyQE{{ssUy{xGPxyR]Y|tcHyQE{{ssUy{xGQI{yS``ugU}lG{t{E}R{DtUF}RsWtg}|wY~q]Uy{sW{^`ASA{{^`ASA{CqYsUy{sYVx^Ejk{{]DRUgY~q]Uy{sW{^k[Q{I{WB:N_UAC]E_UyqsWq_vYjq{qXiJ|X{IvKqHuXW[|s]WqqqUy_t@bqyyXk q[GyyqsWqqz]R| qX_[T dYbuvD|_`[Z\}GR_d q[GyyqsWqqzBjq{q_avYbfzX|fUJvHuF~u{ a[ZiHctfqK}f{vXWEvsHvqyAs[sWqqq[R_d qX_[TYts_UyqsWq\rZTuUYw[yDQutI\_fHTq
Yts_UyqsWq\rDS\cYw[y~vYts_UyqsWq\rHyX]YlY	wbasHufSU}XsIu[ EqIuqqE~f]GuayAs[sWqqq[TuJJqX_[TuJJq[GyyqsWqqzUjp\qX_[R_EbayAs[sWqqq[T[{qXy[s\2D]WCAWG]W{qq_{]t[hqy{ZkH~XyA|I K@|J{Y~s__{ssW{_vHhs{{Xi{YE{{qq_{sx_P~{Z]YV fQhwtF~_b	kF[P\}MPx^{[Gs{ssW{qzHhs{{XS	dgkHrR~d|\kHaL|tk|KQJd[~fahddXHu
tk}ayKqYsW{qqQP]d {X_QVY~s__{ssW{\rPVwUY}[yNhxx@V_\MhI
Y~s__{ssW{\rNQ^cY}[y|tY~s__{ssW{\rB{Z]YfY	}`csHf}_ZsI[ O}sIqqO|d]GayKqYsW{qqQVwJJ{X_QVwJJ{[Gs{ssW{qzWhp\{X_QP]EhayKqYsW{qqQVY{{XyQq^8D]]ACWGWUyqqU{]~Yjqy{Z}J~q|IqHYqAs[qU{sy[ie\Y{ZW[~Xa[~qWUyqqU{]PDSa[}YrGjjbYkg GjzfXSjGSKDQ][[|s_U{syUy_\Y{ZW[i_~X|tP[~H[Ftm~K }gq|ezYkgqF~e}}wm}ejXdv_y[Gy{syUyqzGhhi[[zQIqAs[qU{sy[SuvSsqy[	\Q]~Gjq[~qWUyqqU{^zDS\a[}Yq~v}[~qWUyqqU{^zHyX_[f[wbaqJdmU}XqKYEq KsyE~f_EcqAs[qU{sy[TuHH{ZW[TuHH{YOyyqqU{srUjr^{ZW[R_	GhcqAs[qU{sy[T[y{Zq[s\ 8FTWCA
[TU
WS 

UZR QT 	[UrH[PEVWC
W^QBKBDQ]^^]\UAUQE@[DAD^CFIHWFSBX]STWBfK@]^]^W]PVPRWQ 	UPQSoU
QRTWP
WRRWqoU

YSWPP	UTR[	SWPW
QQUQ ]
WVRQ	YZDF@AYT TD_UTQ^PG]S^@[WPF	:D^UKA
PV^PU
 WPYR SrSZY\SXM_Q\B_\W\SJK@FY]\V]^WAWSM@YFIF\KDK@WD[BZUSVUJfIBU\_VWUR^RPWY 	WPS	Sm]SW	QQ[oU
QSW
ZP	WVPS	SU	P]
QSW	Q 		U
WVPSQZDFBCQT^F_U V[\XG]S\BQUXF	8DJ]ZS^\TSS]TP TVS
U
pU_U__U]^UR^RPWY 	WPS	Sm]SW	QQ[oU
QSW
ZP	WVPS	SU	P]
QSW	Q 		U
WVPSQZDFBCQT^F_U V[\XG]S\BQUXF	8FTWCA
QPU	 VUZ	Q  YTr][^[_]W]US
U\QBABD[_\^W\UCWQEJ[DKF^CFIBUFSHXWQVWBlK@W\]^]WPVPRUQ
	WZQQmU	S]SSSmW
SQU
RRWTZQQWRUSS]SW		UTPQSXFDBAS V VL]W TSVZE_Q\@Y_ZD	8D\]ACTRPW 
	WRPV	 S^SpQX[\QP@QVU\S@K@L[_\\]^]CWSG@YLKF\ADABUDQBPWQVU@fIHW\_\WWRTRZUS WPSQmWSWSQQgU

YSWPP	UTR[QWPW
QQUQ ]
WVRQ	YZDF@AYT TD_UTQ^PG]S^@[WPF	:D^UKA
SVQSP
	^WP U P	YrW_UU_UF[]\S@IBFYW\\_\WKWSGB[FIF\AFK@]DQ@ZUYVU@dKBU\_\UURTPP]S	WRQ	YmWSU	[QQmU SS]
PP	WVRQ	YUZW
QSUQ
	W WVPS	SZDLBCS^TD_U VQ^ZG]Y\B[WZF	8F^UAA

UP[

	UP
W 	P	rTWUUV_UW[T
UVQBK@F[_V^]^WC]QE@YFKL^CDKBUFSBZWQ\WBfIBWV]^WWPVRPUQ ]PSQgUPPWT
	U	^RoW
QSU RP]TPSQW	RU
SYW	SU		WTZQQZFDHAQ V VF_W
TS\XG_QV@YUXF	2D\WCAVW Y
	WRT 	RrU]]U]WUC
U\QBABD[_\^W\UCWQEJ[DKF^CFIBUFSHXWQVWBlK@W\]^]WPVPRUQ
	WZQQmURP]T
	W	TRmgjW V WSSRWU RSV]P	P g    VTU^RQS]PWSQUS W	
UTR[	SXFF@KS T
TD]W^Q^ZE_S^J[WZD:N_UAC]E yyqsY\[yyq{Iq[G|s[sWq\rHyX]WqGUEeYUWc
]^@V^^]`YzAG[ Mat\\~j]QChB_Bz@_h`DFxB_\zbESH]FtaGRegFa ]TeXZ\zBj Z wf[[|s{qqq[ie`[qX_Uy_VDbeTFja^aayAtc]WqqzERx qX_UyXc uKyAtc]WqqzBjq{qqyJ~XpZbfzX}qweaK|fwHbeyFied]uK ~XsGuv}}XdYaei[|s{qqq[ie^[qX_UyXwIq[G|s[sWq\~XUa{qqzZTj`Fq[G|s[sWq_^Tq{qqzSK{C|c_Uyqx ]jr^yX]Wq_DR_gYts yyqsYYu	HTq{qqz\Red^ZeeGj wYts yyqsY[uvQq{qqyDU\Vh[zbeUuUFq[G|s[sWq\bASK{qqzRzYts yyqsY[ ByX]Wq[y|s\2D]WCAWG{{qqQVY{{qyA{YE~q[q_{^pJ{X__{EWGgQ_Ua_^H\\\_ j[xCGYGcsWc	_C\S{jiudIYSx` Qz}~I ~_T~|ESzfLkgISeTWVtY{[GvqYsW{_vShs{{qzQSgVJVjyMkkY~s s{ssYQu	AVs{{qy|tY~s s{ssYSeaQ}YsY|fbS|tZY eL}t^]|a @gdY~eu	|cD|fiOtsJ|vy
k]`Z{[GvqYsW{_vHhs{{qy@Y{Cvc__{sxJk[Q}YsYkjfPI{Cvc__{sxEhjaQ}YsYV}Q~q{{qqQVx^Ghay{sxEP T{YE~q[q_{]ZFQaQ}YsYk_\VQdI~_~U{YE~q[q_{^pXVuWQ}YsY~Tci|gbR~I{Cvc__{sx Pz}Q}YsYVuHB{YE~q[q_{^|ESay{s{Yvc@8D@_XS^	[	T P^SP 
RTV QpL@_FB]]TURTPP]S	WRQ	YmW	VS	U	ZRVmU SS]
PP	UZW
QSUQ
	W WVPS	SU^RQSXLF@AS
T VF]]TS\ZEUS^@YUZD:D\WACSQPV 

WR] 	Vp^GSYH[S_^W^Z_\U_S
UVQBK@F[_V^]^WC]QE@YFKL^CDKBUFSBZWQ\WBfIBWV]^WWPVRPUQ ]PSQgF_YI]mgU

YSWPP	UTR[	SWPW
QQUQ ]
WVRQ	YZDF@AYT TD_UTQ^PG]S^@[WPF	:D^UKA
	^S  
	\VWP  PUrVGSYJYR[^BY\U[T
UVQBK@F[_V^]^WC]QE@YFKL^CDKBUFSBZWQ\WBfIBWV]^WWPVRPUQ ]PSQgAU]E^mgU

YSWPP	W
Q U P]RPW	RUTPQSWPUYQWY W	
	U^RQSXLF@AS
T VF]]TS\ZEUS^@YUZD:FB]XQV
USTVQSVR] VT\PU
QVVxTEQ[J[ZQ\@[^UWYURTPP]S	WRQ	YmCW_G^o
mW
SQU
RRWTZQQWRUSS]SW		UTPQSXFDBAS V VL]W TSVZE_Q\@Y_ZD	8D\]ACWQTST WR
P   	\pJYPG^UQ]\S@IBFYW\\_\WKWSGB[FIF\AFK@]DQ@ZUYVU@dKBU\_\UURTPP]S	WRQ	YmCW_G^o	mW
SQU
RRWTZQQWRUSS]SW		UTPQSXFDBAS V VL]W TSVZE_Q\@Y_ZD	88