D]W@C	WG]TyppW{]tXjpx{ZkK|YxI|IJ|YR{YExyppW{sx[Qd`Y}Y{~pxCqYsTyppYSwITpx{]x_R^gPJ_R^\~]`XR]|EP]dyZF{{ssTyp{@hs{yYRH}tV^jd{\~dkI~gdD|tsK~JhwJ|g]]|gg}gZ}w`Zj`xCqYsTyppYP]dyY^YVZ|r^W{ssTy]sXVwUZZxFktJj`	Y~q]TyppW{^pES]`Y}Y{~w|Y~q]TyppW{^pIyY^Yf[vb`pHJsT}YpIID}JHssK~w^Jc{@sZpW{ssZTtIJ{Z]ZTtIJ{YExyppW{sxUks\{Z]ZR^Ehc{@sZpW{ssZTZx{Z{Zs]8F_VC@UE\WzrqUy_u[iryyXvH}r~K|r}[zCpXqUyqrYjf\YyX\Y}[a[|s\WzrqUy_[FPa[[yEiibYieEiyfXQ aEPHDS_PYp_UyqrWz\\YyX\Y~[fYjuv|eSFv~JjX ~vyYe\XjXjDjb[iXfG|e~ZvzzXGyyqrWzrzGjjbY|XzSKzCpXqUyqrYPvvQqzzX	HSu
 HyAs[rWzrq[Su
IWryyXb ~HyAs[rWzrq[Sz~Y|Xz}davzuuJ~arI~uyH|frJeuEyvv |[}Jy[D{zrqUyqy Qy}[[y Qy}[|s\WzrqUy\aPve[[yEQ^y[D{zrqUyqyz[_[}[z{U`:D^U@B
WD_TxssW{^vXks{{YuKs |JcH}wuZ}q]W{pqTx]t@hpyxZk {ZGxxssW{pz\S| {Y_ZUdYhtvE}]`kDXS^EP z]xYE{{pqTxsx@hpyxZd[wqJ~wxX~gjXhgkD|tv[hIXhY~Z}ddXhgr[|ZQGYWDkY{CqZqTxssYP^fxZ]YV }Z}q]W{pqTx^pXVtWZ~Y{FPdvD}I{CqZqTxssYQt	JUs{{Ya|I{CqZqTxssYQ{}Z~YxfbuxtwHJqJ|t{J~gqI}dwG{wu~ZH{ZGxxssW{pzSxY}ZzSxY~r_TxssW{]bRwgY}ZzFS\{ZGxxssW{pzxZ]YZyxWa8E]VBCVG\VyqqUz]uZjqyzZjI|XyK}I qK}szBs[qUzsrXie\YzZ\X~Xa[q\VyqqUz][GSa[|YyS\fRwi Ru^P~DjzfXRaDSKDP]PX|s_UzsrVy_\YzZ\X}fSJ}df}H[F~gfFi[ |duZ|ev_~gbE~_yjdr eaE|wbIy[GyzsrVyqzGihbX[zPIzBs[qUzsrXSuvRszy[	_jgARz[DzYDzyqqUzsyFRzzZ\X~vaHzYDzyqqUzsyFSKyz[abweU~dvIyvyE~Z~E}v}F~drV}fa~JvX|s_UzsrVy\bAPIzy\bAPIzBs[qUzsrXTz\Eiczy_DQ]fX|s_UzsrVy\i[|YzHyU@9F_TCA
PWU
WR	
UQR QT 	PUrH[QE]WC
T^QBKCDZ^^^]]UBUQE@ZDJD^CGICTFSBXVPTWBfJ@V^]^WVPVQRTQ 	
UPP
PoU
QRTW

S
VRRWpoU

RPWQS	UTRP	SW
PV	QQU
Q V

TVRQ	RYDF@ART UD\UTP^[D]S^@ZW[E	:D_U@B
P
VUPU WQRR SqSZY\RXF\Q\B^\	W]SAH@FY]]]^^WAVSFCYFIG\@DK@WDPAZUSWUAeIBU]_]TURURPWR	VSS	SlVRT	QQPoU
QSWQP	VVSS	SU	PV
QRT	Q 	U

WVQSQZDFCCQTUE_UVP_XG]S]BZVXF	9DA^ZS^WUPSVWP  TVR	U
pU^UT\U]^	URURPWR	VSS	SlVRT	QQPoU
QSWQP	VVSS	SU	PV
QRT	Q 	U

WVQSQZDFCCQTUE_UVP_XG]S]BZVXF	9F_TCA
QSU	VUQ	Q R Tr][_[T^W]UR
U\PBJAD[_\^\_UCWPEAXDKF_CEIBUGSCXWQVVBgH@W\\^VWQVSRUQ	WQRQmU	SVSRS nWPQU
RRWUQRQVRUSSVS
T		 UTPP
PXFDB@ P VVG]W US]YE_Q\AYTYD	8E\VBCWRPW		VRSV	 
SUPpQX[]Q[CQV U\S@J@GX_\\\^VCWSGAYGHF\ADJAUDQC[TQVU@gICT\_\VTRTRQUS
WQSQmW
SVSQQlU

RPWQS	UTRPQW
PV	QQU
Q V

TVRQ	RYDF@ART UD\UTP^[D]S^@ZW[E	:D_U@B
SW
RSP	UWQU Q	RqW_UU^UE[ V_S@IBGY\_\_\V@TSGB[GIE\AFJ@VDQ@[URUU@dKCU__\UURTPQVS
	TRQ	RnW
PU	PQQmUSRV	PQ	TVRQ	RUQWQPUQ	W
 VVSS	S[DGACSUTD^UVQ^ZF]R_B[WZG	
;F^UA@

UPP

 UP
V   	P	sT\VUV_UVPW
U]RBK@FZ_]^]^WCVRE@YFJG]CDKCUESBZVQWTBfIBV]^^WVSVRPUQ 
VPS
QlUP
SW
T		U	URoV	QSURP
VWPS
QT	RU
RRW	RU	WUQRQZGDCBQVVF_VWS\XG^Q]CYUXF
	9G\WCA	 VW R
TRT  RrT]VV]WUB
U\PBJAD[_\^\_UCWPEAXDKF_CEIBUGSCXWQVVBgH@W\\^VWQVSRUQ	WQRQmURQVT	T	TRngjWU VPSRWURSWVP	Q l  VTUURQRVQTSQUS
 W	UTRP	SXFG@@S UWD]WUR^ZE_R^AXWZD
:E\UACVF yyqrYWXyyqzIzXG|s[rWz_rHyX\WzDUEdY^Tc
]^@]^^]kYzAGZ Fbt\\~k]Z@hB_B{@Tk`DFxC_WybESH\FaGRefFj]TeXQ_zBj [ |e[[|s{zrq[iea[z[_Uy_WDifTFja^jbyAtc\WzrzERy z[_UyXb ~HyAtc\WzrzBjqzzryJ~XqZiezX}q|faK|fvHifyFiee]~H ~XrG~u}}XeYjfi[|s{zrq[ie_[z[_UyXvIzXG|s[rWz_~XUazzrzZTjaFzXG|s[rWz\^TqzzrzSKzCw`_Uyqy Vir^yX\Wz\DR_fYp yyqrYRv	HTqzzrz\Ree^QfeGj vYp yyqrYPvvQqzzryDU\WhPybeUuTFzXG|s[rWz_bASKzzrzRz~Yp yyqrYPByX\WzXy|s\9G]WCA	TG{{pqZUY{{pyJxYE~qZqTx^pJ{Y_TxEWGgZ\Ua__C_\\_  i[xCFYDcsWc_C\R{aiudIRPx` Q{}}I ~^_}|ES{fGhgISdT\UtY{ZG}rYsW{^vXks{{pzZPgVJVkyFhkY~r xxssYQt	JUs{{pytY~r xxssYSdaZ~YsY|gbXtZYeG~t^]|` K|gdY~ducD|giD|tsJ|wyh]`Z{ZG}rYsW{^vCks{{pyK|Y{Cvb_TxsxJk [Z~YsYkkfSI{Cvb_TxsxEhkaZ~YsYV }Z}q{{pqZUx^Gh`yxsxEP_xYE~qZqTx]ZFQ aZ~YsYk^\]RdI~^~^xYE~qZqTx^pXVtWZ~YsY~ T`i|fbY}I{Cvb_Txsx P{}Z~YsYVtHIxYE~qZqTx^|ES`yxs{Yvb@
;D@_XR^		P	T QUPP 
R TV PpGC_FB]]_URTPQVS
	TRQ	RnW	
VP	U	QRVmUSRV	PQ	UQWQPUQ	W
 VVSS	SUURQRXGE@ARW VF]VTS\[E^P^@YU[D
:D\W@C	SQPU 
 WR
V  	VpUDSYH[R_UT^Z_\TTP
U]RBK@FZ_]^]^WCVRE@YFJG]CDKCUESBZVQWTBfIBV]^^WVSVRPUQ 
VPS
QlE_YI]llU

RPWQS	UTRP	SW
PV	QQU
Q V

TVRQ	RYDF@ART UD\UTP^[D]S^@ZW[E	:D_U@B
	UP  	WUWQ
   QUqVGSYKYYX^BY\TPW
U]RBK@FZ_]^]^WCVRE@YFJG]CDKCUESBZVQWTBfIBV]^^WVSVRPUQ 
VPS
QlBU]E^llU

RPWQS	V	Q U P
VRQT	RUTPP
PW
SURQW
RV			UURQRXGE@ARW VF]VTS\[E^P^@YU[D
:FB]YQ]

USTWQSVRVVUWSU
QVVsWEQ[JZZZ_@[^UWRURTPQVS
	TRQ	RnCW_G_onWPQU
RRWUQRQVRUSSVS
T		 UTPP
PXFDB@ P VVG]W US]YE_Q\AYTYD	8E\VBC TQTS
W VR	P   	WpJYPF^VQ V_S@IBGY\_\_\V@TSGB[GIE\AFJ@VDQ@[URUU@dKCU__\UURTPQVS
	TRQ	RnCW_G_onWPQU
RRWUQRQVRUSSVS
T		 UTPP
PXFDB@ P VVG]W US]YE_Q\AYTYD	89