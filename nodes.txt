D]W@C	WG]TyppP{]tXjpx{ZkK|YxN|I ~`O|dkZ|r^P{ssTy^wGhs{yYh{YExyppP{sx\R {Z]ZT{{VwZ^TdIBhh|I|^ckFXR]|BPx]yZF|{ssTyp{Ghs{yY`N}wh^gpM~d{}YdC|t`[j`d{|ghN|ts}||ZYj`xDqYsTypp^P]dyY^^VZ|r^P{ssTy]s_VwUZZxAkZCRtcXPX|JxDqYsTypp^QwJTpx{Zc}JxDqYsTypp^QxZZ{xf `uywtOcsJ}wxM~dsI|gt{tsY|O{YExyppP{sxR{|^}YxR{|^~q]TyppP{^`Std^}YxFR[{YExyppP{sxyY^^Y{xVb
8F_VC@UE\WzrvUy_u[ir~yXjH[~K~K~rqzCpXvUyqrYjf[YyX\Y}[f[|s\WzrvUy_[FPf[[yEiieYieEiyaXQ aEPHDS_PYpXUyqrWz\[YyX\YjfmYjvX}[PF}XfHiXjez ePEjXfD}[TJ~ zjf}Z}_aZzX@yyqrWzr}GjjbY|X}SKzCpXvUyqrYPvqQqzzXGija@QDy[D{zrvUyqyGQ}yX\Y}ufHy[D{zrvUyqyGPH~yY`atbU}fvzu~E}X~D~uzF}fPW~uP}HvYpXUyqrWz_eASKzz_eASKzCpXvUyqrYWy[Ejazz\DR_fYpXUyqrWz_n[[zIzVG:D^U@BWD_TxtsW{^vXkt{{YiK}]{I|J ^IIeZ}v]W{pqTxZt@hpyx]k {ZGxxtsW{pz\S| {Y_ZhZdEhkjESpdEkeFkp`EQJFkocY~r_TxtsW{^\Xx]]Y}djZ|]dZuGhkG` ~cdZ~gX_h]UDw}~px\|gS~p`Z{ZGxxtsW{pzFkocY}Zz RN{CqZqTxtsYQtvPt{{Z	@ho`\P{[Ex^E{{pqTxtxGP zx]]Y|waIx^E{{pqTxtxGQJyx\``veT|cG{wyD|]Dw}G|cQWwW|MwY~r_TxtsW{]b@RN{{]b@RN{CqZqTxtsYV{\Dkd{{^ESZgY~r_TxtsW{]iZ~^{I{T@
;A_UA@
RE_UzsrV~_vYisz~XiJZzHyK}sIzHu[q\V~qqUz]uAmqyzZj~[GyzsrV~qz]Q}~X_[WeXmuvD]a n DYQ^~DUz\zYDz~qqUzsyAmqyzZqYyXrY~tqX{f\Y}]fEyvbYjcYy_aJd[ZxuzYiZbmf~^jYzBt[qUzsrXU_fzZ\XS}[q\V~qqUz^qYSuW[|YzGneb Rh}]{KyApYrV~qq[Pw
HSqyzZbzKyApYrV~qq[Px~Xx[z}g aw~vuJ~IrHzvyHdrK{fuztrxX}JzYDz~qqUzsyUz}[|YyUz}[q\V~qqUz^aTue[|YyDU ^zYDz~qqUzsy~X_[~YzzQc9F_TDA
PWR
WR	
UQU QT	PRrH[QE]PC
TYQBKCDZ^Y^]]UBRQE@ZDJC^CGICT
FSBXVPSWBfJ@VY]^WVPVQRTQ 	
RPP
PhU
QUTW

S
VURWpoR

RPWQSUTRPSW
PV	VQU
V V

TQRQ	RYCF@ART UD\RTP^[DZS^@ZW[E:D_U@BP
VUPU WQRU SqTZY\RXF\V\B^\	W]SAHGFY]]]^YWAVSFC^FIG\@CK@WDPAZUSWUAeNBU]_]TURUUPWR	VST	SlVRT	QQPhU
VSWQP	VVST	SUPV
QRTQ 	R

WVQSVZDFCCVTUE_UVP__G]S]BZV_F	9DA^]S^WUPTVWP  SVR	R
pU^UT\R]^	URUUPWR	VST	SlVRT	QQPhU
VSWQP	VVST	SUPV
QRTQ 	R

WVQSVZDFCCVTUE_UVP__G]S]BZV_F	9F_TDA
QSR	QUQQR Sr][_[T^P]UR
U\PBJAC[_\^\_RCWPEAXCKF_CENBUGSC_WQVVBgHGW\\^VWQVSUUQWQRQmUSVSRS nWPVU
RUWUQRQVRUSSVS
T	 RTPP
P_FDB@ P VVGZW US]YB_Q\AYTYC	8E\VBDWUPW	VRSQ	
SUPwQX[]Q[CQV R\S@J@GXX\\\^VDWSGAYGH
F\ADJARDQC[TVVU@gICT
\_\VT RTRQRS
WQSVmW
SVTQQlR

RPWQSUTRPQW
PV	VQU
V V

TQRQ	RYCF@ART UD\RTP^[DZS^@ZW[E:D_U@BSW
RTP	UWQR Q	RqP_UU^UE\ V_T@IBGY\_
\_\V@TTGB[GIE[AFJ@VCQ@[URUR@dKCU_X\UUUTPQVS
	TRQ	RnW
PU	PVQmUSRV	PQ	TQRQ	RRQWQPUQW
 VVST	S[DGADSUTD^UQQ^ZF]R_E[WZG	
;A^UA@

UPP

 RP
V   P	sT\VRV_UVPWU]REK@FZ_]Y]^WCVRB@YFJG]DDKCUETBZVQWTEfIBV]^YWVSQRPUV 
VPS
QlRP
SW
T	U	UUoV	 QSUUP
VWPS
QT 	RR
RRW	RUWUQRQZGDCBQVQF_VWT\XG^Q]C^UXF
	9G[WCA	 QW R
TUT  UrT]VVZWUB
U\PBJAC[_\^\_RCWPEAXCKF_CENBUGSC_WQVVBgHGW\\^VWQVSUUQWQRQmUUQVT	T 	TRn`jWU VPTRWUUSWVP	Q l VTUUUQRVQTSQRS
 W	UTRPSXFG@@S UWC]WURYZE_R^AXPZD
:E\RACVFyyqrYWX~yqzIzX@|s[rWz_uHyX\WzDREdY^Td
]^@]Y^]k^zAGZ Fbs\\~k]Z@oB_B{@TkgDFxC_WyeESH\FfGRefFj]TeXQ_}Bj [ |e\[|s{zrv[iea[z[XUy_WDifSFja^jb~Atc\Wzr}ERy z[XUyXb ~H~Atc\Wzr}Bjqzzr~J~XqZie}X}q|ffK|fvHif~Fiee]~H~XrG~uz}XeYjfn[|s{zrv[ie_[z[XUyXvIzX@|s[rWz_yXUazzr}ZTjaFzX@|s[rWz\^Tqzzr}SKzCw`XUyqy Viu^yX\Wz\DR_fYpyyqrYRvHTqzzr}\Ree^QfbGj vYpyyqrYPvqQqzzr~DU\WhPyeeUuTFzX@|s[rWz_eASKzzr}Rz~YpyyqrYPByX\WzX~|s\9GZWCA	T@{{pqZU^{{pyJx^E~qZqTxYpJ{Y_TxBWGgZ\Ra__C_\\_  i[xCFYDdsWcXC\R{anudIRP` Q{}}N ~^_}|ES{fGh`ISdT\UsY{ZG}r^sW{^vXkt{{pzZP`VJVkyFhkY~r xxtsYQt	JUt{{pysY~r xxtsYSdaZ~^sY|gbXsZYeG~s^]|` K|`dY~ducD|giD|ssJ|wyhZ`Z{ZG}r^sW{^vCkt{{pyK|^{Cvb_TxtxJk [Z~^sYkkfSN{Cvb_TxtxEhkaZ~^sYV }Z}v{{pqZU^Gh`yxtxEP_x^E~qZqTxZZFQ aZ~^sYk^\]RdI~^~^x^E~qZqTxYpXVtWZ~^sY~ T`i|fbY}N{Cvb_Txtx P{}Z~^sYVtHIx^E~qZqTxY|ES`yxt{Yvb@
;C@_XR^		PTQUPP 
R SV PpGCXFB]]_UUTPQVS
	TRQ	RnW	
VPU	QUVmUSRV	PQ	RQWQPUQW
 VVST	SUUUQRXGEGARW VF]VTS\[E^PY@YU[D
=D\W@C	SQPU
 WR
V  	VpUDTYH[R_UTYZ_\TTPU]REK@FZ_]Y]^WCVRB@YFJG]DDKCUETBZVQWTEfIBV]^YWVSQRPUV 
VPS
QlEXYI]llR

RPWQSUTRPSW
PV	VQU
V V

TQRQ	RYCF@ART UD\RTP^[DZS^@ZW[E:D_U@B	UP  	WUWQ
  QUqQGSYKYYXYBY\TPWU]REK@FZ_]Y]^WCVRB@YFJG]DDKCUETBZVQWTEfIBV]^YWVSQRPUV 
VPS
QlBR]E^llR

RPWQSV	V U P
VRQT	RRTPP
PW
SURVW
RV			UUUQRXGEGARW VF]VTS\[E^PY@YU[D
=FB]YQ]

RSTWQSVRVVUWSR
QVVsWBQ[JZZZ_G[^UWRUUTPQVS
	TRQ	RnDW_G_onWPVU
RUWUQRQVRUSSVS
T	 RTPP
P_FDB@ P VVGZW US]YB_Q\AYTYC	8E\VBD TVTS
WVR	P  	WwJYPF^VV V_T@IBGY\_
\_\V@TTGB[GIE[AFJ@VCQ@[URUR@dKCU_X\UUUTPQVS
	TRQ	RnDW_G_onWPVU
RUWUQRQVRUSSVS
T	 RTPP
P_FDB@ P VVGZW US]YB_Q\AYTYC	89