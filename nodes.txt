D]WAB
WG]UxspP{]tYksx{ZkJ}ZxN|IH~c{YEyxspP{sxZPg`^}Y{ sxDqYsUxsp^SwHUsx{]^Uwc_PIYUgEhwH}]NhI{ArYpP{ss[Pg`^}Y{K~gh|dgsMhtYJ}dc^hdYFhdU[cZktc_kZQ|`NkZY[}q^P{ssUx][Vs{x^UM{YEyxspP{sxEhhcX{Z][}c[kc
[}q^P{ssUx^sAQ^c[~Yx|t[}q^P{ssUx^sM{Z][e[r`csJ|ddPZsK|YOsJIp@|t]E|cxDqYsUxsp^VwJHxZ^^VwJHxYF|{ssUxs{Whp^xZ^^P]GkcxDqYsUxsp^VY{xZx^q^;F\RACUFXUyqsVy\qYjq{y[nJ|X{H~H~KI}ev[|s]VyrvUy_tAjr~yXkyX@yyqsVyr}]R|y[X[T dXjvqD|_` iCYR\DR}\y[EzyrvUyqxAjr~y_{H}\~ ~e|]|fn}fYE~umXj[~u[_|eh]uq_jfkjuP }q{BsXvUyqsXR\ayX]XTz[|s]VyrvUy\pYTvP[[{GiHTq
X|pXUyqsVy_uDS\cXX~~vX|pXUyqsVy_uHyX]XdZwbasI}ezU}XsH}XJ}qI~HvE~v]F}b~As[sVyrv[TuJKy[X[TuJKyX@yyqsVyr}Ujp]y[X[R_Djb~As[sVyrv[T[{y[~[s\:GZWCAT@]W{qpWxZt[hqxx]wH|q N|aH~ccY~s^WxtsW{_w@kt{{Xh x^E{{qpWxtx_P x]]YVz{UpZ]VeIEko|J~_chF[P\|ESx^{[F{xtsW{q{@kt{{XUX|p{Ih_|J}`|X}vdDssIkK Y|s~fh|pgJ_cY|]YIkKxCr^sW{qpYSZd {X^YUY~s^WxtsW{\sXUpUY}[xFkZJFV gI}N{Cq[pWxtsYQuIUt{{X` |N{Cq[pWxtsYQz|Y~^xfcvxswHapI|s{I~ftG}cw{vp ~]sH{[F{xtsW{q{ SY}[{ SY~s^WxtsW{\cRpgY}[{ES\{[F{xtsW{q{x]]Y[x{Wf8D\UBDWF_V~qqU{\vZmqy{[iI{XyK|H zaJ{XGz~qqU{rzYVea[}XyyqyAqXqV~qq[Sv	KSqy{\z]U_f PH]U_~^~\bZU\}GP\f~[Gy{rqV~qzBhry~Xa kfbYy vZ~fineeF|ur[za h\a{f}eem_zXf~YnayAqXqV~qq[P\f~X_[V}X{s_U{rqV~\rZVvWXx[yDkirFUz[D{XGz~qqU{rzFUz{[_XyvaH{XGz~qqU{rzFTKy{ZaeweUe}F~vyE[yEzfqFeSVzvauuX{s_U{rqV~\bAQHy~\bAQHyBt[qU{rqXSz\Ehby~_DP\eX{s_U{rqV~\i[}XyH~U@8G\TDA
SWR
WS	
TRU QTSRrH[PD^PC
TYQBKBEY^Y^]\TBRQE@[EIC^CFH@T
FSBYUPSWBfKAUY]^WUPVPSTQ 	RPQ	PhU
PUTW	S
WURWqnR

QPWPSUTSSSW	PW	VQT	V U
TQRQQYCF@AQT TE\RTQ_XDZS^@[VXE:D^TCBPWVPU
	 WPQU RqTZY\SYE\V\B_]
W\RBHGFY]\^^YWAWREC^FIF]CCK@WESAZUSVTBeNBU\^^TUSVUPWQ	WST	SmUST	QPShU
	VSW
RP	WWST	STPU
QSTQ R
	WVPRVZDFBBVTVE_U WS__G]S\CYV_F	8EB^]S^TT PTUWP SVS	R
pU_TW\R]^USVUPWQ	WST	SmUST	QPShU
	VSW
RP	WWST	STPU
QSTQ R
	WVPRVZDFBBVTVE_U WS__G]S\CYV_F	8G\TDA
P SR	QTRQ Q Sr][^ZW^P]USU\QCIAC[_\___RCWQDBXCKF^BENBUFR@_WQVWCdHGW\]_UWPWSUUPWRRQmTSUSSRnW
PVU
SUWTRRQWRTSSUS TRTPQ	P_FDBAP V WDZW TR^YB_Q\@XWYC	8D]UBDWUPW		WSSQ	 RVPwQX[\PXCQVR\S@KADXX\\]_UDWSG@XDH
F\AEIARDQBXTVVU@fH@T
\_\WT RTSRRS 	WPRVmW	SWTQQ oR

QPWPSUTSSQW	PW	VQT	V U
TQRQQYCF@AQT TE\RTQ_XDZS^@[VXE:D^TCBSV	RTP
VWPR PQqP_UU_TE\U_T@IBFX__
\_\WCTTGB[FHE[AFKAUCQ@ZTQUR@dKBT_X\UTUTPPUSTRQQnWPUSVQmTSSU	PPTQRQQRRW
PPUPW WWST	SZEDADSVTD_TQQ^ZG\Q_E[WZF	;A^UAA
UP	S

 RP
W  P	rU_VRV_UWSWT^REK@F[^^Y]^WBURB@YFKD]DDKBTETBZWPTTEfIBW^^YWWSQRPTV UPSPoRP	SWU	UVUoW		 QSTUPUWPSPT 	SR
SQW	SU	WTRRQZFE@BQ WQF_WWT\XG_P^C^UXF:G[WCA QW  Q
 TUU UrU\UVZWUCU\QCIAC[_\___RCWQDBXCKF^BENBUFR@_WQVWCdHGW\]_UWPWSUUPWRRQmTUPUT
T 	TSn`jWU WPTRWTUSVUP	Po  WTTVUQSUPTSPRS 	 W	
 UTSSSXFFACS TWC]WVRYZE_S_BXPZD;F\RACUFyyqsXTX~yq{HyX@|s[sVy_uHyX]VyDREeX]Td
]^A^Y^]h^zAG[Ebs\\~j\Y@oB_BzAWkgDFxB^TyeESH]G|fGRegGi]TeYR_}Bj Ze\[|szyrv[ie`Zy[XUy_VEjfSFja_ib~Atc]Vyr}ERxy[XUyXc}H~Atc]Vyr}Bjq{yr~J~Xp[je}X}qffK|fwIjf~Fied\}H~XsF}uz}XdXifn[|szyrv[ie^Zy[XUyXwHyX@|s[sVy_yXUa{yr}ZTj`GyX@|s[sVy\^Tq{yr}SK{Bt`XUyqxUiu^yX]Vy\DR_gX|pyyqsXQvHTq{yr}\Red_RfbGj wX|pyyqsXSvqQq{yr~DU\ViSyeeUuUGyX@|s[sVy_eASK{yr}RzX|pyyqsXSByX]VyX~|s\:GZWCAT@{{qpYU^{{qxIx^E~q[pWxYpJ{X^WxBWGfY\Ra_^@_\\_i[xCGX DdsWbXC\SzbnudHQP` Qz|}N ~_ \}|ESzgDh`ISeU_UsY{[F~r^sW{_w[kt{{q{YP`VJVjxEhkY~s{xtsYQuIUt{{qx sY~s{xtsYSe`Y~^sY|fc[sZY dD~s^]|aH|`dY~etcD|fhG|ssJ|vxhZ`Z{[F~r^sW{_w@kt{{qxH|^{Cvc^WxtxJkZY~^sYkjg SN{Cvc^WxtxEhj`Y~^sYV|Y}v{{qpYU^GhaxxtxEP \x^E~q[pWxZZFQ`Y~^sYk_]^RdI~_]x^E~q[pWxYpXVuVY~^sY~U`i|gcZ}N{Cvc^Wxtx Pz|Y~^sYVuIJx^E~q[pWxY|ESaxxt{YvcA	;C@_XS_
	SUPVPP 
SSV QqDCXFB]\\TUTPPUSTRQQnW	WPURUVmTSSU	PPRRW
PPUPW WWST	STVUQSYDEGASW VF\UTS\ZD]PY@YUZE	=D\WAB
SQPU

 WRU	VqVDTYH[S^VTYZ_\UWPT^REK@F[^^Y]^WBURB@YFKD]DDKBTETBZWPTTEfIBW^^YWWSQRPTV UPSPoEXYI]m oR

QPWPSUTSSSW	PW	VQT	V U
TQRQQYCF@AQT TE\RTQ_XDZS^@[VXE:D^TCBVP  
TUWP	  PTqQGSYJXZXYBY\USWT^REK@F[^^Y]^WBURB@YFKD]DDKBTETBZWPTTEfIBW^^YWWSQRPTV UPSPoBR]E^moR

QPWPSW		V T PURPT	S RTPQ	PWSU	QVWQW		TVUQSYDEGASW VF\UTS\ZD]PY@YUZE	=FB]XP^
RSTVQSVSUVTTSR
QVWpWBQ[J[[Y_G[^UVQTUTPPUSTRQQnDW_G^nnW
PVU
SUWTRRQWRTSSUS TRTPQ	P_FDBAP V WDZW TR^YB_Q\@XWYC	8D]UBDTVTS		WWS	P   TwJYPG_VVU_T@IBFX__
\_\WCTTGB[FHE[AFKAUCQ@ZTQUR@dKBT_X\UTUTPPUSTRQQnDW_G^nnW
PVU
SUWTRRQWRTSSUS TRTPQ	P_FDBAP V WDZW TR^YB_Q\@XWYC	88