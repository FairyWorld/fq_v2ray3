D]WAB
WG]UxssU{]tYks{{ZwJs|IJ|tgGZwxYEy{ssUxsxZSgc[~Y{ |s{ArYsU{ss[PwHVs{x]^Vw`ZSIYVg|@kwH~]KkI{AqYsUxss[Sgc[~Y{|]wHg{kY|ZcE~dc~wwF}dgHksg|Zwd[kg`X~ts[~q]UxssU{]^Us{{^VHxYEy{ssUxsxEkh`]xZ][~xKkgtYVwUDxYEy{ssUxsxEPxxZ][|tcHxYEy{ssUxsxEQI{x[b`ugU|dw{t{E|Z{FdsF|Z{UZs|Jw[~q]UxssU{^`ARI{{^`ARI{AqYsUxss[Vx^Ekc{{]DS]g[~q]UxssU{^k[~Y{K{WB;F_WACUE]UyqsVy_tYjq{yXkJ|X{H~K~[Ifw[|s]VyqsUy_tAjq{yXky[EyyqsVyqx]R|yX][i_dDjjhDRudDi gGju`DSKGjjcX|s]UyqsVy_^YyX]X~v|Z~XQ}HwFj_gjajf`Z|ex_} cEj_x_}ex[iXtX}Xp\y[EyyqsVyqxGjjcX[xSK{Bs[sUyqsXSutQq{y[^Uz`]R\|BR Gy[EyyqsVyqxERxyX][~vcKy[EyyqsVyqxESK{yYbbwgV}fEyv{F}X{F}fsE}X{U}Xs}Hw[|s]VyqsUy\`BSK{y\`BSK{As[sVyqs[Tz^Fja{y_GR_g[|s]VyqsUy\kX[{KyUB:D_WCAWE]W{qpW{_t[hqx{XwH|q |KHvREfk{[F{{qsW{q{XSecY}[x|q{Cq[pW{qsYSuJVq{{\U\k_`XPK[Ve|BhuJ~_IhKxCq[sW{qpYSecY}[xGkXYG|XhH|q|fg]~fc|exDkf}qke`ZhfU]}vs}edY~s]W{qpW{_\Vqx{\VJ{[F{{qsW{q{Gkj`_{X^Y~x\hgCkj{F{[F{{qsW{q{GPx {X^Y|vcJ{[F{{qsW{q{GQK{{Y``wgWftJ{v{GXxDfsDXxWXsHtY~s]W{qpW{\`CQKx{\`CQKxCq[sW{qpYVz^Ghax{_FP_dY~s]W{qpW{\kY}[xI{UB	8D\UAAWF_U{qqU{\vYhqy{[uJ|q|HJvWGXyAq[qU{rq[ke\Y{[_[|Xa[~p_U{qqU{\XDQa[}XzQ\fSvjPu^Q}GhzfXSbGQKDQ\S[~s_U{rqU{_\Y{[_[ej[|ve}fSFva[ ueJ~f[heiF}feKkeafiH|eTY{[Gy{rqU{qzGhia[}[zQHyAq[qU{rq[QuvSry{[	BP_~Q\fFhf~KyAqXqU{qq[Qv	KVqy{[aKyAqXqU{qq[Qy}[}[z}fbt{vuJbqKvyK~euE~fyK{uyE}X}J{XGy{qqU{rzPz}[}XzPz}[~p_U{qqU{_bQue[}XzGP ^{XGy{qqU{rz {X_[XyyTc8G\WAA
STW
WS


TRP QTSWrH[PD^UC
W\QBKBEY]\^]\TAWQE@[EIF^CFH@WFSBYUSVWBfKAU\]^WUPVPSWQ 	WPQ	SmU
PPTW	P
WPRWqnW

QSWPPUTSSSW	PW
SQT	S U
WTRQQZFF@AQ T TE_WTQ_XG_S^@[VXF:D^TCAPWVPU
	WPQP RrQZY\SYE_S\B_]
W\RBKBFY]\^]\WAWRE@[FIF]CFK@WESBZUSVTBfKBU\^^WUSVPPWQ 	WPQ	SmUSW	QPSmU
	SSW
RP	WWPQ	STPU
QSWQ W
	WVPRSZDFBBSTVF_U WS\ZG]S\CYUZF	8EB]XS^T
T SQUTP VVS
W
pU_TW_W]^USVPPWQ 	WPQ	SmUSW	QPSmU
	SSW
RP	WWPQ	STPU
QSWQ W
	WVPRSZDFBBSTVF_U WS\ZG]S\CYUZF	8G\WAA
P PW	TTRQ QVr][^ZW]U]USU\QCIBF[_\__\WCWQDB[FKF^BFKBUFR@ZWQVWCdKBW\]_UWPWPPUPWRQQmTSUSSRmW
SSU
SPWTRQQWRT
SSUS WWTPQ	SZFDBAS V WD_W TR^ZG_Q\@XWZF	8D]UAATPPW	
WSPT	 RVSrQX[\PX@QVW\S@KAD[]\\]_UAWSG@XDKF\AEIBWDQBXWSVU@fH@W\_\WWRTSRWS 	WPRSmW	SWQQQ oW

QSWPPUTSS
QW	PW
SQT	S U
WTRQQZFF@AQ T TE_WTQ_XG_S^@[VXF:D^TCASV	QQP
VWPW PQrU_UU_TFYU\Q@IBFX_\\_\WCWQGB[FHF^AFKAUFQ@ZTQVW@dKBT\]\UTPTPPUSWRQQmWSUSSQmT
SSU
PPWTRQQWRW
PSUPWWWPQ	SZEDBASV TD_T TQ^ZG\Q\@[WZF	8D^UAA
UP	S

WP
W P	rU_UWV_UWSTT^Q@K@F[^^\]^WBUQG@YFKD^ADKBTFQBZWPTW@fIBW^]\WWPTRPTS UPSPoWP	PWU
UVPoW	
QSTPPUTPSPW	SW
SQW	SU	WTRQQZFE@AQ W TF_WTQ\XG_P^@[UXF:D^WCATW  Q

 WPU PrU\UU_WUCU\QCIBF[_\__\WCWQDB[FKF^BFKBUFR@ZWQVWCdKBW\]_UWPWPPUPWRQQmTPPUT
W	TSmejWV WSQRWTPSVUP	Po   W TTVPQSUPWSPWS 	W	
 UTSSSXFFACS TTF]WVQ\ZE_S_B[UZD;F_WACUEyyqsXT[{yq{Hy[E|s[sVy\pHyX]VyGWEeX]Wa
]^A^\^]h[zAG[Eav\\~j\YCjB_BzAWhbDFxB^Tz`ESH]G|cGRegGi ]TeYR\xBj ZfY[|szyqs[ie`ZyX]Uy_VEjeVFja_ia{Atc]VyqxERxyX]UyXc}K{Atc]VyqxBjq{yq{J~Xp[jfxX}qecK|fwIje{Fied\}K~XsF}v}XdXiek[|szyqs[ie^ZyX]UyXwHy[E|s[sVy\|XUa{yqxZTj`Gy[E|s[sVy_^Tq{yqxSK{Btc]UyqxUjp^yX]Vy_DR_gX|syyqsXQuHTq{yqx\Red_RegGj wX|syyqsXSutQq{yq{DU\ViSz`eUuUGy[E|s[sVy\`ASK{yqxRzX|syyqsXS ByX]Vy[{|s\:D_WCAWE{{qpYV[{{qxI{[E~q[pW{\pJ{X^W{GWGfY_Wa_^@\\\_j[xCGX GasWb]C\SzbkudHQSz` Qz|~K ~_ \~ |ESzgDkeISeU_VvY{[F~q[sW{_w[hq{{q{YSeVJVjxEk kY~s{{qsYQuIVq{{qx |vY~s{{qsYSe`Y}[sY|fc[|vZY dD}v^]|aHedY~et| cD|fhGvsJ|vxk_`Z{[F~q[sW{_w@hq{{qxH[{Cvc^W{qxJkZY}[sYkjg PK{Cvc^W{qxEhj`Y}[sYV|Y~s{{qpYVz^Ghax{qxEP \{[E~q[pW{_ZFQ`Y}[sYk_]^QdI~_]{[E~q[pW{\pXVuVY}[sY~Uc i|gcZ~K{Cvc^W{qx Pz|Y}[sYVuIJ{[E~q[pW{\|ESax{q{YvcA	8F@_XS_
	SUPVSP 
SVV QqD@]FB]\\TPTPPUSWRQQmW	WSURPVmT
SSU
PPWRW
PSUPWWWPQ	STVPQSYDFBAST VF\U TS\ZD]S\@YUZE	8D\WAB
SQPV

WRU	VqVGQYH[S^VW\Z_\UWST^Q@K@F[^^\]^WBUQG@YFKD^ADKBTFQBZWPTW@fIBW^]\WWPTRPTS UPSPoF]YI]m oW

QSWPPUTSSSW	PW
SQT	S U
WTRQQZFF@AQ T TE_WTQ_XG_S^@[VXF:D^TCAVS
  
TVWP	 PTrTGSYJXZ[\BY\USTT^Q@K@F[^^\]^WBUQG@YFKD^ADKBTFQBZWPTW@fIBW^]\WWPTRPTS UPSPoAW]E^moW

QSWPPW	
S T
 PURPW	S WTPQ	SWPU	QSWQ W
	TVPQSYDFBAST VF\U TS\ZD]S\@YUZE	8FB]XP^
WSTVQSVSU VTTPW
QVWpTGQ[J[[Y\B[^UVQTPTPPUSWRQQmAW_G^nmW
SSU
SPWTRQQWRT
SSUS WWTPQ	SZFDBAS V WD_W TR^ZG_Q\@XWZF	8D]UAAWSTS		TWS
P   TrJYPG_USU\Q@IBFX_\\_\WCWQGB[FHF^AFKAUFQ@ZTQVW@dKBT\]\UTPTPPUSWRQQmAW_G^nmW
SSU
SPWTRQQWRT
SSUS WWTPQ	SZFDBAS V WD_W TR^ZG_Q\@XWZF	88