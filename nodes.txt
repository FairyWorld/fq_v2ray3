D]WACWG]Uy{qR{]tYj{y{ZwJ~{|IJ}|q@Jw[|y_R{ssUyUvEhs{yRi{YEyy{qR{sx]R~{Z][T
f\hwtD|UbkFYRV}@Px\yQG~{ssUy{zEhs{yRWMh]cJ~ly~gkE~oeA|wc }Q  kg`X|lS}dUJjRj\hwt^~kyFqYsUy{q\P]dyR_\V[|y_R{ssUyVr]VwU[QyCh]^|AyFqYsUy{q\QwKT{y{Zc}AyFqYsUy{q\Qx[Qzzf `ty|uMIsK}|yL~ds|lq{tsJRqM{YEyy{qR{sxRp}\}YxRp}\~q]Uy{qR{^`Se\}YxGR
Y{YEyy{qR{sx yR_\Y{yVi8F_WCK
UE]WqstUy_t[bs|yXwHvs~KvYJ~X{YtqZUyqsWq]sBjq{qZly[E{qstUyqx_Z{yX]YZ]cjutFt]gi F[Z^xGRx^qYByyqsWqsBjq{qZR j_{JbwoZ|fsIbw|F~vQ vY[ifp]tdti_{ udcXecGuI|As[sWqst[R_d qZZ[TYtqZUyqsWq^wZTuUYwY|Die\w]BR_QFqYByyqsWqsERx qZZ[~vcJqYByyqsWqsESK{q[ bbwgWudpyv{GuZ|F}vUDut`U}vwutp[|s]WqstUy\`C[I|y\`C[I|As[sWqst[Tz^Gbc|y_FZ]`[|s]WqstUy\kYwY|KyUB	2FXWCAUB]W{qq_yXt[hqyy_kH~XyA~LH}q@~OUY~s__yvsW{_vHjv{{Xiy\E{{qq_yvx_P~y_]Yk_fMjmhFPufMigEhubMSLEhjaQ|t]W{qq_yX^[{X_Q~q{|X~S~qsD|Hi@~L Hi@|b{}vSL}_dYvyB}_}eeBy\E{{qq_yvxEhjaQ\xQKyKs\sW{qqQSrt Sqyy\XPjfBjf
Y~s__yvsW{\rNS[cY}[y~qY~s__yvsW{\rBy_]YfY	}bfsHHq_}_sI[ OvG|aqO}a]GayKs\sW{qqQTrJJ{X_QTrJJ{[GsyvsW{qzUmp\{X_QRXEhayKs\sW{qqQT\{{XyQs[8D]]CFWGWW|qqU{]~[oqy{ZaHyXyK|IzqJ|taYys_U{syW|_vBhsq|Xi{YO{|qqU{sr_W~{ZWYQ f[hw~Fy_bYP^uEW_f{YO{|qqU{sr@oqy{]ilHzZkqyfzYtyD{vf^|I	X{XWH~gm {fr[tm{XakYqCv[qU{syYW_f{ZWYQ}[~qWW|qqU{^zXQuW[}YqFWevk]mF|[Gy{syW|qzEPr |X_[|tiJ|[Gy{syW|qzEQIq|Yb`umWxfu{tqGxXyFt_DxveUt}xvu[~qWW|qqU{^jCVKy{^jCVKyAqYyW|qq[VxTGoay{]FW_e[~qWW|qqU{^aYz[yK{WH	?D\WAC STW
UT

WRPYV SWp@YWG^UAW\SJIEFY]\V_[WAWSMB\FIF\KAK@WD[@ZUSVUJdLBU\_VUUR^WPWY	WRV	Sm]SPVU	PPPZUvmWQSU WP]VPSQU	RP
SYW	S	U	WTZSQZFDHCQ VSF_W
VV\XG_QVB\UXF	2FYWCARTVR]
	UWQP 		QrQXQ^TZE_S^JX^
U[QBKBDQ_[^]\UCPQE@[DAA^CFIHUFSBX]QQWBfK@][]^W]PVPRU Q 	PPQQjU	TWSSSm]
SQURRPTPQQWR UYTWYW		U^WQSXLDEAS
V VF]]TS\ZEUQ[@YUZD	?FB]XQV
T

	SSQ	UTR VTT 
WxWXWW_WU\]PVPRU Q 	PPQQjU	TWSSSm]
SQURRPTPQQWR UYTWYW		U^WQSXLDEAS
V VF]]TS\ZEUQ[@YUZD	?D\WACS PW	TWRY QVpUYYYW]U_WT]^V@IBFYW^\_\WKUVGB[FIDYAFK@]AQ@ZUYTP@dKBU^Z\UUWTPP]S	URQ	YoWQ U	[TQmU SS]PP	USRQ	YPZW
QQ UQ
W WVRV	SZDL@FS^TD_USQ^ZG]Y^G[WZF	:C^UAA
 TPR
U

	PPPT   QVSrSPY[SX@S^
W^[BLBD[]^^Z\UAU[EG[DKDTCFIBWLSEXWST]BaK@W^W^PWZVPRWQ	UWQSoU	QPQYSoWQSU WP]VPS
SU	RP
SYW	S	U	WTZSQZFDHCQ VSF_W
VV\XG_QVB\UXF	2FYWCAQQ	QQRV	UWW 
WQrU]]WXWFY
U\QBA@A[_\^W^PCWQEJYAKF^CDLBUFSH]WQVWBlIEW\]^]WPVRWUQ
WZSQmUS]SSS	oW
QTU
RWWTZSQW	RUSS]	SU	PTPQQ]FDBAQ V VLXW TSVX@_Q\@Y_XA	8D\]CF]R
S WRP R	uV_UWTWWPST
W^Q@IHD\]^\_VUAUQGBQDLD^ALIEWFQ@XPSTW@dA@P^]\UPPTZRWS	UR[SoWR	PUV
]VPgP

YQWPRUTR[SWPWTQUT ]	
USRQ	YXAF@AYT TD]PTQ^PEXS^@[WPD:D^UKCTUQ
 WP 	V  P pR_UU_UWD]^V@IBFYW^\_\WKUVGB[FIDYAFK@]AQ@ZUYTP@dKBU^Z\UUWTPP]S	URQ	YoWP	WU	\WVPmehUV	PSQZUWPQQURWo 	T V
WVPS	TU	WW QSW	Q	U]VPSQPDABCQSTFUU VQ\XM]T\B[UXL	8F_WCK
UE{qst[T[{qs|Ky[E~{YtUy\pJqZZUyGWMb[]WaU\B^\\Uh[xIE\Eav^T|m_YCj@W@}BWhbFNzE]Tz`G[JZD|cEZg`Di _\gZR\x@b]fYYtqyyqsYaggYyX]Wq]QFjeVDbc \ia{C|aZUyqxGZyX]WqZd}K{C|aZUyqx@bs|yq{HvZwXjfxZusecItdpJje{Dagc_}KvZtE}v uZc[iekYtqyyqsYagYYyX]WqZpKy[E~{YtUy\|Z]c|yqxX\hgDy[E~{YtUy_\\s|yqx[I|Atc]WqsUjp\qZZUy_FZ]`[|s{qst[QuJ\s|yqx^Zgc\RegEbp[|s{qst[Sut Ys|yq{F]^QjSz`g]wRDy[E~{YtUy\`C[I|yqx Zxx[|s{qst[S @qZZUy[{~{^:D_UKCWE syvsYV[yyv{I{[Gvs\sW{\rBy_]W{GUEeY_Wc ]Y@\^T]jYpA@[ Gaq_ a]ATTybkwlKQSzbS}~K	|X\~ ~MQ}dDkeAQbV_Vv[y\E~q[q_yXt[hqyyvxYSeTBTm{Ek iQ|t{{qqQSrIVqyyv{ |v}Q|t{{qqQQbcY}[qQ~a`[|vXQ}gD}v\U~fHefQ|bw| aL~akGvqB~q{k_bRy\E~q[q_yXt@hqyyv{H[yKtd]W{qzBiYY}[qQimd PKyKtd]W{qzMjmcY}[qQTY~s syvsYVz\Ojf{{qzMR\{[Gvs\sW{_XNScY}[qQiX^^QfA|X|]{[Gvs\sW{\rPTrUY}[qQ|Vc a~``Z~KyKtd]W{qzR}Y}[qQTrJJ{[Gvs\sW{\~MQf{{qyQtdB	8FBWZT\
S
VW VSRPVTVrD@]DJ__\WPVRWUQ
WZSQmUTS]RPToW
QTU
RWW	RUSS]	SU	PTPQQWVPS	TZDFBCTT^D_U V[^]G]S\BQW]F	8FTUFA
QYRV UZU 	TrVGQ[@YT]VW\XW^RWS
W^Q@IHD\]^\_VUAUQGBQDLD^ALIEWFQ@XPSTW@dA@P^]\UPPTZRWS	UR[SoF][A_joWQSU WP]VPSQU	RP
SYW	S	U	WTZSQZFDHCQ VSF_W
VV\XG_QVB\UXF	2FYWCAVS
TV	UW	 
WWrTE[[M[Z[\@Q^RST
W^Q@IHD\]^\_VUAUQGBQDLD^ALIEWFQ@XPSTW@dA@P^]\UPPTZRWS	UR[SoAW_M\joWQSU WPP

S W
RU	ZWWP WVRV	SUP]
QSUQ 		P
WVPS	TZDFBCTT^D_U V[^]G]S\BQW]F	8DJ__S^WQVQS[TPU TSTPWYTTpTGSSH\XY\BYVWUQWPVRWUQ
WZSQmAUWEYmmU SS]PP	USRQ	YPZW
QQ UQ
W WVRV	SZDL@FS^TD_USQ^ZG]Y^G[WZF	:C^UAA
 WSVQ
	T	PP
R  TrHQR@\US
U\QBA@A[_\^W^PCWQEJYAKF^CDLBUFSH]WQVWBlIEW\]^]WPVRWUQ
WZSQmAUWEYmmU SS]PP	USRQ	YPZW
QQ UQ
W WVRV	SZDL@FS^TD_USQ^ZG]Y^G[WZF	:?