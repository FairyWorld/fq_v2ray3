D]WAB
WG]UxspP{]tYksx{ZkJ}ZxN|I|cO{YEyxspP{sxZPg`^}Y{ sxDqYsUxsp^SwHUsx{]x^S]gPJ^S][~]`YS^|BP]dxYF|{ssUxs{Ghs{xZ`kg`Zw_~gk hgdC|tpX|ch]c}d|dgk]{]g|ZhcxDqYsUxsp^P]dxZ^^V[}q^P{ssUx^s_VwU[~YxAkhpESxZA{YEyxspP{sxES{{Z][t`M{YEyxspP{sxERIx{[bcudPdExtx@Z{F|dpCdQU|txtw[}q^P{ssUx^cDQI{x^cDQI{ArYpP{ss[Ux]@hc{x]AP]g[}q^P{ssUx^h^}Y{KxWA8F_WBCUE]VyrvUy_tZjr~yXkI|[~K~KKby[EzyrvUyqxYQff[[{~r~As[sVyrv[QuKTr~y_]TveZRKZTfy@juK|\KjK{BsXvUyqsXQff[[{Hfn~fg~rHjvYI|ee[jfYEieS^}aYjueZiXQ}fKiXYX|pXUyqsVy\^Tq{y_SHy[EzyrvUyqxFiie]yX]X|e^ia
X|pXUyqsVy_uDS\cXX~~vX|pXUyqsVy_uHyX]XdZwbasI}ebU}XsH}XJ}qI~HvE}X]F}b~As[sVyrv[TuJKy[X[TuJKyX@yyqsVyr}Ujp]y[X[R_Djb~As[sVyrv[T[{y[~[s\:GZWCAT@]W{qpWxZt[hqxx]kH~XxIN|KH|csY~s^WxtsW{_w@kt{{Xh x^E{{qpWxtx_P x]]YV gYkptF~_chF[P\|ESx^{[F{xtsW{q{@kt{{_xI|Z{|e\}`kfZDshZh[s^]~ek\~st]hfhksUqxCr^sW{qpYSZd {X^YUY~s^WxtsW{\sXUpUY}[xFhJVq	Y}v]W{qpWxYpFQ\`Y~^{ |v|Y}v]W{qpWxYpJ{X^Ye\u`apH|cWXpI|^HqHNsGX^G|d{Cq[pWxtsYVuIJx]]YVuIJx^E{{qpWxtx Wjs\x]]YP_Ekd{Cq[pWxtsYV[xx]{Yq\;A_UAARE_U{rqV~_vYhry~XuJ|ryK|bIxfa[~p_V~qqU{\vAmqy{[i~[Gy{rqV~qz]P~~X_[Vyz SuX_VfHDmj~H~\b n DYP_}DUz\{XGz~qqU{rzAmqy{[TYzuyKh\}K{e~Z}ueEyvqKkHXzv}~eizueH\bXzX[KkHyBt[qU{rqXU_f{[_XS}[~p_V~qqU{_rYSuW[}XyGm_HDVfH{KyAqXqV~qq[Qv	HSqy{[azKyAqXqV~qq[Qy}Xx[z}fbw~vuJbqHzvyK~euF{fu{uqHxXqJ{XGz~qqU{rzUz}[}XzUz}[~p_V~qqU{_bTue[}XzDU ^{XGz~qqU{rz~X_[XyzQc8G\TDA
SWR
WS	
TRU QTSRrH[PD^PC
TYQBKBEY^Y^]\TBRQE@[EIC^CFH@T
FSBYUPSWBfKAUY]^WUPVPSTQ 	RPQ	PhU
PUTW	S
WURWqnR

QPWPSUTSSSW	PW	VQT	V U
TQRQQYCF@AQT TE\RTQ_XDZS^@[VXE:D^TCBPWVPU
	 WPQU RqTZY\SYE\V\B_]
W\RBHGFY]\^^YWAWREC^FIF]CCK@WESAZUSVTBeNBU\^^TUSVUPWQ	WST	SmUST	QPShU
	VSW
RP	WWST	STPU
QSTQ R
	WVPRVZDFBBVTVE_U WS__G]S\CYV_F	8EB^]S^TT PTUWP SVS	R
pU_TW\R]^USVUPWQ	WST	SmUST	QPShU
	VSW
RP	WWST	STPU
QSTQ R
	WVPRVZDFBBVTVE_U WS__G]S\CYV_F	8G\TDA
P SR	QTRQ Q Sr][^ZW^P]USU\QCIAC[_\___RCWQDBXCKF^BENBUFR@_WQVWCdHGW\]_UWPWSUUPWRRQmTSUSSRnW
PVU
SUWTRRQWRTSSUS TRTPQ	P_FDBAP V WDZW TR^YB_Q\@XWYC	8D]UBDWUPW		WSSQ	 RVPwQX[\PXCQVR\S@KADXX\\]_UDWSG@XDH
F\AEIARDQBXTVVU@fH@T
\_\WT RTSRRS 	WPRVmW	SWTQQ oR

QPWPSUTSSQW	PW	VQT	V U
TQRQQYCF@AQT TE\RTQ_XDZS^@[VXE:D^TCBSV	RTP
VWPR PQqP_UU_TE\U_T@IBFX__
\_\WCTTGB[FHE[AFKAUCQ@ZTQUR@dKBT_X\UTUTPPUSTRQQnWPUSVQmTSSU	PPTQRQQRRW
PPUPW WWST	SZEDADSVTD_TQQ^ZG\Q_E[WZF	;A^UAA
UP	S

 RP
W  P	rU_VRV_UWSWT^REK@F[^^Y]^WBURB@YFKD]DDKBTETBZWPTTEfIBW^^YWWSQRPTV UPSPoRP	SWU	UVUoW		 QSTUPUWPSPT 	SR
SQW	SU	WTRRQZFE@BQ WQF_WWT\XG_P^C^UXF:G[WCA QW  Q
 TUU UrU\UVZWUCU\QCIAC[_\___RCWQDBXCKF^BENBUFR@_WQVWCdHGW\]_UWPWSUUPWRRQmTUPUT
T 	TSn`jWU WPTRWTUSVUP	Po  WTTVUQSUPTSPRS 	 W	
 UTSSSXFFACS TWC]WVRYZE_S_BXPZD;F\RACUFyyqsXTX~yq{HyX@|s[sVy_uHyX]VyDREeX]Td
]^A^Y^]h^zAG[Ebs\\~j\Y@oB_BzAWkgDFxB^TyeESH]G|fGRegGi]TeYR_}Bj Ze\[|szyrv[ie`Zy[XUy_VEjfSFja_ib~Atc]Vyr}ERxy[XUyXc}H~Atc]Vyr}Bjq{yr~J~Xp[je}X}qffK|fwIjf~Fied\}H~XsF}uz}XdXifn[|szyrv[ie^Zy[XUyXwHyX@|s[sVy_yXUa{yr}ZTj`GyX@|s[sVy\^Tq{yr}SK{Bt`XUyqxUiu^yX]Vy\DR_gX|pyyqsXQvHTq{yr}\Red_RfbGj wX|pyyqsXSvqQq{yr~DU\ViSyeeUuUGyX@|s[sVy_eASK{yr}RzX|pyyqsXSByX]VyX~|s\:GZWCAT@{{qpYU^{{qxIx^E~q[pWxYpJ{X^WxBWGfY\Ra_^@_\\_i[xCGX DdsWbXC\SzbnudHQP` Qz|}N ~_ \}|ESzgDh`ISeU_UsY{[F~r^sW{_w[kt{{q{YP`VJVjxEhkY~s{xtsYQuIUt{{qx sY~s{xtsYSe`Y~^sY|fc[sZY dD~s^]|aH|`dY~etcD|fhG|ssJ|vxhZ`Z{[F~r^sW{_w@kt{{qxH|^{Cvc^WxtxJkZY~^sYkjg SN{Cvc^WxtxEhj`Y~^sYV|Y}v{{qpYU^GhaxxtxEP \x^E~q[pWxZZFQ`Y~^sYk_]^RdI~_]x^E~q[pWxYpXVuVY~^sY~U`i|gcZ}N{Cvc^Wxtx Pz|Y~^sYVuIJx^E~q[pWxY|ESaxxt{YvcA	;C@_XS_
	SUPVPP 
SSV QqDCXFB]\\TUTPPUSTRQQnW	WPURUVmTSSU	PPRRW
PPUPW WWST	STVUQSYDEGASW VF\UTS\ZD]PY@YUZE	=D\WAB
SQPU

 WRU	VqVDTYH[S^VTYZ_\UWPT^REK@F[^^Y]^WBURB@YFKD]DDKBTETBZWPTTEfIBW^^YWWSQRPTV UPSPoEXYI]m oR

QPWPSUTSSSW	PW	VQT	V U
TQRQQYCF@AQT TE\RTQ_XDZS^@[VXE:D^TCBVP  
TUWP	  PTqQGSYJXZXYBY\USWT^REK@F[^^Y]^WBURB@YFKD]DDKBTETBZWPTTEfIBW^^YWWSQRPTV UPSPoBR]E^moR

QPWPSW		V T PURPT	S RTPQ	PWSU	QVWQW		TVUQSYDEGASW VF\UTS\ZD]PY@YUZE	=FB]XP^
RSTVQSVSUVTTSR
QVWpWBQ[J[[Y_G[^UVQTUTPPUSTRQQnDW_G^nnW
PVU
SUWTRRQWRTSSUS TRTPQ	P_FDBAP V WDZW TR^YB_Q\@XWYC	8D]UBDTVTS		WWS	P   TwJYPG_VVU_T@IBFX__
\_\WCTTGB[FHE[AFKAUCQ@ZTQUR@dKBT_X\UTUTPPUSTRQQnDW_G^nnW
PVU
SUWTRRQWRTSSUS TRTPQ	P_FDBAP V WDZW TR^YB_Q\@XWYC	88