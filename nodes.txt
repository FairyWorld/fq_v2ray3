D]WACWG]Uyzp_{]tYjzx{ZwJ~z|I~@
Y{AsPp_{ss[in]S{Z][~S`Q~q]Uyzp_{]ZDS
`Q}Yxjn{Skg
GjqgRS`GS@NQ]Q[|x^_{ssUyT]S{Z][iS{P|ZU~mpLgcJ~@|tZ|nx	hwcFj}YQ}tcE}CgRkJ{EyPFs{ssUyz{Mhhc[P{QI{AsPp_{ss[S~wSs{yPPPgxBT~]NVhDyPFs{ssUyz{OPxyS^Q|tcHyPFs{ssUyz{OQI{yRh`ugU}mtB{t{E}SxLtYF}mV_tQ}CtQ~q]Uyzp_{^`AS@x{^`AS@xKqYsUyzpQVx^Ejjx{]DRTdQ~q]Uyzp_{^k[PxA{WB:O\]AC\FWUyqsWp\~Yjq{p[aJ|X{IwHqHtKS[|s]WpryUy_t@crqyXk pXOyyqsWprr]R| p[W[Tzx]vP_TeJEcivH|_``LYR\E[r\y[E{pryUyqx@crqy_w wKzXjXQuf}JiXcDwuqEi[XtuaH|fUIcuj[i tXw\v_~K{CzXyUyqsY[\nyX]Y]u[|s]WpryUy\pX]v_[[{FZyr^S|Z\mDy[E{pryUyqxG[ryX]YwuiHy[E{pryUyqxGZHqyY`ktmU}fwHpuqE}X{DtuSF}fUWtu[}HwYupWUyqsWp_jASK{p_jASK{CzXyUyqsY]yTEja{p\DR_gYupWUyqsWp_a[[{IpVH:D_UJBWE_^x{sW{_vRk{{{XiA}R{I|K	|Q }ayJrQsW{qqPho^[{X_PRcY~s_^x{sW{_XORcY}[zLk``[keLkpdZS bLRAFQ_SP}y]W{qq^xU^[{X_PlUH[C~lsD|eu	hA |fvT}o{ hfSMhlIhfXTkR{}vqAxQE{{qq^x{xEhjaP~QxQKyJrQsW{qqPRt SqyxQ[Sj~	RU^ZVqP}y]W{qq^xVpFQ\aP~Q{ |v}P}y]W{qq^xVpJ{X_PeSu`aqA|lgWXq@|QG}a A~{sG|H_C|k{Cq[q^x{sYVuHCxR]YVuHCxQE{{qq^x{x WjrUxR]YP_	Lkk{Cq[q^x{sYV[yxR{Yq\ ;N_UAA
]E_U{sxVq_vYhspqXuJ|svKIKq[Gy{sxVqqzZSghXw[y |spB{[qU{sxXYu	HVspq_z^P]oZ H^P]w]t_bYP^tDZ_f{YNzqqqU{ssAbqy{]` a_e}tUYtfyhZREvu~^|YXbXS ~dt uuu|Z`vXeK}cpB{[qU{sxXZ_f{ZVX\}[~qVVqqqU{^{Y\uW[}YpG[_v~IpB{[qU{sxX[u	KVspqXaIpB{[qU{sxX[z}[}Ys~lbt{t|KuqqKtpHtfq~d|qvq}ZtIq[Gy{sxVqqzPxtXw[zPxtXts_U{sxVq\bQwlXw[zGP]q[Gy{sxVqqz {ZVXu[yyTa2D\WAC STWTY

 	WRPXW 
	SWpAXZG^UAW\SKHHFY]\W^VWAWSLCQFIF\JLK@WDZAZUSVUKeABU\_WTUR_ZPWX	WS[	Sm\	SPVT	P]P[T{mW	QSUZP\WPSQT	R]
SXW	S	UWT[RQZFDIBQ V^F_WW[\XG_QWCQUXF	3GTWCASTVR\ 
TZQP QrQXP_YZE_S^KU^
TVQBKBDP^V^]\UB]QE@[D@L^CFIITFSBX\P\WBfK@\V]^W\PVPRTQ 	 ]PQ PgU	YW RSSm\	
SQT RR ]TPQ PWSUXYWXW				U_ZQSXMEHASW VF]\
TS\ZETPV@YUZD 2FB]XQWT
^SQUTR
V
UY 
WyVUWW_WT]\PVPRTQ 	 ]PQ PgU	YW RSSm\	
SQT RR ]TPQ PWSUXYWXW				U_ZQSXMEHASW VF]\
TS\ZETPV@YUZD 2D\WACS PW	 T 	WRX 

QVpTXTYW]U_VY\_[@IBFYV_\_\WJT[GB[FIETAFK@\LQ@ZUXU]@dKBU_W\UUZTPP\S	TRQ	XnWPU	ZYQmU SS\	PP	T^RQ	X][W
QPUQW WVS[	SZDMAKS_
TD_U^Q^ZG]X_J[WZF	 ;N^UAA
	 TPRT

 ]PPT    QVSrSQXVSX@S_W^ZCABD[]^_W\UAUZDJ[DKDUBFIBWMRHXWST\ClK@W^V_]W[WPRWP
	UZQSoT	Q]QXR	oW	QSUZP\WPS
ST	R]
SXW	S	UWT[RQZFDIBQ V^F_WW[\XG_QWCQUXF	3GTWCAP\	QQR VTZW ZQrU]\VUWFY
U\QB@AL[_\^V_]CWQEKXLKF^CEABUFSIPWQVWBmHHW\]^\WPVSZUQW[RQmUS\SSSnW
PYU
RZWT[RQWRU SS\ST	
]TPQ PPFDBA
P V VMUW TSWYM_Q\@Y^YL	8D\\BK\S
S	WR	]	R xV_UWTVV]STW^Q@IIEQ]^\_WTAUQGBPEAD^AMHHWFQ@Y]STW@d@A]^]\U]PT[SWSURZSoWS	PUV
\VPf]

XPWPSUTRZSW PW	YQU Y \
T^RQ	XYLF@AX
T TD\]TQ^QDUS^@[WQE:D^UJBTU	Q
WPV 	P q__UU_UVI\_[@IBFYV_\_\WJT[GB[FIETAFK@\LQ@ZUXU]@dKBU_W\UUZTPP\S	TRQ	XnWPZU	] W WPmehTV		]SQ[TWPP\UR Zo 
T VWVPSYU	ZWPSW	P
	U  \WPSQQELBCQ^TFTT VQ\XL\Y\B[UXM8F_WCJUE{pry[T[{prqKy[E~zXyUy\pJp[WUyGWLo[]WaT]B^\\Th[xHDQEav^U}`_YCj@VApBWhbFO{H]Tz`GZKWD|cE[fmDi _]f	ZR\x@cPfYYupyyqsY`fjYyX]Wp\\FjeVDcb\ia{C}`WUyqxG[ryX]Wp[i}K{C}`WUyqx@crqyq{Hw[zXjfxZtrecIue}Jje{D`fn_}Kw[yE}v t[n[iekYupyyqsY`fTYyX]Wp[}Ky[E~zXyUy\|Z\bqyqxX]ijDy[E~zXyUy_\]rqyqxZHqAtc]WprrUjp\p[WUy_F[\m[|s{pry[QuJ]rqyqx^[fn\RegEc}[|s{pry[Sut Xrqyq{F\_\jSz`g\v_Dy[E~zXyUy\`CZHqyqx [yu[|s{pry[S @p[WUy[{~z_:D_UJBWE rx{sYV[yx{{I{[GwrQsW{\rCxR]W{GUDeY_Wc\T@\^U\jYq@M[ Gaq^a]AUYybkwmKQSzb	Rp~K		}U\~ ~LPpdDke@PoV_Vv[xQE~q[q^xUt[hqyx{xYSeTCU`{Ek iP}y{{qqPRIVqyx{{ |v}P}y{{qqPPocY}[qPl`[|vXP|
gD}v\TkHefP}ow| aMlkGvqC|{k_bSxQE~q[q^xUt@hqyx{{H[yJui]W{qzChYY}[qPh`d PKyJui]W{qzLk`cY}[qPUY~s rx{sYVz\Nkk{{qzLS
\{[GwrQsW{_XORcY}[qPhU^^Qf@}U|]{[GwrQsW{\rQUUY}[qP}Vc `m`Z~KyJui]W{qz	SpY}[qPUJJ{[GwrQsW{\~LPk{{qyPuiB	8FBV[Y\
 	SV
Z VSR			PVT[rD@]DK^_\
WPVSZUQW[RQmU TS\RPT
nW
PYU
RZWRU SS\ST	
]TPQ PWVPSYZDFBCYT_E_U VZ_PG]S\BPVPF	8FUTKA
QXSV	 U[U	 UrVGQ[AXY]VW\XV__WSW^Q@IIEQ]^\_WTAUQGBPEAD^AMHHWFQ@Y]STW@d@A]^]\U]PT[SWSURZSoF][@^goW	QSUZP\WPSQT	R]
SXW	S	UWT[RQZFDIBQ V^F_WW[\XG_QWCQUXF	3GTWCAVS
	 TVTZ	 ZWrTEZZ@[Z[\@P__STW^Q@IIEQ]^\_WTAUQGBPEAD^AMHHWFQ@Y]STW@d@A]^]\U]PT[SWSURZSoAW_L]goW	QSUZP]

SW
SU	[ZW P WVS[	SUP\
QSTQ 	]
 WVPSYZDFBCYT_E_U VZ_PG]S\BPVPF	8DK^RS^
	WQW\SZUPU U^TPWXUTpTGSRIQXY\BYWVUQ
WPVSZUQW[RQmAUVDTmmU SS\	PP	T^RQ	X][W
QPUQW WVS[	SZDMAKS_
TD_U^Q^ZG]X_J[WZF	 ;N^UAA
WSVP
	T ]P
R	 TrHPSM\US
U\QB@AL[_\^V_]CWQEKXLKF^CEABUFSIPWQVWBmHHW\]^\WPVSZUQW[RQmAUVDTmmU SS\	PP	T^RQ	X][W
QPUQW WVS[	SZDMAKS_
TD_U^Q^ZG]X_J[WZF	 ;2