D]W@C	WG]Typp_{]tXjpx{ZkK|YxA|I~pA|tcZ|r^_{ssTy^wHhs{yYh{YExypp_{sx\R {Z]ZT{{	VwZ^TdIMhh|I|^c	kFXR]|MPx]yZFs{ssTyp{Hhs{yYdhZVZwwT~dQDiY|L|wwi`}wcI|d`|dw~IVB|ti`xKqYsTyppQP]dyY^QVZ|r^_{ssTy]sPVwUZZxNk][Tp	Q~q]Typp_{^pES]`Q}Y{~w|Q~q]Typp_{^pIyY^Qf[vb`p@dwT}YpAID}J@}ssK~g^Bc{@sZp_{ssZTtIB{Z]ZTtIB{YExypp_{sxUksT{Z]ZR^Mhc{@sZp_{ssZTZx{Z{Zs]8F_VC@UE\WzryUy_u[irqyXjH[qK~KH~H}azCpXyUyqrYjfTYyX\Y}[i[|s\WzryUy_[FPi[[yifrYieEiynXQ aEPHDS_PYpWUyqrWz\TYyX\Y}\a ~XX i\}Fi uY~r~ y[eS}XXD}Kj^if~}e~^~ jzXOyyqrWzrrGjjbY|XrSKzCpXyUyqrYPv~QqzzXHijXFzXOyyqrWzrrERy z[W[~vbJzXOyyqrWzrrESKzzZbbwfW~e}HyvzG~[uF}v~D~e_U}ff~K}[|s\WzryUy\aCPHqy\aCPHqAs[rWzry[Tz_Gibqy_FQ\m[|s\WzryUy\jY|XqKyUC	9GUWCA	TO]W{pqTxUt[hpyxRwH|pA|ZK|BY~r_Tx{sW{^vCk{{{YixQE{{pqTx{x_P ~xR]YP^fktF~^bh
F[P]}FSx^{ZGxx{sW{pzCk{{{^uIRdXhg~X}o`X|wqG|wHZ kRh]~d}hU |Ir_kRkhpy@rQsW{pqZSUd {Y_ZUY~r_Tx{sW{]r[UUY}ZyERUd[~Jy@rQsW{pqZRIVpyxRc Jy@rQsW{pqZRpY}Zz|e`v{wuKksIwyI}lsJ~gux|w}Y}KxQE{{pqTx{x P{}Z~Qx P{}Z}y]W{pqTxV`QteZ~QxEP_xQE{{pqTx{x{Y_Z|Q{{Tb;N_UA@
]E_UzsrVq_vYiszqXiJZzHvK ~IIwve[q\VqqqUz]uAbqyzZjq[GyzsrVqqz]Q}qX_[j]eDbjjDQweDa eGiwaD[KGihbXts_UzsrVq_\YzZ\XafSi]j uHeF|ti[aa }tTtev[jvEuvvZiZvHv f^jZa]q[GyzsrVqqzGihbXw[zPIzB{[qUzsrX[uvRszq[	HQeDbq[q\VqqqUz^qG[\a[|Yzvv}[q\VqqqUz^qKqX_[g[
tjaqJ~JrVuXqK~IFuK J|srIvf_H~czB{[qUzsrX\uHHzZ\X\uHHzYDzqqqUzsy]jr^zZ\XZ_	GiczB{[qUzsrX\[yzZzX{\ 9F_TKA
PW]
WR	 
UQZ QT	P]rH[QE]_C
TVQBKCDZ^V^]]UB]QE@ZDJL^CGICTFSBXVP\WBfJ@VV]^WVPVQRTQ 	
]PP
PgU
QZTW

S
VZRWpo]

RPWQSUTRPSW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@BP
VUPU WQRZ Sq[ZY\RXF\Y\B^\	W]SAHHFY]]]^VWAVSFCQFIG\@LK@WDPAZUSWUAeABU]_]TURUZPWR	VS[	SlVRT	QQPgU
YSWQP	VVS[	SUPV
QRTQ 	]

WVQSYZDFCCYTUE_UVP_PG]S]BZVPF	9DA^RS^W UP[VWP  \VR	]
pU^UT\]]^	URUZPWR	VS[	SlVRT	QQPgU
YSWQP	VVS[	SUPV
QRTQ 	]

WVQSYZDFCCYTUE_UVP_PG]S]BZVPF	9F_TKA
QS]	^UQQR \r][_[T^_]UR
U\PBJAL[_\^\_]CWPEAXLKF_CEABUGSCPWQVVBgHHW\\^VWQVSZUQWQRQmUSVSRS nWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	8E\VBKWZPW	VRS^	
SUPxQX[]Q[CQV ]\S@J@GXW\\\^VKWSGAYGHF\ADJA]DQC[TYVU@gICT\_\VTRTRQ]S
WQSYmW
SV[QQl]

RPWQSUTRP QW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@BSW
R[P	UWQ] Q	Rq__UU^UES V_[@IBGY\_\_\V@T[GB[GIETAFJ@VLQ@[URU]@dKCU_W\UUZTPQVS
	TRQ	RnW
PU	PYQmU SRV	PQ	T^RQ	R]QWQPUQW
 VVS[	S[DGAKSU
TD^U^Q^ZF]R_J[WZG	
;N^UA@

UPP

 ]P
V   P	sT\V]V_UVPWU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
Ql]P
SW
T	U	UZoV	QSUZP
VWPS
QT	R]
RRW	R	UWUQRQZGDCBQV^F_VW[\XG^Q]CQUXF
	9GTWCA	 ^W R 
TZT  ZrT]VVUWUB
U\PBJAL[_\^\_]CWPEAXLKF_CEABUGSCPWQVVBgHHW\\^VWQVSZUQWQRQmUZQVT	T	TRnojWU VP[RWUZSWVP	Q l V
TUUZQRVQTSQ]S
 W	UTRPSXFG@@S UWL]WURVZE_R^AX_ZD
:E\]ACVFyyqrYWXqyqzIzXO|s[rWz_zHyX\WzD]EdY^Tk
]^@]V^]kQzAGZ Fb|\\~k]Z@`B_B{@TkhDFxC_WyjESH\FiGRefFj]TeXQ_rBj [ |eS[|s{zry[iea[z[WUy_WDif\Fja^jbqAtc\WzrrERy z[WUyXb ~HqAtc\WzrrBjqzzrqJ~XqZierX}q|fiK|fvHifqFiee]~H~XrG~uu}XeYjfa[|s{zry[ie_[z[WUyXvIzXO|s[rWz_vXUazzrrZTjaFzXO|s[rWz\^TqzzrrSKzCw`WUyqy Viz^yX\Wz\DR_fYpyyqrYRvHTqzzrr\Ree^QfmGj vYpyyqrYPv~QqzzrqDU\WhPyjeUuTFzXO|s[rWz_jASKzzrrRz~YpyyqrYPByX\WzXq|s\9GUWCA	TO{{pqZUQ{{pyJxQE~qZqTxVpJ{Y_TxMWGgZ\]a__C_\\_  i[xCFYDksWcWC\R{aaudIRPp` Q{}}A ~^_}
|ES{fGhoISdT\U|Y{ZG}rQsW{^vXk{{{pzZPoVJVkyFh
kY~r xx{sYQt	JU{{{py|Y~r xx{sYSdaZ~QsY|gbX|ZYeG~|^]|` K|odY~du
cD|giD||sJ|wyhU`Z{ZG}rQsW{^vCk{{{pyK|Q{Cvb_Tx{xJk [Z~QsYkkfSA{Cvb_Tx{xEhkaZ~QsYV }Z}y{{pqZUp^Gh`yx{xEP_xQE~qZqTxUZFQ aZ~QsYk^\]RdI~^~^xQE~qZqTxVpXVtWZ~QsY~ T`
i|fbY}A{Cvb_Tx{x P{}Z~QsYVtHIxQE~qZqTxV|ES`yx{{Yvb@
;L@_XR^		PTQUPP 
R \V PpGCWFB]]_UZTPQVS
	TRQ	RnW	
VPU	QZVmU SRV	PQ	]QWQPUQW
 VVS[	SUUZQRXGEHARW VF]V
TS\[E^PV@YU[D
2D\W@C	SQPU
 	WR
V  		VpUD[YH[R_UTVZ_\TTPU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
QlEWYI]ll]

RPWQSUTRPSW
PV	YQU
Y V

T^RQ	RYLF@AR
T UD\]TP^[DUS^@ZW[E:D_U@B	UP   	WUWQ
  QUq^GSYKYYXVBY\TPWU]RJK@FZ_]V]^WCVRM@YFJG]KDKCUE[BZVQWTJfIBV]^VWVS^RPUY 
VPS
QlB]]E^ll]

RPWQSV	Y U  P
VRQT	R]TPP
PW
SURYW
RV				UUZQRXGEHARW VF]V
TS\[E^PV@YU[D
2FB]YQ]

]STWQSVRVVUWS]
QVVsWMQ[JZZZ_H[^UWRUZTPQVS
	TRQ	RnKW_G_onWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	8E\VBK TYTS
WVR	P  	WxJYPF^VY V_[@IBGY\_\_\V@T[GB[GIETAFJ@VLQ@[URU]@dKCU_W\UUZTPQVS
	TRQ	RnKW_G_onWPYU
RZWUQRQVRU SSVS
T	 ]TPP
PPFDB@ P VVGUW US]YM_Q\AYTYL	89