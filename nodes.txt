D]WABWG]UxqsT{]tYkq{{ZwJq|IaJJY[}s]T{ssUx_tChs{xXk{YEyxqsT{sx]S|{Z][UzxVwZ_UeJFhh|H}_`kFYS\FPx\x[Ex{ssUxqxChs{x_ hghYhHV^~dd^k_G|t^X~a|wcE}ec|t^^XgDk]cHkq{@qYsUxqsZP]dxX]ZV[}s]T{ssUx\p[VwU[~[{EhhZkeIShh^}K{@qYsUxqsZQwKUq{{Zc|K{@qYsUxqsZQx[~[x|f `txvwKcsK|v{J~dwK}f{I{tsJ~XK{YEyxqsT{sxSzZ}YxSzZ~q]UxqsT{^`RugZ}YxGS _{YEyxqsT{sx xX]ZY{yWc8F_WBAUE]V{qrUy_tZhqzyXwI|q~Kaa{Bq[rUyqsXke_YyX]X|Xb[|s]V{qrUy_ZGQb[[xXhe^T_BheXjaZhuH|_]VqzAs[sV{qr[QecX}[y[}ud]heiZ}K }vf|f`Z|XzFfg|[X}XKk_a_}HtXub[|s]V{qrUy_]Vqzy\VK{[DyyqsV{qyEij`^{X\[| Z Vq[|s]V{qrUy\pGQ\b[[{|v~[|s]V{qrUy\pK{X\[dYt`arJ}HsVXrK}[I[K}KsFf\H}a{Bq[rUyqsXVuKHyX]XVuKHy[Ez{qrUyqxWjq^yX]XP_
Gja{Bq[rUyqsXV[zyX{Xq\:D_TAA	WE^U{psW{_wYhp{{XtJ|p |KZ|[xAqZsW{qp[kd^[{X^[|YcY~s^U{psW{_YDQ cY}[{Ghk`[ke	Gh{dZS cGQJFQ_R[~r]W{qpU{^^[{X^[|gw|fhKk^kD|Hg^}p hXp~dx\k |FhgQ}vV|dtY|ux{ZE{{qpU{pxEhj`[}ZxQKxAqZsW{qp[Qtt Sqx{ZJheI_~J{Cq[pU{psYQuKVp{{X`J{Cq[pU{psYQz|[}Zxfct{wwH|apKw{I~ftK~g{J{vpJ}YH{[Fy{psW{q{P{Y}[{P{Y~s^U{psW{\cQtgY}[{GP\{[Fy{psW{q{ {Y]Y[xyTb8D\WA@WF]UzqqU{\tYiqy{[wJ}q|H~[ |b{Ap[qU{rs[je\Y{[][}Xa[~p]UzqqU{\ZDPa[}XxiezYkf
GizfXS`GPKDQ\Q[s_U{rsUz_\Y{[][jHf[kfhXifqFke^^~a kKV_eu}usFivWKgEjXfZ|fkz[Gy{rsUzqzGhic[|[zQH{Ap[qU{rs[PuvSr{z[	SvKQf\Sr
[s_U{rsUz\rDQ_c[|[y|u[s_U{rsUz\rH{[][gY	w`bsJ~f}U[sK~[ JXK~KqEe]H~ayAqXsUzqq[VvJHzX_[VvJHz[Gy{rsUzqzWip^zX_[P\GiayAqXsUzqq[VX{zXy[q_9D\WAB STW	 WR

	WRPSTSWqJ[QG^U@W\R@KCFY]\\]]WAWRG@ZFIF]AGK@WEQBZUSVT@fJBU\^\WUSTQPWS 	WPP	SmW
SPWW
	P	VPPWpmW	
QST
QPWTPSPW	SV
SSW	SU	
WTPQQZFEBAQ W UF_W TP\XG_P\@ZUXF8D_WCAP
TVSW
 WQQP  QrQY[\RZE_S_@^^
W]QBKBE[]]^]\TAVQE@[EKG^CFHBWFSBYWSWWBfKAW]]^WWPVPSWQ VPQSlURWQSSmW

SPWRSVTPQSWPU	SRWS W
	TTQQSYFFCAS T VF\WTS\ZD_S]@YUZE9FB]XP\T
 USQUTS VVR 
W	rU^WW_W_^	WPVPSWQ VPQSlURWQSSmW

SPWRSVTPQSWPU	SRWS W
	TTQQSYFFCAS T VF\WTS\ZD_S]@YUZE9D\WABS PWT WRSQVq_[_YW]U^URW\P@IBFX]\\_\WAWPGB[FHF_AFKAWGQ@ZTSVV@dKBT\\\UTQTPPWSWRQSmWSUQRQmT
SSW
PPWURQSVPW
PSUP 
W
WWPP	SZEFB@STTD_T UQ^ZG\S\A[WZF8E^UAA TPS W

VPPT 
QVSrRZ[]SX@RTW_Q@JBD[]_\\\UATQGA[DKE^AFIBWFQCXWSUW@gK@W_]\VWPTPRWS	TQQSnW	PVQSQoW	
QST
QPWTPS
RW	SV
SSW	SU	
WTPQQZFEBAQ W UF_W TP\XG_P\@ZUXF8D_WCASW	QQSV WQW  QQrU\WU^WFY U\QCKBG[_\_]\VCWQD@[GKF^BFJBUFRB[WQVWCfKCW\]_WWPWPQUP 
WPQQmT
SWSSRmW
SRU
SQWTPQQWRTSSWS W
VTPQS[FDBAS V WF^W TR\ZF_Q\@XUZG	8D]WA@	WP
S	

WS
VSsV_UWU]UVSTW^Q@HBFZ]^\^\WAUQGC[FJD^AFKCWFQAZVSTW@eKBV^]\TVPTPPWS
USQ
SoWP	PT
V
WVPmV

SSWPP
UTSQ
SWPW
RQTR W
WURQSZGF@AST TE_VTQ_ZG^S^@[VZF
:D^TAA	TTQ
	
WP
V PrT_UU_TUBW\P@IBFX]\\_\WAWPGB[FHF_AFKAWGQ@ZTSVV@dKBT\\\UTQTPPWSWRQSmWPQUVWTPmeiWVVSQPWWPSWUSQo T W WVPRRUQW
SSWS	TWTPSPZFGBCP UTF_W VQ\YG_R\B[UYF
8F_WBAUEz{qr[T[{{qzKy[Eq[rUy\pK{X\UyGWGd[]Wa	_^B^\]_h[yCGZEav_^~k_YCjA]B{BWhbGDxC]Tz`FQH\D|cDPefDi ^VeZR\xAh [fYX~syyqsXkeaYyX]V{_WFjeVEha\ia{Bvc\UyqxFPyyX]V{Xb}K{Bvc\UyqxAhqzyq{I|XqXjfx[qecH~fvJje{Ekee_}K |XrE}vXe[iekX~syyqsXke_YyX]V{XvKy[Eq[rUy\|[WazyqxYVjaDy[Eq[rUy_]VqzyqxQKzAtc]V{qyUjp]{X\Uy_GP_f[|sz{qr[QuKVqzyqx_Pee\RegDh v[|sz{qr[SutSqzyq{GW\WjSz`fWuTDy[Eq[rUy\`BQKzyqxPz~[|sz{qr[S A{X\Uy[{q\:D_TAA	WEy{psYV[x{p{I{[F|qZsW{\sH{Y]W{GTGeY_Wb
__@\_^_jXzCF[ GapUa]@^RybkvfKQSzcQ{~K~^\~ GS{dDkeKSdV_VvZ{ZE~q[pU{^t[hqx{pxYSeUHVk{Ek h[~r{{qp[QtIVqx{p{ |v|[~r{{qp[SdcY}[p[|g`[|vY[gD}v]_|`Heg[~dw| `F|gkGvpH|w{k_cX{ZE~q[pU{^t@hqx{p{H[xAvb]W{q{Hk YY}[p[kkd PKxAvb]W{q{GhkcY}[p[V Y~sy{psYVz]Eh`{{q{GP\{[F|qZsW{_YDQ cY}[p[k^^^QgK~^|]{[F|qZsW{\sZVtUY}[p[~ Vc k|f`Z~KxAvb]W{q{P{Y}[p[VtJJ{[F|qZsW{\GS`{{qx[vbB	8FC]XR\
S VQ VSS
PVU PrD@]E@]_\WPWPQUP 
WPQQmT
TSWRPUmW
SRU
SQWRTSSWS W
VTPQSWVPRRZDFBBRTTF_U WQ\[G]S\C[U[F	8G^W@A
PSPV

TP
UVrVGQZJ[R]VW\Y]\TWSW^Q@HBFZ]^\^\WAUQGC[FJD^AFKCWFQAZVSTW@eKBV^]\TVPTPPWS
USQ
SoF]ZK]loW	
QST
QPWTPSPW	SV
SSW	SU	
WTPQQZFEBAQ W UF_W TP\XG_P\@ZUXF8D_WCAVS
TV WQ	  QWrTDQYK[Z[\A[\TSTW^Q@HBFZ]^\^\WAUQGC[FJD^AFKCWFQAZVSTW@eKBV^]\TVPTPPWS
USQ
SoAW^G^loW	
QST
QPV

S
 W
P
UPQWP WWPP	ST
PW
QSW
Q V
WVPRRZDFBBRTTF_U WQ\[G]S\C[U[F	8E@]YS^

WPTWRQVPU VUTPW	SVTpTGRYJZXY\BX\UUQWPWPQUP 
WPQQmAT]G_mmT
SSW
PPWURQSVPW
PSUP 
W
WWPP	SZEFB@STTD_T UQ^ZG\S\A[WZF8E^UAAWSWS
	TVP
S  TrI[PF\US U\QCKBG[_\_]\VCWQD@[GKF^BFJBUFRB[WQVWCfKCW\]_WWPWPQUP 
WPQQmAT]G_mmT
SSW
PPWURQSVPW
PSUP 
W
WWPP	SZEFB@STTD_T UQ^ZG\S\A[WZF89