D]WACWG]Uyts_{]tYjt{{ZwJ~t|IJ}sgMdYHy^Es{ssUytxPSgc[^{
|s{As^s_{ss[QpBVs{yZTVw`ZRNSVg|@jpB~]KjN{KqYsUytsQSgc[^{Oht ~Ms@}cjZg	~dcH}]UL}wdR}tYEiZk|gw}p{Q~q]Uyts_{]^Tt{{^VHy^Es{ssUytxOkh`]y]]Q~tYR`^Ahc
[|v]_{ssUyYpNQ^c[^{|t[|v]_{ssUyYpB{Z][d\}`csJ}cg_ZsK}^O|IKtsAJ]H}d{KqYsUytsQVwJHy]]QVwJHy^Es{ssUytxWhp^y]]QP]Gjd{KqYsUytsQVY{y]{Qq^:A_]ACREWUyqsW~_~Yjq{~X}J~q yKaxqqAs[sW~qy[ie^[~XW[~XcY{sWUyqsW~_PDScYx[r[je\S_AjeZmaYjuJ{_^Tq{Ct[yUyqsYVei[[xZmf[}vZ]yaifU{fi jvDxub^i[JzH}H}vd[y_u~HQY{sWUyqsW~_^Tq{~\\Hy[E{~qyUyqxGnjj]yX]Y{ vDR_VInjjRut ma [|s]W~qyUy\pFT\i[[{ yvu[|s]W~qyUy\pJ~XW[dYueayJ}HsWzXyK}[GyKKqsIzHWH}a{Ct[yUyqsYSu@HyX]YSu@Hy[E{~qyUyqx Rjz^yX]YU_Gja{Ct[yUyqsYS[qyX{Yt\:D_UDAWE_P{{sW{_v\h{{{XuO|{ |K}{IKyDqQsW{qq^ko^[{X_^|RcY~s_P{{sW{_XAQcY}[zhox[keBhpdZS bBQAFQ_S^~y]W{qqP{U^[{X_^hok|ua}|sDkH[hQ vW~lY}v[ChRQ}uaMRt[k_~\{QE{{qqP{{xEhja^}QxQKyDqQsW{qq^Qt Sqy{QIVeH[~A{Cq[qP{{sYQu	NV{{{XaA{Cq[qP{{sYQz}^}Qxfbq{|wHKqN|{I~fq~l{{vyM}RH{[G|{{sW{qzPpY}[zPpY~s_P{{sW{\bQgY}[zBP
\{[G|{{sW{qz{R]Y[y|Ti8D]RAKWGXUqqqU{]qYbqy{ZnJtXyK|IKuaKdb[ts_U{svUq_vBhs~qXi{Y@yqqqU{s}]Z~{ZX[\ f[hwqDt_bYP^zGZ_f{Y@yqqqU{s}Bbqy{ZfuXyJ}wbtfrY|JvFvvehsafW~grJbXeK|Jvu_vY}c~A{[qU{sv[Z_f{ZX[\}[~qXUqqqU{^uZ\uW[}Y~DZ\fKQbDq[Gy{svUqqzEP}qX_[|tfHq[Gy{svUqqzEQI~qYb`ubUufu{t~EuXyFtTFuXWUZzuHu[~qXUqqqU{^eA[Ky{^eA[KyAqYvUqqq[Vx[Ebay{]DZ_e[~qXUqqqU{^n[w[yK{WG2D\WAC STWWY

	WRPVT 	SWpO[ZG^UAW\SEKHFY]\Y]VWAWSB@QFIF\DLK@WDTBZUSVUEfABU\_YWURQZPWV 	WP[	SmR
SPVW	P]PUW{mW
QSUZPRTPSQW	R]
SVW	S	UWTUQQZFDGAQ V ^F_WT[\XG_QY@QUXF	=DTWCAPTVRR 
WZQP QrQX^\YZE_S^EU^
WVQBKBD^]V^]\UA]QE@[DNL^CFIGWFSBXRS\WBfK@RV]^WRPVPRWQ 	]PQSgU	 YWQSSmR

SQW RR]TPQSWPUVYWV W	
		UQZQSXCFHAST VF]R
TS\ZEZSV@YUZD2FB]XQYT
^SQUTR VVY 
WwUUWW_WZ^RPVPRWQ 	]PQSgU	 YWQSSmR

SQW RR]TPQSWPUVYWV W	
		UQZQSXCFHAST VF]R
TS\ZEZSV@YUZD2D\WACS PW	T	WRV 
QVpZ[TYW]U_UYR\[@IBFYX\\_\WDW[GB[FI
FTAFK@RLQ@ZUVV]@dKBU
\W\UU ZTPPRS	WRQ	VmWSU	TYQmU SSR
PP	W^RQ	V]UW
QSUQWWVP[	SZDCBKSQ
TD_U ^Q^ZG]V\J[WZF	8N^UAA
	 TPRW

]PPT  QVSrS_[VSX@SQW^T@ABD[]^
\W\UAUTGJ[DKD[AFIBWCQHXWSTR@lK@W^X\]WUTPRWS
	UZQSoW	Q]QVQ	oW
QSUZPRTPS
SW	R]
SVW	S	UWTUQQZFDGAQ V ^F_WT[\XG_QY@QUXF	=DTWCAS\	QQR VWZW ZQrU]RUUWFY
U\QBNBL[_\^X\]CWQEE[LKF^CFABUFSGPWQVWBcKHW\]^RWPVPZUQWUQQmUSRSSSmW
SYU
RZWTUQQWRU SSRSW	]TPQSPFDBAS V VCUW TSYZM_Q\@YPZL	8D\RAKRP
S
WR
]RxV_UWTXU]STW^Q@IGFQ]^\_YWAUQGB^FAD^ACKHWFQ@Z]STW@dNB]^]\U]PTUPWSURTSoWP	PUV
RVPh]

VSWPPUTRTSWPW
YQUY R
W^RQ	VZLF@AV
T TD_]TQ^_GUS^@[W_F:D^UDATUQ
WPV P  r__UU_UUIR\[@IBFYX\\_\WDW[GB[FI
FTAFK@RLQ@ZUVV]@dKBU
\W\UU ZTPPRS	WRQ	VmWPZU	S WTPmehWV	]SQUWWPS\URZo 
T VWVPSYU	ZWSSW	S
	U RTPSQ_FLBCQ ^TFZW VQ\XB_Y\B[UXC8F_WCDUE{~qy[T[{~qqKy[E~t[yUy\pJ~XWUyGWBo[]WaZ^B^\\Zh[xFGQEav^[~`_YCj@XBpBWhbFAxH]Tz`GTHWD|cEUemDi _Se	ZR\x@m PfYY{syyqsYnejYyX]W~_\FjeVDma\ia{CscWUyqxGUryX]W~Xi}K{CscWUyqx@mqqyq{HyXzXjfxZzqecI{f}Jje{Dnen_}KyXyE}v zXn[iekY{syyqsYneTYyX]W~X}Ky[E~t[yUy\|ZRaqyqxXSjjDy[E~t[yUy_\SqqyqxTKqAtc]W~qrUjp\~XWUy_FU_m[|s{~qy[QuJSqqyqx^Uen\RegEm }[|s{~qy[Sut Vqqyq{FR\\jSz`gRu_Dy[E~t[yUy\`CTKqyqx Uzu[|s{~qy[S @~XWUy[{~t\:D_UDAWE |{{sYV[y{{{I{[GyqQsW{\rM{R]W{GUGeY_Wc_T@\^[_jYCM[ GaqPa]A[YybkwcKQSzbQp~K	~U\~ ~BSpdDkeNSoV_Vv[{QE~q[qP{Ut[hqy{{xYSeTMV`{Ek i^~y{{qq^QIVqy{{{ |v}^~y{{qq^SocY}[q^|l`[|vX^
gD}v\Z|kHef^~ow| aC|lkGvqM||{k_b]{QE~q[qP{Ut@hqy{{{H[yDvi]W{qzMkYY}[q^k`d PKyDvi]W{qzBh`cY}[q^VY~s |{{sYVz\@hk{{qzBP
\{[GyqQsW{_XAQcY}[q^kU^^QfN~U|]{[GyqQsW{\r_VUY}[q^~Vc n|m`Z~KyDvi]W{qzPpY}[q^VJJ{[GyqQsW{\~BSk{{qy^viB	8FBXXY\
	SVZ VSR
	PVT [rD@]DE]_\WPVPZUQWUQQmUTSRRPTmW
SYU
RZWRU SSRSW	]TPQSWVPSYZDFBCYTQF_U VT\PG]S\B^UPF	8F[WKA
QVPV
 UUU	VrVGQ[O[Y]VW\XX\_WSW^Q@IGFQ]^\_YWAUQGB^FAD^ACKHWFQ@Z]STW@dNB]^]\U]PTUPWSURTSoF][N]goW
QSUZPRTPSQW	R]
SVW	S	UWTUQQZFDGAQ V ^F_WT[\XG_QY@QUXF	=DTWCAVS
 TVWZ	 ZWrTETY@[Z[\@^\_STW^Q@IGFQ]^\_YWAUQGB^FAD^ACKHWFQ@Z]STW@dNB]^]\U]PTUPWSURTSoAW_B^goW
QSUZP]

S W
PU	UZWP WVP[	SU PR
QSWQ 	]
WVPSYZDFBCYTQF_U VT\PG]S\B^UPF	8DE]RS^
WQT\STVPU V^TPWVVTpTGS\JQXY\BYYUUQWPVPZUQWUQQmAUXGTmmU SSR
PP	W^RQ	V]UW
QSUQWWVP[	SZDCBKSQ
TD_U ^Q^ZG]V\J[WZF	8N^UAA
WSVS
	T]P
R  TrH^PM\US
U\QBNBL[_\^X\]CWQEE[LKF^CFABUFSGPWQVWBcKHW\]^RWPVPZUQWUQQmAUXGTmmU SSR
PP	W^RQ	V]UW
QSUQWWVP[	SZDCBKSQ
TD_U ^Q^ZG]V\J[WZF	82