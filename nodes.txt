D]W@C	WG]TypqP{]tXjpy{ZwK~p|I~JO}dwZ|r_P{ssTy^vGhs{yYi{YExypqP{sx\R ~{Z]ZTf^hwtE|^bkFXR]}BPx]yZG|{ssTypzGhs{yYzZhZd[~wy~dYDwuC|t^[}J hgd^|gX\|dcIiYrZtYjpyDqYsTypq^P]dyY_^VZ|r_P{ssTy]r_VwUZZyAkhpDjdvN~I{@sZqP{ssZSt	NVs{yYaI{@sZqP{ssZS{}^}Yx|dbq{twK}JqNt{I|gqM~ds ywuM}ZKyZG|{ssTypzPxZZzPxZ|r_P{ssTy]bQwgZZzBP_yZG|{ssTypz{Z]Z}Zy|Ta:E]RACVGXUyqrWz]qYjqzzZrJ~q }I}qI~dn[|s\WzsvUy_u@is~yXj zY@yyqrWzs}]R} zZX[R_e iwqD|_ajCYR\~EQ}\y[D{zsvUyqy@is~y_jjZe_iei\ga[~HfD}wnH~KX}df|fiY|gfE~fXJ~Zm^~[zCpYvUyqrYQ]ayX\YWz[|s\WzsvUy\qXWwP[[zFRa^SqYqXUyqrWz^uDS\bY|Y~~v~YqXUyqrWz^uHyX\Yg[wbarH~dbU}XrI~IE}KG}IvJ}H\J~c~As[rWzsv[TuKJzZX[TuKJzY@yyqrWzs}Ujq\zZX[R_
Eic~As[rWzsv[T[zzZ~[s\9FZWCA	U@]W{pqTyZt[hpyy]wH|p~N}`I~N{CqZqTytsYkd\Xy]]Y|YaZ|v]W{pqTyZZFQ aZ^x Q]fQphPt_SEh{fYQ`EQJESZQY~r_TytsW{^\Xy]]Y|ti}MsHwqGiM^X}p iZgG~gWigD}w}J~cgIrXjs{ZGxytsW{pzFjocY}Zz SN{CqZqTytsYQtvQt{{Z	ZRp~Jy@s^sW{pqZSpIVpyy]c Jy@s^sW{pqZSY}Zz|d`v{wuK}dsIwyI|csJ~gq yswJ}Y}Ky^E{{pqTytx P{}Z^x P{}Z|v]W{pqTyY`QteZ^xEP_y^E{{pqTytx{Y_Z}^{{Tb:A_UA@
RE_UzsrW~_vYisz~XiJZzIyKH|sIyfu[q\W~qqUz]u@mqyzZj ~[GyzsrW~qz]Q} ~X_[j]eEmjjDQweEn eGiwaETKGihbY{s_UzsrW~_\YzZ\YzevX|gbzXWFit~xq i]a]{f\_jZPDmvv^~giYm_}K}JzJ~[GyzsrW~qzGihbYx[zPIzCt[qUzsrYTuvRsz~[	Ziy\me^Q^bF~[GyzsrW~qzEQy ~X_[}tbJ~[GyzsrW~qzEPIz~YbaufWzf}EztzGzX}F~t~DzvSU~d~zHu[q\W~qqUz^aCTKyz^aCTKyApYrW~qq[Wx_Gmayz]FU_e[q\W~qqUz^jYx[yKzWC	=D\W@C	 STVUV
WRQRV  SVpKYUG^TA	W]SAIGFY]]]_YWAVSFB^FIG\@CK@WDP@ZUSWUAdNBU]_]UURUUPWR	VRT	SlVSQVU	PRQQUtmV QSUUP
VVPS
QU 	RR
RRW	R	UWUQSQZGDCCQVQF_VVT\XG^Q]B^UXF
	9F[WCA	RTVRV
UUQQ  	 QrPXZ^VZE_R^AZ^
UYQBKCDZ_Y^]]UCRQE@ZDJC^CGICU
FSBXVQSWBfJ@VY]^WVPVQRUQ 	
RPP
QhU	VW
SSSlV
RQURR
RTPP
QW
RURVW
RV		UUUQRXGDGARV VF]VTS\[E^QY@YU[D
	=FB]YQ]
T	QSPUTR W TV 
VsWZWW_V^\VPVQRUQ 	
RPP
QhU	VW
SSSlV
RQURR
RTPP
QW
RURVW
RV		UUUQRXGDGARV VF]VTS\[E^QY@YU[D
	=D\W@C	S PV	
UWR
R  QWp^Y[YW]T_WV V^T@IBGY\^
\_\V@UTGB[GID[AFJ@VCQ@[URTR@dKCU^X\UUUTPQVS
	URQ	RoW
QU	PVQmUSRVPQ	UQRQ	RRQWQQUQW
VVRT	S[DG@DSUTD^UQQ^ZF]R^E[WZG	
:A^UA@
 TQRU


RPPU 
 QVSsS[YYSX@SU
V^PBNBD[\^^X\U@UPEE[DKD_CFIBVGSGXWRTVBcK@W^\^RWQVPRVQ	UUQRoU	QRPRSoV QSUUP
VVPSSU 	RR
RRW	R	UWUQSQZGDCCQVQF_VVT\XG^Q]B^UXF
	9F[WCA	QS	QPRVUUV  UQrT]VWZWFX
U\PBJ@C[_\^\^RCWPEAYCKF_CDNBUGSC_WQVVBgIGW\\^VWQVRUUQWQSQmUSVSRSoWQVU
RUWUQSQV	RUSSV	S
U	 RTPP
Q_FDB@ Q VVGZW US]XB_Q\AYTXC	8E\VCD VR 
S VRR 
R
	wV_UVT\WRST	W^QAICD^]^]_]UAUQFBZDND^@GIGWFP@XRSTWAdJ@R^]]URPUQRWR	URPSoVR	PUV

VVQlR

RQWQRUTRPSW
PVVQU
V V	

UQRQ	RXCF@ART UD]RTP^[EZS^@ZW[D:D_U@CUUQWQ	 V  Q pP_UU^UWF V^T@IBGY\^
\_\V@UTGB[GID[AFJ@VCQ@[URTR@dKCU^X\UUUTPQVS
	URQ	RoWQ	UU	WW
VPmdhUV	RSPQUWQQSUR
Uo TVWVQS	VU	UWQSV	Q	U
 VVPS
Q[DCBC QQTG^U VQ]XF]V\B[TXG	8F_VC@
UE{zsv[T[zzs~Ky[D~pYvUy\qJzZXUyGVF`[]W`^\B^]\^hZxBE^Eaw^_|o_YCk@\@BWhcFEzG]TzaGPJXD|bEQgbDi _WgZR\y@i_fXYqyyqrYjgeYyX\Wz]SFjeWDic\iazCwaXUyqyGQ}yX\WzZf}KzCwaXUyqy@is~yqzH}ZuXjfyZ~sebIdrJjezDjga_}K}ZvE}v~ ~Za[iejYqyyqrYjg[YyX\WzZrKy[D~pYvUy\}ZVc~yqyXWheDy[D~pYvUy_\Ws~yqyPI~Atc\Wzs}Ujq\zZXUy_FQ]b[|s{zsv[Qu
JWs~yqy^Qga\RefEir[|s{zsv[Suu Rs~yqzFV^SjSzagVwPDy[D~pYvUy\aCPI~yqy Qxz[|s{zsv[S @zZXUy[z~p^:D^U@CWD xytsYVZyyt{I{ZG}s^sW{]rIy]]W{FUEeY_Vc][@\^_] jY{AB[ G`qTa\A_Vybjwg KQS{bS~J	|Z\~~FQdDkdJQ`V_Vw[y^E~qZqTyZt[hpyytxYSdTITo{EkiZ|v{{pqZSpIVpyyt{ |w}Z|v{{pqZQ`cY}ZqZ~c`[|wXZ}gD}w\^~dHdfZ|`w|aG~ckGwqI~s{k^bYy^E~qZqTyZt@hpyyt{HZy@tf]W{pzIiYY}ZqZiod PJy@tf]W{pzFjocY}ZqZTY~r xytsYV{\Djd{{pzFR\{ZG}s^sW{^XEScY}ZqZiZ^^Q fJ|Z|]{ZG}s^sW{]r[TpUY}ZqZ|Vcj~b`Z~Jy@tf]W{pzRY}ZqZTpJJ{ZG}s^sW{]~FQd{{pyZtfB	8GB\ZV\

S
 V U VSRPWTTrD@\DA__\ WQVRUUQWQSQmU
TS
VRQT oWQVU
RUV	RUSSV	S
U	 RTPP
QWVQS	VZDFCCVTUD_UVP^_G]S]BZW_F	9F_UDA
QRRVUQU 	
TrVGP[KYV]VW]X\^PWS	W^QAICD^]^]_]UAUQFBZDND^@GIGWFP@XRSTWAdJ@R^]]URPUQRWR	URPSoF\[J_hoV QSUUP
VVPS
QU 	RR
RRW	R	UWUQSQZGDCCQVQF_VVT\XG^Q]B^UXF
	9F[WCA	VSTVUU	  UWrUEP[O[Z[]@Z^PST	W^QAICD^]^]_]UAUQFBZDND^@GIGWFP@XRSTWAdJ@R^]]URPUQRWR	URPSoAV_F\hoV QSUUP
R

RWRU	QUW
P VVRT	SUPV
QRUQ 	R

WVQS	VZDFCCVTUD_UVP^_G]S]BZW_F	9DA_]S^ VQVSSPTPU TQTPVRT TpTFSXH^XY\CY]WUQ WQVRUUQWQSQm@U\E[mmUSRVPQ	UQRQ	RRQWQQUQW
VVRT	S[DG@DSUTD^UQQ^ZF]R^E[WZG	
:A^UA@
WRVQ
	TRP
R TsHZRB\UR
U\PBJ@C[_\^\^RCWPEAYCKF_CDNBUGSC_WQVVBgIGW\\^VWQVRUUQWQSQm@U\E[mmUSRVPQ	UQRQ	RRQWQQUQW
VVRT	S[DG@DSUTD^UQQ^ZF]R^E[WZG	
:=