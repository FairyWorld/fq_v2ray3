D]WACWG]UytrW{]tYjtz{ZwJ~t |IJ}srEZwy^D{{ssUytyXSgc[^z|s{As^rW{ss[Qp
JVs{yZ\Vw`ZRN[Vg|@jpJ~]KjNzCqYsUytrYSgc[^zk]g}ceXkY~pv ~dcJi]fDkgx^jdHkcKjc_Y}tQK~Z~Y~q]UytrW{]^Ttz{^VHy^D{{ssUytyGkh`]y]\Y~x^RYbF{YEyytrW{sxERy {Z][~sbJ{YEyytrW{sxESNz{[bbrfWdwyszGZ{F}sPDJsU}cPJw[|v\W{ssUyYaCQI{yYaCQI{As^rW{ss[T_Ghc{yZFP]g[|v\W{ssUyYjY}Y{KyPC	8F_WCD	UE]W~pqUy_t[mpyyXwHyp~KHzwyG~HY{r_UyqsW~^vBjq{~Yiy[E{~pqUyqx_U ~yX]YSf[jutF{^bi F[U]}GRx^~ZGyyqsW~pzBjq{~Yv[~e{ yIv^|fxZyd}F~v`]zZ[i_{{g\Y~u|\m^}v{zJyAs[sW~pq[R_d ~Y_[TY{r_UyqsW~]rZTuUYxZyDj_^CUp[|s]W~pqUy\pFT]a[[{ yw}[|s]W~pqUy\pJ~Y_[dYue`qJ}fWzYqK}[GyJ H}qsHyI_H}a{CtZqUyqsYStHHyX]YStHHy[E{~pqUyqx Rkr^yX]YU^	Gja{CtZqUyqsYSZyyX{Yt] :D_UD@
WE_PzssW{_v\is{{XiOZ{I|K~cIX[^q]W{qqPz]t@hqyzZk {[G|zssW{qzXQ| {X_^WdYhuvA]`[P\}BQ]d {[G|zssW{qzGis{{_v_|wgv}g{HkHiC}w{ka^~w|\~eeM|gcv[N}]{ayDpYsW{qq^Q]d {X_^WY~s_PzssW{\r_WwUY}[yAjZ@PuaAzYE{{qqPzsxGPzzZ]Y|vaMzYE{{qqPzsxGQKyz[``weP~dw{vy@~Z{DvSC~JsWfS~JwY~s_PzssW{\bDPI{{\bDPI{Cq[qPzssYVz\@ic{{_AQ]gY~s_PzssW{\i^|Y{I{U@9F_UAA
UE_U{svTy_vYhs~yXuJ|s~KsK~Hi[~qXTyqqU{]qCjqy{Zny[Gy{svTyqz]PyyX_[k]aFjjjDPwaFi eGhweFSKGhhfZ|s_U{svTy_\Y{ZXZuuhZSZjXyF|gnj[ dTJ|ey|wfGi_~[k]bDiHu}gby[Gy{svTyqzGhhfZ[zQI~@s[qU{svZSuvSs~y[	YPyRyD{Y@xyqqU{s}DRz{ZXZ~vaH{Y@xyqqU{s}DSKy{[cbweUdzDyvyEZ~G}vSFJvT}fSJrZ|s_U{svTy\bAQI~y\bAQI~@s[qU{svZTz\Ehc~y_DP]bZ|s_U{svTy\i[}Y~JyU@8F[VCA
TUU
WS
UUR QT 	TUrH[PEYWC
V^QBKBD^\^^]\U@UQE@[DND^CFIGVFSBXRRTWBfK@R^]^WRPVPRVQ 	UPQRoU
QRTWQ
W
RRWqoU

VRWPQ	UTRT	SWPWQQUQ R

VVRQ	V[DF@AVT TD^UTQ^_F]S^@[W_G	:D^UD@
PVQPU
WPVR SsSZY\SXB^Q\B_\W\SEJ@FY]\Y\^WAWSBAYFIF\DDK@WDTCZUSVUEgIBU\_YVURQRPWV	WQS	SmRSV	QQToU
 QSW
UP	WVQS	SU 	PR
QSV	Q 	U
 WVPS
QZDFBC QTQG_U VT]XG]S\B^TXF	8DE\ZS^STRSRUP TVSU
pU_UP^U]^ URQRPWV	WQS	SmRSV	QQToU
 QSW
UP	WVQS	SU 	PR
QSV	Q 	U
 WVPS
QZDFBC QTQG_U VT]XG]S\B^TXF	8F[VCA
QQU	
VUU	Q  VTr][^[P\W]US
U\QBNCD[_\^X]UCWQEEZDKF^CGIBUFSGXWQVWBcJ@W\]^RWPVQRUQ	WUPQmU	SRSSSlW
RQU
RRWTUPQW
RUSSR
SV		UTPQRXFDBAR V VC]W TSY[E_Q\@YP[D	8D\R@CURPW	WRQV	 SQRpQX[\Q_AQVU\S@K@CZ_\\]^RCWSG@YCJF\ADNCUDQB_VQVU@fIGV\_\WVRTRUUS 
WPS
QmWSW
SQQhU

VRWPQ	UTRTQWPWQQUQ R

VVRQ	V[DF@AVT TD^UTQ^_F]S^@[W_G	:D^UD@
SVPSP
	QWPU P	VsW_UU_UG[R]S@IBFYX]\_\WDVSGB[FI
G\AFK@RDQ@ZUVWU@dKBU
]_\UU RTPPRS	VRQ	VlWRU	TQQmUSSRPP	VVRQ	VUUW
QRUQ	WWVQS	SZDCCCSQTD_UVQ^ZG]V]B[WZF	9F^UAA

UPT

UP
W 	P	rTXTUV_UWTU
UYPBK@F[_Y^]^WCRPE@YFKC_CDKBU
GSBZWQSVBfIBWY\^WWQVRPUQ RPSQhUPQWT	U	QRoWQSURPRUPSQV	RU
SVW	S
U	WTUPQZFDG@Q VVF_WUS\XG_QYAYUXF	=E\WCAVW V
VRT 
RrU]RT]WUC
U\QBNCD[_\^X]UCWQEEZDKF^CGIBUFSGXWQVWBcJ@W\]^RWPVQRUQ	WUPQmURPRT
	V	TRlgjWW WRSRWURSVRP	P h   VTUQRQSRPVSQUS W	

UTRT	SXFF@DS TUD]WQP^ZE_S^EZWZD:A^UACRD yyqsYSZyyq{I~ZG|s[sW~]rHyX]W~FUEeYZVc
]^@Y^^]oYzAG[ B`t\\~j]^BhB_Bz@Pi`DFxB_S{bESH]F{ aGRegFn]TeXU]zBj Z xg[[|s{~pq[ie`[~Y_Uy_VDmdTFja^n`yAtc]W~pzERx ~Y_UyXc zJyAtc]W~pzBjq{~pyJ~XpZmgzX}qxdaK|fwHmdyFied]zJ ~XsGzw}}XdYndi[|s{~pq[ie^[~Y_UyXwI~ZG|s[sW~]~XUa{~pzZTj`F~ZG|s[sW~^^Tq{~pzSK{Csb_Uyqx Rkr^yX]W~^DR_gY{r yyqsYVt	HTq{~pz\Red^UdeGj wY{r yyqsYTtvQq{~pyDU\VhT{beUuUF~ZG|s[sW~]bASK{~pzRzY{r yyqsYTByX]W~Zy|s\=E]WCAVG{{qq^WY{{qyNzYE~q[qPz^pJ{X_PzEWGg^^Ua_^G]\\_ k[xCGYFcsWc_C\S{eiudIVRx` Qz}I ~_[|ESzfCjgISeTXWtY{[GypYsW{_v\is{{qz^RgVJVjyBjkY~s |zssYQu	NWs{{qy}tY~s |zssYSea^|YsY|fb\}tZY eC|t^]|a O~gdY~eu}cD|fi@~tsJ|vyj]`Z{[GypYsW{_vGis{{qyO~Y{Cvc_PzsxJk[^|YsYkjfQI{Cvc_PzsxEhja^|YsYV}^q{{qq^Wx^GhayzsxEP [zYE~q[qPz]ZFQa^|YsYk_\YPdI~_~ZzYE~q[qPz^pXVuW^|YsY~Tbi|gb]I{Cvc_Pzsx Pz}^|YsYVuHMzYE~q[qPz^|ESayzs{Yvc@9D@_XS^	T	T PQRP 
R TV QpCA_FB]][	U RTPPRS	VRQ	VlW	VR	U	URVmUSSRPP	UUW
QRUQ	WWVQS	SUQRQSXCG@ASU VF]RTS\ZEZR^@YUZD
:D\WACSQPW 

WRR 	VpQFSYH[S_QV^Z_\UPR
UYPBK@F[_Y^]^WCRPE@YFKC_CDKBU
GSBZWQSVBfIBWY\^WWQVRPUQ RPSQhG_YI]mhU

VRWPQ	UTRT	SWPWQQUQ R

VVRQ	V[DF@AVT TD^UTQ^_F]S^@[W_G	:D^UD@
	QR  
	SWWP  PUsVGSYJY]Z^BY\UTU
UYPBK@F[_Y^]^WCRPE@YFKC_CDKBU
GSBZWQSVBfIBWY\^WWQVRPUQ RPSQh@U]E^mhU

VRWPQ	WQ U  PRRPV	RUTPQRWQUVQWVW		UQRQSXCG@ASU VF]RTS\ZEZR^@YUZD
:FB]XQY	
 USTVQSVRRVTSQU
QVVwUEQ[J[Z^]@[^UWV	U RTPPRS	VRQ	VlCW_G^olW
RQU
RRWTUPQW
RUSSR
SV		UTPQRXFDBAR V VC]W TSY[E_Q\@YP[D	8D\R@CVQTSU WRP   	SpJYPG^TQR]S@IBFYX]\_\WDVSGB[FI
G\AFK@RDQ@ZUVWU@dKBU
]_\UU RTPPRS	VRQ	VlCW_G^olW
RQU
RRWTUPQW
RUSSR
SV		UTPQRXFDBAR V VC]W TSY[E_Q\@YP[D	88