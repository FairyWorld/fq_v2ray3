D]WAB
WG]UxssT{]tYks{{ZwJs|IJ|tUFY{ArYsT{ss[hg^X{Z][ZcZ~q]UxssT{]ZDRcZ}YxR^dSwhSw_QGkxdYS`GRIEQ]Q[}q]T{ssUx]^X{Z][|ghZ|wg~dQGwc|YtgJ}dY hdkF~dgJkdc|dkI|dVYxYEx{ssUxsxFhhc[~Yx QI{ArYsT{ss[RwtSs{xYCP^|R^dGhg}I{@qYsUxssZQwKUs{{Zc|I{@qYsUxssZQx[~Yx|f `txtwKcsK|t{J~dwE}d{I{tsJ~ZK{YEyxssT{sxSxZ}YxSxZ~q]UxssT{^`RwgZ}YxGS_{YEyxssT{sx xZ]ZY{yWa8F_WBCUE]VyqrUy_tZjqzyXkI|XzK~K ~[JfwX|s\UyqsVy_uBjq{yXjy[EzyqrUyqx^R}yX]Xi_eGjjhGRueGi gDjuaGSKDjjb[|s]VyqrUy_^ZyX\[~v|Y~XP}HwEj_fjajfaY|ex\} bFj_x\}eyXiXt[}Xq_y[EzyqrUyqxDjjb[[xSKzAs[sVyqr[SutQqzy[]Uza^R\|AR Dy[EzyqrUyqxFRyyX]X~vbHy[EzyqrUyqxFSKzyYabwfU}fFyvzE}X{E}frF}XV}vv}HwX|s\UyqsVy\aASK{y\aASK{Bs[rUyqsXTz_Eja{y_DR_gX|s\UyqsVy\j[[{HyUC:D_TCA	WE^W{psW{_w[hp{{XtH|p |KHwgEXt{ZE{{qpW{pxXSe`Y}Z{|qxCqZsW{qpYStJVqx{^\VucXPJ[VeBhtJ~_IhJ{Cq[pW{psYSe`Y}Z{ |_tJ|d{ k[YcG~f`}twD}fdJhpeX|tdYkecZ}wsY~s^W{psW{_\Vp{{\UJ{ZE{{qpW{pxGkjc_{Y]Y~ {Ihdt[VuVF{ZE{{qpW{pxGP{ {Y]Y|v`J{ZE{{qpW{pxGQKx{X``wdWgw{vxGY{DfpDYWvtIwY~s^W{psW{\cCQJ{{\cCQJ{Cq[pW{psYVz]Gh`{{_FP^gY~s^W{psW{\hY}Z{I{UA	8E_UAAVE_U{rqUz_vYhryzXuJ|r}KJuSG~fi{XGyzqqU{rzZRea[}Xy }qyAqXqUzqq[Sv	HWqy{_T^j_bZPHYWe~@hvH_	KhHyAp[qU{rq[Rea[}XyEjX[E|[iJ}q |ef_fa|fyFjf} }r jebXheT_|vq }fe[s_U{rqUz_^Vryz\TH{XGyzqqU{rzEjjb]{[_[z^hfAjjyD{XGyzqqU{rzEQz{[_[}vaH{XGyzqqU{rzEPKy{ZbaweUeuHzvyE[yF~fqF[}U~vuKu[s_U{rqUz\bAQHyz\bAQHyAp[qU{rq[Wz\Ehbyz_DP\e[s_U{rqUz\i[}XyKzU@8G\W@A
STV
WS

TRQ QTSVrH[PD^TC
W]QBKBEY]]^]\TAVQE@[EIG^CFH@WFSBYUSWWBfKAU]]^WUPVPSWQ 	VPQ	SlU
PQTW	P
WQRWqnV

QSWPP
UTSS
SW	PW
RQT	R U
WURQQZGF@AQT TE_VTQ_XG^S^@[VXF
:D^TCA	PWVPU
	WPQQ  RrPZY\SYE_R\B_]
W\RBKCFY]\^]]WAWRE@ZFIF]CGK@WESBZUSVTBfJBU\^^WUSVQPWQ 	WPP	SmUSW	QPSlU
	RSW
RP	WWPP	ST
PU
QSW
Q V
	WVPRRZDFBBRTVF_U WS\[G]S\CYU[F	8EB]YS^TT SPUTP WVS
V
pU_TW_V]^USVQPWQ 	WPP	SmUSW	QPSlU
	RSW
RP	WWPP	ST
PU
QSW
Q V
	WVPRRZDFBBRTVF_U WS\[G]S\CYU[F	8G\W@A
P PV	UTR
Q QWr][^ZW]T]US U\QCIBG[_\__\VCWQDB[GKF^BFJBUFR@[WQVWCdKCW\]_UWPWPQUP
WRQQmT
SUSSRmW
SRU
SQWTRQQWRTSSUS W
VTPQ	S[FDBAS V WD^W TR^ZF_Q\@XWZG	8D]UA@TQPW	

WSPU	 RVSsQX[\PX@QVV\S@KAD[\\\]_U@WSG@XDKF\AEIBVDQBXWRVU@fH@W\_\WWRTSRVS 	WPRRmW	SWPQQ oV

QSWPP
UTSSQW	PW
RQT	R U
WURQQZGF@AQT TE_VTQ_XG^S^@[VXF
:D^TCA	SV	QPP
VWPV  PQrT_UU_TFXU\P@IBFX_\\_\WCWPGB[FHF_AFKAUGQ@ZTQVV@dKBT\\\UTQTPPUSWRQQmWSUSRQmTSSU
PPWURQQVRW
PSUP
WWWPP	SZEDB@SVTD_T UQ^ZG\Q\A[WZF	8E^UAA 
UP	S

VP
W 
P	rU_UVV_UWST	T^QAK@F[^^]]^WBUQF@YFKD^@DKBTFPBZWPTWAfIBW^]]WWPURPTR UPSPoVP	PWU

UVQoW	
QSTQPUTPSPW	SV
SQW	SU	
WTRQQZFE@AQ W UF_WTP\XG_P^@ZUXF:D_WCAUW  Q
 WQU QrU\UU^WUC U\QCIBG[_\__\VCWQDB[GKF^BFJBUFR@[WQVWCdKCW\]_UWPWPQUP
WRQQmTQPUT
W	TSmdjWV WSPRWTQSVUP	Po   WTTVQQSUPWSPVS 	W	
  UTSS
SXFFAC S TTG]WVQ]ZE_S_B[TZD;F_VACUEyyqsXT[zyq{Hy[D|s[sVy\qHyX]VyGVEeX]W`
]^A^]^]hZzAG[Eaw\\~j\YCkB_BzAWhcDFxB^TzaESH]G|bGRegGi ]TeYR\yBj ZfX[|szyqr[ie`ZyX\Uy_VEjeWFja_iazAtc]VyqyERxyX\UyXc}KzAtc]VyqyBjq{yqzJ~Xp[jfyX}qebK|fwIjezFied\}K~XsF}v~}XdXiej[|szyqr[ie^ZyX\UyXwHy[D|s[sVy\}XUa{yqyZTj`Gy[D|s[sVy_^Tq{yqySK{Btc\UyqxUjq^yX]Vy_DR_gX|syyqsXQu
HTq{yqy\Red_RefGj wX|syyqsXSuuQq{yqzDU\ViSzaeUuUGy[D|s[sVy\aASK{yqyRzX|syyqsXS ByX]Vy[z|s\:D^WCAWD{{qpYVZ{{qxI{ZE~q[pW{]pJ{X^W{FWGfY_Va_^@\\\_j[xCGX G`sWb\C\SzbjudHQS{` Qz|~J ~_ \~|ESzgDkdISeU_VwY{[F~qZsW{_w[hp{{q{YSdVJVjxEkkY~s{{psYQuIVp{{qx |wY~s{{psYSe`Y}ZsY|fc[|wZY dD}w^]|aHddY~et|cD|fhGwsJ|vxk^`Z{[F~qZsW{_w@hp{{qxHZ{Cvc^W{pxJkZY}ZsYkjg PJ{Cvc^W{pxEhj`Y}ZsYV|Y~r{{qpYV{^Ghax{pxEP \{ZE~q[pW{^ZFQ`Y}ZsYk_]^Q dI~_]{ZE~q[pW{]pXVuVY}ZsY~Uci|gcZ~J{Cvc^W{px Pz|Y}ZsYVuIJ{ZE~q[pW{]|ESax{p{YvcA	8G@_XS_
	S
UPVSP 
SWV QqD@\FB]\\TQTPPUSWRQQmW	WS
URQVmTSSU
PPVRW
PSUP
WWWPP	STVQQSYDFCAST VF\UTS\ZD]S]@YUZE	9D\WAB
SQPV

WRU	VqVGPYH[S^VW]Z_\UWS	T^QAK@F[^^]]^WBUQF@YFKD^@DKBTFPBZWPTWAfIBW^]]WWPURPTR UPSPoF\YI]m oV

QSWPP
UTSS
SW	PW
RQT	R U
WURQQZGF@AQT TE_VTQ_XG^S^@[VXF
:D^TCA	VS  
TVWP	  PTrUGSYJXZ[]BY\UST	T^QAK@F[^^]]^WBUQF@YFKD^@DKBTFPBZWPTWAfIBW^]]WWPURPTR UPSPoAV]E^moV

QSWPP
W	
R T PURPW	S VTPQ	SWPU	QRWQ W
	TVQQSYDFCAST VF\UTS\ZD]S]@YUZE	9FB]XP^
VSTVQSVSU VTTPV
QVWpTFQ[J[[Y\C[^UVQTQTPPUSWRQQm@W_G^nmW
SRU
SQWTRQQWRTSSUS W
VTPQ	S[FDBAS V WD^W TR^ZF_Q\@XWZG	8D]UA@WRTS		TWS
P   TsJYPG_URU\P@IBFX_\\_\WCWPGB[FHF_AFKAUGQ@ZTQVV@dKBT\\\UTQTPPUSWRQQm@W_G^nmW
SRU
SQWTRQQWRTSSUS W
VTPQ	S[FDBAS V WD^W TR^ZF_Q\@XWZG	88