D]W@C	WG]Typq_{]tXjpy{ZkK|YyA|I }ZAJ{Z|r__{ssTy^vHhs{yYi{YExypq_{sx\R ~{Z]Zi^fMhhhERtfMkgFjtbMQIFjkaQ~q]Typq_{]^XyY_Qk]kDjgiBw{Gia}cig\S~dZXiI[L|YjtbRhtgig}
{YExypq_{sxFjkaQ}Yx SJyKqYsTypqQQwtQpy{YET^fAh]JETJQ~q]Typq_{^pES]aQ}Y{~w}Q~q]Typq_{^pIyY_Qf[vb`q@JsT}YqAID}J O}ssD~g_Bc{@sZq_{ssZTtHB{Z]ZTtHB{YExypq_{sxUkrT{Z]ZR^	Mhc{@sZq_{ssZTZy{Z{Zs] 8F_VC@
UE\WzsyUy_u[isqyXjHZqK~K~IJvrYqWUyqrWz]~BjqzzZay[D{zsyUyqy_QvyX\YWxrTu[]Wg@Gjj}J]ji G[Q^uGRy^zYOyyqrWzsrBjqzz]u~XeY}tmK|ey[|dmF~ubJ}I	[ifXHgb[iXPG}wm u~HisqAs[rWzsy[R_e zZW[T~YqWUyqrWz^zZTuTY|YqDTe RgODy[D{zsyUyqyGQryX\Y}tiHy[D{zsyUyqyGPIqyY`aumU}fvHztqE}X~D~tuF}vTW~tm}HvYqWUyqrWz^jASKzz^jASKzCpYyUyqrYWxTEjazz]DR_fYqWUyqrWz^a[[zIzWH:D^U@CWD_Ty{sW{^vXj{{{YuK~{ |J }{I}py@sQsW{pqZio^[{Y_Z~RcY~r_Ty{sW{^XEScY}ZzFj``[kdFjpdZSbFSAFQ^SZ|y]W{pqTyU^[{Y_Zild]}w\Z~wDk}jQ htf^|o{Jw[GjohZ|^fYi
dX|guJyQE{{pqTy{xEhkaZQxQJy@sQsW{pqZSt SpyyQ\V^fJ|A{CqZqTy{sYQt	JT{{{Ya}A{CqZqTy{sYQ{}ZQxfbuy|wH|`qJ}|{J~gqI|ls{wqRH{ZGxy{sW{pzRpY}ZzRpY~r_Ty{sW{]bSgY}ZzFR
\{ZGxy{sW{pzyR]YZyxVi8E]VCKVG\WqqqUz]u[bqyzZjHtXyK}IHuqJ}JfYts_UzsrWq_vBiszqXizYD{qqqUzsy_Z~zZ\Y\ f[iwuFt_bjG[Z\}GQy^q[GyzsrWqqzBiszqXa}JTwfWduYueaF}tzuaZ~taZtfXX~a]bX[ |trbqyApYrWqqq[Q]e qX_[W~Yts_UzsrWq\rZWwTYw[yDWu@\ufKIzC{[qUzsrY[u	KWszqXa~IzC{[qUzsrY[z}[|YylbtztvHuKqK~tzJtfqHdrqvq|Z~Hq[GyzsrWqqzQx~Yw[zQx~Yts_UzsrWq\bPwfYw[zGQ\q[GyzsrWqqz zZ\Yu[yyUa2D\W@C	 STVUY
	WRQRV  	SVpKYZG^TA	W]SAIHFY]]]_VWAVSFBQFIG\@LK@WDP@ZUSWUAdABU]_]UURUZPWR	VR[	SlVSQVU	P]QQU{mVQSUZP
VVPS
QU	R]
RRW	R		UWUQSQZGDCCQV^F_VV[\XG^Q]BQUXF
	9FTWCA	RTVRV 
UZQQ  	QrPXZ^YZE_R^AU^
UVQBKCDZ_V^]]UC]QE@ZDJL^CGICUFSBXVQ\WBfJ@VV]^WVPVQRUQ 	
]PP
QgU	YW
SSSlV
RQU RR
]TPP
QW
RURYW
RV			UUZQRXGDHARV VF]V
TS\[E^QV@YU[D
	2FB]YQ]
T	^SPUTR W TY 
VsWUWW_V^\VPVQRUQ 	
]PP
QgU	YW
SSSlV
RQU RR
]TPP
QW
RURYW
RV			UUZQRXGDHARV VF]V
TS\[E^QV@YU[D
	2D\W@C	S PV	
U	WR
R  
QWp^YTYW]T_WY V^[@IBGY\^\_\V@U[GB[GIDTAFJ@VLQ@[URT]@dKCU^W\UUZTPQVS
	URQ	RoW
QU	PYQmU SRVPQ	U^RQ	R]QWQQUQW
VVR[	S[DG@KSU
TD^U^Q^ZF]R^J[WZG	
:N^UA@
	 TQRU


]PPU 
 QVSsS[YVSX@SU
V^PBABD[\^^W\U@UPEJ[DKD_CFIBVGSHXWRTVBlK@W^\^]WQVPRVQ
	UZQRoU	Q]PRS	oVQSUZP
VVPSSU	R]
RRW	R		UWUQSQZGDCCQV^F_VV[\XG^Q]BQUXF
	9FTWCA	Q\	QPR VUZV  ZQrT]VWUWFX
U\PBJ@L[_\^\^]CWPEAYLKF_CDABUGSCPWQVVBgIHW\\^VWQVRZUQWQSQmUSVSRSoWQYU
RZWUQSQV	RU SSV	S
U	 ]TPP
QPFDB@ Q VVGUW US]XM_Q\AYTXL	8E\VCK VR
SVR] 
R
	xV_UVT\W]ST	W^QAICDQ]^]_]UAUQFBZDAD^@GIHWFP@X]STWAdJ@]^]]U]PUQRWR	URPSoVR	PUV

VVQl]

RQWQRUTRPSW
PVYQU
Y V	

U^RQ	RXLF@AR
T UD]]TP^[EUS^@ZW[D:D_U@CUUQWQ	V  Q p__UU^UWI V^[@IBGY\^\_\V@U[GB[GIDTAFJ@VLQ@[URT]@dKCU^W\UUZTPQVS
	URQ	RoWQ	ZU	W W
VPmdhUV	]SPQUWQQ\UR
Zo 
TVWVQS	YU	ZWQSV	Q
	U
  VVPS
Q[DLBC Q^TG^U VQ]XF]Y\B[TXG	8F_VC@
UE{zsy[T[zzsqKy[D~pYyUy\qJzZWUyGVFo[]W`^\B^]\^hZxBEQEaw^_|`_YCk@\@pBWhcFEzH]TzaGPJWD|bEQgmDi _Wg	ZR\y@iPfXYqyyqrYjgjYyX\Wz]\FjeWDic\iazCwaWUyqyGQryX\WzZi}KzCwaWUyqy@isqyqzH}ZzXjfyZ~sebId}JjezDjgn_}K}ZyE}v~ ~Zn[iejYqyyqrYjgTYyX\WzZ}Ky[D~pYyUy\}ZVcqyqyXWhjDy[D~pYyUy_\WsqyqyPIqAtc\WzsrUjq\zZWUy_FQ]m[|s{zsy[Qu
JWsqyqy^Qgn\RefEi}[|s{zsy[Suu RsqyqzFV^\jSzagVw_Dy[D~pYyUy\aCPIqyqy Qxu[|s{zsy[S @zZWUy[z~p^:D^U@CWD xy{sYVZyy{{I{ZG}sQsW{]rIyR]W{FUEeY_Vc]T@\^_]jY{AM[ G`qTa\A_YybjwgKQS{bSp~J	|U\~~FQpdDkdJQoV_Vw[yQE~qZqTyUt[hpyy{xYSdTIT`{EkiZ|y{{pqZSIVpyy{{ |w}Z|y{{pqZQocY}ZqZ~l`[|wXZ}
gD}w\^~kHdfZ|ow|aG~lkGwqI~|{k^bYyQE~qZqTyUt@hpyy{{HZy@ti]W{pzIiYY}ZqZi`d PJy@ti]W{pzFj`cY}ZqZTY~r xy{sYV{\Djk{{pzFR
\{ZG}sQsW{^XEScY}ZqZiU^^Q fJ|U|]{ZG}sQsW{]r[TUY}ZqZ|Vcj~m`Z~Jy@ti]W{pzRpY}ZqZTJJ{ZG}sQsW{]~FQk{{pyZtiB	8GB\ZY\

	S
V Z VSR	PWT[rD@\DA__\ WQVRZUQWQSQmU
TS
VRQT oWQYU
RZV	RU SSV	S
U	 ]TPP
QWVQS	YZDFCCYTUD_UVP^PG]S]BZWPF	9F_UKA
QRRV UQU 	
TrVGP[KYY]VW]X\^_WS	W^QAICDQ]^]_]UAUQFBZDAD^@GIHWFP@X]STWAdJ@]^]]U]PUQRWR	URPSoF\[J_goVQSUZP
VVPS
QU	R]
RRW	R		UWUQSQZGDCCQV^F_VV[\XG^Q]BQUXF
	9FTWCA	VS TVUZ	  ZWrUEP[@[Z[]@Z^_ST	W^QAICDQ]^]_]UAUQFBZDAD^@GIHWFP@X]STWAdJ@]^]]U]PUQRWR	URPSoAV_F\goVQSUZP
]

RWRU	QZW
P VVR[	SUPV
QRUQ 	]

WVQS	YZDFCCYTUD_UVP^PG]S]BZWPF	9DA_RS^ VQV\SPTPU T^TPVRTTpTFSXHQXY\CY]WUQ WQVRZUQWQSQm@U\ETmmU SRVPQ	U^RQ	R]QWQQUQW
VVR[	S[DG@KSU
TD^U^Q^ZF]R^J[WZG	
:N^UA@
WRVQ
	T]P
R TsHZRM\UR
U\PBJ@L[_\^\^]CWPEAYLKF_CDABUGSCPWQVVBgIHW\\^VWQVRZUQWQSQm@U\ETmmU SRVPQ	U^RQ	R]QWQQUQW
VVR[	S[DG@KSU
TD^U^Q^ZF]R^J[WZG	
:2