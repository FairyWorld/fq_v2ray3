D]W@C	WG]TyppU{]tXjpx{ZkK|YxK|IJ~ZJ}tZ|r^U{ssTy^wBhs{yYh{YExyppU{sx\R {Z]Zi^gGhhhERtgGkgFjtcGQIFjk`[~q]TyppU{]^XyY^[}wtZ~gV}t{G~YUX|c}g^~dU ~d|Ftp_iYsZ}dQ}gd {YExyppU{sxFjk`[}Yx SJxAqYsTypp[QwtQpx{YDS^EhhxU`	[~q]TyppU{^pES]`[}Y{~w|[~q]TyppU{^pIyY^[f[vb`pJJsT}YpKID}JJYsD}I^Ec{@sZpU{ssZTtIH{Z]ZTtIH{YExyppU{sxUks^{Z]ZR^Ghc{@sZpU{ssZTZx{Z{Zs]8F_VC@UE\WzrsUy_u[ir{yXvH}r~K}r}azCpXsUyqrYjf^YyX\Y}[c[|s\WzrsUy_[FPc[[y P_dQuiQv^S~EiydXQ aEPHDS_PYp]UyqrWz\^YyX\Y~f{~uuX~v{F~Xu]|r~f}Ze^Z} ~D~\xY~HvHieQiHTGzXEyyqrWzrxGjjbY|XxSKzCpXsUyqrYPvtQqzzX\Ri\P\Fje H{As[rWzrs[Su
IWr{yXb ~H{As[rWzrs[Sz~Y|Xx}davzuwJ}arI~u{H|frJewKyvrJ|[sJy[D{zrsUyqy Qy[[y Qy[|s\WzrsUy\aPvg[[yEQ^y[D{zrsUyqyz[][}[z{U`:D^U@BWD_TxqsW{^vXkq{{YuKq |J|qIYiZ}s]W{pqTx_t@hpyxXk {ZGxxqsW{pz\S| {Y_ZU dYhtvE}_`kDXS\EP z]x[E{{pqTxqx@hpyx_x]kITXu ~gqDkXcD|tjYkaY|Y[ }fkkYSI|fghdaDK{CqZqTxqsYP^fxX]YV }Z}s]W{pqTx\pXVtWZ~[{FV^	ka
Y~r_TxqsW{]rER\cY}ZyvY~r_TxqsW{]rIxX]YfX	vcasHg}T|XsIJ D|KHZqD|H]G`y@r[sW{pqZUuJJ{Y_ZUuJJ{ZGxxqsW{pzTjp\{Y_ZS_Eh`y@r[sW{pqZU[{{YyZr\8E]VBAVG\V{qqUz]uZhqyzZjI~XyK}II|q}czBq[qUzsrXke\YzZ\X|Xa[q\V{qqUz][GQa[|YyDhjbYjgDhzfXRaDQKDP]PX~s_UzsrV{_\YzZ\X}vi~dyXXeFj]j|K }Jv~eyE|wbE| f_idXhvv_~tPH{[GyzsrV{qzGihbX}[zPIzBq[qUzsrXQuvRsz{[	ERge[ha[q\V{qqUz^qGQ\a[|Yz|v}[q\V{qqUz^qK{X_[g[
t`aqJ~dfVXqK~IFK J~YrFH_E~czBq[qUzsrXVuHHzZ\XVuHHzYDz{qqUzsyWjr^zZ\XP_	GiczBq[qUzsrXV[yzZzXq\ 9F_TAA
PWW
WR	

UQP QT	PWrH[QE]UC
T\QBKCDZ^\^]]UBWQE@ZDJF^CGICTFSBXVPVWBfJ@V\]^WVPVQRTQ 	
WPP
PmU
QPTW

S
VPRWpoW

RPWQSUTRPSW
PV	SQU
S V

TTRQ	RYFF@AR T UD\WTP^[D_S^@ZW[E:D_U@BP
VUPU WQRP SqQZY\RXF\S\B^\	W]SAHBFY]]]^\WAVSFC[FIG\@FK@WDPAZUSWUAeKBU]_]TURUPPWR	VSQ	SlVRT	QQPmU
SSWQP	VVSQ	SUPV
QRTQ 	W

WVQSSZDFCCSTUE_UVP_ZG]S]BZVZF	9DA^XS^W
UPQVWP  VVR	W
pU^UT\W]^	URUPPWR	VSQ	SlVRT	QQPmU
SSWQP	VVSQ	SUPV
QRTQ 	W

WVQSSZDFCCSTUE_UVP_ZG]S]BZVZF	9F_TAA
QSW	TUQQR Vr][_[T^U]UR
U\PBJAF[_\^\_WCWPEAXFKF_CEKBUGSCZWQVVBgHBW\\^VWQVSPUQWQRQmUSVSRS nWPSU
RPWUQRQVRU
SSVS
T	 WTPP
PZFDB@ P VVG_W US]YG_Q\AYTYF	8E\VBAWPPW	VRST	
SUPrQX[]Q[CQV W\S@J@GX]\\\^VAWSGAYGHF\ADJAWDQC[TSVU@gICT\_\VTRTRQWS
WQSSmW
SVQQQlW

RPWQSUTRP
QW
PV	SQU
S V

TTRQ	RYFF@AR T UD\WTP^[D_S^@ZW[E:D_U@BSW
RQP	UWQW Q	RqU_UU^UEY V_Q@IBGY\_\_\V@TQGB[GIE^AFJ@VFQ@[URUW@dKCU_]\UUPTPQVS
	TRQ	RnW
PU	PSQmU
SRV	PQ	TTRQ	RWQWQPUQW
 VVSQ	S[DGAASU TD^UTQ^ZF]R_@[WZG	
;D^UA@

UPP

 WP
V   P	sT\VWV_UVPWU]R@K@FZ_]\]^WCVRG@YFJG]ADKCUEQBZVQWT@fIBV]^\WVSTRPUS 
VPS
QlWP
SW
T	U	UPoV	QSUPP
VWPS
QT	RW
RRW	RUWUQRQZGDCBQVTF_VWQ\XG^Q]C[UXF
	9G^WCA	 TW R

TPT  PrT]VV_WUB
U\PBJAF[_\^\_WCWPEAXFKF_CEKBUGSCZWQVVBgHBW\\^VWQVSPUQWQRQmUPQVT	T	TRnejWU VPQRWUPSWVP	Q l V TUUPQRVQTSQWS
 W	UTRPSXFG@@S UWF]WUR\ZE_R^AXUZD
:E\WACVFyyqrYWX{yqzIzXE|s[rWz_pHyX\WzDWEdY^Ta
]^@]\^]k[zAGZ Fbv\\~k]Z@jB_B{@TkbDFxC_Wy`ESH\FcGRefFj]TeXQ_xBj [ |eY[|s{zrs[iea[z[]Uy_WDifVFja^jb{Atc\WzrxERy z[]UyXb ~H{Atc\WzrxBjqzzr{J~XqZiexX}q|fcK|fvHif{Fiee]~H~XrG~u}XeYjfk[|s{zrs[ie_[z[]UyXvIzXE|s[rWz_|XUazzrxZTjaFzXE|s[rWz\^TqzzrxSKzCw`]Uyqy Vip^yX\Wz\DR_fYpyyqrYRvHTqzzrx\Ree^QfgGj vYpyyqrYPvtQqzzr{DU\WhPy`eUuTFzXE|s[rWz_`ASKzzrxRz~YpyyqrYPByX\WzX{|s\9G_WCA	TE{{pqZU[{{pyJx[E~qZqTx\pJ{Y_TxGWGgZ\Wa__C_\\_  i[xCFYDasWc]C\R{akudIRPz` Q{}}K ~^_} |ES{fGheISdT\UvY{ZG}r[sW{^vXkq{{pzZPeVJVkyFh kY~r xxqsYQt	JUq{{pyvY~r xxqsYSdaZ~[sY|gbXvZYeG~v^]|` K|edY~du cD|giD|vsJ|wyh_`Z{ZG}r[sW{^vCkq{{pyK|[{Cvb_TxqxJk [Z~[sYkkfSK{Cvb_TxqxEhkaZ~[sYV }Z}s{{pqZUz^Gh`yxqxEP_x[E~qZqTx_ZFQ aZ~[sYk^\]RdI~^~^x[E~qZqTx\pXVtWZ~[sY~ T` i|fbY}K{Cvb_Txqx P{}Z~[sYVtHIx[E~qZqTx\|ES`yxq{Yvb@
;F@_XR^		PTQUPP 
R VV PpGC]FB]]_UPTPQVS
	TRQ	RnW	
VPU	QPVmU
SRV	PQ	WQWQPUQW
 VVSQ	SUUPQRXGEBARW VF]V TS\[E^P\@YU[D
8D\W@C	SQPU
 WR
V  	VpUDQYH[R_UT\Z_\TTPU]R@K@FZ_]\]^WCVRG@YFJG]ADKCUEQBZVQWT@fIBV]^\WVSTRPUS 
VPS
QlE]YI]llW

RPWQSUTRPSW
PV	SQU
S V

TTRQ	RYFF@AR T UD\WTP^[D_S^@ZW[E:D_U@B	UP
  	WUWQ
  QUqTGSYKYYX\BY\TPWU]R@K@FZ_]\]^WCVRG@YFJG]ADKCUEQBZVQWT@fIBV]^\WVSTRPUS 
VPS
QlBW]E^llW

RPWQSV	S U
 P
VRQT	RWTPP
PW
SURSW
RV			UUPQRXGEBARW VF]V TS\[E^P\@YU[D
8FB]YQ]

WSTWQSVRVVUWSW
QVVsWGQ[JZZZ_B[^UWRUPTPQVS
	TRQ	RnAW_G_onWPSU
RPWUQRQVRU
SSVS
T	 WTPP
PZFDB@ P VVG_W US]YG_Q\AYTYF	8E\VBA TSTS
WVR	P  	WrJYPF^VS V_Q@IBGY\_\_\V@TQGB[GIE^AFJ@VFQ@[URUW@dKCU_]\UUPTPQVS
	TRQ	RnAW_G_onWPSU
RPWUQRQVRU
SSVS
T	 WTPP
PZFDB@ P VVG_W US]YG_Q\AYTYF	89