D]WACWG]Uy{pV{]tYj{x{ZkJ|RxH|I~AItw[|y^V{ssUyUwAhs{yRh{YEyy{pV{sx]R{Z][T
gXhwtD|UcZP^GRUg{YEyy{pV{sxBj{x{ZwiB{X|d^Y|ltkJQF~|k\|cZ~BY[~dUHj|][hdk}o`Ihs{AsQpV{ss[RUg{Z][T|X~q]Uy{pV{^pZTVX}Y{DSsYQ]gDyQFz{ssUy{{FPxyR^X|tcHyQFz{ssUy{{FQI{ySa`ugU}lt{t{E}RxEtUF}ltVtk}|tX~q]Uy{pV{^`ASAx{^`ASAxBqYsUy{pXVx^Ejkx{]DRUdX~q]Uy{pV{^k[QxH{WB:N\TAC]F^UyqsWq\wYjq{q[hJ|X{IvH~[JvXxAs[sWqrp[ie^[q[^[~XcYtp^UyqsWq\YDScYwX{[je\\\AjeZbbYjuJt\^Tq{C{XpUyqsYYf`[[x[aeR}XsHvHfwtec_~_kDa\xJqYvK]X}uIwv|~XsYtp^UyqsWq\^Tq{q_UHy[E{qrpUyqxGaic]yX]YtgAje| [\]X|K{C{XpUyqsY[vKTq{q[`}K{C{XpUyqsY[y|[[xlctyvwJurpK}v{Itep|fwHqup XsHqXFyyqsWqr{RzYwX{RzYtp^UyqsWq_cSugYwX{GR \qXFyyqsWqr{ yX]YuXxyVc2G\WCATF]W{qq_x\t[hqyx[wH|qH|q
xXE{{qq_xrxXSeaQ~X{|qyKrXsW{qqQPvJVqyx\\VubPSH[Ve~JkvJ~_	AkH{Cq[q_xrsYSeaQ~XxXkX~U|wGqUk\cI~fa|cDkXS	hXZ|He@hfwHkXy|uY~s__xrsW{_TUr{{\TBxXE{{qq_xrxGkjbWx[]Y~ ~NSip\VueNxXE{{qq_xrxGPzx[]Y|vaBxXE{{qq_xrxGQKyxZ``we_|ew{vyO|[{DvWL|ewWvi|uwY~s__xrsW{\bKRH{{\bKRH{Cq[q_xrsYVz\Okb{{_NS\gY~s__xrsW{\iQ~X{I{U@;G_UAA
TE_U{syVx_vYhsqxXuJ|sK|Y|KyAqYyVxqq[kgTZxX_[|ZiX}s_U{syVx_XDQiX~[zhgrZheGhxn[P bGQIGR_S[~qWVxqqU{]TZxX_[}dj]Xb^hguEX}kYk_i~d_IueF|J}Ik_f[|ZmI|XyE{YOzxqqU{srDkja[}YrRKyAqYyVxqq[Qw~Pqy{Y]SufESw~DUq[~qWVxqqU{^zGR\a[}Yqv}[~qWVxqqU{^zKxX_[f[tcaqJduV|XqKYF~q JcyFX_EcqBr[qU{syXUuHH{ZWXUuHH{YOzxqqU{srTjr^{ZWXS_	GhcqBr[qU{syXU[y{ZqXr\ 8FTTBA
[WT
WS 		
UZS QT	[TrH[PEVVC
T_QBKBDQ^_^]\UBTQE@[DAE^CFIHTFSBX]PUWBfK@]_]^W]PVPRTQ 	TPQPnU
QSTWS
WSRWqoT

YPWPSUTR[SWPW	PQUP ]
TWRQ	YYEF@AYT TD\TTQ^PD\S^@[WPE:D^UKBPV^PU
  WPYS SqRZY\SXM\P\B_\W\SJHAFY]\V^_WAWSMCXFIF\KEK@WD[AZUSVUJeHBU\_VTUR^SPWY	WSR	Sm]ST	QQ[nU
PSW
ZP	WVSR	SUP]
QSTQ 		T
WVPSPZDFBCPT^E_U V[_YG]S\BQVYF	8DJ^[S^\	TPR]WP UVS	T
pU_U_\T]^UR^SPWY	WSR	Sm]ST	QQ[nU
PSW
ZP	WVSR	SUP]
QSTQ 		T
WVPSPZDFBCPT^E_U V[_YG]S\BQVYF	8FTTBA
QST	 WUZQ Y Ur][^[_^V]US
U\QBAAE[_\^W_TCWQEJXEKF^CEHBUFSHYWQVWBlHAW\]^]WPVSSUQ
WZRQmUS]SSSnW
PPU
RSWTZRQWRU	SS]ST	TTPQPYFDBAP V VL\W TSVYD_Q\@Y_YE	8D\]BBWSPW 	WRSW	S^PqQX[\QPCQVT\S@K@LX^\\]^]BWSG@YLHF\ADAATDQBPTPVU@fIHT\_\WTRTRZTS WPSPmWSWRQQgT

YPWPSUTR[	QWPW	PQUP ]
TWRQ	YYEF@AYT TD\TTQ^PD\S^@[WPE:D^UKBSVRRP
	^WP T P	YqV_UU_UEZ]_R@IBFYW_\_\WKTRGB[FIE]AFK@]EQ@ZUYUT@dKBU_^\UUSTPP]S	TRQ	YnWPU	[PQmU 	SS]	PP	TWRQ	YTZW
QPUQ
W  WVSR	SZDLABS^TD_UWQ^ZG]Y_C[WZF	;G^UAA

UP[

	 TP
W  P	rTWVTV_UW[WUVRCK@F[_V_]^WC]RD@YFKL]BDKBUERBZWQ\TCfIBWV^_WWSWRPUP ]PSQgTPSWT	U	^SoW	QSU SP]WPSQT	RT
SYW	S U	WTZRQZFDHBQ VWF_W
WR\XG_QVCXUXF	2G]WCA WW Y	
	TST 	SrU]]V\WUC
U\QBAAE[_\^W_TCWQEJXEKF^CEHBUFSHYWQVWBlHAW\]^]WPVSSUQ
WZRQmUSP]T
	T	TRnfjW U WPRRWU SSV]P	P g  VTU^SQS]PTSQTS  W	
UTR[SXFF@KS T
WE]W^R_ZE_S^JXVZD:N\TAC]FyyqsY\Xxyq{IqXF|s[sWq_sHyX]WqDTEeYUTb
]^@V_^]`XzAG[ Mbu\\~j]Q@iB_Bz@_kaDFxB_\ycESH]Ft`GRegFa]TeXZ_{Bj Z weZ[|s{qrp[ie`[q[^Uy_VDbfUFja^abxAtc]Wqr{ERx q[^UyXc uHxAtc]Wqr{Bjq{qrxJ~XpZbe{X}qwf`K|fwHbfxFied]uH~XsGuu|}XdYafh[|s{qrp[ie^[q[^UyXwIqXF|s[sWq_XUa{qr{ZTj`FqXF|s[sWq\^Tq{qr{SK{C|`^Uyqx ]is^yX]Wq\DR_gYtpyyqsYYvHTq{qr{\Red^ZfdGj wYtpyyqsY[vwQq{qrxDU\Vh[yceUuUFqXF|s[sWq_cASK{qr{RzYtpyyqsY[ByX]WqXx|s\2G\WCATF{{qqQUX{{qyAxXE~q[q_x_pJ{X__xDWGgQ\Ta_^H_\\_ i[xCGYDbsWc	^C\S{jhudIYPy` Qz}}H ~_T}|ESzfLhfISeTWUuY{[GvrXsW{_vSkr{{qzQPfVJVjyMhkY~s sxrsYQu	AUr{{qyuY~s sxrsYSeaQ~XsY|fbSuZY eL~u^]|a @|fdY~eu	cD|fiO|usJ|vy
h\`Z{[GvrXsW{_vHkr{{qy@|X{Cvc__xrxJk[Q~XsYkjfSH{Cvc__xrxEhjaQ~XsYV}Q}p{{qqQUy^GhayxrxEP TxXE~q[q_x\ZFQaQ~XsYk_\VRdI~_~UxXE~q[q_x_pXVuWQ~XsY~T`i|gbR}H{Cvc__xrx Pz}Q~XsYVuHBxXE~q[q_x_|ESayxr{Yvc@;E@_XS^	[TP^PP 
RUV QpLC^FB]]TUSTPP]S	TRQ	YnW	VPU	ZSVmU 	SS]	PP	TZW
QPUQ
W  WVSR	SU^SQSXLEAAS
W VF]]TS\ZEUP_@YUZD;D\WACSQPU

  WR]  	Vp^DRYH[S_^T_Z_\U_PUVRCK@F[_V_]^WC]RD@YFKL]BDKBUERBZWQ\TCfIBWV^_WWSWRPUP ]PSQgE^YI]mgT

YPWPSUTR[SWPW	PQUP ]
TWRQ	YYEF@AYT TD\TTQ^PD\S^@[WPE:D^UKB	^P	  
	\UWP  PUqWGSYJYRX_BY\U[WUVRCK@F[_V_]^WC]RD@YFKL]BDKBUERBZWQ\TCfIBWV^_WWSWRPUP ]PSQgBT]E^mgT

YPWPSW	P U	 P]RPT	RTTPQPWSUYPWYW		 	U^SQSXLEAAS
W VF]]TS\ZEUP_@YUZD;FB]XQV
TSTVQSVR]VT\ST
QVVxWDQ[J[ZQ_A[^UWYUSTPP]S	TRQ	YnBW_G^o
nW
PPU
RSWTZRQWRU	SS]ST	TTPQPYFDBAP V VL\W TSVYD_Q\@Y_YE	8D\]BBTPTSWWR	P  	\qJYPG^VP]_R@IBFYW_\_\WKTRGB[FIE]AFK@]EQ@ZUYUT@dKBU_^\UUSTPP]S	TRQ	YnBW_G^o	nW
PPU
RSWTZRQWRU	SS]ST	TTPQPYFDBAP V VL\W TSVYD_Q\@Y_YE	88