D]W@CWG]TyqsS{]tXjq{{ZwK~q|I as{@s[sS{ssZie^_{Z]Z~Xc]~q]TyqsS{]ZESc]}YxFjj`_kg
Fjzd^S`FSKBQ]QZ|s]S{ssTy_^_{Z]Z~HVXhtVYjf@hdp_ahZ|fUwwG~Hkhth[jet_|gky[E{ssTyqxAhhcZ[xQI{@s[sS{ssZSutSs{y[ZVg^@Tq
]~q]TyqsS{^pES\c]}Y{~v]~q]TyqsS{^pIyX]]f[vbasLdgT}XsMID}[M|ssD}f]Cc{@s[sS{ssZTuJN{Z]ZTuJN{YExyqsS{sxUjpX{Z]ZR_Ahc{@s[sS{ssZT[{{Z{Zs\	8F_VCAUE\W{quUy_u[hq}yXjH~X}K~K q qzCq[uUyqrYkeXYyX\Y|Xe[|s\W{quUy_[FQe[[yYhe^T_
CheXja[huH|_\Vq}As[rW{qu[QebY}[}vXue~K\hX\Y|fbke}Fie}]KJjua]uz_}Xe[|ey[|s\W{quUy_\Vq}y\WJ{[CyyqrW{q~Eija_{X[[| WIPWDy[D{{quUyqyGP~yX\Y|veHy[D{{quUyqyGQK}yY``waU}f~G{v}E}X~Dv}F}XbWvq}vvY~s[UyqrW{\fASKz{\fASKzCq[uUyqrYVzXEjaz{_DR_fY~s[UyqrW{\m[[zI{UD:D^UAAWD_U{wsW{^vYhw{{YiJ~^{I|J|] |ZyAq]sW{pq[kc^[{Y_[|^cY~r_U{wsW{^XDQcY}ZzQZd StjPs\Q }Gh|dZSbGQMFQ^S[~u]W{pqU{Y^[{Y_[`khYj_cgDkgaJhw Iz_~`^ZhduFkYkGhY\_g |tiJ{]E{{pqU{wxEhka[}]xQJyAq]sW{pq[Qst Spy{]Fh^iD{]E{{pqU{wxGP z{^]Y|waH{]E{{pqU{wxGQJy{_``veU`wH{wyE^DwyF^cWwupwY~r_U{wsW{]bAQM{{]bAQM{CqZqU{wsYV{\Ehg{{^DPYgY~r_U{wsW{]i[}]{I{T@8B_UA@
QE_UzssU}_vYis{}XiJZ{KzKJ|cJy[yApYsU}qq[jg^Y}X_[}Zc[xs_UzssU}_XDPc[{[zigxYmeGixdXU bGPIDW_S[q]U}qqUz]^Y}X_[|gcKne}~ZFnXe }cyfbYgwyXeF~]`_{vbX~tkHmfuJzYEy}qqUzsxGnja[|YxWKyApYsU}qq[PwtUqyzYKnjrAjg|^xKyApYsU}qq[PwKPqyzZcyKyApYsU}qq[Px[{[z}g `t}vuJ~IsKyvyHdsKxfyztsJ{XqJzYEy}qqUzsxVz}[|YxVz}[q]U}qqUz^`Wue[|YxGV ^zYEy}qqUzsx }X_[~Y{yRc9F^WGA
QTQ
WR


UPV QT	QQrH[QE\SC
WZQBKCD[]Z^]]UAQQE@ZDK@^CGIBW	FSBXWSPWBfJ@WZ]^WWPVQRWQ 	QPPSkU
QVTW
P
VVRWpoQ

SSWQPUTRQSWPV
UQUU W

WRRQ	SZ@F@AST UD_QTP^ZGYS^@ZWZF:D_UAAP
VT PU
WQSV SrWZY\RXG_U\B^\ W]S@KDFY]]\]ZWAVSG@]FIG\A@K@WDQBZUSWU@fMBU]_\WURTVPWS 	VPW	SlWRW	QQQkU
USWPP	VVPW	SUPW
QRWQ 	Q
WVQSUZDFCCUTTF_UVQ\\G]S]B[U\F	9D@]^S^VUSWWTP PVR
Q
pU^UU_Q]^	URTVPWS 	VPW	SlWRW	QQQkU
USWPP	VVPW	SUPW
QRWQ 	Q
WVQSUZDFCCUTTF_UVQ\\G]S]B[U\F	9F^WGA
QPQ	
RUPQSPr][_[U]S]UR
U\PBKB@[_\^]\QCWPE@[@KF_CFMBUGSB\WQVVBfKDW\\^WWQVPVUQ WPQQmUSWSRSmWSUU
RVWUPQQV RUSSWS
W	QTPPS\FDB@S VVFYW US\ZA_Q\AYUZ@	8E\WAGTVPW

VRPR	
STStQX[]QZ@QVQ\S@J@F[[\\\^WGWSGAYFK	F\ADKBQDQCZWUVU@gIBW	\_\VWRTRPQSWQSUmWSVWQQmQ

SSWQPUTRQQWPV
UQUU W

WRRQ	SZ@F@AST UD_QTP^ZGYS^@ZWZF:D_UAASWQWP	TWQ
Q Q	SrS_UU^UF_ W\W@IBGY]\	\_\VAWWGB[GIFXAFJ@W@Q@[USVQ@dKCU\[\UUVTPQWS
	W RQ	SmW
SU	QUQmU
SRW
PQ	WRRQ	SQPWQSUQ W

VVPW	S[DFBGSTTD^U RQ^ZF]S\F[WZG	8B^UA@

UPQ

QP
V P	sT]UQV_UVQTU\QFK@FZ_\Z]^WCWQA@YFJF^GDKCUFWBZVQVWFfIBV\]ZWVPRRPUU 
WPS
QmQPPW
T
U	TVoV
QSU
VP
WTPS
QW	RQ
RSW	RUWUPQQZGDBAQV RF_V TW\XG^Q\@]UXF
	8DXWCA	RW S
WVT  VrT]WUYWUB
U\PBKB@[_\^]\QCWPE@[@KF_CFMBUGSB\WQVVBfKDW\\^WWQVPVUQ WPQQmUVQWT	W	TRmcjW
V VSWRWU
VSWWP	Q m  VTUTVQRWQWSQQSW	UTRQSXFG@AS U T@]WTQZZE_R^@[SZD
:D_QACWEyyqrYV[}yqzI{[C|s[rW{\vHyX\W{GQEdY_Wg
]^@\Z^]j]zAGZ Gap\\~k][ClB_B{@UhdDFxC_VzfESH\F~eGRefFk ]TeXP\~Bj [ }f_[|s{{qu[iea[{X[Uy_WDhePFja^ka}Atc\W{q~ERy {X[UyXb K}Atc\W{q~Bjqz{q}J~XqZhf~X}q}eeK|fvHhe}Fiee]K~XrGvy}XeYkem[|s{{qu[ie_[{X[UyXvI{[C|s[rW{\zXUaz{q~ZTjaF{[C|s[rW{_^Tqz{q~SKzCvc[Uyqy Wjv^yX\W{_DR_fY~syyqrYSuHTqz{q~\Ree^PeaGj vY~syyqrYQurQqz{q}DU\WhQzfeUuTF{[C|s[rW{\fASKz{q~Rz~Y~syyqrYQ ByX\W{[}|s\8DYWCA	WC{{pq[V]{{pyK{]E~qZqU{ZpJ{Y_U{AWGg[_Qa__B\\\_ j[xCFYGgsWc[C\R{`mudISS|` Q{}~M ~^^~|ES{fFkcISdT]VpY{ZG|q]sW{^vYhw{{pz[ScVJVkyGkkY~r y{wsYQt	KVw{{py|pY~r y{wsYSda[}]sY|gbY|pZYeF}p^]|` JcdY~du|cD|giEpsJ|wy kY`Z{ZG|q]sW{^vBhw{{pyJ]{Cvb_U{wxJk [[}]sYkkfPM{Cvb_U{wxEhka[}]sYV }[~u{{pq[V|^Gh`y{wxEP^{]E~qZqU{YZFQ a[}]sYk^\\QdI~^~_{]E~qZqU{ZpXVtW[}]sY~ Tci|fbX~M{Cvb_U{wx P{}[}]sYVtHH{]E~qZqU{Z|ES`y{w{Yvb@8@@_XR^	QTQTSP 
RPV PpF@[FB]]^ UVTPQWS
	W RQ	SmW	
VSU	PVVmU
SRW
PQ	QPWQSUQ W

VVPW	SUTVQRXFFDAR T VF]WTS\[E_SZ@YU[D>D\W@CSQPV
WR
W 	VpTGWYH[R_TWZZ_\TUSU\QFK@FZ_\Z]^WCWQA@YFJF^GDKCUFWBZVQVWFfIBV\]ZWVPRRPUU 
WPS
QmF[YI]lmQ

SSWQPUTRQSWPV
UQUU W

WRRQ	SZ@F@AST UD_QTP^ZGYS^@ZWZF:D_UAA	TS  	VVWQ QUrRGSYKYX[ZBY\TQTU\QFK@FZ_\Z]^WCWQA@YFJF^GDKCUFWBZVQVWFfIBV\]ZWVPRRPUU 
WPS
QmAQ]E^lmQ

SSWQPV
U U P
WRQW	RQTPPSW
PUSUW
S V	
	UTVQRXFFDAR T VF]WTS\[E_SZ@YU[D>FB]YQ\

QSTW QSVRW VUVPQ
QVVrTAQ[JZZ[\D[^UWS UVTPQWS
	W RQ	SmGW_G_o mWSUU
RVWUPQQV RUSSWS
W	QTPPS\FDB@S VVFYW US\ZA_Q\AYUZ@	8E\WAGWUTSTVR
P  	VtJYPF^UU W\W@IBGY]\	\_\VAWWGB[GIFXAFJ@W@Q@[USVQ@dKCU\[\UUVTPQWS
	W RQ	SmGW_G_omWSUU
RVWUPQQV RUSSWS
W	QTPPS\FDB@S VVFYW US\ZA_Q\AYUZ@	89