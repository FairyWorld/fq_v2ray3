D]WACWG]Uy{qU{]tYj{y{ZwJ~{|Ik|Y{AsQqU{ss[io\Y{Z][~Ra[~q]Uy{qU{]ZDSa[}YxGj`bYkg
GjpfXS`GSADQ]Q[|y_U{ssUyU\Y{Z][}lfZkdhY~ReFkiA |J{J|oyhtUFjlaK|ZU}R~YJkyQGy{ssUy{zGhhc[QzQI{AsQqU{ss[SvSs{yQ	]hgtYjpz^QDyQGy{ssUy{zEPxyR_[|tcHyQGy{ssUy{zEQI{ySb`ugU}lu{t{E}RyFtUF}|yUdc}Bu[~q]Uy{qU{^`ASAy{^`ASAyAqYsUy{q[Vx^Ejky{]DRUe[~q]Uy{qU{^k[QyK{WB:N]WAC]G]UyqsWq]tYjq{qZwJ~q vIqHvJc[|s]WqssUy_t@bs{yXk qYEyyqsWqsx]R| qZ][T dYbwtD|_`[Z^GR_d qYEyyqsWqsxBjq{q]{iXsbZw|ewa]wF~v`[uIZ} tgdXi_kvt_~HcIbc{As[sWqss[R_d qZ][TYtq]UyqsWq^pZTuUYwY{DS ^^ZY
[|s]WqssUy\pF[^c[[{ vt[|s]WqssUy\pJqZ][dYujcsJ}fQWuZsK}[GwsE}[sHvt]H}a{C{YsUyqsY\wJHyX]Y\wJHy[E{qssUyqx ]hp^yX]YZ]Gja{C{YsUyqsY\Y{yX{Y{^:D_UKCWE__yqsW{_vSjq{{Xi@|X{I|K}qI}qyKs[sW{qqQie^[{X_Q~XcY~s__yqsW{_XNScY}[zQje\V_	KjeZhaSjuJ~_TTq{Cq[q_yqsYSeaQ[xZhejUjfc|qQ~u~fbQ~HcDkXe~KHf[	jfUHbR}ugY~s__yqsW{_TTq{{\TBy[E{{qq_yqxGkjbWyX]Y~~Ni ^\Vz[Ny[E{{qq_yqxGPzyX]Y|vaBy[E{{qq_yqxGQKyyY``we_}fG{vyO}X{DvWL}v{Wfa}HwY~s__yqsW{\bKSK{{\bKSK{Cq[q_yqsYVz\Oja{{_NR_gY~s__yqsW{\iQ[{I{U@:D_UAA
WE_U{syW{_vYhsq{XuJ|s |K}cHv[[~qWW{qqU{]~@hqy{Za {[Gy{syW{qz]Pv {X_[VnYhuvD~]jk DYP^uEPz\{YO{{qqU{sr@hqy{]qIH\Xhd_ ~fqK]aD|uy|svr_~du iJ|wn[k }E|sqCq[qU{syYP_f{ZWYV}[~qWW{qqU{^zXVuW[}YqFh_	KPgnI~KyAqYyW{qq[QwIVqy{Zi KyAqYyW{qq[QxuY}[z}f jv{vuJIyIvyK~dy~fqK{t} }X}J{YO{{qqU{sr Pz}[}Yr Pz}[~qWW{qqU{^jQue[}YrEP ^{YO{{qqU{sr{X_[Yq{Tc8FTUAA
[VW
WS 

UZP QT 	[WrH[PEVUC
U\QBKBDQ_\^]\UCWQE@[DAF^CFIHUFSBX]QVWBfK@]\]^W]PVPRUQ 	WPQQmU
QPTWR
W	PRWqoW

YQWPRUTR[SWPWSQUS ]	
UTRQ	YXFF@AY T TD]WTQ^PE_S^@[WPD:D^UKCPV^PU
 WPY P  SpQZY\SXM]S\B_\W\SJIBFY]\V_\WAWSMB[FIF\KFK@WD[@ZUSVUJdKBU\_VUUR^PPWY	WRQ	Sm]SU	QQ[mU
SSW
ZP	WVRQ	SUP]
QSUQ 		W
WVPS	SZDFBCST^D_U V[^ZG]S\BQWZF	8DJ_XS^\
TQQ]VP VVSW
pU_U_]W]^UR^PPWY	WRQ	Sm]SU	QQ[mU
SSW
ZP	WVRQ	SUP]
QSUQ 		W
WVPS	SZDFBCST^D_U V[^ZG]S\BQWZF	8FTUAA
QRW	 	TUZQ  YVr][^[__U]US
U\QBA@F[_\^W^WCWQEJYFKF^CDKBUFSHZWQVWBlIBW\]^]WPVRPUQ
WZSQmUS]SSSoW
QSU
RPWTZSQW	RU
SS]	SU	WTPQQZFDBAQ V VL_W TSVXG_Q\@Y_XF	8D\]CAVPPW WRRT	 S^QrQX[\QPBQVW\S@K@LY]\\]^]AWSG@YLIF\ADA@WDQBPUSVU@fIHU\_\WURTRZWS 	WPS	SmWSW	QQQgW

YQWPRUTR[
QWPWSQUS ]	
UTRQ	YXFF@AY T TD]WTQ^PE_S^@[WPD:D^UKCSVSQP
	^WP  W  P	YpU_UU_UDY]^Q@IBFYW^\_\WKUQGB[FID^AFK@]FQ@ZUYTW@dKBU^]\UUPTPP]S	URQ	YoWQU	[SQmU 
SS]PP	UTRQ	YWZW
QQUQ
W WVRQ	SZDL@AS^ TD_UTQ^ZG]Y^@[WZF	:D^UAA

UP[ 

	WP
W P	rTWWWV_UW[VUVS@K@F[_V\]^WC]SG@YFKL\ADKBUDQBZWQ\U@fIBWV_\WWRTRPUS ]PSQgWPRWTU	^PoWQSU PP]VPSQU	RW
SYW	S	U	WTZSQZFDHCQ VTF_W
VQ\XG_QVB[UXF	2F^WCATW Y

	UPT 		PrU]]W_WUC
U\QBA@F[_\^W^WCWQEJYFKF^CDKBUFSHZWQVWBlIBW\]^]WPVRPUQ
WZSQmUPP]T
	U	TRoejW T WQQRWU PSV]P	P g  V TU^PQS]PUSQWS W	
	UTR[SXFF@KS T
VF]W^S\ZE_S^JYUZD:N]WAC]GyyqsY\Y{yq{IqYE|s[sWq^pHyX]WqEWEeYUUa
]^@V\^]`[zAG[ Mcv\\~j]QAjB_Bz@_jbDFxB_\x`ESH]FtcGRegFa]TeXZ^xBj Z wdY[|s{qss[ie`[qZ]Uy_VDbgVFja^ac{Atc]WqsxERx qZ]UyXc uI{Atc]WqsxBjq{qs{J~XpZbdxX}qwgcK|fwHbg{Fied]uI~XsGut}XdYagk[|s{qss[ie^[qZ]UyXwIqYE|s[sWq^|XUa{qsxZTj`FqYE|s[sWq]^Tq{qsxSK{C|a]Uyqx ]hp^yX]Wq]DR_gYtqyyqsYYwHTq{qsx\Red^ZggGj wYtqyyqsY[wtQq{qs{DU\Vh[x`eUuUFqYE|s[sWq^`ASK{qsxRzYtqyyqsY[ByX]WqY{|s\2F_WCAUE{{qqQT[{{qyAy[E~q[q_y\pJ{X__yGWGgQ]Wa_^H^\\_ h[xCGYEasWc	]C\S{jkudIYQz` Qz}|K ~_T| |ESzfLieISeTWTvY{[Gvs[sW{_vSjq{{qzQQeVJVjyMi kY~s syqsYQu	ATq{{qy~vY~s syqsYSeaQ[sY|fbS~vZY eLv^]|a @}edY~eu	~ cD|fiO}vsJ|vy
i_`Z{[Gvs[sW{_vHjq{{qy@}[{Cvc__yqxJk[Q[sYkjfRK{Cvc__yqxEhjaQ[sYV}Q|s{{qqQTz^GhayyqxEP Ty[E~q[q_y_ZFQaQ[sYk_\VSdI~_~Uy[E~q[q_y\pXVuWQ[sY~Ta i|gbR|K{Cvc__yqx Pz}Q[sYVuHBy[E~q[q_y\|ESayyq{Yvc@:F@_XS^	[TP^QP 
RVV QpLB]FB]]T
UPTPP]S	URQ	YoW	VQU	ZPVmU 
SS]PP	WZW
QQUQ
W WVRQ	SU^PQSXLDBAS
V VF]] TS\ZEUQ\@YUZD	8D\WACSQPT

WR] 	Vp^EQYH[S_^U\Z_\U_QUVS@K@F[_V\]^WC]SG@YFKL\ADKBUDQBZWQ\U@fIBWV_\WWRTRPUS ]PSQgD]YI]mgW

YQWPRUTR[SWPWSQUS ]	
UTRQ	YXFF@AY T TD]WTQ^PE_S^@[WPD:D^UKC	^Q
  
	\TWP  PUpTGSYJYRY\BY\U[VUVS@K@F[_V\]^WC]SG@YFKL\ADKBUDQBZWQ\U@fIBWV_\WWRTRPUS ]PSQgCW]E^mgW

YQWPRWS U
 P]RPU	RWTPQQWRUYSWYW		U^PQSXLDBAS
V VF]] TS\ZEUQ\@YUZD	8FB]XQV

WSTVQSVR]VT\RW
QVVxVGQ[J[ZQ^B[^UWY
UPTPP]S	URQ	YoAW_G^o
oW
QSU
RPWTZSQW	RU
SS]	SU	WTPQQZFDBAQ V VL_W TSVXG_Q\@Y_XF	8D\]CAUSTSVWRP   	\rJYPG^WS]^Q@IBFYW^\_\WKUQGB[FID^AFK@]FQ@ZUYTW@dKBU^]\UUPTPP]S	URQ	YoAW_G^o	oW
QSU
RPWTZSQW	RU
SS]	SU	WTPQQZFDBAQ V VL_W TSVXG_Q\@Y_XF	88