D]W@C	WG]TypqU{]tXjpy{ZkK|YyK|IJ`K|t{Z|r_U{ssTy^vBhs{yYi{YExypqU{sx\R ~{Z]Zi^fGhhhERtfGkgFjtbGQIFjka[~q]TypqU{]^XyY_[|J`[tz[hZwGjwy}ciYvZ~gw ~YiF]kDiIukd`^we{YExypqU{sxFjka[}Yx SJyAqYsTypq[QwtQpy{Y_RtfXVxxCi\ZPY
Z|r_U{ssTy]rDQ^cZZy|tZ|r_U{ssTy]rH{Z]ZdX	w`csK}IqUZsJ}J EID}ZqE|J]I}`yAqYsTypq[VwJIyY_[VwJIyZGy{ssTypzWhp_yY_[P]Fj`yAqYsTypq[VY{yYy[q^:E]WACVG]UyqrWz]tYjqzzZkJ|XzI}IK~aH~d{[|s\WzssUy_u@is{yXj zYEyyqrWzsx]R} zZ][R_e iwtD|_ajFYR\~EQx\y[D{zssUyqy@is{yXjH~dZXiXqYdcjvjD}tU~aidxY|fjiwd^~ i[~gg}KzCpYsUyqrYQ]dyX\YW[|s\WzssUy\qXWwU[[zFWwtE|KzCpYsUyqrYPwKTqzzZc}KzCpYsUyqrYPx[[yg `tyvvH}csK}vzJdsH|frIztsX~HzYEyyqrWzsxRz~Y|YxRz~Yq]UyqrWz^`SufY|YxGR \zYEyyqrWzsx yX\Y~Y{yVc9F_WCA	UE]W{pqTy_t[hpyyXkH~YyJ~K|J }K{CqZqTyqsYkd\XyX]Y|YaZ|s]W{pqTy_ZFQ aZ[xhdzXie
Eh{fYQ `EQJES_QY~r_TyqsW{^\XyX]Yh^vZ}ft\kYuGfZ]p ~HsI~duif{Dht~[iHsh^avVY{ZGxyqsW{pzFjjcY}Zz SK{CqZqTyqsYQtvQq{{Z	KTetCSdj|K{CqZqTyqsYQt	JTq{{Ya}K{CqZqTyqsYQ{}Z[xfbuyvwHJqJ}v{J~gqI|fsI{wq XH{ZGxyqsW{pzRzY}ZzRzY~r_TyqsW{]bSugY}ZzFR \{ZGxyqsW{pzyX]YZyxVc8E]VCAVG\W{qqUz]u[hqyzZjH~XyK}IJ|aK~ZjY~s_UzsrW{_vBisz{XizYD{{qqUzsy_P~zZ\YVzzWw[]VeHGih}J~_bjG[P\}GQy^{[GyzsrW{qzBisz{XXZj]a]kHyEdaZkH[F}w~G|q ~dzG~eyE~tfk ~Yj]}\|KyApYrW{qq[Q]e {X_[W~Y~s_UzsrW{\rZWwTY}[yDQ_C~KyApYrW{qq[Pw
IVqyzZb KyApYrW{qq[Px~Y}[z}g av{vuJ~crIvyHdrJ~fqKztr}X}JzYD{{qqUzsy Pz}[|Yy Pz}[q\W{qqUz^aQue[|YyEP ^zYD{{qqUzsy{X_[~Yz{Tc9F_UAA
PVW
WR

UQP QT 	PWrH[QE]UC
U\QBKCDZ_\^]]UCWQE@ZDJF^CGICUFSBXVQVWBfJ@V\]^WVPVQRUQ 	
WPP
QmU
QPTW

R
V	PRWpoW

RQWQRUTRPSW
PVSQU
S V	

UTRQ	RXFF@AR T UD]WTP^[E_S^@ZW[D:D_U@CP
VUPUWQR P  SpQZY\RXF]S\B^\	W]SAIBFY]]]_\WAVSFB[FIG\@FK@WDP@ZUSWUAdKBU]_]UURUPPWR	VRQ	SlVRU	QQPmU
SSWQP	VVRQ	SUPV
QRUQ 	W

WVQS	SZDFCCSTUD_UVP^ZG]S]BZWZF	9DA_XS^W
UQQVVP  VVRW
pU^UT]W]^	URUPPWR	VRQ	SlVRU	QQPmU
SSWQP	VVRQ	SUPV
QRUQ 	W

WVQS	SZDFCCSTUD_UVP^ZG]S]BZWZF	9F_UAA
QRW		TUQQ RVr][_[T_U]UR
U\PBJ@F[_\^\^WCWPEAYFKF_CDKBUGSCZWQVVBgIBW\\^VWQVRPUQWQSQmUSVSRS oWQSU
RPWUQSQV	RU
SSV	S
U	 WTPP
QZFDB@ Q VVG_W US]XG_Q\AYTXF	8E\VCAVPPWVRRT	 
SUQrQX[]Q[BQV W\S@J@GY]\\\^VAWSGAYGIF\ADJ@WDQC[USVU@gICU\_\VURTRQWS
	WQS	SmW
SV	QQQlW

RQWQRUTRP
QW
PVSQU
S V	

UTRQ	RXFF@AR T UD]WTP^[E_S^@ZW[D:D_U@CSW
SQP	UWQ W  Q	RpU_UU^UDY V^Q@IBGY\^\_\V@UQGB[GID^AFJ@VFQ@[URTW@dKCU^]\UUPTPQVS
	URQ	RoW
QU	PSQmU
SRVPQ	UTRQ	RWQWQQUQW
VVRQ	S[DG@ASU TD^UTQ^ZF]R^@[WZG	
:D^UA@

UPP 

WP
V  P	sT\WWV_UVPVU]S@K@FZ_]\]^WCVSG@YFJG\ADKCUDQBZVQWU@fIBV]_\WVRTRPUS 
VPS
QlWP
RW
TU	UPoVQSUPP
VVPS
QU	RW
RRW	R	UWUQSQZGDCCQVTF_VVQ\XG^Q]B[UXF
	9F^WCA	TW R

UPT  	PrT]VW_WUB
U\PBJ@F[_\^\^WCWPEAYFKF_CDKBUGSCZWQVVBgIBW\\^VWQVRPUQWQSQmUPQVT	U	TRoejWT VQQRWUPSWVP	Q l V TUUPQRVQUSQWS
W		UTRPSXFG@@S UVF]WUS\ZE_R^AYUZD
:E]WACVGyyqrYWY{yqzIzYE|s[rWz^pHyX\WzEWEdY^Ua
]^@]\^]k[zAGZ Fcv\\~k]ZAjB_B{@TjbDFxC_Wx`ESH\FcGRefFj]TeXQ^xBj [ |dY[|s{zss[iea[zZ]Uy_WDigVFja^jc{Atc\WzsxERy zZ]UyXb ~I{Atc\WzsxBjqzzs{J~XqZidxX}q|gcK|fvHig{Fiee]~I~XrG~t}XeYjgk[|s{zss[ie_[zZ]UyXvIzYE|s[rWz^|XUazzsxZTjaFzYE|s[rWz]^TqzzsxSKzCwa]Uyqy Vhp^yX\Wz]DR_fYqyyqrYRwHTqzzsx\Ree^QggGj vYqyyqrYPwtQqzzs{DU\WhPx`eUuTFzYE|s[rWz^`ASKzzsxRz~YqyyqrYPByX\WzY{|s\9F_WCA	UE{{pqZT[{{pyJy[E~qZqTy\pJ{Y_TyGWGgZ]Wa__C^\\_  h[xCFYEasWc]C\R{akudIRQz` Q{}|K ~^_| |ES{fGieISdT\TvY{ZG}s[sW{^vXjq{{pzZQeVJVkyFi kY~r xyqsYQt	JTq{{py~vY~r xyqsYSdaZ[sY|gbX~vZYeGv^]|` K}edY~du~ cD|giD}vsJ|wyi_`Z{ZG}s[sW{^vCjq{{pyK}[{Cvb_TyqxJk [Z[sYkkfRK{Cvb_TyqxEhkaZ[sYV }Z|s{{pqZTz^Gh`yyqxEP_y[E~qZqTy_ZFQ aZ[sYk^\]SdI~^~^y[E~qZqTy\pXVtWZ[sY~ Ta i|fbY|K{Cvb_Tyqx P{}Z[sYVtHIy[E~qZqTy\|ES`yyq{Yvb@
:F@_XR^		PTQUQP 
R VV PpGB]FB]]_
UPTPQVS
	URQ	RoW	
VQU	QPVmU
SRVPQ	WQWQQUQW
VVRQ	SUUPQRXGDBARV VF]V TS\[E^Q\@YU[D
	8D\W@C	SQPT
WR
V  	VpUEQYH[R_UU\Z_\TTQU]S@K@FZ_]\]^WCVSG@YFJG\ADKCUDQBZVQWU@fIBV]_\WVRTRPUS 
VPS
QlD]YI]llW

RQWQRUTRPSW
PVSQU
S V	

UTRQ	RXFF@AR T UD]WTP^[E_S^@ZW[D:D_U@C	UQ
  	WTWQ
  QUpTGSYKYYY\BY\TPVU]S@K@FZ_]\]^WCVSG@YFJG\ADKCUDQBZVQWU@fIBV]_\WVRTRPUS 
VPS
QlCW]E^llW

RQWQRVS U
 P
VRQU	RWTPP
QW
RURSW
RV		UUPQRXGDBARV VF]V TS\[E^Q\@YU[D
	8FB]YQ]


WSTWQSVRVVUWRW
QVVsVGQ[JZZZ^B[^UWR
UPTPQVS
	URQ	RoAW_G_ooWQSU
RPWUQSQV	RU
SSV	S
U	 WTPP
QZFDB@ Q VVG_W US]XG_Q\AYTXF	8E\VCA USTS
VVRP   	WrJYPF^WS V^Q@IBGY\^\_\V@UQGB[GID^AFJ@VFQ@[URTW@dKCU^]\UUPTPQVS
	URQ	RoAW_G_ooWQSU
RPWUQSQV	RU
SSV	S
U	 WTPP
QZFDB@ Q VVG_W US]XG_Q\AYTXF	89