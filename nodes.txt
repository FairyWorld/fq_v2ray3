D]WABWG]UxqsR{]tYkq{{ZkJ}X{L|I qO}c{Ar[sR{ss[he^^{Z][Xc\~q]UxqsR{]ZDRc\}YxGkj`^kg
Gkzd_S`GRKCQ]Q[}s]R{ssUx_^^{Z][~fd\h]dZkvUA}g|Yha|tY}fZYk]cFhfsh]x_|X{ |wh_x[E~{ssUxqx@hhc[~[xQI{Ar[sR{ss[RutSs{x[]k`DR[
\~q]UxqsR{^pDR\c\}Y{v\~q]UxqsR{^pHxX]\f[wcasMdgU|XsLYJ|[L|csE~v]Bc{Ar[sR{ss[UuJO{Z][UuJO{YEyxqsR{sxTjpY{Z][S_@hc{Ar[sR{ss[U[{{Z{[r\8F_WBAUE]V{qtUy_tZhq|yXkI~X|K~K[JfX~sZUyqsV{_sBjq{{Xly[Ez{qtUyqx^P{yX]XVzTuZ\VeMGjj|K~_gi FZP\xGRx_{[ByyqsV{qBjq{{_{^j_ckHl|etYkexF~vVZK~vk~ep}Xc|XV}vtZ[|As[sV{qt[R_d{XZ[TX~sZUyqsV{\wZTuUX}[|Dj\xAhe YS ZAQq[|s]V{qtUy\pGQ\d[[{|vx[|s]V{qtUy\pK{XZ[dYt`atJ}fwVXtK}[I[K~asF}vZE}a{Bq[tUyqsXVuMHyX]XVuMHy[Ez{qtUyqxWjw^yX]XP_Gja{Bq[tUyqsXV[|yX{Xq\:D_TAAWE^U{vsW{_wYhv{{XtJ|v |KfIHh[~t]W{qpU{Xt@hqx{_k {[Fy{vsW{q{]P| {X^[kXdEhjkDPrdEk dGhr`EQKGhmcY~s^U{vsW{_]Y{_]YhugXqsHkH`FOsH|[kX~fVh_sD|Xt|OU|u`J|X{{[Fy{vsW{q{GhmcY}[{QL{Cq[pU{vsYQuwSv{{[HhbJC~KxAq\sW{qp[QrIVqx{_c KxAq\sW{qp[Q}Y}[{}f`v{vtHvsIvxK~awI~fx{qs}XpJ{\E{{qpU{vx Pz|[}\x Pz|[~t]W{qpU{[`Qud[}\xEP ^{\E{{qpU{vx{X^[\{{Tc8C_UAAPE_U{rsU|_vYhr{|XiJ~[{K{K|bKxHu[~p]U|qqU{\tBoqy{[k|[Gy{rsU|qz]P||X_[Vd[ouvD~\`l DYP_GWz\{XEy|qqU{rxBoqy{\d_xv}hfgEyfX_KsF{vaboXb^~fd_zefY|uxYlXSb{Av[qU{rs[W_f{[][Q}[~p]U|qqU{_pZQuW[}X{DQu\E~H{Av[qU{rs[Vu	KVr{|XaH{Av[qU{rs[Vz}[}Xx}abt{uwJxKqKu{KyfuK~e{|vq}[sJ|[Gy{rsU|qzPy[z[zPy[ys_U{rsU|\bQvg[z[zGP^|[Gy{rsU|qz {[][x[yyT`?D\WAB STW	 WT

	WRPSTSWqJ[WG^U@W\R@KEFY]\\][WAWRG@\FIF]AAK@WEQBZUSVT@fLBU\^\WUSTWPWS 	WPV	SmW
SPWW	P	PPPWvmW	
QST
WPWTPSPW	SP
SSW	SU	WTPQQZFEBAQ W SF_W TV\XG_P\@\UXF8DYWCAPTVSW
 WWQP  QrQY[\TZE_S_@X^
W[QBKBE[][^]\TAPQE@[EKA^CFHBWFSBYWSQWBfKAW[]^WWPVPSW Q PPQSjUTWQSSmW

SPWRSPTPQSWP U	STWS W
	TTWQSYFFEAS T VF\WTS\ZD_S[@YUZE?FB]XP\T
 SSQUTS  VVT 
W	rUXWW_W_^WPVPSW Q PPQSjUTWQSSmW

SPWRSPTPQSWP U	STWS W
	TTWQSYFFEAS T VF\WTS\ZD_S[@YUZE?D\WABS PWT WRSQVq_[YYW]U^UTW\V@IBFX]\\_\WAWVGB[FHFYAFKAWAQ@ZTSVP@dKBT\Z\UTWTPPWSWRQSmWS UQTQmT
SSW
PPWSRQSPPW
PS UP W
WWPV	SZEFBFSTTD_T SQ^ZG\S\G[WZF8C^UAA TPS W

PPPT  QVSrRZ[[SX@RTW_Q@LBD[]_\Z\UATQGG[DKE^AFIBWFQEXWSUW@aK@W_]\PWPTPRWS	TWQSnW	PPQSQoW	
QST
WPWTPS
RW	SP
SSW	SU	WTPQQZFEBAQ W SF_W TV\XG_P\@\UXF8DYWCASQ	QQSV WWW  WQrU\WUXWFYU\QCKBA[_\_]\PCWQD@[AKF^BFLBUFRB]WQVWCfKEW\]_WWPWPWUP WPQQmTSWSSRmW
STU
SWWTPQQWRTSSWS WPTPQS]FDBAS V WFXW TR\Z@_Q\@XUZA	8D]WAF	WP
S	

WS
PSuV_UWU]UPST
W^Q@HBF\]^\^\WAUQGC[FLD^AFKEWFQAZPSTW@eKBP^]\TPPTPPWSUSQSoWP	PTV
WVPmP

SSWPPUTSQSWPW
TQTT W
WSRQSZAF@AST TE_PTQ_ZGXS^@[VZF:D^TAATTQ
	
WP
VPrR_UU_TUDW\V@IBFX]\\_\WAWVGB[FHFYAFKAWAQ@ZTSVP@dKBT\Z\UTWTPPWSWRQSmWPWUVWTPmeiWVPSQPWWPSQUSWo T W WVPRTUWW
SSWS	TWTPSPZFABCP STF_W VQ\YG_T\B[UYF8F_WBAUEz{qt[T[{{q|Ky[Eq[tUy\pK{XZUyGWGb[]Wa	_^B^\]_h[yCG\Eav_^~m_YCjA]B}BWhbGDxE]Tz`FQHZD|cDPe`Di ^VeZR\xAh ]fYX~syyqsXkegYyX]V{_QFjeVEha \ia{BvcZUyqxFPyX]V{Xd}K{BvcZUyqxAhq|yq{I|XwXjfx[qecH~fpJje{Ekec_}K |XtE}vXc[iekX~syyqsXkeYYyX]V{XpKy[Eq[tUy\|[Wa|yqxYVjgDy[Eq[tUy_]Vq|yqxQK|Atc]V{qUjp]{XZUy_GP_`[|sz{qt[QuKVq|yqx_Pec\RegDh p[|sz{qt[SutSq|yq{GW\QjSz`fWuRDy[Eq[tUy\`BQK|yqxPzx[|sz{qt[S A{XZUy[{q\:D_TAAWEy{vsYV[x{v{I{[F|q\sW{\sH{_]W{GTGeY_Wb
_Y@\_^_jXzC@[ GapU a]@^TybkvfKQSzcQ}~K~X\~ GS}dDkeKSbV_VvZ{\E~q[pU{Xt[hqx{vxYSeUHVm{Ek h[~t{{qp[QrIVqx{v{ |v|[~t{{qp[SbcY}[p[|a`[|vY[gD}v]_|fHeg[~bw| `F|akGvpH|q{k_cX{\E~q[pU{Xt@hqx{v{H[xAvd]W{q{HkYY}[p[kmd PKxAvd]W{q{GhmcY}[p[VY~sy{vsYVz]Ehf{{q{GP\{[F|q\sW{_YDQcY}[p[kX^^QgK~X|]{[F|q\sW{\sZVrUY}[p[~Vc k|``Z~KxAvd]W{q{P}Y}[p[VrJJ{[F|q\sW{\GSf{{qx[vdB	8FC]XT\
S VW VSS
PVU VrD@]E@]_\WPWPWUP WPQQmTTSWRPUmW
STU
SWWRTSSWS WPTPQSWVPRTZDFBBTTTF_U WQ\]G]S\C[U]F	8G^WFA
PSPV

TPUVrVGQZJ[T]VW\Y]\RWS
W^Q@HBF\]^\^\WAUQGC[FLD^AFKEWFQAZPSTW@eKBP^]\TPPTPPWSUSQSoF]ZK]joW	
QST
WPWTPSPW	SP
SSW	SU	WTPQQZFEBAQ W SF_W TV\XG_P\@\UXF8DYWCAVS
TV WW	  WWrTDQYM[Z[\A[\RST
W^Q@HBF\]^\^\WAUQGC[FLD^AFKEWFQAZPSTW@eKBP^]\TPPTPPWSUSQSoAW^G^joW	
QST
WPP

S
 W
PUPWWP WWPV	STPW
QSWQ P
WVPRTZDFBBTTTF_U WQ\]G]S\C[U]F	8E@]_S^
WPTQRQVPU VSTPW	SVTpTGRYJ\XY\BX\UUQWPWPWUP WPQQmAT]GYmmT
SSW
PPWSRQSPPW
PS UP W
WWPV	SZEFBFSTTD_T SQ^ZG\S\G[WZF8C^UAA WSWS
	TPP
S   TrI[P@\USU\QCKBA[_\_]\PCWQD@[AKF^BFLBUFRB]WQVWCfKEW\]_WWPWPWUP WPQQmAT]GYmmT
SSW
PPWSRQSPPW
PS UP W
WWPV	SZEFBFSTTD_T SQ^ZG\S\G[WZF8?