D]WACWG]Uyts^{]tYjt{{ZkJ|]{@|I ~N
}s{As^s^{ss[i`^R{Z][~]cP~q]Uyts^{]ZDScP}Yx[j`UV]Aj`ShcYjpC~]^Tt{JqYsUytsPSgc[^{kJ^[~`kIi]U~dc}scMk]cJ~dA|ZU}s{
wwscP~q]Uyts^{]^Tt{{^VHy^Er{ssUytxNkh`]y]]P~`DUd
P~q]Uyts^{^pDSYcP}Y{~sP~q]Uyts^{^pHy]]Pf[wbdsAJsU}]s@YE~N@}csJs]Cc{As^s^{ss[TpJC{Z][TpJC{YEyyts^{sxUopU{Z][RZLhc{As^s^{ss[T^{{Z{[sY8F_WCDUE]W~qxUy_t[mqpyXwHyq~KzKJ}vsY{sVUyqsW~_Bjq{~X`y[E{~qxUyqx_UwyX]YU_ojutF{_ki F[U\tGRx^~[NyyqsW~qsBjq{~XoX~X|Xyu`|fd[xfhF~vp\xaZjXh\{ft}fmvZ~uGzqpAs[sW~qx[R_d ~XV[TY{sVUyqsW~\{ZTuUYx[pDT dXUzk]|K{Ct[xUyqsYTu KTq{~Xh}K{Ct[xUyqsYTzt[[xcktyvwHyaxK}v{I{fx|f{~v|XH~[NyyqsW~qsRzYx[sRzY{sVUyqsW~\kSugYx[sGR \~[NyyqsW~qs yX]Yz[pyVc=DTWCAWN]W{qqP{Tt[hqy{SwH|q|@|qOSY~s_P{zsW{_vGhz{{Xi{PE{{qqP{zx_P~{S]YV f^h~tF~_b\PWEP_f{PE{{qqP{zx@hqy{T{I|f}kmc~fb]}mD|v[M}jkHv]~mx[|uy@|Cg|vak@{Cq[qP{zsYP_f{S]YV}^~x]W{qqP{WpXVuW^}P{FhjX@knJSe	B~@{Cq[qP{zsYQu	NVz{{Xa@{Cq[qP{zsYQz}^}Pxfbq{}wH|KqN}{I~fq~m{{vu}SH{[G|{zsW{qzPqY}[zPqY~s_P{zsW{\bQ~gY}[zBP\{[G|{zsW{qz{S]Y[y|Th8D]RAJWGXUpqqU{]qYcqy{ZnJuXyK|IwaH|c~Az[qU{sv[`e\Y{ZX[wXa[~qXUpqqU{]_DZa[}Y}cezYkgGczfXSeGZKDQ]T[us_U{svUp_\Y{ZX[wX~[|gzEvu}FwfH`a |g}XuezYkJvFtXf^kJrKt e}d}Zp[Gy{svUpqzGhhf[v[zQI~Az[qU{sv[ZuvSs~p[	_kg[KuKyAqYvUpqq[QwK]qy{ZftKyAqYvUpqq[Qxz[v[z}f etpvuJIvKtvyK~dvufy{trvX}J{Y@ypqqU{s}[z}[}Y}[z}[~qXUpqqU{^eZue[}Y}G[ ^{Y@ypqqU{s} pX_[Y~y_c8F[WJA
TT\
WS

UU[ QT		T\rH[PEY^C
WWQBKBD^]W^]\UA\QE@[DNM^CFIGWFSBXRS]WBfK@RW]^WRPVPRWQ 	\PQSfU
Q[TWP
W[RWqo\

VSWPP UTRT SWPW
XQUX R
W_RQ	VZMF@AVT TD_\TQ^_GTS^@[W_F :D^UDAPVQPU
WPV[ 
SrZZY\SXB_X\B_\W\SEKIFY]\Y]WWAWSB@PFIF\DMK@WDTBZUSVUEf@BU\_YWURQ[PWV 	WPZ	SmRSW	QQTfU
 XSW
UP	WVPZ	SU  PR
QSW Q 	\
WVPSXZDFBCXTQF_U VT\QG]S\B^UQF	8DE]SS^STSZRTP ]VS
\
pU_UP_\]^URQ[PWV 	WPZ	SmRSW	QQTfU
 XSW
UP	WVPZ	SU  PR
QSW Q 	\
WVPSXZDFBCXTQF_U VT\QG]S\B^UQF	8F[WJA
QP\	_UU Q	 V]r][^[P]^]US

U\QBNBM[_\^X\\CWQEE[MKF^CF@BUFSGQWQVWBcKIW\]^RWPVP[UQ WUQQmU SRSSSmW
SXU
R[WTUQQWRUSSRSW 	\TPQSQFDBAS V VCTW TSYZL_Q\@YPZM	8D\RAJT[PW
 WRP_		SQSyQX[\Q_@QV\\S@K@C[V\\]^RJWSG@YCKF\ADNB\DQB_WXVU@fIGW\_\WWRTRU\S WPSXmWSWZQQh\

VSWPP UTRTQWPW
XQUX R
W_RQ	VZMF@AVT TD_\TQ^_GTS^@[W_F :D^UDASVQZP
	QWP\ 
P	Vr^_UU_UFRR\Z@IBFYX\\_\WDWZGB[FI
FUAFK@RMQ@ZUVV\@dKBU
\V\UU [TPPRS	WRQ	VmWSU	TXQmUSSR
PP	W_RQ	V\UW
QSUQ WWVPZ	SZDCBJSQTD_U _Q^ZG]V\K[WZF	8O^UAA


UPT

\P
W  P	rTXU\V_UWTTUYQKK@F[_YW]^WCRQL@YFKC^JDKBU
FZBZWQSWKfIBWY]WWWP_RPUX RPSQh\PPWT
 U	Q[oW
QSU[PRTPSQW	R\
SVW	SU WTUQQZFDGAQ V _F_WTZ\XG_QY@PUXF	=DUWCA_W V
W[T [rU]RUTWUC

U\QBNBM[_\^X\\CWQEE[MKF^CF@BUFSGQWQVWBcKIW\]^RWPVP[UQ WUQQmU[PRT
	W	TRmnjWV WSZRWU[SVRP	P h 	  VTUQ[QSRPWSQ\S W	

UTRT SXFF@D
S TTM]WQQWZE_S^E[^ZD:A_\ACRE	yyqsYS[pyq{I~[N|s[sW~\{HyX]W~G\EeYZWj
]^@YW^]oPzAG[ Ba}\\~j]^CaB_Bz@PhiDFxB_SzkESH]F{hGRegFn ]TeXU\sBj Z xfR[|s{~qx[ie`[~XVUy_VDme]Fja^napAtc]W~qsERx ~XVUyXc zKpAtc]W~qsBjq{~qpJ~XpZmfsX}qxehK|fwHmepFied]zK	~XsGzvt}XdYne`[|s{~qx[ie^[~XVUyXwI~[N|s[sW~\wXUa{~qsZTj`F~[N|s[sW~_^Tq{~qsSK{CscVUyqx Rj{^yX]W~_DR_gY{s	yyqsYVu HTq{~qs\Red^UelGj wY{s	yyqsYTuQq{~qpDU\VhTzkeUuUF~[N|s[sW~\kASK{~qsRzY{s	yyqsYT ByX]W~[p|s\=DTWCAWN{{qq^VP{{qyN{PE~q[qP{WpJ{X_P{LWGg^_\a_^G\\\_ j[xCGYGjsWcVC\S{e`udIVSq` Qz}~@ ~_[~|ESzfCknISeTXV}Y{[GyqPsW{_v\hz{{qz^SnVJVjyBkkY~s |{zsYQu	NVz{{qy|}Y~s |{zsYSea^}PsY|fb\|}ZY eC}}^]|a OndY~eu|cD|fi@}sJ|vykT`Z{[GyqPsW{_vGhz{{qyOP{Cvc_P{zxJk[^}PsYkjfP@{Cvc_P{zxEhja^}PsYV}^~x{{qq^Vq^Ghay{zxEP [{PE~q[qP{TZFQa^}PsYk_\YQ
dI~_~Z{PE~q[qP{WpXVuW^}PsY~Tci|gb]~@{Cvc_P{zx Pz}^}PsYVuHM{PE~q[qP{W|ESay{z{Yvc@8M@_XS^	T T	PQSP 
R]V QpC@VFB]][U [TPPRS	WRQ	VmW	VS U	U[VmUSSR
PP	\UW
QSUQ WWVPZ	SUQ[QSXCFIAST VF]RTS\ZEZSW@YUZD3D\WACSQPV	

WRR 	VpQGZYH[S_QWWZ_\UPSUYQKK@F[_YW]^WCRQL@YFKC^JDKBU
FZBZWQSWKfIBWY]WWWP_RPUX RPSQhFVYI]mh\

VSWPP UTRT SWPW
XQUX R
W_RQ	VZMF@AVT TD_\TQ^_GTS^@[W_F :D^UDA	QS  
	SVWP	 
PUr_GSYJY][WBY\UTTUYQKK@F[_YW]^WCRQL@YFKC^JDKBU
FZBZWQSWKfIBWY]WWWP_RPUX RPSQhA\]E^mh\

VSWPP W
X U  PRRPW	R\TPQSWPUVXWV W	
	UQ[QSXCFIAST VF]RTS\ZEZSW@YUZD3FB]XQY
 \STVQSVRR VTSP\
QVVwTLQ[J[Z^\I[^UWVU [TPPRS	WRQ	VmJW_G^omW
SXU
R[WTUQQWRUSSRSW 	\TPQSQFDBAS V VCTW TSYZL_Q\@YPZM	8D\RAJWXTST	WR
P 	 	SyJYPG^UXR\Z@IBFYX\\_\WDWZGB[FI
FUAFK@RMQ@ZUVV\@dKBU
\V\UU [TPPRS	WRQ	VmJW_G^omW
SXU
R[WTUQQWRUSSRSW 	\TPQSQFDBAS V VCTW TSYZL_Q\@YPZM	88