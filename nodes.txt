D]WACWG]UyzsT{]tYjz{{ZwJ~z|IJ}}QFdwyPEx{ssUyzx[Sgc[P{|s{AsPsT{ss[Q~IVs{yW`JVh`]jWd@P]dHS@XVg|@j~I~]Kj@{@qYsUyzsZSgc[P{D|ZdY~mwhY}~d[~dcjnkGkd`X}PKkZV_}p^kdU~T{Z~q]UyzsT{]^Tz{{^VHyPEx{ssUyzxDkh`]yS]Z~t_jTtCQY
[|x]T{ssUyWpEQ^c[P{|t[|x]T{ssUyWpI{Z][dRv`csJ}mwTZsK}PD}cK}@sDZ]E}j{@qYsUyzsZVwJHyS]ZVwJHyPEx{ssUyzxWhp^yS]ZP]Gjj{@qYsUyzsZVY{yS{Zq^:O_VAC\E\UyqsWp_uYjq{pXvJ~q wKJ}vcEwXr[|s]WpqrUy_t@cqzyXk p[DyyqsWpqy]R| pX\[R_d cuuD|_`` GYR\E[y\y[E{pqrUyqx@cqzy_kGcuzjfsufTH~ekDwufE~[cf_[|fYvvrjX^Y`fjE~K{Cz[rUyqsY[_eyX]Y]~[|s]WpqrUy\pX]uT[[{F`_
DQK
Yus\UyqsWp\qDS\cYv[z~vYus\UyqsWp\qHyX]YmY
wbasHtffU}XsIt[EaItKrE}X]GtazAs[sWpqr[TuJJpX\[TuJJp[DyyqsWpqyUjp\pX\[R_EcazAs[sWpqr[T[{pXz[s\3D^WCAWD]W{qq^{^t[hqy{YwH|q	|JHv[LgcG{[Gr{psW{qzQSdcY}[y|p{Cq[q^{psYSu	CVp{{_zUP^dP HUP^|\~_bRP]EP_f	{ZE{{qq^{px@hqy{YQ uzQkhX~evRkcD|vXTkZh_jT~gs|uu
IgGXXPhZ{Cq[q^{psYP_f	{Y]YV}P~r]W{qq^{]pXVuWP}Z{Fk vLkdEF{[Gr{psW{qzNP x {X_P|wcJ{[Gr{psW{qzNQJ{{Yi`vgWf}N{w{GXyMwYDX}^w{vuP~r]W{qq^{]`CQKy{]`CQKyJqZsW{qqPV{^Ghay{^FP_eP~r]W{qq^{]kY}[y@{TB	8D]\A@WGVUzqqU{]Yiqy{Z|J}q|IJ~vaGdhz[Gy{sxUzqzZSgh[|[y |spAp[qU{sx[Ru	HVspz\T^k]kZQKYVgw@iuH~] KiKyAqYxUzqq[Sgh[|[yK|w|~Xe s	}_y~dh ifWF}glH~K }tpjHukZUXjf[[~qVUzqqU{]^Wqy{^]Hz[Gy{sxUzqzEkhk]zX_[~DWekgUGKyAqYxUzqq[Qw KWqy{Zh~KyAqYxUzqq[Qxt[|[z}f ktzvuJIxK~vyK~dxfyH{txK|XqJ{YNyzqqU{ssQz}[}YsQz}[~qVUzqqU{^kPue[}YsGQ ^{YNyzqqU{ss zX_[YpyUc8FUW@A
ZTV
WS

U[Q QT	ZVrH[PEWTC
W]QBKBDP]]^]\UAVQE@[D@G^CFIIWFSBX\SWWBfK@\]]^W\PVPRWQ 	 VPQ SlU
QQTW P
WQRWqoV

XSWPP
UTRZ
SW PW
RQU R \
WURQ	XZGF@AXT TD_VTQ^QG^S^@[WQF
:D^UJA	PV_PU
WPXQ 	 SrPZY\SXL_R\B_\W\SKKCFY]\W]]WAWSL@ZFIF\JGK@WDZBZUSVUKfJBU\_WWUR_QPWX 	WPP	Sm\SW	QQZlU
RSW
[P	WVPP	SU
P\
QSW
Q 	V
 WVPSRZDFBCRT_F_U VZ\[G]S\BPU[F	8DK]YS^]TSP\TP 
WVS
V
pU_U^_V]^UR_QPWX 	WPP	Sm\SW	QQZlU
RSW
[P	WVPP	SU
P\
QSW
Q 	V
 WVPSRZDFBCRT_F_U VZ\[G]S\BPU[F	8FUW@A
Q	PV	UU[
Q XWr][^[^]T]US
 U\QB@BG[_\^V\VCWQEK[GKF^CFJBUFSI[WQVWBmKCW\]^\WPVPQUQ
W[QQmU
S\SSS
mW
SRU
RQWT[QQWRUSS\SW
	
VTPQ S[FDBA
S V VM^W TSWZF_Q\@Y^ZG	8D\\A@TQPW

WRPU		S_SsQX[\QQ@QV
V\S@K@M[\\\]^\@WSG@YMKF\AD@BVDQBQWRVU@fIIW\_\WWRTR[VS  WPSRmW SWPQQfV

XSWPP
UTRZQW PW
RQU R \
WURQ	XZGF@AXT TD_VTQ^QG^S^@[WQF
:D^UJA	SV QPP
	_WPV 	 P	XrT_UU_UFX\\P@IBFYV\\_\WJWPGB[FIF_AFK@\GQ@ZUXVV@dKBU\\\UUQTPP\S	WRQ	XmWSU	ZRQmUSS\
PP	WURQ	XV[W
QSUQ
WWVPP	SZDMB@S_TD_U UQ^ZG]X\A[WZF	 8E^UAA
 
UPZ

VP
W
 
P	rTVUVV_UWZT	UWQAK@F[_W]]^WC\QF@YFKM^@DKBUFPBZWQ]WAfIBWW]]WWPURPUR \PSQfVP PWT

U	_QoW
QSUQP\TPSQW	RV
SXW	SU
WT[QQZFDIAQ V UF_WTP\XG_QW@ZUXF	3D_WCAUW X
WQT QrU]\U^WUC
 U\QB@BG[_\^V\VCWQEK[GKF^CFJBUFSI[WQVWBmKCW\]^\WPVPQUQ
W[QQmUQP\T
	W	TRmdjWV WSPRWUQSV\P	P f   VTU_QQS\PWSQVS  W	
 UTRZ
SXFF@J S TTG]W_Q]ZE_S^K[TZD:O_VAC\EyyqsY][zyq{Ip[D|s[sWp\qHyX]WpGVEeYTW`
]^@W]^]aZzAG[ Law\\~j]PCkB_Bz@^hcDFxB_]zaESH]FubGRegF` ]TeX[\yBj Z vfX[|s{pqr[ie`[pX\Uy_VDceWFja^`azAtc]WpqyERx pX\UyXc tKzAtc]WpqyBjq{pqzJ~XpZcfyX}qvebK|fwHcezFied]tK~XsGtv~}XdY`ej[|s{pqr[ie^[pX\UyXwIp[D|s[sWp\}XUa{pqyZTj`Fp[D|s[sWp_^Tq{pqySK{C}c\Uyqx \jq^yX]Wp_DR_gYusyyqsYXu
HTq{pqy\Red^[efGj wYusyyqsYZuuQq{pqzDU\VhZzaeUuUFp[D|s[sWp\aASK{pqyRzYusyyqsYZ ByX]Wp[z|s\3D^WCAWD{{qqPVZ{{qy@{ZE~q[q^{]pJ{X_^{FWGgP_Va_^I\\\_ 
j[xCGY	G`sWc\C\S{kjudIXS{` Qz}~J ~_U~|ESzfMkdISeTVVwY{[GwqZsW{_vRhp{{qzPSdVJVjyLkkY~s r{psYQu	@Vp{{qy	|wY~s r{psYSeaP}ZsY|fbR|wZY eM}w^]|a AddY~eu|cD|fiNwsJ|vyk^`Z{[GwqZsW{_vIhp{{qyAZ{Cvc_^{pxJk[P}ZsYkjf	PJ{Cvc_^{pxEhjaP}ZsYV}P~r{{qqPV{^Ghay{pxEP U{ZE~q[q^{^ZFQaP}ZsYk_\WQ dI~_~T{ZE~q[q^{]pXVuWP}ZsY~Tci|gbS~J{Cvc_^{px Pz}P}ZsYVuHC{ZE~q[q^{]|ESay{p{Yvc@ 8G@_XS^	Z
TP_SP 
R
WV QpM@\FB]]UUQTPP\S	WRQ	XmW	VS
U	[QVmUSS\
PP	V[W
QSUQ
WWVPP	SU_QQSXMFCAST VF]\TS\ZETS]@YUZD 9D\WACSQPV

WR\ 
	Vp_GPYH[S__W]Z_\U^S	UWQAK@F[_W]]^WC\QF@YFKM^@DKBUFPBZWQ]WAfIBWW]]WWPURPUR \PSQfF\YI]mfV

XSWPP
UTRZ
SW PW
RQU R \
WURQ	XZGF@AXT TD_VTQ^QG^S^@[WQF
:D^UJA		_S  
	]VWP  	 PUrUGSYJYS[]BY\UZT	UWQAK@F[_W]]^WC\QF@YFKM^@DKBUFPBZWQ]WAfIBWW]]WWPURPUR \PSQfAV]E^mfV

XSWPP
W
R U P\RPW	R	VTPQ SWPUXRWX W	
	U_QQSXMFCAST VF]\TS\ZETS]@YUZD 9FB]XQW
VSTVQSVR\ VT]PV
QVVyTFQ[J[ZP\C[^UWXUQTPP\S	WRQ	Xm@W_G^omW
SRU
RQWT[QQWRUSS\SW
	
VTPQ S[FDBA
S V VM^W TSWZF_Q\@Y^ZG	8D\\A@
WRTS TWR
P 	 	]sJYPG^UR\\P@IBFYV\\_\WJWPGB[FIF_AFK@\GQ@ZUXVV@dKBU\\\UUQTPP\S	WRQ	Xm@W_G^omW
SRU
RQWT[QQWRUSS\SW
	
VTPQ S[FDBA
S V VM^W TSWZF_Q\@Y^ZG	88