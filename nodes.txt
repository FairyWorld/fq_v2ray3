D]WABWG]UxrsW{]tYkr{{ZwJr |I|XIs{ArXsW{ss[hf^[{Z][[cY~q]UxrsW{]ZDRcY}YxR_d SwhSv\QGkydZS`GRHFQ]Q[}p]W{ssUx\^[{Z][|fkggJ|e{Dhdwr |t`[}f{HdsFKh[k]h_heV]k]g xXE{{ssUxrxEhhc[~XxQI{ArXsW{ss[Rvt Ss{xXZPJAkf| P{DxXE{{ssUxrxGPxx[]Y|tcHxXE{{ssUxrxGQI{xZ``ugU|ewH{t{E|[{DdwF|[sWZ|uwY~q]UxrsW{^`ARH{{^`ARH{CqYsUxrsYVx^Ekb{{]DS\gY~q]UxrsW{^k[~X{I{WB;G_UACTE_UyqsVx_vYjq{xXiJ|X{HKJ}[~ayAs[sVxqq[ie^ZxX_[~XcX}s_UyqsVx_XDScX~[zGjj`ZheGjzd[P bGSKGR_S[|s]VxqqUy_^ZxX_[~_ck_u~e{EXaj[~fa |exY|veF}ux[|ffYug|ffXy[EzxqqUyqxDkja[[xRKyAs[sVxqq[SutPqyy[YRzrAijdKka[|s]VxqqUy\pGR\a[[{v}[|s]VxqqUy\pKxX_[dYtcaqJ}fgV|XqK}[I|a K}qsH|H_E}a{Br[qUyqsXUuHHyX]XUuHHy[EzxqqUyqxTjr^yX]XS_	Gja{Br[qUyqsXU[yyX{Xr\ :D_TBA
WE^V{ssW{_wZhs{{XtI|s |K|IH|HxX~q]W{qpV{]t@hqx{Zk {[Fz{ssW{q{^P| {X^XVdYhuwG~]`k EZP^EP{_{YE{{qpV{sx@hqx{ZQGkX{X|x\~ek[]cD|vxIhY}fpF~g`X}edh]{HhX{[|I{Cq[pV{ssYP_g{Z]YV|X~q]W{qpV{^pXVuVX}Y{FSe FPx ke[hc
Y~s^V{ssW{\sGQ^cY}[x|tY~s^V{ssW{\sK{Z]YfYt`csHf|VZsI[IcIqpHJ]GaxBqYsW{qpXVwJJ{X^XVwJJ{[Fz{ssW{q{Whp\{X^XP]EhaxBqYsW{qpXVY{{XxXq^8D\TACWF^UyqqU{\wYjqy{[hJ|XyK|H~qK[t[|s_U{rpUy_vBhrxyXi{XFyyqqU{r{]R~{[^[i_fGhikDRufGkdGjubGQHGjja[~p^UyqqU{\]YyX_[k\c_~fS }fhFjuaEbjuuJ~eVJiXiF|vXubX|vY}v~^{XFyyqqU{r{Gjja[}X{SKyAqXpUyqq[QvwQqy{XDi ~ZQ]DR[[~p^UyqqU{_sDS\a[}Xx~v}[~p^UyqqU{_sHyX_[fZwbaqJKpU}XqKXJ}a KrpK}H_EbxAs[qU{rp[TuHH{[^[TuHH{XFyyqqU{r{Ujr^{[^[R_	GhbxAs[qU{rp[T[y{[x[s\ 8G]WCA
RTU
WS	

TSR QT RUrH[PD_WC
W^QBKBEX]^^]\TAUQE@[EHD^CFHAWFSBYTSTWBfKAT^]^WTPVPSWQ UPQSoU
PRTWP
WRRWqnU

PSWPP	UTSR	SWPW
QQTQ T
WVRQPZDF@APT TE_UTQ_YG]S^@[VYF	:D^TBA
PWWPU
		WPPRRrSZY\SYD_Q\B_]W\RCK@FY]\_]^WAWRD@YFIF]BDK@WERBZUSVTCfIBU\^_WUSWRPWP 	WPS	SmTSW	QPRoU
	QSW
SP	WWPS	ST	PT
QSW	Q  U
WVPRQZDFBBQTWF_U WR\XG]S\CXUXF	8EC]ZS^UT SSTTP TVS
U
pU_TV_U]^USWRPWP 	WPS	SmTSW	QPRoU
	QSW
SP	WWPS	ST	PT
QSW	Q  U
WVPRQZDFBBQTWF_U WR\XG]S\CXUXF	8G]WCA
PPU		VTS	Q  PTr][^ZV]W]USU\QCHBD[_\_^\UCWQDC[DKF^BFIBUFRAXWQVWCeK@W\]_TWPWPRUP	WSQQmT	STSSRmW
SQU
SRWTSQQWRTSSTS W	UTPQSXFDBAS V WE]W TR_ZE_Q\@XVZD	8D]TACTRPW		
	WSPV	 RWSpQX[\PY@QVU\S@KAE[_\\]_TCWSG@XEKF\AEHBUDQBYWQVU@fHAW\_\WWRTSSUS WPRQmWSWSQQ nU

PSWPP	UTSRQWPW
QQTQ T
WVRQPZDF@APT TE_UTQ_YG]S^@[VYF	:D^TBA
SVQSP
WWP	UPPrW_UU_TF[T\S@IBFX^\\_\WBWSGB[FHF\AFKATDQ@ZTPVU@dKBT\_\UTRTPPTSWRQPmWSURQQmT	SST
PPWVRQPUSW
PSUP	W	WWPS	SZEEBCSWTD_T VQ^ZG\P\B[WZF8F^UAA
UP	R

 UP
W 	P	rU^UUV_UWRT
T_QBK@F[^_^]^WBTQE@YFKE^CDKBTFSBZWPUWBfIBW_]^WWPVRPTQ TPSPnUPPWU
	UWRoW	
QST	RPTTPSPW	SU
SPW	SU	 	WTSQQZFEAAQ W VF_WTS\XG_P_@YUXF;D\WCAVW  P
  WRU  RrU\TU]WUCU\QCHBD[_\_^\UCWQDC[DKF^BFIBUFRAXWQVWCeK@W\]_TWPWPRUP	WSQQmTRPTT
W	TSmgjW	V WSSRWT	RSVTP	Pn    WTTWRQSTPWSPUS W	
 UTSR	SXFFABS TTD]WWQ^ZE_S_C[WZD;G_UACTE yyqsXU[yyq{Hx[G|s[sVx\rHyX]VxGUEeX\Wc
]^A_^^]iYzAG[Dat\\~j\XChB_BzAVh`DFxB^UzbESH]G}aGRegGh ]TeYS\zBj Z~f[[|szxqq[ie`ZxX_Uy_VEkeTFja_hayAtc]VxqzERxxX_UyXc|KyAtc]VxqzBjq{xqyJ~Xp[kfzX}q~eaK|fwIkeyFied\|K ~XsF|v}}XdXhei[|szxqq[ie^ZxX_UyXwHx[G|s[sVx\~XUa{xqzZTj`Gx[G|s[sVx_^Tq{xqzSK{Buc_UyqxTjr^yX]Vx_DR_gX}s yyqsXPu	HTq{xqz\Red_SeeGj wX}s yyqsXRuvQq{xqyDU\ViRzbeUuUGx[G|s[sVx\bASK{xqzRzX}s yyqsXR ByX]Vx[y|s\;D]WCAWG{{qpXVY{{qxH{YE~q[pV{^pJ{X^V{EWGfX_Ua_^A\\\_j[xCGXGcsWb _C\SzciudHPSx` Qz|~I ~_ ]~|ESzgEkgISeU^VtY{[FqYsW{_wZhs{{q{XSgVJVjxDkkY~sz{ssYQuHVs{{qx|tY~sz{ssYSe`X}YsY|fcZ|tZY dE}t^]|aIgdY~et |cD|fhFtsJ|vxk]`Z{[FqYsW{_wAhs{{qxIY{Cvc^V{sxJkZX}YsYkjgPI{Cvc^V{sxEhj`X}YsYV|X~q{{qpXVx^Ghax{sxEP ]{YE~q[pV{]ZFQ`X}YsYk_]_QdI~_\{YE~q[pV{^pXVuVX}YsY~Uci|gc[~I{Cvc^V{sx Pz|X}YsYVuIK{YE~q[pV{^|ESax{s{YvcA8D@_XS_	R	U PWSP 
STV QqE@_FB]\]TRTPPTSWRQPmW	WS	USRVmT	SST
PPUSW
PSUP	W	WWPS	STWRQSYEF@AST VF\TTS\ZD\S^@YUZE:D\WABSQPV 

WRT	VqWGSYH[S^WW^Z_\UVS
T_QBK@F[^_^]^WBTQE@YFKE^CDKBTFSBZWPUWBfIBW_]^WWPVRPTQ TPSPnF_YI]m nU

PSWPP	UTSR	SWPW
QQTQ T
WVRQPZDF@APT TE_UTQ_YG]S^@[VYF	:D^TBA
WS  
UVWP PTrVGSYJX[[^BY\URT
T_QBK@F[^_^]^WBTQE@YFKE^CDKBTFSBZWPUWBfIBW_]^WWPVRPTQ TPSPnAU]E^mnU

PSWPP	W	
Q T PTRPW	SUTPQSWPU	PQWP W
	TWRQSYEF@AST VF\TTS\ZD\S^@YUZE:FB]XP_
USTVQSVST VTUPU
QVWqTEQ[J[[X\@[^UVPTRTPPTSWRQPmCW_G^nmW
SQU
SRWTSQQWRTSSTS W	UTPQSXFDBAS V WE]W TR_ZE_Q\@XVZD	8D]TACWQTS	T WS
P   UpJYPG_UQT\S@IBFX^\\_\WBWSGB[FHF\AFKATDQ@ZTPVU@dKBT\_\UTRTPPTSWRQPmCW_G^n mW
SQU
SRWTSQQWRTSSTS W	UTPQSXFDBAS V WE]W TR_ZE_Q\@XVZD	88