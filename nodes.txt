D]WACWG]Uy{pP{]tYj{x{ZkJ|RxN|I{OtY[|y^P{ssUyUwGhs{yRh{YEyy{pP{sx]R{Z][T
g^hwtD|UckFYRV|BPx\yQF|{ssUy{{Ghs{yRU_|tYj|~dQK}BVC|wc ~A ^Z|ot@|gt[i
|NkwKjQxDqYsUy{p^P]dyR^^V[|y^P{ssUyVs_VwU[QxAQ]tEQo`A{YEyy{pP{sxER{{Z][~|`M{YEyy{pP{sxESAx{[bb}dPdwHy|x@Z{F}|VCdQU}|pJw[|y^P{ssUyVcDQI{yVcDQI{AsQpP{ss[Tp]@hc{yUAP]g[|y^P{ssUyVh^}Y{Ky_A8F_WCKUE]WqrvUy_t[br~yXwHvr~KwbJ}vsYtpXUyqsWq\qBjq{q[ny[E{qrvUyqx_ZyyX]Ya\aGjjhFZvaGi gEbveGSKEbif[|s]WqrvUy_^[q[X[iXYu[b~XwDaKTK~a wuz|e{vKnFiXdZb[rHie|ZaK_[y[E{qrvUyqxEbif[[x[H~As[sWqrv[Sut Yr~y[\ai}AUa
YtpXUyqsWq_uDS\cYwX~~vYtpXUyqsWq_uHyX]YlZwbasHuKvU}XsIuXEqHvHvE}v]Jub~As[sWqrv[TuJJq[X[TuJJqX@yyqsWqr}Ujp\q[X[R_Ebb~As[sWqrv[T[{q[~[s\2GZWCAT@]W{qq_xZt[hqyx]kH~XyANI|q@]sY~s__xtsW{_vHkt{{Xix^E{{qq_xtx_P~x]]YV fQkptF~_bSSYEP_fx^E{{qq_xtx@hqyx]IviO]Y~fS	|MkD|u~R|NhXa}cc|_iAkpkkXuhd{Cq[q_xtsYP_fx]]YV}Q}v]W{qq_xYpXVuWQ~^{FheOPox\~KyKr^sW{qqQRpIVqyx]c KyKr^sW{qqQRY}[zwe`v{vu@NsIvyA}cs~fuxssG}X}@x^E{{qq_xtx Pz}Q~^x Pz}Q}v]W{qq_xY`QueQ~^xEP Tx^E{{qq_xtx{X_Q|^{{Tc;A_UAA
RE_U{syV~_vYhsq~XiJ~ZqHyKszqyAqYyV~qq[kgTZ~X_[|ZiX{s_U{syV~_XDQiXx[zGhhjZneGhxn[V bGQIGT_S[~qWV~qqU{]TZ~X_[d}xu}giEzHakYxuaH~dP]mfWFJ[zfz[|]}yXi{YOz~qqU{srDmja[}YrTKyAqYyV~qq[Qw~Vqy{YDmeTAhgv{KyAqYyV~qq[QwHSqy{ZizKyAqYyV~qq[QxuXx[z}f jw~vuJ|cyHzvyK~dy{fu{tyFxX}J{YOz~qqU{srUz}[}YrUz}[~qWV~qqU{^jTue[}YrDU ^{YOz~qqU{sr~X_[YqzQc8FTTDA
[WR
WS 	
UZU QT	[RrH[PEVPC
TYQBKBDQ^Y^]\UBRQE@[DAC^CFIHT
FSBX]PSWBfK@]Y]^W]PVPRTQ 	RPQPhU
QUTWS
WURWqoR

YPWPSUTR[SWPW	VQUV ]
TQRQ	YYCF@AYT TD\RTQ^PDZS^@[WPE:D^UKBPV^PU
  WPYU SqTZY\SXM\V\B_\W\SJHGFY]\V^YWAWSMC^FIF\KCK@WD[AZUSVUJeNBU\_VTUR^UPWY	WST	Sm]ST	QQ[hU
VSW
ZP	WVST	SUP]
QSTQ 		R
WVPSVZDFBCVT^E_U V[__G]S\BQV_F	8DJ^]S^\TPT]WP SVS	R
pU_U_\R]^UR^UPWY	WST	Sm]ST	QQ[hU
VSW
ZP	WVST	SUP]
QSTQ 		R
WVPSVZDFBCVT^E_U V[__G]S\BQV_F	8FTTDA
QSR	 QUZQ Y Sr][^[_^P]US
U\QBAAC[_\^W_RCWQEJXCKF^CENBUFSH_WQVWBlHGW\]^]WPVSUUQ
WZRQmUS]SSSnW
PVU
RUWTZRQWRUSS]ST	RTPQP_FDBAP V VLZW TSVYB_Q\@Y_YC	8D\]BDWUPW 	WRSQ	S^PwQX[\QPCQVR\S@K@LXX\\]^]DWSG@YLH
F\ADAARDQBPTVVU@fIHT
\_\WT RTRZRS WPSVmWSWTQQgR

YPWPSUTR[QWPW	VQUV ]
TQRQ	YYCF@AYT TD\RTQ^PDZS^@[WPE:D^UKBSVRTP
	^WP R P	YqP_UU_UE\]_T@IBFYW_
\_\WKTTGB[FIE[AFK@]CQ@ZUYUR@dKBU_X\UUUTPP]S	TRQ	YnWPU	[VQmU SS]	PP	TQRQ	YRZW
QPUQ
W  WVST	SZDLADS^TD_UQQ^ZG]Y_E[WZF	;A^UAA

UP[

	 RP
W  P	rTWVRV_UW[WUVREK@F[_VY]^WC]RB@YFKL]DDKBUETBZWQ\TEfIBWV^YWWSQRPUV ]PSQgRPSWT	U	^UoW	 QSU UP]WPSQT 	RR
SYW	SU	WTZRQZFDHBQ VQF_W
WT\XG_QVC^UXF	2G[WCA QW Y
	TUT 	UrU]]VZWUC
U\QBAAC[_\^W_RCWQEJXCKF^CENBUFSH_WQVWBlHGW\]^]WPVSUUQ
WZRQmUUP]T
	T 	TRn`jW U WPTRWU USV]P	P g  VTU^UQS]PTSQRS  W	
UTR[SXFF@KS T
WC]W^RYZE_S^JXPZD:N\RAC]FyyqsY\X~yq{IqX@|s[sWq_uHyX]WqDREeYUTd
]^@VY^]`^zAG[ Mbs\\~j]Q@oB_Bz@_kgDFxB_\yeESH]FtfGRegFa]TeXZ_}Bj Z we\[|s{qrv[ie`[q[XUy_VDbfSFja^ab~Atc]Wqr}ERx q[XUyXc uH~Atc]Wqr}Bjq{qr~J~XpZbe}X}qwffK|fwHbf~Fied]uH~XsGuuz}XdYafn[|s{qrv[ie^[q[XUyXwIqX@|s[sWq_yXUa{qr}ZTj`FqX@|s[sWq\^Tq{qr}SK{C|`XUyqx ]iu^yX]Wq\DR_gYtpyyqsYYvHTq{qr}\Red^ZfbGj wYtpyyqsY[vqQq{qr~DU\Vh[yeeUuUFqX@|s[sWq_eASK{qr}RzYtpyyqsY[ByX]WqX~|s\2GZWCAT@{{qqQU^{{qyAx^E~q[q_xYpJ{X__xBWGgQ\Ra_^H_\\_ i[xCGYDdsWc	XC\S{jnudIYP` Qz}}N ~_T}|ESzfLh`ISeTWUsY{[Gvr^sW{_vSkt{{qzQP`VJVjyMhkY~s sxtsYQu	AUt{{qysY~s sxtsYSeaQ~^sY|fbSsZY eL~s^]|a @|`dY~eu	cD|fiO|ssJ|vy
hZ`Z{[Gvr^sW{_vHkt{{qy@|^{Cvc__xtxJk[Q~^sYkjfSN{Cvc__xtxEhjaQ~^sYV}Q}v{{qqQU^GhayxtxEP Tx^E~q[q_xZZFQaQ~^sYk_\VRdI~_~Ux^E~q[q_xYpXVuWQ~^sY~T`i|gbR}N{Cvc__xtx Pz}Q~^sYVuHBx^E~q[q_xY|ESayxt{Yvc@;C@_XS^	[TP^PP 
RSV QpLCXFB]]TUUTPP]S	TRQ	YnW	VPU	ZUVmU SS]	PP	RZW
QPUQ
W  WVST	SU^UQSXLEGAS
W VF]]TS\ZEUPY@YUZD=D\WACSQPU

 WR] 	Vp^DTYH[S_^TYZ_\U_PUVREK@F[_VY]^WC]RB@YFKL]DDKBUETBZWQ\TEfIBWV^YWWSQRPUV ]PSQgEXYI]mgR

YPWPSUTR[SWPW	VQUV ]
TQRQ	YYCF@AYT TD\RTQ^PDZS^@[WPE:D^UKB	^P  
	\UWP  PUqQGSYJYRXYBY\U[WUVREK@F[_VY]^WC]RB@YFKL]DDKBUETBZWQ\TEfIBWV^YWWSQRPUV ]PSQgBR]E^mgR

YPWPSW	V U P]RPT	RRTPQPWSUYVWYW			U^UQSXLEGAS
W VF]]TS\ZEUPY@YUZD=FB]XQV
RSTVQSVR]VT\SR
QVVxWBQ[J[ZQ_G[^UWYUUTPP]S	TRQ	YnDW_G^o
nW
PVU
RUWTZRQWRUSS]ST	RTPQP_FDBAP V VLZW TSVYB_Q\@Y_YC	8D\]BDTVTSWWR	P  	\wJYPG^VV]_T@IBFYW_
\_\WKTTGB[FIE[AFK@]CQ@ZUYUR@dKBU_X\UUUTPP]S	TRQ	YnDW_G^o	nW
PVU
RUWTZRQWRUSS]ST	RTPQP_FDBAP V VLZW TSVYB_Q\@Y_YC	88