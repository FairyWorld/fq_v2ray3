D]WACWG]UyzrW{]tYjzz{ZwJ~z |I}@H|J[|x\W{ssUyTu@hs{ySj {YEyyzrW{sx]R
} {Z][RTe hwtD|TakFYRW~EPx\yPD{{ssUyzy@hs{yST|c }ni\~gcKiSPD|t|[~@hgkH|nu\}tgKiniZ|]kEijzCqYsUyzrYP]dyS\YV[|x\W{ssUyWqXVwU[PzFk^dXQe ~I{AsPrW{ss[S~
IVs{ySb I{AsPrW{ss[Sq~Y}Yx}d	av{twJ~jrIt{K|mr~dEy}r}ZsJyPD{{ssUyzy Px[Py Px[|x\W{ssUyWaQwg[PyEP^yPD{{ssUyzy{Z][}Pz{Ta:O^UAC\D_UyqsWp^vYjq{pYiJ|X{IwJ}qwZyAs[sWppq[ie^[pY_[~XcYur_UyqsWp^XDScYvZzS\d XtjRu\Z }GjzdZXbGSKFZ^S[|s]WppqUy_^[pY_[}_h]`gefQDtg\Za t^uJ|fU`guF} kcYi}_k`Yiy[E{ppqUyqxEcka[[xZJyAs[sWppq[Sut Xpyy[GXkb|K{CzZqUyqsYZt	KTq{pYa}K{CzZqUyqsYZ{}[[xmbtyvwHt`qK}v{Iugq|fGpwq XsHpZGyyqsWppzRzYvZzRzYur_UyqsWp]bSugYvZzGR \pZGyyqsWppz yX]YtZyyVc3E]WCAVG]W{qq^z]t[hqyzZkH~Xy@}I |K@~ZYY~s_^zssW{_vIis{{Xi	zYE{{qq^zsx_P~	zZ]YV fPiwtF~_bjF[P\}LQx^{[GrzssW{qzIis{{_u	itp\k_jSggHuM}w`]k[Pjd{I~ey	jZ{IejT~J{ h[yJpYsW{qqPQ]d {X_PWY~s_^zssW{\rQWwUY}[yOihh\Q_HQP`@P_SOzYE{{qq^zsxGPz	zZ]Y|vaCzYE{{qq^zsxGQKyz[``we^~dwJ{vyN~Z{Dv[M~JsWvi~twY~s_^zssW{\bJPI{{\bJPI{Cq[q^zssYVz\Nic{{_OQ]gY~s_^zssW{\iP|Y{I{U@ 9F_UAA
UE_U{sxTy_vYhspyXiJ~ZpJ~K |Iy[Gy{sxTyqzZSghZ[y |sp@s[qU{sxZQu	HVspy_z^P]oR H^P]w_|_bYP^tFR_f{YNxyqqU{ssCjqy{ZlifaEJX|fykZRG~va|s	}veH~g[}ui}dwZ~XiJkIp@s[qU{sxZR_f{ZVZT}[~qVTyqqU{^{[TuW[}YpEi\fBPwhEy[Gy{sxTyqzEPsyX_[|thIy[Gy{sxTyqzEQIpyYb`ulT}f}E{tpD}XyFtRG}HqUt`}vu[~qVTyqqU{^k@SKy{^k@SKyAqYxTyqq[VxUDjay{]ER_e[~qVTyqqU{^`Z[yK{WI
:D\WAC STWVQ

WRPXU 
SWpAZRG^UAW\SKJ@FY]\W\^WAWSLAYFIF\JDK@WDZCZUSVUKgIBU\_WVUR_RPWX	WQS	Sm\SPVV		PUP[VsmWQSURP\UPSQV	RU
SXW	S
U	WT[PQZFDI@Q VVF_WUS\XG_QWAYUXF	3E\WCAQ	TVR\
VRQP 
QrQXP]QZE_S^K]^
V^QBKBDP\^^]\U@UQE@[D@D^CFIIVFSBX\RTWBfK@\^]^W\PVPRVQ 	 UPQ RoU	QW PSSm\
SQVRR UTPQ RWQUXQWXW		U_RQSXMG@ASU VF]\TS\ZETR^@YUZD 
:FB]XQW	T

VSQUTR
V
WQ 
WyT]WW_WT_
\PVPRVQ 	 UPQ RoU	QW PSSm\
SQVRR UTPQ RWQUXQWXW		U_RQSXMG@ASU VF]\TS\ZETR^@YUZD 
:D\WACS PW	   TWRX 
QVpTZ\YW]U_TQ\]S@IBFYV]\_\WJVSGB[FIG\AFK@\DQ@ZUXWU@dKBU]_\UURTPP\S	VRQ	XlWRU	ZQQmUSS\PP	VVRQ	XU[W
QRUQ	WWVQS	SZDMCCS_TD_UVQ^ZG]X]B[WZF	 9F^UAA
 TPRV

UPPT   	QVSrSQZ^SX@S_	W^ZAIBD[]^]_\UAUZFB[DKDU@FIBWMP@XWST\AdK@W^V]UW[UPRWR	URQSoV	QUQXPoWQSURP\UPS
SV	RU
SXW	S
U	WT[PQZFDI@Q VVF_WUS\XG_QWAYUXF	3E\WCART	QQRVVRW RQrU]\T]WFY
U\QB@CD[_\^V]UCWQEKZDKF^CGIBUFSIXWQVWBmJ@W\]^\WPVQRUQ	W[PQmU	S\SSSlW
RQU
RRWT[PQW
RUSS\
SV		
UTPQ RXFDBA
R V VM]W TSW[E_Q\@Y^[D	8D\\@C\Q
SWRU	 R 
pV_UWTVTUST W^Q@IIGY]^\_WVAUQGBPGID^AMJ@WFQ@[USTW@d@CU^]\UUPT[QWS
	URZ	SoWQ	PU	V
\VPfU

XRWPQ	UTRZ	SW PWQQU Q \

VVRQ	X[DF@AXT TD^UTQ^QF]S^@[WQG	:D^UJ@
TU	  Q
WP
V 	P sW_UU_UTA\]S@IBFYV]\_\WJVSGB[FIG\AFK@\DQ@ZUXWU@dKBU]_\UURTPP\S	VRQ	XlWP
RU	]W UPmehVV		USQ[VWPRTUR Ro T VWVPS
QU	RWRSW	R	U \UPSQQGDBCQVTFTV VQ\XL^Q\B[UXM
	8F_WCJ	UE{ppq[T[{ppyKy[E~zZqUy\pJpY_UyGWLg[]WaT_B^\\T h[xHFYEav^Uh_YCj@VCxBWhbFOy@]Tz`GZI_D|cE[deDi _]dZR\x@cXfYYur yyqsY`dbYyX]Wp^TFjeVDc`\ia{C}b_UyqxG[ zyX]WpYa}K{C}b_Uyqx@cpyyq{HwYrXjfxZtp ecIuguJje{D`df_}KwYqE}v tYf[iekYur yyqsY`d\YyX]WpYuKy[E~zZqUy\|Z\`yyqxX]kbDy[E~zZqUy_\]pyyqxZJyAtc]WppzUjp\pY_Uy_F[^e[|s{ppq[QuJ]pyyqx^[df\RegEcu[|s{ppq[Sut Xpyyq{F\]TjSz`g\tWDy[E~zZqUy\`CZJyyqx [{}[|s{ppq[S @pY_Uy[{~z] :D_UJ@
WE rzssYV[yzs{I{[GwpYsW{\rCzZ]W{GUFeY_Wc^\@\^U^jYqBE[ Gaq^a]AUQybkwmKQSzb	Px~K		]\~ ~LRxdDke@RgV_Vv[zYE~q[q^z]t[hqyzsxYSeTCWh{Ek iPq{{qqPPwIVqyzs{ |v}Pq{{qqPRgcY}[qP}d`[|vXP~gD}v\T}cHefPgw| aM}dkGvqC}t{k_bSzYE~q[q^z]t@hqyzs{H[yJwa]W{qzCjYY}[qPjhd PKyJwa]W{qzLihcY}[qPWY~s rzssYVz\Nic{{qzLQ\{[GwpYsW{_XOPcY}[qPj]^^Qf@]|]{[GwpYsW{\rQWwUY}[qPVc `}e`Z~KyJwa]W{qz	QxY}[qPWwJJ{[GwpYsW{\~LRc{{qyPwaB	8FBVYQ\
 SV
R VSR	PVTSrD@]DK\_\
WPVQRUQ	W[PQmU 	TS\RPT
lW
RQU
RRW
RUSS\
SV		
UTPQ RWVPS
QZDFBC QT_G_U VZ]XG]S\BPTXF	8FUVCA
QXQ VU[	U 	 WrVGQ[AZQ]VW\XV]WWS W^Q@IIGY]^\_WVAUQGBPGID^AMJ@WFQ@[USTW@d@CU^]\UUPT[QWS
	URZ	SoF][@\ooWQSURP\UPSQV	RU
SXW	S
U	WT[PQZFDI@Q VVF_WUS\XG_QWAYUXF	3E\WCA VS
	TVVR	 RWrTEZXH[Z[\@P]WST W^Q@IIGY]^\_WVAUQGBPGID^AMJ@WFQ@[USTW@d@CU^]\UUPT[QWS
	URZ	SoAW_L_ooWQSURPU

SW
Q	U	[RW P WVQS	SU	P\
QSV	Q 	U
  WVPS
QZDFBC QT_G_U VZ]XG]S\BPTXF	8DK\ZS^
	WQUTSZWPU WVTPWXWTpTGSRKYXY\BYWTUQ
WPVQRUQ	W[PQmAUVF\mmUSS\PP	VVRQ	XU[W
QRUQ	WWVQS	SZDMCCS_TD_UVQ^ZG]X]B[WZF	 9F^UAA
WSVR
	TUP
R	 TrHPQE\US
U\QB@CD[_\^V]UCWQEKZDKF^CGIBUFSIXWQVWBmJ@W\]^\WPVQRUQ	W[PQmAUVF\mmUSS\PP	VVRQ	XU[W
QRUQ	WWVQS	SZDMCCS_TD_UVQ^ZG]X]B[WZF	 9: