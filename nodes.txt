D]W@CWG]Tyqq_{]tXjqy{ZwK~q|I}qs{@s[q_{ssZie\S{Z]Z~XaQ~q]Tyqq_{]ZESaQ}YxFjjbSkg
FjzfRS`FSKNQ]QZ|s__{ssTy_\S{Z]Z} ~P|wcif[Lhw~[ kdYI|fXQk]gGi_iJdX~ujUhdVZy[Gs{ssTyqzMhhcZ[zQI{@s[q_{ssZSuvSs{y[	TQ|_R_~T~I{@s[q_{ssZSu	AVs{yXaI{@s[q_{ssZSz}Q}Yx|db~{twK~aqAt{I|fqA~dsyvq}ZKy[Gs{ssTyqzPxZ[zPxZ|s__{ssTy\bQwgZ[zMP_y[Gs{ssTyqz
{Z]Z}[ysTa:D]]ACWGWUyqrW{]~Yjqz{ZaJ|XzI|I }acqAs[rW{sy[ie_[{ZW[~XbY~qWUyqrW{]PDSbY}Yr[je\V]AjeZhcYjuJ~]^TqzCqYyUyqrYSgi[[zGgm jue[|c	Y~_vI~diiXTD}tjXa]ajX~HJaifzY~qWUyqrW{]^Tqz{^\Hy[D{{syUyqyGkhj]yX\Y~jKQe}B~IqAs[rW{sy[Su
IVsqyXb IqAs[rW{sy[Sz~Y}Yr}dav{t}H}qrItqH|frI~dyyvr }ZuJy[D{{syUyqy Pxu[[y Pxu[|s\W{syUy\aQwm[[yEP^y[D{{syUyqy{ZW[}[z{Ta:D^UACWD_Uy{sW{^vYj{{{YiJ|R{I|J~QHg}[|y]W{pqUyUt@hpyyRk {ZGyy{sW{pz]R| {Y_[T
dYhtvD|U`kDYRVEP z\yQE{{pqUy{x@hpyyRwzZ}|~gW}BD|tjZ~AkYS |lUJ}gSKiBww}}k{CqZqUy{sYP^fyR]YV }[|y]W{pqUyVpXVtW[Q{FSdb^ioEF{ZGyy{sW{pzERx {Y_[~|cJ{ZGyy{sW{pzESA{{Xbb}gWguHy|{GY}F}|{DwWU}|cIu[|y]W{pqUyV`CQJyyV`CQJyAsQsW{pq[Tp^Gh`yyUFP^e[|y]W{pqUyVkY}ZyKy_B	8E]WCKVG]WqqqUz]t[bqyzZkHtXyK}IuKJ~ZwYts_UzssWq_vBis{qXizYE{qqqUzsx_Z~zZ]Y\zzWwZ]\eHGih|Jt_bjF[Z\}GQx^q[GyzssWqqzBis{qX[H}JtZbfjXdt[uu}F}t uK ~w`XtfyJi]Hu iHidvqyApYsWqqq[Q]d qX_[WYts_UzssWq\rZWwUYw[yDQwdJ[ fGI{C{[qUzssY[u	KWs{qXa~I{C{[qUzssY[z}[|YxlbtztwHuaqK~t{JtfqKdsqvq|Z q[GyzssWqqzQxYw[zQxYts_UzssWq\bPwgYw[zGQ\q[GyzssWqqz zZ]Yu[yyUa2D\W@C STV UY
	WRQSV 	SVpJYZG^TAW]S@IHFY]]\_VWAVSGBQFIG\ALK@WDQ@ZUSWU@dABU]_\UURTZPWS	VR[	SlWSQVU	P]QPU{mVQSU
ZP
WVPS
QU	R]
RSW	R		UWUPSQZGDBCQV^F_V V[\XG^Q\BQUXF
	8FTWCA	RTVRW 
UZQQ  	QrPX[^YZE_R^@U^
UVQBKCD[_V^]]UC]QE@ZDKL^CGIBUFSBXWQ\WBfJ@WV]^WWPVQRUQ 	]PPQgU	YWSSSlW
RQU RR]TPPQW
RUSYW
SV			UTZQRXFDHAR V VF]W
TS\[E_QV@YU[D	2FB]YQ\
T 	^SPUTRWTY 
VrWUWW_V_\WPVQRUQ 	]PPQgU	YWSSSlW
RQU RR]TPPQW
RUSYW
SV			UTZQRXFDHAR V VF]W
TS\[E_QV@YU[D	2D\W@CS PV	U	WR
S 
QWp_YTYW]T_WY W^[@IBGY]^\_\VAU[GB[GIDTAFJ@WLQ@[UST]@dKCU^W\UUZTPQWS
	URQ	SoW
QU	QYQmU
 SRWPQ	U^RQ	S]PWQQUQ W

VVR[	S[DF@KST
TD^U^Q^ZF]S^J[WZG	:N^UA@
	 TQR U


]PPU  QVSsSZYVSX@ST
V^QBABD[\^^W\U@UQEJ[DKD^CFIBVFSHXWRTWBlK@W^]^]WPVPRVQ
	UZQRoU	Q]PSS	oVQSU
ZP
WVPSSU	R]
RSW	R		UWUPSQZGDBCQV^F_V V[\XG^Q\BQUXF
	8FTWCA	Q\	QPR VUZV   ZQrT]WWUWFX
U\PBK@L[_\^]^]CWPE@YLKF_CDABUGSBPWQVVBfIHW\\^WWQVRZUQ WPSQmUSWSRSoWQYU
RZWUPSQV	RU SSW	S
U	]TPPQPFDB@Q VVFUW US\XM_Q\AYUXL	8E\WCK WR
S
VR] 
R	xV_UVT]W]ST	W^QAIBDQ]^]_\UAUQFB[DAD^@FIHWFP@X]STWAdK@]^]]U]PUPRWR	URQSoVR	PUV

WVQm]

SQWQRUTRQSWPVYQUY W	

U^RQ	SXLF@AS
T UD]]TP^ZEUS^@ZWZD:D_UACUUQ
WQ
	V  Q p__UU^UWI W^[@IBGY]^\_\VAU[GB[GIDTAFJ@WLQ@[UST]@dKCU^W\UUZTPQWS
	URQ	SoWQ	ZU	V WVPmdhUV	]SPPUWQQ\URZo 
TV WVQS	YU	ZW
QSV	Q
	U  WVPS
QZDLBC Q^TG_U VQ]XG]Y\B[TXF	8F_VCA
UE{{sy[T[z{sqKy[D~qYyUy\qJ{ZWUyGVGo[]W`_\B^]\_hZxCEQEaw^^|`_YCk@]@pBWhcFDzH]TzaGQJWD|bEPgmDi _Vg	ZR\y@hPfXY~qyyqrYkgjYyX\W{]\FjeWDhc\iazCvaWUyqyGPryX\W{Zi}KzCvaWUyqy@hsqyqzH|ZzXjfyZsebI~d}JjezDkgn_}K|ZyE}v~ Zn[iejY~qyyqrYkgTYyX\W{Z}Ky[D~qYyUy\}ZWcqyqyXVhjDy[D~qYyUy_\VsqyqyQIqAtc\W{srUjq\{ZWUy_FP]m[|s{{sy[Qu
JVsqyqy^Pgn\RefEh}[|s{{sy[Suu SsqyqzFW^\jSzagWw_Dy[D~qYyUy\aCQIqyqy Pxu[|s{{sy[S @{ZWUy[z~q^:D^UACWD yy{sYVZyy{{I{ZG|sQsW{]rHyR]W{FUEeY_Vc
]T@\^^]jYzAM[ G`qUa\A^YybjwfKQS{bSp~J	|U\~~GQpdDkdKQoV_Vw[yQE~qZqUyUt[hpyy{xYSdTHT`{Eki[|y{{pq[SIVpyy{{ |w}[|y{{pq[QocY}Zq[~l`[|wX[}
gD}w\_~kHdf[|ow|aF~lkGwqH~|{k^bXyQE~qZqUyUt@hpyy{{HZyAti]W{pzHiYY}Zq[i`d PJyAti]W{pzGj`cY}Zq[TY~r yy{sYV{\Ejk{{pzGR
\{ZG|sQsW{^XDScY}Zq[iU^^Q fK|U|]{ZG|sQsW{]rZTUY}Zq[|Vck~m`Z~JyAti]W{pzRpY}Zq[TJJ{ZG|sQsW{]~GQk{{py[tiB	8GB]ZY\
	S
 VZ VSR	PWT[rD@\D@__\WQVRZUQ WPSQmUTS
WRQToWQYU
RZV	RU SSW	S
U	]TPPQWVQS	YZDFCCYTTD_UVQ^PG]S]B[WPF	9F^UKA
QSRV
 UPU 	TrVGP[JYY]VW]X]^_WS	W^QAIBDQ]^]_\UAUQFB[DAD^@FIHWFP@X]STWAdK@]^]]U]PUPRWR	URQSoF\[K_goVQSU
ZP
WVPS
QU	R]
RSW	R		UWUPSQZGDBCQV^F_V V[\XG^Q\BQUXF
	8FTWCA	VS TVUZ	   ZWrUEQ[@[Z[]@[^_ST	W^QAIBDQ]^]_\UAUQFB[DAD^@FIHWFP@X]STWAdK@]^]]U]PUPRWR	URQSoAV_G\goVQSU
ZP
]

R
WRU	PZWP VVR[	SUPW
QRUQ 	]
WVQS	YZDFCCYTTD_UVQ^PG]S]B[WPF	9D@_RS^VQV\SQTPU T^TPVSTTpTFSYHQXY\CY\WUQWQVRZUQ WPSQm@U]ETmmU
 SRWPQ	U^RQ	S]PWQQUQ W

VVR[	S[DF@KST
TD^U^Q^ZF]S^J[WZG	:N^UA@
WRVQ
	T]P
R TsH[RM\UR
U\PBK@L[_\^]^]CWPE@YLKF_CDABUGSBPWQVVBfIHW\\^WWQVRZUQ WPSQm@U]ETmmU
 SRWPQ	U^RQ	S]PWQQUQ W

VVR[	S[DF@KST
TD^U^Q^ZF]S^J[WZG	:2