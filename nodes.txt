D]WACWG]UyzpW{]tYjzx{ZkJ|SxI|I ~PJ|Y{AsPpW{ss[in][{Z][~S`Y~q]UyzpW{]ZDS
`Y}Yxjn{[kg
GjqgZS`GS@FQ]Q[|x^W{ssUyT][{Z][inx|Jkj~`D|gkK}z ]w|nw]kdgFixJht{jTdk|[yPF{{ssUyz{Ehhc[P{QI{AsPpW{ss[S~w Ss{yP\PwdXTq{@kI
[|x^W{ssUyWsFQ^c[Px |t[|x^W{ssUyWsJ{Z][dRu`csJ}m|WZsK}PG}cJ}zpGZ]E}jxCqYsUyzpYVwJHyS^YVwJHyPF{{ssUyz{ Whp^yS^YP]GjjxCqYsUyzpYVY{ySxYq^:O\UAC\F_UyqsWp\vYjq{p[iJ|X{IwH~qHtKW[|s]WprqUy_t@cryyXk pXGyyqsWprz]R| p[_[i_dEcijDRudE`eGju`EZHGjjcYup_UyqsWp\\YyX]Yw\zY}H tKSFjXYcX }uwufy }XsDvuWHifQc\}~e`XpXGyyqsWprzGjjcYvXzSK{CzXqUyqsYZvvQq{pX	Fie|_Xf^|K{CzXqUyqsYZv	KTq{p[a}K{CzXqUyqsYZy}[[xmbtyvwJtrqK}v{Iueq|fwGpuqKXsHpXGyyqsWprzRzYvXzRzYup_UyqsWp_bSugYvXzGR \pXGyyqsWprz yX]YtXyyVc3G]WCATG]W{qq^x]t[hqyxZwH|q	IqY{Cq[q^xssYke\RxZ]Y|XaP}q]W{qq^x]ZFQaP~YxEhjbRhg
EhzfSP`EQKOR]QY~s_^xssW{_\RxZ]Y}e}@hc}v[Md`]q 	h{H~evQ|tD|uut|]|v\S|dH{[GrxssW{qzLkhcY}[z
RI{Cq[q^xssYQuv	Ps{{[	CUwIPaP}q]W{qq^x^pFQ\aP~Y{ |v}P}q]W{qq^x^pJ{X_Pe[u`aqA|dgWXq@|YG}a A|ssGX_N|c{Cq[q^xssYVuHCxZ]YVuHCxYE{{qq^xsx WjrUxZ]YP_	Lkc{Cq[q^xssYV[yxZ{Yq\ ;F_UAA
UE_U{sxVy_vYhspyXiJ~ZpH~KKcK~ayAqYxVyqq[kgUZyX_[|ZhX|s_U{sxVy_XDQhX[zQ^oQujPw]S}Ghxo[Q bGQIGS_S[~qVVyqqU{]UZyX_[kJc\}H\^}t`E}X\X}s	jXaK~gs[~HWFcZ~vS}dRF~u~_{YNzyqqU{ssDjja[}YsSKyAqYxVyqq[QwQqy{Y [QjzXPwlGy[Gy{sxVyqzEPsyX_[|thKy[Gy{sxVyqzEQIpyYb`ulV}fuJ{tpF}XyFtRE}fqUtp}vu[~qVVyqqU{^kBSKy{^kBSKyAqYxVyqq[VxUFjay{]GR_e[~qVVyqqU{^`X[yK{WI:D\WAC STWTQ

 WRPXW 
SWpAXRG^UAW\SKH@FY]\W^^WAWSLCYFIF\JDK@WDZAZUSVUKeIBU\_WTUR_RPWX	WSS	Sm\	SPVT		PUP[TsmW	QSURP\WPSQT	RU
SXW	SU	WT[RQZFDIBQ VVF_WWS\XG_QWCYUXF	3G\WCAS	TVR\
TRQP QrQXP_QZE_S^K]^
T^QBKBDP^^^]\UBUQE@[D@D^CFIITFSBX\PTWBfK@\^]^W\PVPRTQ 	 UPQ PoU	QW RSSm\	
SQTRR UTPQ PWSUXQWXW			U_RQSXME@ASW VF]\TS\ZETP^@YUZD :FB]XQWT
VSQUTR
V
UQ 
WyV]WW_WT]
\PVPRTQ 	 UPQ PoU	QW RSSm\	
SQTRR UTPQ PWSUXQWXW			U_RQSXME@ASW VF]\TS\ZETP^@YUZD :D\WACS PW	  T WRX 
QVpTX\YW]U_VQ\_S@IBFYV_\_\WJTSGB[FIE\AFK@\DQ@ZUXUU@dKBU__\UURTPP\S	TRQ	XnWPU	ZQQmUSS\	PP	TVRQ	XU[W
QPUQ	W WVSS	SZDMACS_TD_UVQ^ZG]X_B[WZF	 ;F^UAA
 TPRT

 UPPT    	QVSrSQX^SX@S_W^ZCIBD[]^__\UAUZDB[DKDUBFIBWMR@XWST\CdK@W^V_UW[WPRWP	URQSoT	QUQXRoW	QSURP\WPS
ST	RU
SXW	SU	WT[RQZFDIBQ VVF_WWS\XG_QWCYUXF	3G\WCAPT	QQRVTRW RQrU]\V]WFY
U\QB@AD[_\^V_UCWQEKXDKF^CEIBUFSIXWQVWBmH@W\]^\WPVSRUQ	W[RQmU	S\SSSnW
PQU
RRWT[RQWRUSS\ST		
UTPQ PXFDBA
P V VM]W TSWYE_Q\@Y^YD	8D\\BC\S
S	WR	U	 R pV_UWTVVUSTW^Q@IIEY]^\_WTAUQGBPEID^AMH@WFQ@YUSTW@d@AU^]\UUPT[SWS	URZ	SoWS	PU	V
\VPfU

XPWPS	UTRZ	SW PW	QQU Q \
TVRQ	XYDF@AXT TD\UTQ^QD]S^@[WQE	:D^UJB
TU	 Q
WPV 	P qW_UU_UVA\_S@IBFYV_\_\WJTSGB[FIE\AFK@\DQ@ZUXUU@dKBU__\UURTPP\S	TRQ	XnWPRU	]W WPmehTV		USQ[TWPPTUR Ro T VWVPSQU	RWPSW	P	U \WPSQQEDBCQVTFTT VQ\XL\Q\B[UXM	8F_WCJUE{prq[T[{pryKy[E~zXqUy\pJp[_UyGWLg[]WaT]B^\\T h[xHDYEav^U}h_YCj@VAxBWhbFO{@]Tz`GZK_D|cE[feDi _]fZR\x@cXfYYup yyqsY`fbYyX]Wp\TFjeVDcb\ia{C}`_UyqxG[zyX]Wp[a}K{C}`_Uyqx@cryyq{Hw[rXjfxZtr ecIueuJje{D`ff_}Kw[qE}v t[f[iekYup yyqsY`f\YyX]Wp[uKy[E~zXqUy\|Z\byyqxX]ibDy[E~zXqUy_\]ryyqxZHyAtc]WprzUjp\p[_Uy_F[\e[|s{prq[QuJ]ryyqx^[ff\RegEcu[|s{prq[Sut Xryyq{F\_TjSz`g\vWDy[E~zXqUy\`CZHyyqx [y}[|s{prq[S @p[_Uy[{~z_ :D_UJB
WE rxssYV[yxs{I{[GwrYsW{\rCxZ]W{GUDeY_Wc\\@\^U\jYq@E[ Gaq^a]AUQybkwmKQSzb	Rx~K		}]\~ ~LPxdDke@PgV_Vv[xYE~q[q^x]t[hqyxsxYSeTCUh{Ek iP}q{{qqPRwIVqyxs{ |v}P}q{{qqPPgcY}[qPd`[|vXP|gD}v\TcHefP}gw| aMdkGvqCt{k_bSxYE~q[q^x]t@hqyxs{H[yJua]W{qzChYY}[qPhhd PKyJua]W{qzLkhcY}[qPUY~s rxssYVz\Nkc{{qzLS\{[GwrYsW{_XORcY}[qPh]^^Qf@}]|]{[GwrYsW{\rQUwUY}[qP}Vc `e`Z~KyJua]W{qz	SxY}[qPUwJJ{[GwrYsW{\~LPc{{qyPuaB	8FBV[Q\
 SV
R VSR		PVTSrD@]DK^_\
WPVSRUQ	W[RQmU 	TS\RPT
nW
PQU
RRWRUSS\ST		
UTPQ PWVPSQZDFBCQT_E_U VZ_XG]S\BPVXF	8FUTCA
QXS V	U[	U 	 UrVGQ[AXQ]VW\XV_WWSW^Q@IIEY]^\_WTAUQGBPEID^AMH@WFQ@YUSTW@d@AU^]\UUPT[SWS	URZ	SoF][@^ooW	QSURP\WPSQT	RU
SXW	SU	WT[RQZFDIBQ VVF_WWS\XG_QWCYUXF	3G\WCAVS
	TVTR	 RWrTEZZH[Z[\@P_WSTW^Q@IIEY]^\_WTAUQGBPEID^AMH@WFQ@YUSTW@d@AU^]\UUPT[SWS	URZ	SoAW_L]ooW	QSURPU

SW
S	U	[RW P WVSS	SU	P\
QST	Q 	U
 WVPSQZDFBCQT_E_U VZ_XG]S\BPVXF	8DK^ZS^
		WQWTSZUPU UVTPWXUTpTGSRIYXY\BYWVUQ
WPVSRUQ	W[RQmAUVD\mmUSS\	PP	TVRQ	XU[W
QPUQ	W WVSS	SZDMACS_TD_UVQ^ZG]X_B[WZF	 ;F^UAA
WSVP
	T UP
R	 TrHPSE\US
U\QB@AD[_\^V_UCWQEKXDKF^CEIBUFSIXWQVWBmH@W\]^\WPVSRUQ	W[RQmAUVD\mmUSS\	PP	TVRQ	XU[W
QPUQ	W WVSS	SZDMACS_TD_UVQ^ZG]X_B[WZF	 ;: