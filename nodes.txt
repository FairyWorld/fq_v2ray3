D]WACWG]Uy{sW{]tYj{{{ZwJ~{ |I{JY{AsQsW{ss[io^[{Z][~RcY~q]Uy{sW{]ZDScY}YxGj``[kg
GjpdZS`GSAFQ]Q[|y]W{ssUyU^[{Z][iU|Z|tZ[~BYDtg~A }g{|ox[kg{F~o}wg}ohZd|_yQE{{ssUy{xEhhc[QxQI{AsQsW{ss[St Ss{yQ^Q]tGj{
Y~q]Uy{sW{^pDSVcY}Y{~|Y~q]Uy{sW{^pHyR]Yf[wbksHdgU}RsIYE{IssE~R]Jc{AsQsW{ss[TJJ{Z][TJJ{YEyy{sW{sxU`p\{Z][RUEhc{AsQsW{ss[TQ{{Z{[sV8F_WCKUE]WqqqUy_t[bqyyXkHtXyK~K wqJ}XUYts_UyqsWq_vBjq{qXiy[E{qqqUyqx_Z~yX]Y\ f[jutFt_bYR\EZ_fy[E{qqqUyqx@bqyy_cwv[jfxZtfWH~HwDvuyi[XaHa |fsIufy~XUGwvqJ~q{C{[qUyqsYZ_fyX]Y\}[|s]WqqqUy\pX\uW[[{FYuvKT_dJ\q[|s]WqqqUy\pF[\a[[{ vv}[|s]WqqqUy\pJqX_[dYujaqJ}fQWuXqK}[Gwq K}qsGvX_H}a{C{[qUyqsY\uHHyX]Y\uHHy[E{qqqUyqx ]jr^yX]YZ_	Gja{C{[qUyqsY\[yyX{Y{\ :D_UKA
WE__{ssW{_vShs{{Xu@|s |K
|sH|H}Q~q]W{qq_{]t@hqy{Zk {[Gs{ssW{qzWP| {X_Qk]dEhjjNPwdEk eMhw`EQKMhhcY~s__{ssW{_\S{Z]Yhv~U|Jgh_eL|ZskK }tsI~f\S|JwDh_eOhZ{J|HzQZ^X{[Gs{ssW{qzMhhcY}[zQI{Cq[q_{ssYQuvSs{{[	TWxp\kaN{YE{{qq_{sxGPz{Z]Y|vaB{YE{{qq_{sxGQKy{[``we_dG{vyOZ{DvWLZsWviJwY~s__{ssW{\bKQI{{\bKQI{Cq[q_{ssYVz\Ohc{{_NP]gY~s__{ssW{\iQ}Y{I{U@8F_UAA
UE_U{syUy_vYhsqyXiJ~ZqK~KIJ~Hy[~qWUyqqU{]~Bjqy{Zay[Gy{syUyqz]PvyX_[Vn[juvD~]ji DYP^uGRz\{YOyyqqU{srBjqy{Z[}fekJzX|f~^kJiF~vi|I	[}HfY~dijffZJ} }vi}cqAs[qU{sy[R_f{ZW[T}[~qWUyqqU{^zZTuW[}YqDjzzBV]TGjK[~qWUyqqU{^zDS\a[}Yq~v}[~qWUyqqU{^zHyX_[f[wbaqJduU}XqKYEq KsyE~X_HcqAs[qU{sy[TuHH{ZW[TuHH{YOyyqqU{srUjr^{ZW[R_	GhcqAs[qU{sy[T[y{Zq[s\ 8FTWCA
[TU
WS 

UZR QT 	[UrH[PEVWC
W^QBKBDQ]^^]\UAUQE@[DAD^CFIHWFSBX]STWBfK@]^]^W]PVPRWQ 	UPQSoU
QRTWP
WRRWqoU

YSWPP	UTR[	SWPW
QQUQ ]
WVRQ	YZDF@AYT TD_UTQ^PG]S^@[WPF	:D^UKA
PV^PU
 WPYR SrSZY\SXM_Q\B_\W\SJK@FY]\V]^WAWSM@YFIF\KDK@WD[BZUSVUJfIBU\_VWUR^RPWY 	WPS	Sm]SW	QQ[oU
QSW
ZP	WVPS	SU	P]
QSW	Q 		U
WVPSQZDFBCQT^F_U V[\XG]S\BQUXF	8DJ]ZS^\TSS]TP TVS
U
pU_U__U]^UR^RPWY 	WPS	Sm]SW	QQ[oU
QSW
ZP	WVPS	SU	P]
QSW	Q 		U
WVPSQZDFBCQT^F_U V[\XG]S\BQUXF	8FTWCA
QPU	 VUZ	Q  YTr][^[_]W]US
U\QBABD[_\^W\UCWQEJ[DKF^CFIBUFSHXWQVWBlK@W\]^]WPVPRUQ
	WZQQmU	S]SSSmW
SQU
RRWTZQQWRUSS]SW		UTPQSXFDBAS V VL]W TSVZE_Q\@Y_ZD	8D\]ACTRPW 
	WRPV	 S^SpQX[\QP@QVU\S@K@L[_\\]^]CWSG@YLKF\ADABUDQBPWQVU@fIHW\_\WWRTRZUS WPSQmWSWSQQgU

YSWPP	UTR[QWPW
QQUQ ]
WVRQ	YZDF@AYT TD_UTQ^PG]S^@[WPF	:D^UKA
SVQSP
	^WP U P	YrW_UU_UF[]\S@IBFYW\\_\WKWSGB[FIF\AFK@]DQ@ZUYVU@dKBU\_\UURTPP]S	WRQ	YmWSU	[QQmU SS]
PP	WVRQ	YUZW
QSUQ
	W WVPS	SZDLBCS^TD_U VQ^ZG]Y\B[WZF	8F^UAA

UP[

	UP
W 	P	rTWUUV_UW[T
UVQBK@F[_V^]^WC]QE@YFKL^CDKBUFSBZWQ\WBfIBWV]^WWPVRPUQ ]PSQgUPPWT
	U	^RoW
QSU RP]TPSQW	RU
SYW	SU		WTZQQZFDHAQ V VF_W
TS\XG_QV@YUXF	2D\WCAVW Y
	WRT 	RrU]]U]WUC
U\QBABD[_\^W\UCWQEJ[DKF^CFIBUFSHXWQVWBlK@W\]^]WPVPRUQ
	WZQQmURP]T
	W	TRmgjW V WSSRWU RSV]P	P g    VTU^RQS]PWSQUS W	
UTR[	SXFF@KS T
TD]W^Q^ZE_S^J[WZD:N_UAC]E yyqsY\[yyq{Iq[G|s[sWq\rHyX]WqGUEeYUWc
]^@V^^]`YzAG[ Mat\\~j]QChB_Bz@_h`DFxB_\zbESH]FtaGRegFa ]TeXZ\zBj Z wf[[|s{qqq[ie`[qX_Uy_VDbeTFja^aayAtc]WqqzERx qX_UyXc uKyAtc]WqqzBjq{qqyJ~XpZbfzX}qweaK|fwHbeyFied]uK ~XsGuv}}XdYaei[|s{qqq[ie^[qX_UyXwIq[G|s[sWq\~XUa{qqzZTj`Fq[G|s[sWq_^Tq{qqzSK{C|c_Uyqx ]jr^yX]Wq_DR_gYts yyqsYYu	HTq{qqz\Red^ZeeGj wYts yyqsY[uvQq{qqyDU\Vh[zbeUuUFq[G|s[sWq\bASK{qqzRzYts yyqsY[ ByX]Wq[y|s\2D]WCAWG{{qqQVY{{qyA{YE~q[q_{^pJ{X__{EWGgQ_Ua_^H\\\_ j[xCGYGcsWc	_C\S{jiudIYSx` Qz}~I ~_T~|ESzfLkgISeTWVtY{[GvqYsW{_vShs{{qzQSgVJVjyMkkY~s s{ssYQu	AVs{{qy|tY~s s{ssYSeaQ}YsY|fbS|tZY eL}t^]|a @gdY~eu	|cD|fiOtsJ|vy
k]`Z{[GvqYsW{_vHhs{{qy@Y{Cvc__{sxJk[Q}YsYkjfPI{Cvc__{sxEhjaQ}YsYV}Q~q{{qqQVx^Ghay{sxEP T{YE~q[q_{]ZFQaQ}YsYk_\VQdI~_~U{YE~q[q_{^pXVuWQ}YsY~Tci|gbR~I{Cvc__{sx Pz}Q}YsYVuHB{YE~q[q_{^|ESay{s{Yvc@8D@_XS^	[	T P^SP 
RTV QpL@_FB]]TURTPP]S	WRQ	YmW	VS	U	ZRVmU SS]
PP	UZW
QSUQ
	W WVPS	SU^RQSXLF@AS
T VF]]TS\ZEUS^@YUZD:D\WACSQPV 

WR] 	Vp^GSYH[S_^W^Z_\U_S
UVQBK@F[_V^]^WC]QE@YFKL^CDKBUFSBZWQ\WBfIBWV]^WWPVRPUQ ]PSQgF_YI]mgU

YSWPP	UTR[	SWPW
QQUQ ]
WVRQ	YZDF@AYT TD_UTQ^PG]S^@[WPF	:D^UKA
	^S  
	\VWP  PUrVGSYJYR[^BY\U[T
UVQBK@F[_V^]^WC]QE@YFKL^CDKBUFSBZWQ\WBfIBWV]^WWPVRPUQ ]PSQgAU]E^mgU

YSWPP	W
Q U P]RPW	RUTPQSWPUYQWY W	
	U^RQSXLF@AS
T VF]]TS\ZEUS^@YUZD:FB]XQV
USTVQSVR] VT\PU
QVVxTEQ[J[ZQ\@[^UWYURTPP]S	WRQ	YmCW_G^o
mW
SQU
RRWTZQQWRUSS]SW		UTPQSXFDBAS V VL]W TSVZE_Q\@Y_ZD	8D\]ACWQTST WR
P   	\pJYPG^UQ]\S@IBFYW\\_\WKWSGB[FIF\AFK@]DQ@ZUYVU@dKBU\_\UURTPP]S	WRQ	YmCW_G^o	mW
SQU
RRWTZQQWRUSS]SW		UTPQSXFDBAS V VL]W TSVZE_Q\@Y_ZD	88