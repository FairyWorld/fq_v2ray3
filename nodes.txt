D]W@CWG]TyqpW{]tXjqx{ZwK~q |I }qIZcZ|s^W{ssTy_w@hs{yXh {YExyqpW{sx\R {Z]ZTz{VwZ^TeIEhh|I|_ckFXR\|EPx]y[F{{ssTyq{@hs{yXhH]tZ}v|~gw}HpD|th^q|gkK|fpkdwI}v`GkJs~KxCqYsTyqpYP]dyX^YVZ|s^W{ssTy\sXVwUZ[xFQ|_R\`F{YExyqpW{sxDR{ {Z]Z~v`J{YExyqpW{sxDSKx{[cbwdWdwKyvxGZG}vxDdsT}vdJwZ|s^W{ssTy\cCQI{y\cCQI{@s[pW{ssZTz]Ghc{y_FP]gZ|s^W{ssTy\hY}Y{JyUA	8F_VCAUE\W{rqUy_u[hryyXjH~[yK~K}bJv~Y~p_UyqrW{\vBjqz{[iy[D{{rqUyqy_P~yX\Yk\fGjjiFPvfGi fEhvbGSKEhia[|s\W{rqUy__[{[_[vr }ubYubD|[W~q ku|fX k[WFiXPhuXYjfbJ|\v_y[D{{rqUyqyEhia[[yQHyAs[rW{rq[Suu Sryy[
GPvfZSeIhb[|s\W{rqUy\qFQ_a[[z |u}[|s\W{rqUy\qJ{[_[dY
u`bqJ}HrW[qK}KGX J}qrG|e_H}azCqXqUyqrYVvHHyX\YVvHHy[D{{rqUyqy Wir^yX\YP\	GjazCqXqUyqrYVXyyXzYq_ :D^UAB
WD_UxssW{^vYks{{YuJs |J~c|`yArYsW{pq[hg^[{Y_[ZcY~r_UxssW{^XDRcY}ZzGkh`[kdGkxdZSbGRIFQ^S[}q]W{pqUx]^[{Y_[JpYkIf^|JsD|ge|Y |IuH}dZYkyF|Z^[grX~dY kYb^xYE{{pqUxsxEhka[~YxQJyArYsW{pq[Rwt SpyxYXh z^kc
Y~r_UxssW{]rDR^cY}ZytY~r_UxssW{]rHxZ]YfX	wccsHgeU|ZsIJ E|YHpqEd]J`yArYsW{pq[UwJJ{Y_[UwJJ{ZGyxssW{pzThp\{Y_[S]Eh`yArYsW{pq[UY{{Yy[r^8E]WBCVG]VyqqUz]tZjqyzZkI|XyK}I}qJ|dgX|s_UzssVy_vBis{yXizYEzyqqUzsx^R~zZ]XT f[iwtG|_bjFZR\}GQx_y[GyzssVyqzBis{yXa}]xZjvag{I}XeF}tQ jq[~]w|ea~J|\iHb^jZQjqyApYsVyqq[Q]dyX_[WX|s_UzssVy\rZWwUX[yDRgKTuvGWs
X|s_UzssVy\rDP^cX[y}tX|s_UzssVy\rHzZ]XdY	wacsI}f}U~ZsH}K E~YI}qqE}d]K}ayApYsVyqq[WwJKyX_[WwJKy[GyzssVyqzVhp]yX_[Q]DjayApYsVyqq[WY{yXy[p^:D\W@C STV TQ
 WRQSW SVpJXRG^TAW]S@H@FY]]\^^WAVSGCYFIG\ADK@WDQAZUSWU@eIBU]_\TURTRPWS	VSS	SlW	SQVT		PUQPTsmV	QSU
RP
WWPS
QT	RU
RSW	RU	WUPRQZGDBBQVVF_V WS\XG^Q\CYUXF
	8G\WCA	S	TVRW
TRQQ  QrPX[_QZE_R^@]^
T^QBKCD[^^^]]UBUQE@ZDKD^CGIBTFSBXWPTWBfJ@W^]^WWPVQRTQ 	UPPPoU	QWRSSlW	
RQTRRUTPPPW
SUSQW
SV			UTRQRXFE@AR W VF]WTS\[E_P^@YU[D:FB]YQ\T VSPUTRWUQ 
VrV]WW_V_]
WPVQRTQ 	UPPPoU	QWRSSlW	
RQTRRUTPPPW
SUSQW
SV			UTRQRXFE@AR W VF]WTS\[E_P^@YU[D:D\W@CS PV	 U WR
S QWp_X\YW]T_VQ W_S@IBGY]_\_\VATSGB[GIE\AFJ@WDQ@[USUU@dKCU__\UURTPQWS
	TRQ	SnW
PU	QQQmU
SRW	PQ	TVRQ	SUPWQPUQ 	W

 VVSS	S[DFACSTTD^UVQ^ZF]S_B[WZG	;F^UA@
 TQR T


 UPPU   	QVSsSZX^SX@STV^QCIBD[\^__\U@UQDB[DKD^BFIBVFR@XWRTWCdK@W^]_UWPWPRVP	URQRoT	QUPSRoV	QSU
RP
WWPSST	RU
RSW	RU	WUPRQZGDBBQVVF_V WS\XG^Q\CYUXF
	8G\WCA	PT	QPRVTRV   RQrT]WV]WFX
U\PBKAD[_\^]_UCWPE@XDKF_CEIBUGSBXWQVVBfH@W\\^WWQVSRUQ 	WPRQmU	SWSRSnWPQU
RRWUPRQVRUSSWS
T		UTPPPXFDB@P VVF]W US\YE_Q\AYUYD	8E\WBC WS
S
	VR	U 
RpV_UVT]VUST	W^QAIBEY]^]_\TAUQFB[EID^@FH@WFP@YUSTWAdKAU^]]UUPUPSWR	URQ	SoVS	PU	V

WVQmU

SPWQS	UTRQ	SWPV	QQUQ W

TVRQ	SYDF@AST UD\UTP^ZD]S^@ZWZE	:D_UAB
UU Q
WQ
V Q qW_UU^UVA W_S@IBGY]_\_\VATSGB[GIE\AFJ@WDQ@[USUU@dKCU__\UURTPQWS
	TRQ	SnWQRU	VWWPmdhTV	USPPTWQPTURRo TV WVQSQU	RW
PSV	P	U WWPS
QZEDBC QVTG_T VQ]XG\Q\B[TXF	8F_VCAUE{{rq[T[z{ryKy[D~qXqUy\qJ{[_UyGVGg[]W`_]B^]\_ hZxCDYEaw^^}h_YCk@]AxBWhcFD{@]TzaGQK_D|bEPfeDi _VfZR\y@hXfXY~p yyqrYkfbYyX\W{\TFjeWDhb\iazCv`_UyqyGPzyX\W{[a}KzCv`_Uyqy@hryyqzH|[rXjfyZr ebI~euJjezDkff_}K|[qE}v~ [f[iejY~p yyqrYkf\YyX\W{[uKy[D~qXqUy\}ZWbyyqyXVibDy[D~qXqUy_\VryyqyQHyAtc\W{rzUjq\{[_Uy_FP\e[|s{{rq[Qu
JVryyqy^Pff\RefEhu[|s{{rq[Suu SryyqzFW_TjSzagWvWDy[D~qXqUy\aCQHyyqy Py}[|s{{rq[S @{[_Uy[z~q_ :D^UAB
WD yxssYVZyxs{I{ZG|rYsW{]rHxZ]W{FUDeY_Vc
\\@\^^\jYz@E[ G`qUa\A^QybjwfKQS{bRx~J	}]\~~GPxdDkdKPgV_Vw[xYE~qZqUx]t[hpyxsxYSdTHUh{Eki[}q{{pq[RwIVpyxs{ |w}[}q{{pq[PgcY}Zq[d`[|wX[|gD}w\_cHdf[}gw|aFdkGwqHt{k^bXxYE~qZqUx]t@hpyxs{HZyAua]W{pzHhYY}Zq[hhd PJyAua]W{pzGkhcY}Zq[UY~r yxssYV{\Ekc{{pzGS\{ZG|rYsW{^XDRcY}Zq[h]^^Q fK}]|]{ZG|rYsW{]rZUwUY}Zq[}Vcke`Z~JyAua]W{pzSxY}Zq[UwJJ{ZG|rYsW{]~GPc{{py[uaB	8GB][Q\
S
 VR VSR	PWTSrD@\D@^_\WQVSRUQ 	WPRQmU	TS
WRQTnWPQU
RRVRUSSWS
T		UTPPPWVQSQZDFCCQTTE_UVQ_XG]S]B[VXF	9F^TCA
QSS V
	UP	U 	UrVGP[JXQ]VW]X]_WWS	W^QAIBEY]^]_\TAUQFB[EID^@FH@WFP@YUSTWAdKAU^]]UUPUPSWR	URQ	SoF\[K^ooV	QSU
RP
WWPS
QT	RU
RSW	RU	WUPRQZGDBBQVVF_V WS\XG^Q\CYUXF
	8G\WCA	VSTVTR	   RWrUEQZH[Z[]@[_WST	W^QAIBEY]^]_\TAUQFB[EID^@FH@WFP@YUSTWAdKAU^]]UUPUPSWR	URQ	SoAV_G]ooV	QSU
RP
U

R
WS	U	PRWP VVSS	SU	PW
QRT	Q 	U
WVQSQZDFCCQTTE_UVQ_XG]S]B[VXF	9D@^ZS^		VQWTSQUPU UVTPVSUTpTFSYIYXY\CY\VUQWQVSRUQ 	WPRQm@U]D\mmU
SRW	PQ	TVRQ	SUPWQPUQ 	W

 VVSS	S[DFACSTTD^UVQ^ZF]S_B[WZG	;F^UA@
WRVP
	T UP
R TsH[SE\UR
U\PBKAD[_\^]_UCWPE@XDKF_CEIBUGSBXWQVVBfH@W\\^WWQVSRUQ 	WPRQm@U]D\mmU
SRW	PQ	TVRQ	SUPWQPUQ 	W

 VVSS	S[DFACSTTD^UVQ^ZF]S_B[WZG	;: