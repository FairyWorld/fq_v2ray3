D]WACWG]UyzpV{]tYjzx{ZkJ|SxH|I }js{AsPpV{ss[in]Z{Z][~S`X~q]UyzpV{]ZDS
`X}YxSWgSwhR~]QGjqg[S`GS@GQ]Q[|x^V{ssUyT]Z{Z][iTd|]gK~nhE|ts}z|Js|n{XhZYFim{ZtQEiT{Xhd`[yPFz{ssUyz{Dhhc[P{QI{AsPpV{ss[S~wSs{yPKhhQDyPFz{ssUyz{FPxyS^X|tcHyPFz{ssUyz{FQI{yRa`ugU}mtI{t{E}SxEtYF}mtVtU}CtX~q]UyzpV{^`AS@x{^`AS@xBqYsUyzpXVx^Ejjx{]DRTdX~q]UyzpV{^k[PxH{WB:O\TAC\F^UyqsWp\wYjq{p[tJ~q wHJ}vsEwep[|s]WprpUy_t@crxyXk pXFyyqsWpr{]R| p[^[R_d cvwD|_``EYR\E[{\y[E{prpUyqx@crxyX|ZvuVJjvkueZKfkDwvxJ~aYt[xK|fZXwvg[juxYted}[{CzXpUyqsY[\gyX]Y]|[|s]WprpUy\pX]vV[[{Fc\K|K{CzXpUyqsYZvKTq{p[`}K{CzXpUyqsYZy|[[xmctyvwHwbpK}v{Iuep|fwHpupXHpXFyyqsWpr{RzYvX{RzYup^UyqsWp_cSugYvX{GR \pXFyyqsWpr{ yX]YtXxyVc3G\WCATF]W{qq^x\t[hqyx[kH~Xy@H |[AekY~s_^xrsW{_vIkr{{Xi	xXE{{qq^xrx_P~	x[]Yk_fLkihFPufLhgEhubLRHEhjaP}p]W{qq^x\^[{X_P| feA~eQD|Hu	hX hXXQ}fw|HWMk\c bRet[eyNxXE{{qq^xrxEhjaP~XxQKyJrXsW{qqPRvt SqyxX@Q HQS\cF{[GrxrsW{qzNSx {X_PucJ{[GrxrsW{qzNRH{{YictgWf}Nxu{GXyM|uYDfu^|uUHuP}p]W{qq^x_`CQKyx_`CQKyJrXsW{qqPUy^Ghayx\FP_eP}p]W{qq^x_kY}[y@xVB	8D]\BBWGVVxqqU{]Zkqy{Z`I}XyK|I|aJ}dpX}s_U{sxVx_vBhspxXi{YNzxqqU{ss^S~{ZVXU f[hwG}_bkMZS\}GPs_x[Gy{sxVxqzBhspxXy |tZIv}~d^H~vWF|tt|a[doZ}ea|]w\|e}dQYhayAqYxVxqq[P]oxX_[VtX}s_U{sxVx\rZVw^X~[yDVUHka[~qVVxqqU{^{GR\a[}Ypv}[~qVVxqqU{^{KxX_[f[ tcaqJdtV|XqKY	F~a JcxF~v_HcpBr[qU{sxXUuHH{ZVXUuHH{YNzxqqU{ssTjr^{ZVXS_	GhcpBr[qU{sxXU[y{ZpXr\ 8FUTBA
ZWT
WS		
U[S QT	ZTrH[PEWVC
T_QBKBDP^_^]\UBTQE@[D@E^CFIITFSBX\PUWBfK@\_]^W\PVPRTQ 	 TPQ PnU
QSTW S
WSRWqoT

XPWPSUTRZSW PW	PQU P \
TWRQ	XYEF@AXT TD\TTQ^QD\S^@[WQE:D^UJBPV_PU
 WPXS 	SqRZY\SXL\P\B_\W\SKHAFY]\W^_WAWSLCXFIF\JEK@WDZAZUSVUKeHBU\_WTUR_SPWX	WSR	Sm\ST	QQZnU
PSW
[P	WVSR	SUP\
QSTQ 	T
 WVPSPZDFBCPT_E_U VZ_YG]S\BPVYF	8DK^[S^]	TPR\WP 
UVS	T
pU_U^\T]^UR_SPWX	WSR	Sm\ST	QQZnU
PSW
[P	WVSR	SUP\
QSTQ 	T
 WVPSPZDFBCPT_E_U VZ_YG]S\BPVYF	8FUTBA
Q	ST	WU[Q X Ur][^[^^V]US
U\QB@AE[_\^V_TCWQEKXEKF^CEHBUFSIYWQVWBmHAW\]^\WPVSSUQW[RQmUS\SSS
nW
PPU
RSWT[RQWRU	SS\ST	
TTPQ PYFDBA
P V VM\W TSWYD_Q\@Y^YE	8D\\BBWSPW	WRSW		S_PqQX[\QQCQV
T\S@K@MX^\\]^\BWSG@YMHF\AD@ATDQBQTPVU@fIIT\_\WTRTR[TS  WPSPmW SWRQQfT

XPWPSUTRZ	QW PW	PQU P \
TWRQ	XYEF@AXT TD\TTQ^QD\S^@[WQE:D^UJBSV RRP
	_WPT 	P	XqV_UU_UEZ\_R@IBFYV_\_\WJTRGB[FIE]AFK@\EQ@ZUXUT@dKBU_^\UUSTPP\S	TRQ	XnWPU	ZPQmU	SS\	PP	TWRQ	XT[W
QPUQW WVSR	SZDMABS_TD_UWQ^ZG]X_C[WZF	 ;G^UAA

UPZ

 TP
W
  P	rTVVTV_UWZWUWRCK@F[_W_]^WC\RD@YFKM]BDKBUERBZWQ]TCfIBWW^_WWSWRPUP \PSQfTP SWT	U	_SoW	QSUSP\WPSQT	RT
SXW	S UWT[RQZFDIBQ VWF_WWR\XG_QWCXUXF	3G]WCA WW X	
TST SrU]\V\WUC
U\QB@AE[_\^V_TCWQEKXEKF^CEHBUFSIYWQVWBmHAW\]^\WPVSSUQW[RQmUSP\T
	T	TRnfjWU WPRRWUSSV\P	P f  VTU_SQS\PTSQTS   W	
UTRZSXFF@JS TWE]W_R_ZE_S^KXVZD:O\TAC\FyyqsY]Xxyq{IpXF|s[sWp_sHyX]WpDTEeYTTb
]^@W_^]aXzAG[ Lbu\\~j]P@iB_Bz@^kaDFxB_]ycESH]Fu`GRegF`]TeX[_{Bj Z veZ[|s{prp[ie`[p[^Uy_VDcfUFja^`bxAtc]Wpr{ERx p[^UyXc tHxAtc]Wpr{Bjq{prxJ~XpZce{X}qvf`K|fwHcfxFied]tH~XsGtu|}XdY`fh[|s{prp[ie^[p[^UyXwIpXF|s[sWp_XUa{pr{ZTj`FpXF|s[sWp\^Tq{pr{SK{C}`^Uyqx \is^yX]Wp\DR_gYupyyqsYXvHTq{pr{\Red^[fdGj wYupyyqsYZvwQq{prxDU\VhZyceUuUFpXF|s[sWp_cASK{pr{RzYupyyqsYZByX]WpXx|s\3G\WCATF{{qqPUX{{qy@xXE~q[q^x_pJ{X_^xDWGgP\Ta_^I_\\_ 
i[xCGY	DbsWc^C\S{khudIXPy` Qz}}H ~_U}|ESzfMhfISeTVUuY{[GwrXsW{_vRkr{{qzPPfVJVjyLhkY~s rxrsYQu	@Ur{{qy	uY~s rxrsYSeaP~XsY|fbRuZY eM~u^]|a A|fdY~eucD|fiN|usJ|vyh\`Z{[GwrXsW{_vIkr{{qyA|X{Cvc_^xrxJk[P~XsYkjf	SH{Cvc_^xrxEhjaP~XsYV}P}p{{qqPUy^GhayxrxEP UxXE~q[q^x\ZFQaP~XsYk_\WRdI~_~TxXE~q[q^x_pXVuWP~XsY~T`i|gbS}H{Cvc_^xrx Pz}P~XsYVuHCxXE~q[q^x_|ESayxr{Yvc@ ;E@_XS^	ZTP_PP 
R
UV QpMC^FB]]UUSTPP\S	TRQ	XnW	VPU	[SVmU	SS\	PP	T[W
QPUQW WVSR	SU_SQSXMEAASW VF]\TS\ZETP_@YUZD ;D\WACSQPU

  WR\ 
 	Vp_DRYH[S__T_Z_\U^PUWRCK@F[_W_]^WC\RD@YFKM]BDKBUERBZWQ]TCfIBWW^_WWSWRPUP \PSQfE^YI]mfT

XPWPSUTRZSW PW	PQU P \
TWRQ	XYEF@AXT TD\TTQ^QD\S^@[WQE:D^UJB	_P	  
	]UWP   	PUqWGSYJYSX_BY\UZWUWRCK@F[_W_]^WC\RD@YFKM]BDKBUERBZWQ]TCfIBWW^_WWSWRPUP \PSQfBT]E^mfT

XPWPSW	P U	 P\RPT	R	TTPQ PWSUXPWXW		 	U_SQSXMEAASW VF]\TS\ZETP_@YUZD ;FB]XQW
TSTVQSVR\VT]ST
QVVyWDQ[J[ZP_A[^UWXUSTPP\S	TRQ	XnBW_G^onW
PPU
RSWT[RQWRU	SS\ST	
TTPQ PYFDBA
P V VM\W TSWYD_Q\@Y^YE	8D\\BB
TPTS WWR	P 	 	]qJYPG^VP\_R@IBFYV_\_\WJTRGB[FIE]AFK@\EQ@ZUXUT@dKBU_^\UUSTPP\S	TRQ	XnBW_G^onW
PPU
RSWT[RQWRU	SS\ST	
TTPQ PYFDBA
P V VM\W TSWYD_Q\@Y^YE	88