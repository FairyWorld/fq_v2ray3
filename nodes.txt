D]WABWG]UxqsU{]tYkq{{ZwJq|I|a}c{Ar[sU{ss[he^Y{Z][Xc[~q]UxqsU{]ZDRc[}Yx[ke^V]AkeXhcYkuH~]^Uq{AqYsUxqs[Sgc[~[x[wd^kehZI~vg~d`YX{F}dg [XZHh_`_Jt[|uc[~q]UxqsU{]^Uq{{^VHx[Ey{ssUxqxEkh`]xX][~ZUq
[~q]UxqsU{^pDR\c[}Y{v[~q]UxqsU{^pHxX][f[wcasJJsU|XsKYJ|[KYsEf]Ec{Ar[sU{ss[UuJH{Z][UuJH{YEyxqsU{sxTjp^{Z][S_Ghc{Ar[sU{ss[U[{{Z{[r\8F_WBAUE]V{qsUy_tZhq{yXkI~X{K~KI|qJ}XwX~s]UyqsV{_tBjq{{Xky[Ez{qsUyqx^P|yX]XP_djutG~_`i FZP\GRx_{[EyyqsV{qxBjq{{XgJ~Xg_x_|fQ hfUF~ukF|a[je|[~egvU}vdZiX`X}a{As[sV{qs[R_d{X][TX~s]UyqsV{\pZTuUX}[{DS dBh[
[|s]V{qsUy\pGQ\c[[{|v[|s]V{qsUy\pK{X][dYt`asJ}fgVXsK}[I[K}[sF|f]E}a{Bq[sUyqsXVuJHyX]XVuJHy[Ez{qsUyqxWjp^yX]XP_Gja{Bq[sUyqsXV[{yX{Xq\:D_TAAWE^U{qsW{_wYhq{{XhJ~X{I|Kq }axAq[sW{qp[ke^[{X^[|XcY~s^U{qsW{_YDQcY}[{Q\d SukPu\Q|GhzdZS cGQKFQ_R[~s]W{qpU{_^[{X^[kHV\h_cX| kD|eg_kK }e|~fY hvpFhvU }ed |fpYhvY{[E{{qpU{qxEhj`[}[xQKxAq[sW{qp[Qut Sqx{[\Wzc^P\|@V_dD{[E{{qpU{qxGP{{X]Y|v`H{[E{{qpU{qxGQKx{Y``wdUfwH{vxEX{DfxFX{WvdvwY~s^U{qsW{\cAQK{{\cAQK{Cq[pU{qsYVz]Eha{{_DP_gY~s^U{qsW{\h[}[{I{UA8D_UAAWE_U{rsU{_vYhr{{XiJ~[{K|K|r }ayAqXsU{qq[kf^Y{X_[|[c[~s_U{rsU{_XDQc[}[zhfxYkeGhydXS bGQHDQ_S[~p]U{qqU{\^Y{X_[kKd[kejXhesFkf\^bkHT_~fw}vqFhuUHeEk[dZ|ei{XEy{qqU{rxGhja[}XxQKyAqXsU{qq[QvtSqy{XSu	KPd\Sq[~p]U{qqU{_pDQ\a[}X{|v}[~p]U{qqU{_pH{X_[fZw`aqJeUXqKXJ[ KXsE|f_Eb{Aq[qU{rs[VuHH{[][VuHH{XEy{qqU{rxWjr^{[][P_	Ghb{Aq[qU{rs[V[y{[{[q\ 8G^WAA
QTW
WS



TPP QTQWrH[PD\UC
W\QBKBE[]\^]\TAWQE@[EKF^CFHBWFSBYWSVWBfKAW\]^WWPVPSWQ WPQSmU
PPTWP
WPRWqnW

SSWPPUTSQSWPW
SQTS W
WTRQSZFF@AS T TE_WTQ_ZG_S^@[VZF:D^TAAPWTPU
	
WPSPRrQZY\SYG_S\B_]W\R@KBFY]\\]\WAWRG@[FIF]AFK@WEQBZUSVT@fKBU\^\WUSTPPWS 	WPQ	SmWSW	QPQmU
	SSW
PP	WWPQ	STPW
QSWQ W
WVPRSZDFBBSTTF_U WQ\ZG]S\C[UZF	8E@]XS^V
T SQWTP VVS
W
pU_TU_W]^USTPPWS 	WPQ	SmWSW	QPQmU
	SSW
PP	WWPQ	STPW
QSWQ W
WVPRSZDFBBSTTF_U WQ\ZG]S\C[UZF	8G^WAA
PPW	
TTPQ SVr][^ZU]U]USU\QCKBF[_\_]\WCWQD@[FKF^BFKBUFRBZWQVWCfKBW\]_WWPWPPUP WPQQmTSWSSRmW
SSU
SPWTPQQWRT
SSWS WWTPQSZFDBAS V WF_W TR\ZG_Q\@XUZF	8D]WAATPPW	

WSPT	RTSrQX[\PZ@QVW\S@KAF[]\\]_WAWSG@XFKF\AEKBWDQBZWSVU@fHBW\_\WWRTSPWS WPRSmWSWQQQ mW

SSWPPUTSQ
QWPW
SQTS W
WTRQSZFF@AS T TE_WTQ_ZG_S^@[VZF:D^TAASVQQP
TWP
WPSrU_UU_TFYW\Q@IBFX]\\_\WAWQGB[FHF^AFKAWFQ@ZTSVW@dKBT\]\UTPTPPWSWRQSmWSUQSQmT

SSW
PPWTRQSWPW
PSUP W
WWPQ	SZEFBAST TD_T TQ^ZG\S\@[WZF8D^UAA
UP	Q

WP
W P	rU]UWV_UWQTT\Q@K@F[^\\]^WBWQG@YFKF^ADKBTFQBZWPVW@fIBW\]\WWPTRPTS WPSPmWPPWU
UTPoW	
QST
PPWTPSPW	SW
SSW	SU	WTPQQZFEBAQ W TF_W TQ\XG_P\@[UXF8D^WCATW  S

 WPU PrU\WU_WUCU\QCKBF[_\_]\WCWQD@[FKF^BFKBUFRBZWQVWCfKBW\]_WWPWPPUP WPQQmTPPWT
W	TSmejW
V WSQRWT
PSVWP	Pm   W TTTPQSWPWSPWS W	
 UTSQSXFFAAS T TF]WTQ\ZE_S_@[UZD;D_WACWEyyqsXV[{yq{H{[E|s[sV{\pHyX]V{GWEeX_Wa
]^A\\^]j[zAG[Gav\\~j\[CjB_BzAUhbDFxB^Vz`ESH]G~cGRegGk ]TeYP\xBj Z}fY[|sz{qs[ie`Z{X]Uy_VEheVFja_ka{Atc]V{qxERx{X]UyXcK{Atc]V{qxBjq{{q{J~Xp[hfxX}q}ecK|fwIhe{Fied\K~XsFv}XdXkek[|sz{qs[ie^Z{X]UyXwH{[E|s[sV{\|XUa{{qxZTj`G{[E|s[sV{_^Tq{{qxSK{Bvc]UyqxWjp^yX]V{_DR_gX~syyqsXSuHTq{{qx\Red_PegGj wX~syyqsXQutQq{{q{DU\ViQz`eUuUG{[E|s[sV{\`ASK{{qxRzX~syyqsXQ ByX]V{[{|s\8D_WCAWE{{qp[V[{{qxK{[E~q[pU{\pJ{X^U{GWGf[_Wa_^B\\\_j[xCGXGasWb]C\Sz`kudHSSz` Qz|~K ~_ ^~ |ESzgFkeISeU]VvY{[F|q[sW{_wYhq{{q{[SeVJVjxGk kY~sy{qsYQuKVq{{qx|vY~sy{qsYSe`[}[sY|fcY|vZY dF}v^]|aJedY~et| cD|fhEvsJ|vx k_`Z{[F|q[sW{_wBhq{{qxJ[{Cvc^U{qxJkZ[}[sYkjgPK{Cvc^U{qxEhj`[}[sYV|[~s{{qp[Vz^Ghax{qxEP ^{[E~q[pU{_ZFQ`[}[sYk_]\QdI~__{[E~q[pU{\pXVuV[}[sY~Uc i|gcX~K{Cvc^U{qx Pz|[}[sYVuIH{[E~q[pU{\|ESax{q{YvcA8F@_XS_	QUPTSP 
SVV QqF@]FB]\^TPTPPWSWRQSmW	WSUPPVmT

SSW
PPWPW
PSUP W
WWPQ	STTPQSYFFBAS T VF\W TS\ZD_S\@YUZE8D\WABSQPV

WRW	VqTGQYH[S^TW\Z_\UUST\Q@K@F[^\\]^WBWQG@YFKF^ADKBTFQBZWPVW@fIBW\]\WWPTRPTS WPSPmF]YI]m mW

SSWPPUTSQSWPW
SQTS W
WTRQSZFF@AS T TE_WTQ_ZG_S^@[VZF:D^TAATS
  
VVWPPTrTGSYJXX[\BY\UQTT\Q@K@F[^\\]^WBWQG@YFKF^ADKBTFQBZWPVW@fIBW\]\WWPTRPTS WPSPmAW]E^mmW

SSWPPW	
S T
 PWRPW	SWTPQSWPU	SSWS W
	TTPQSYFFBAS T VF\W TS\ZD_S\@YUZE8FB]XP\
WSTVQSVSW VTVPW
QVWrTGQ[J[[[\B[^UVSTPTPPWSWRQSmAW_G^n mW
SSU
SPWTPQQWRT
SSWS WWTPQSZFDBAS V WF_W TR\ZG_Q\@XUZF	8D]WAAWSTS	TWS
P  VrJYPG_USW\Q@IBFX]\\_\WAWQGB[FHF^AFKAWFQ@ZTSVW@dKBT\]\UTPTPPWSWRQSmAW_G^nmW
SSU
SPWTPQQWRT
SSWS WWTPQSZFDBAS V WF_W TR\ZG_Q\@XUZF	88