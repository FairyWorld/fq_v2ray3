D]W@C	WG]TypqS{]tXjpy{ZkK|YyM|I|YiC{YExypqS{sx[Qda]}Y{~pyGqYsTypq]SwITpy{^V_i^b\PIXTd~FhwI|^	MhI{@sZqS{ssZQda]}Y{i^u|t_iJY|tx^|gbY|tUGiYahcK~tv^ZgiY[M}tZ|r_S{ssTy^XVs{y]TN{YExypqS{sxDikb[{Z]Z| T[hh`\jkyB{YExypqS{sxDR z{Z]Z~waN{YExypqS{sxDSJy{[cbveSdwIywyCZG}w}@tcT}witwZ|r_S{ssTy]bGQI{y]bGQI{@sZqS{ssZT{\Chc{y^BP]gZ|r_S{ssTy]i]}Y{JyT@8F_VC@
UE\WzsuUy_u[is}yXvH}s ~K|s }[zCpYuUyqrYjgXYyX\Y}Ze[|s\WzsuUy_[FPe[[yYig^T_
CigXja[iwH|_\Ws}As[rWzsu[QebY|Y~^}ufH~wyiK\~wrZ|fa\~Z_FifTG~sH}vuX~tPX} uY|ge[|s\WzsuUy_\Ws}y\WJzYCyyqrWzs~Eija_zZ[[|}Zig^S\XFzYCyyqrWzs~ERy zZ[[~vbJzYCyyqrWzs~ESKzz[bbwfW~dyEyvzG~ZyF}v~D~teU}vj~tq[|s\WzsuUy\aCPI}y\aCPI}As[rWzsu[Tz_Gic}y_FQ]a[|s\WzsuUy\jY|Y}KyUC	9FYWCA	UC]W{pqTyYt[hpyy^kH~YyJ~M ~YuI}g{CqZqTywsYkd\Xy^]Y|YaZ|u]W{pqTyYZFQ aZ]xEhkbXic
Eh{fYQ`EQJESYQY~r_TywsW{^\Xy^]Y}t~Y}d[|YaGi{I|Z }^w~dvYiNcD^y~`pX}w}~NY {ZGxywsW{pzFjlcY}Zz SM{CqZqTywsYQtvQw{{Z	SYtZSJZ|u]W{pqTyZpFQ]aZ]{ |w}Z|u]W{pqTyZpJ{Y_Zd_u``qK}`gWYqJ}MGJ D~wsG|Y_D}g{CqZqTywsYVtHIy^]YVtHIy]E{{pqTywx Wkr_y^]YP^	Fjg{CqZqTywsYVZyy^{Yq] :B_UA@
QE_UzsrW}_vYisz}XiJZzIzKJ}cHyXy[q\W}qqUz]u@nqyzZj }[GyzsrW}qz]Q} }X_[WxyPuX_WgKEnj~H]am DYQ^~EVz\zYD{}qqUzsy@nqyz]zzvv_}JeZxf\^~bDzueKicm_j[daXzfejZiZmea}czCw[qUzsrYV_fzZ\YP}[q\W}qqUz^qXPuW[|YzFn_fGjfF}[GyzsrW}qzEQy }X_[}tbJ}[GyzsrW}qzEPIz}YbaufWyfuJztzGyX}F~t~DyvaU~tjyvu[q\W}qqUz^aCWKyz^aCWKyApYrW}qq[Wx_Gnayz]FV_e[q\W}qqUz^jY{[yKzWC	>D\W@C	 STVUU
WRQRV  SVpKYVG^TA	 W]SAIDFY]]]_ZWAVSFB]FIG\@@K@WDP@ZUSWUAdMBU]_]UURUVPWR	VRW	SlVSQVU	PQQQUwmVQSUVP
VVPS
QU	RQ
RRW	R	UWUQSQZGDCCQVRF_VVW\XG^Q]B]UXF
	9FXWCA	RTVRV
UVQQ  	QrPXZ^UZE_R^AY^
UZQBKCDZ_Z^]]UCQQE@ZDJ@^CGICU	FSBXVQPWBfJ@VZ]^WVPVQRUQ 	
QPP
QkU	UW
SSSlV
RQURR
QTPP
QW
RURUW
RV		UUVQRXGDDARV VF]VTS\[E^QZ@YU[D
	>FB]YQ]
T	RSP UTR W TU 
VsWYWW_V^\VPVQRUQ 	
QPP
QkU	UW
SSSlV
RQURR
QTPP
QW
RURUW
RV		UUVQRXGDDARV VF]VTS\[E^QZ@YU[D
	>D\W@C	S PV	
UWR
R  QWp^YXYW]T_WU V^W@IBGY\^	\_\V@UWGB[GIDXAFJ@V@Q@[URTQ@dKCU^[\UUVTPQVS
	U RQ	RoW
QU	PUQmUSRVPQ	URRQ	RQQWQQUQW
VVRW	S[DG@GSUTD^URQ^ZF]R^F[WZG	
:B^UA@
 TQRU


QPPU 
 QVSsS[YZSX@SU
 V^PBMBD[\^^[\U@UPEF[DKD_CFIBVGSDXWRTVB`K@W^\^QWQVPRVQ	UVQRoU	QQPRSoVQSUVP
VVPSSU	RQ
RRW	R	UWUQSQZGDCCQVRF_VVW\XG^Q]B]UXF
	9FXWCA	QP	QPRVUVV  VQrT]VWYWFX
U\PBJ@@[_\^\^QCWPEAY@KF_CDMBUGSC\WQVVBgIDW\\^VWQVRVUQWQSQmUSVSRSoWQUU
RVWUQSQV	 RUSSV	S
U	 QTPP
Q\FDB@ Q VVGYW US]XA_Q\AYTX@	8E\VCG VR
SVRQ 
R
	tV_UVT\WQST	W^QAICD]]^]_]UAUQFBZDMD^@GIDWFP@XQSTWAdJ@Q^]]UQPUQRWR	URPSoVR 	PUV

VVQlQ

RQWQRUTRPSW
PVUQU
U V	

URRQ	RX@F@ART UD]QTP^[EYS^@ZW[D:D_U@CUUQWQ	V  Q pS_UU^UWE V^W@IBGY\^	\_\V@UWGB[GIDXAFJ@V@Q@[URTQ@dKCU^[\UUVTPQVS
	U RQ	RoWQ	VU	WW
VPmdhUV	QSPQUWQQPUR
Vo TVWVQS	UU	VWQSV	Q	U
 VVPS
Q[D@BC QRTG^U VQ]XF]U\B[TXG	8F_VC@
UE{zsu[T[zzs}Ky[D~pYuUy\qJzZ[UyGVFc[]W`^\B^]\^hZxBE]Eaw^_|l_YCk@\@|BWhcFEzD]TzaGPJ[D|bEQgaDi _WgZR\y@i\fXYqyyqrYjgfYyX\Wz]PFjeWDic\iazCwa[UyqyGQ~yX\WzZe}KzCwa[Uyqy@is}yqzH}ZvXjfyZ~sebIdqJjezDjgb_}K}ZuE}v~ ~Zb[iejYqyyqrYjgXYyX\WzZqKy[D~pYuUy\}ZVc}yqyXWhfDy[D~pYuUy_\Ws}yqyPI}Atc\Wzs~Ujq\zZ[Uy_FQ]a[|s{zsu[Qu
JWs}yqy^Qgb\RefEiq[|s{zsu[Suu Rs}yqzFV^PjSzagVwSDy[D~pYuUy\aCPI}yqy Qxy[|s{zsu[S @zZ[Uy[z~p^:D^U@CWD xywsYVZyyw{I{ZG}s]sW{]rIy^]W{FUEeY_Vc]X@\^_]jY{AA[ G`qTa\A_UybjwgKQS{bS|~J	|Y\~~FQ|dDkdJQcV_Vw[y]E~qZqTyYt[hpyywxYSdTITl{EkiZ|u{{pqZSsIVpyyw{ |w}Z|u{{pqZQccY}ZqZ~``[|wXZ}gD}w\^~gHdfZ|cw|aG~`kGwqI~p{k^bYy]E~qZqTyYt@hpyyw{HZy@te]W{pzIiYY}ZqZild PJy@te]W{pzFjlcY}ZqZTY~r xywsYV{\Djg{{pzFR\{ZG}s]sW{^XEScY}ZqZiY^^Q fJ|Y|]{ZG}s]sW{]r[TsUY}ZqZ|Vcj~a`Z~Jy@te]W{pzR|Y}ZqZTsJJ{ZG}s]sW{]~FQg{{pyZteB	8GB\ZU\

S
V V VSRPWTWrD@\DA__\ WQVRVUQWQSQmU
TS
VRQT oWQUU
RVV	 RUSSV	S
U	 QTPP
QWVQS	UZDFCCUTUD_UVP^\G]S]BZW\F	9F_UGA
QRRVUQU 	
TrVGP[KYU]VW]X\^SWS	W^QAICD]]^]_]UAUQFBZDMD^@GIDWFP@XQSTWAdJ@Q^]]UQPUQRWR	URPSoF\[J_koVQSUVP
VVPS
QU	RQ
RRW	R	UWUQSQZGDCCQVRF_VVW\XG^Q]B]UXF
	9FXWCA	 VSTVUV	  VWrUEP[L[Z[]@Z^SST	W^QAICD]]^]_]UAUQFBZDMD^@GIDWFP@XQSTWAdJ@Q^]]UQPUQRWR	URPSoAV_F\koVQSUVP
Q

RWRU	QVW
P VVRW	SUPV
QRUQ 	Q

WVQS	UZDFCCUTUD_UVP^\G]S]BZW\F	9DA_^S^ VQVPSPTPU TRTPVRTTpTFSXH]XY\CY]WUQ WQVRVUQWQSQm@U\EXmmUSRVPQ	URRQ	RQQWQQUQW
VVRW	S[DG@GSUTD^URQ^ZF]R^F[WZG	
:B^UA@
WRVQ
	TQP
R TsHZRA\UR
U\PBJ@@[_\^\^QCWPEAY@KF_CDMBUGSC\WQVVBgIDW\\^VWQVRVUQWQSQm@U\EXmmUSRVPQ	URRQ	RQQWQQUQW
VVRW	S[DG@GSUTD^URQ^ZF]R^F[WZG	
:>