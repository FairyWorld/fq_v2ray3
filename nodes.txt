D]W@C	WG]TypqS{]tXjpy{ZkK|YyM|IK~`LZ{Z|r_S{ssTy^vDhs{yYi{YExypqS{sx\R ~{Z]ZT{zVwZ^TdHAhh|I|^bkFXR]}APx]yZG{ssTypzDhs{y^y |tt^~If^~d^_}a@|wgJj`  k]hZ|gb\|dgiYj^kgc ~`yGqYsTypq]P]dyY_]VZ|r_S{ssTy]r\VwUZZyBh]dFieB{YExypqS{sxDR z{Z]Z~waN{YExypqS{sxDSJy{[cbveSdwKywyCZG}w}@tcT}wSJwZ|r_S{ssTy]bGQI{y]bGQI{@sZqS{ssZT{\Chc{y^BP]gZ|r_S{ssTy]i]}Y{JyT@8F_VC@
UE\WzsuUy_u[is}yXjHZ}K~KZmEy[D{zsuUyqyXRge[[z}s}As[rWzsu[Qu
JWs}y\W\j]fZRK[Wgz@juJ]KjKzCpYuUyqrYRge[[zj]q ~ u\jI_~vy]df_~vTDjZejaH}wrX}XfjZ_Kv~Yq[UyqrWz]^Tqzz^PHy[D{zsuUyqyGjhf]yX\YP]jja_ih}Dy[D{zsuUyqyGQ~yX\Y}teHy[D{zsuUyqyGPI}yY`auaU}fvJzt}E}X~D~tyF}vbW~tW}HvYq[UyqrWz^fASKzz^fASKzCpYuUyqrYWxXEjazz]DR_fYq[UyqrWz^m[[zIzWD:D^U@CWD_TywsW{^vXjw{{YiK|^{I|J|^wJ`y@s]sW{pqZic^[{Y_Z~^cY~r_TywsW{^XEScY}ZzFjl`[kdFj|dZSbFSMFQ^SZ|u]W{pqTyY^[{Y_Zs|ZfX~^cDkyJ~] Yu|ctZkIaG}Y{ |gr[p|I[y]E{{pqTywxEhkaZ]xQJy@s]sW{pqZSst Spyy] Q^vYQM
Y~r_TywsW{]rESZcY}Zy~pY~r_TywsW{]rIy^]YfX	vbgsHgeT}^sIJ D}MG|pqD~N]J`y@s]sW{pqZTsJJ{Y_ZTsJJ{ZGxywsW{pzUlp\{Y_ZRYEh`y@s]sW{pqZT]{{YyZsZ8E]VCGVG\W}qqUz]u[nqyzZvHzq}I{q~YzCw[qUzsrYme\YzZ\YzXa[q\W}qqUz][FWa[|YyYne^W]
CneXic[nuH]\PqyApYrW}qq[RgbY{[z^~wfHyu}jI\yuvZda\yX[FjdTGyq H~tuXyvTX~uY{ea[q\W}qqUz]\Pqyz^WJ}[GyzsrW}qzEjha_}X_[}Zne^P^XF}[GyzsrW}qzEQy }X_[}tbJ}[GyzsrW}qzEPIz}YbaufWyf}EztzGyX}F~t~DyvaU~tPyHu[q\W}qqUz^aCWKyz^aCWKyApYrW}qq[Wx_Gnayz]FV_e[q\W}qqUz^jY{[yKzWC	>D\W@C	 STVUU
WRQRV  SVpKYVG^TA	 W]SAIDFY]]]_ZWAVSFB]FIG\@@K@WDP@ZUSWUAdMBU]_]UURUVPWR	VRW	SlVSQVU	PQQQUwmVQSUVP
VVPS
QU	RQ
RRW	R	UWUQSQZGDCCQVRF_VVW\XG^Q]B]UXF
	9FXWCA	RTVRV
UVQQ  	QrPXZ^UZE_R^AY^
UZQBKCDZ_Z^]]UCQQE@ZDJ@^CGICU	FSBXVQPWBfJ@VZ]^WVPVQRUQ 	
QPP
QkU	UW
SSSlV
RQURR
QTPP
QW
RURUW
RV		UUVQRXGDDARV VF]VTS\[E^QZ@YU[D
	>FB]YQ]
T	RSP UTR W TU 
VsWYWW_V^\VPVQRUQ 	
QPP
QkU	UW
SSSlV
RQURR
QTPP
QW
RURUW
RV		UUVQRXGDDARV VF]VTS\[E^QZ@YU[D
	>D\W@C	S PV	
UWR
R  QWp^YXYW]T_WU V^W@IBGY\^	\_\V@UWGB[GIDXAFJ@V@Q@[URTQ@dKCU^[\UUVTPQVS
	U RQ	RoW
QU	PUQmUSRVPQ	URRQ	RQQWQQUQW
VVRW	S[DG@GSUTD^URQ^ZF]R^F[WZG	
:B^UA@
 TQRU


QPPU 
 QVSsS[YZSX@SU
 V^PBMBD[\^^[\U@UPEF[DKD_CFIBVGSDXWRTVB`K@W^\^QWQVPRVQ	UVQRoU	QQPRSoVQSUVP
VVPSSU	RQ
RRW	R	UWUQSQZGDCCQVRF_VVW\XG^Q]B]UXF
	9FXWCA	QP	QPRVUVV  VQrT]VWYWFX
U\PBJ@@[_\^\^QCWPEAY@KF_CDMBUGSC\WQVVBgIDW\\^VWQVRVUQWQSQmUSVSRSoWQUU
RVWUQSQV	 RUSSV	S
U	 QTPP
Q\FDB@ Q VVGYW US]XA_Q\AYTX@	8E\VCG VR
SVRQ 
R
	tV_UVT\WQST	W^QAICD]]^]_]UAUQFBZDMD^@GIDWFP@XQSTWAdJ@Q^]]UQPUQRWR	URPSoVR 	PUV

VVQlQ

RQWQRUTRPSW
PVUQU
U V	

URRQ	RX@F@ART UD]QTP^[EYS^@ZW[D:D_U@CUUQWQ	V  Q pS_UU^UWE V^W@IBGY\^	\_\V@UWGB[GIDXAFJ@V@Q@[URTQ@dKCU^[\UUVTPQVS
	U RQ	RoWQ	VU	WW
VPmdhUV	QSPQUWQQPUR
Vo TVWVQS	UU	VWQSV	Q	U
 VVPS
Q[D@BC QRTG^U VQ]XF]U\B[TXG	8F_VC@
UE{zsu[T[zzs}Ky[D~pYuUy\qJzZ[UyGVFc[]W`^\B^]\^hZxBE]Eaw^_|l_YCk@\@|BWhcFEzD]TzaGPJ[D|bEQgaDi _WgZR\y@i\fXYqyyqrYjgfYyX\Wz]PFjeWDic\iazCwa[UyqyGQ~yX\WzZe}KzCwa[Uyqy@is}yqzH}ZvXjfyZ~sebIdqJjezDjgb_}K}ZuE}v~ ~Zb[iejYqyyqrYjgXYyX\WzZqKy[D~pYuUy\}ZVc}yqyXWhfDy[D~pYuUy_\Ws}yqyPI}Atc\Wzs~Ujq\zZ[Uy_FQ]a[|s{zsu[Qu
JWs}yqy^Qgb\RefEiq[|s{zsu[Suu Rs}yqzFV^PjSzagVwSDy[D~pYuUy\aCPI}yqy Qxy[|s{zsu[S @zZ[Uy[z~p^:D^U@CWD xywsYVZyyw{I{ZG}s]sW{]rIy^]W{FUEeY_Vc]X@\^_]jY{AA[ G`qTa\A_UybjwgKQS{bS|~J	|Y\~~FQ|dDkdJQcV_Vw[y]E~qZqTyYt[hpyywxYSdTITl{EkiZ|u{{pqZSsIVpyyw{ |w}Z|u{{pqZQccY}ZqZ~``[|wXZ}gD}w\^~gHdfZ|cw|aG~`kGwqI~p{k^bYy]E~qZqTyYt@hpyyw{HZy@te]W{pzIiYY}ZqZild PJy@te]W{pzFjlcY}ZqZTY~r xywsYV{\Djg{{pzFR\{ZG}s]sW{^XEScY}ZqZiY^^Q fJ|Y|]{ZG}s]sW{]r[TsUY}ZqZ|Vcj~a`Z~Jy@te]W{pzR|Y}ZqZTsJJ{ZG}s]sW{]~FQg{{pyZteB	8GB\ZU\

S
V V VSRPWTWrD@\DA__\ WQVRVUQWQSQmU
TS
VRQT oWQUU
RVV	 RUSSV	S
U	 QTPP
QWVQS	UZDFCCUTUD_UVP^\G]S]BZW\F	9F_UGA
QRRVUQU 	
TrVGP[KYU]VW]X\^SWS	W^QAICD]]^]_]UAUQFBZDMD^@GIDWFP@XQSTWAdJ@Q^]]UQPUQRWR	URPSoF\[J_koVQSUVP
VVPS
QU	RQ
RRW	R	UWUQSQZGDCCQVRF_VVW\XG^Q]B]UXF
	9FXWCA	 VSTVUV	  VWrUEP[L[Z[]@Z^SST	W^QAICD]]^]_]UAUQFBZDMD^@GIDWFP@XQSTWAdJ@Q^]]UQPUQRWR	URPSoAV_F\koVQSUVP
Q

RWRU	QVW
P VVRW	SUPV
QRUQ 	Q

WVQS	UZDFCCUTUD_UVP^\G]S]BZW\F	9DA_^S^ VQVPSPTPU TRTPVRTTpTFSXH]XY\CY]WUQ WQVRVUQWQSQm@U\EXmmUSRVPQ	URRQ	RQQWQQUQW
VVRW	S[DG@GSUTD^URQ^ZF]R^F[WZG	
:B^UA@
WRVQ
	TQP
R TsHZRA\UR
U\PBJ@@[_\^\^QCWPEAY@KF_CDMBUGSC\WQVVBgIDW\\^VWQVRVUQWQSQm@U\EXmmUSRVPQ	URRQ	RQQWQQUQW
VVRW	S[DG@GSUTD^URQ^ZF]R^F[WZG	
:>