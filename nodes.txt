D]WAB
WG]Uxss_{]tYks{{ZkJ}Z{A|I|s	|c{ArYs_{ss[hg^S{Z][ZcQ~q]Uxss_{]ZDRcQ}YxkgxSkg
GkxdRS`GRINQ]Q[}q]_{ssUx]^S{Z][|ZxP}ttZwL|ZcEhc|dc}gxQZwFkww
hdU|gk	k{xYEs{ssUxsxMhhc[~YxQI{ArYs_{ss[RwtSs{xYPV]BkwtMkgDxYEs{ssUxsxOPxxZ]Q|tcHxYEs{ssUxsxOQI{x[h`ugU|dwB{t{E|Z{LdsF|ZU_Zw|twQ~q]Uxss_{^`ARI{{^`ARI{KqYsUxssQVx^Ekc{{]DS]gQ~q]Uxss_{^k[~Y{A{WB;F_]ACUEWUyqsVy_~Yjq{yX}J~q~K q~KqAs[sVyqy[ie^ZyXW[~XcX|sWUyqsVy_PDScX[r[je]T_Aje[jaYjuK|_^Tq{Bs[yUyqsXQei[[x]~H\^i_giK	_i `Z|fiJj_cEeiE}[YviE}Hh[i bZiHgX|sWUyqsVy_^Tq{y\\Hy[EzyqyUyqxFijj]yX]X| n_j_d[TuT ja
X|sWUyqsVy\zDS\cX[q~vX|sWUyqsVy\zHyX]XdYwbasI}HyU}XsH}[J}qHqyK}f]F}aqAs[sVyqy[TuJKyXW[TuJKy[OyyqsVyqrUjp]yXW[R_DjaqAs[sVyqy[T[{yXq[s\:DUWCAWO]W{qpW{Ut[hqx{RwH|q |AHfpElH{[F{{{sW{q{XSocY}[x|{{Cq[pW{{sYSuJV{{{\cIV``_h\gCPUdJQK[Vo|BhuJ~UIhKxCqQsW{qpYSocY}[xI|Uk|fh|A|e`I~lc }vxDklcI}aklshXp}lxZfRY~y]W{qpW{U\Vqx{VVJ{[F{{{sW{q{Gk``_{X^Y~
dhj{V
Z\Q_dF{QE{{qpW{{xGP{ {R]Y|v`J{QE{{qpW{{xGQKx{S``wdWlwH{vxGR{DfpDRUWXt|wY~s^W{{sW{\cCQA{{\cCQA{Cq[pW{{sYVz]Ghk{{_FPUgY~s^W{{sW{\hY}Q{I{UA	8N_UAA]E_U{rqUq_vYhryqXuJ|rvK|Xv[yAqXqUqqq[kf\YqX_[|[a[ts_U{rqUq_XDQa[w[zGhibYaeGhyfXY bGQHD[_S[~p_UqqqU{\\YqX_[kezXafW|aFuHiJ|X uHiK~fuEv iFh\avfu|[SaXjX{XGyqqqU{rzGbja[}Xz[KyAqXqUqqq[QvvYqy{X	BZ\vSiztKyAqXqUqqq[Qv	K\qy{[auKyAqXqUqqq[Qy}[w[z}fbtqvuJ|bqKuvyK~euEtfy{uyJwXqJ{XGyqqqU{rzZz}[}XzZz}[~p_UqqqU{_b[ue[}XzGZ ^{XGyqqqU{rz qX_[Xyy^c8G\WKA
ST]
WS
 
TRZ QTS]rH[PD^_C
WVQBKBEY]V^]\TA]QE@[EIL^CFH@WFSBYUS\WBfKAUV]^WUPVPSWQ 	]PQ	SgU
PZTW	P
WZRWqn]

QSWPPUTSSSW	PW
YQT	Y U
W^RQQZLF@AQ
T TE_]TQ_XGUS^@[VXF:D^TCAPWVPU
	WPQZ Rr[ZY\SYE_Y\B_]
W\RBKHFY]\^]VWAWRE@QFIF]CLK@WESBZUSVTBfABU\^^WUSVZPWQ 	WP[	SmUSW	QPSgU
	YSW
RP	WWP[	STPU
QSWQ ]
	WVPRYZDFBBYTVF_U WS\PG]S\CYUPF	8EB]RS^T T S[UTP \VS
]
pU_TW_]]^USVZPWQ 	WP[	SmUSW	QPSgU
	YSW
RP	WWP[	STPU
QSWQ ]
	WVPRYZDFBBYTVF_U WS\PG]S\CYUPF	8G\WKA
P P]	^TRQ Q\r][^ZW]_]USU\QCIBL[_\__\]CWQDB[LKF^BFABUFR@PWQVWCdKHW\]_UWPWPZUPWRQQmTSUSSRmW
SYU
SZWTRQQWRT SSUS W]TPQ	SPFDBAS V WDUW TR^ZM_Q\@XWZL	8D]UAKTZPW	
WSP^	 RVSxQX[\PX@QV]\S@KAD[W\\]_UKWSG@XDKF\AEIB]DQBXWYVU@fH@W\_\WWRTSR]S 	WPRYmW	SW[QQ o]

QSWPPUTSS QW	PW
YQT	Y U
W^RQQZLF@AQ
T TE_]TQ_XGUS^@[VXF:D^TCASV	Q[P
VWP] PQr__UU_TFSU\[@IBFX_\\_\WCW[GB[FHFTAFKAULQ@ZTQV]@dKBT\W\UTZTPPUSWRQQmWSUSYQmT SSU
PPW^RQQ]RW
PSUPWWWP[	SZEDBKSV
TD_T ^Q^ZG\Q\J[WZF	8N^UAA
UP	S

]P
W P	rU_U]V_UWSTT^QJK@F[^^V]^WBUQM@YFKD^KDKBTF[BZWPTWJfIBW^]VWWP^RPTY UPSPo]P	PWU
UVZoW	
QSTZPUTPSPW	S]
SQW	S	U	WTRQQZFE@AQ W ^F_WT[\XG_P^@QUXF:DTWCA^W  Q 
 WZU ZrU\UUUWUCU\QCIBL[_\__\]CWQDB[LKF^BFABUFR@PWQVWCdKHW\]_UWPWPZUPWRQQmTZPUT
W	TSmojWV WS[RWTZSVUP	Po   W
TTVZQSUPWSP]S 	W	
 UTSSSXFFACS TTL]WVQVZE_S_B[_ZD;F_]ACUEyyqsXT[qyq{Hy[O|s[sVy\zHyX]VyG]EeX]Wk
]^A^V^]hQzAG[Ea|\\~j\YC`B_BzAWhhDFxB^TzjESH]G|iGRegGi ]TeYR\rBj ZfS[|szyqy[ie`ZyXWUy_VEje\Fja_iaqAtc]VyqrERxyXWUyXc}KqAtc]VyqrBjq{yqqJ~Xp[jfrX}qeiK|fwIjeqFied\}K~XsF}vu}XdXiea[|szyqy[ie^ZyXWUyXwHy[O|s[sVy\vXUa{yqrZTj`Gy[O|s[sVy_^Tq{yqrSK{BtcWUyqxUjz^yX]Vy_DR_gX|syyqsXQuHTq{yqr\Red_RemGj wX|syyqsXSu~Qq{yqqDU\ViSzjeUuUGy[O|s[sVy\jASK{yqrRzX|syyqsXS ByX]Vy[q|s\:DUWCAWO{{qpYVQ{{qxI{QE~q[pW{VpJ{X^W{MWGfY_]a_^@\\\_j[xCGX GksWbWC\SzbaudHQSp` Qz|~A ~_ \~
|ESzgDkoISeU_V|Y{[F~qQsW{_w[h{{{q{YSoVJVjxEk
kY~s{{{sYQuIV{{{qx ||Y~s{{{sYSe`Y}QsY|fc[||ZY dD}|^]|aHodY~et|
cD|fhG|sJ|vxkU`Z{[F~qQsW{_w@h{{{qxHQ{Cvc^W{{xJkZY}QsYkjg PA{Cvc^W{{xEhj`Y}QsYV|Y~y{{qpYVp^Ghax{{xEP \{QE~q[pW{UZFQ`Y}QsYk_]^QdI~_]{QE~q[pW{VpXVuVY}QsY~Uc
i|gcZ~A{Cvc^W{{x Pz|Y}QsYVuIJ{QE~q[pW{V|ESax{{{YvcA	8L@_XS_
	SUPVSP 
S\V QqD@WFB]\\TZTPPUSWRQQmW	WSURZVmT SSU
PP]RW
PSUPWWWP[	STVZQSYDFHAST VF\U
TS\ZD]SV@YUZE	2D\WAB
SQPV

	WRU		VqVG[YH[S^VWVZ_\UWST^QJK@F[^^V]^WBUQM@YFKD^KDKBTF[BZWPTWJfIBW^]VWWP^RPTY UPSPoFWYI]m o]

QSWPPUTSSSW	PW
YQT	Y U
W^RQQZLF@AQ
T TE_]TQ_XGUS^@[VXF:D^TCAVS   
TVWP	 PTr^GSYJXZ[VBY\USTT^QJK@F[^^V]^WBUQM@YFKD^KDKBTF[BZWPTWJfIBW^]VWWP^RPTY UPSPoA]]E^mo]

QSWPPW	
Y T  PURPW	S ]TPQ	SWPU	QYWQ W
		TVZQSYDFHAST VF\U
TS\ZD]SV@YUZE	2FB]XP^
]STVQSVSU VTTP]
QVWpTMQ[J[[Y\H[^UVQTZTPPUSWRQQmKW_G^nmW
SYU
SZWTRQQWRT SSUS W]TPQ	SPFDBAS V WDUW TR^ZM_Q\@XWZL	8D]UAKWYTS		TWS
P   TxJYPG_UYU\[@IBFX_\\_\WCW[GB[FHFTAFKAULQ@ZTQV]@dKBT\W\UTZTPPUSWRQQmKW_G^nmW
SYU
SZWTRQQWRT SSUS W]TPQ	SPFDBAS V WDUW TR^ZM_Q\@XWZL	88