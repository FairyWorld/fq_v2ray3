D]WAB
WG]UxspP{]tYksx{ZwJs|IJ|tVBZxYF|{ssUxs{_Sgc[~Yx|s{ArYpP{ss[PwMVs{x^cNVh`]k^gDP]dHRI\Vg|@kwM~]KkIxDqYsUxsp^Sgc[~Y{\}dUKkd|@|cEk]w_~dcK|dpC}wKhY ]}tZXJ]ZhZ|Yk]t^~q]UxspP{]^Usx{^VHxYF|{ssUxs{@kh`]xZ^^~`^khpA{YEyxspP{sxES{{Z][t`M{YEyxspP{sxERIx{[bcudPdwJxtx@Z{F|dpCdQU|dpJw[}q^P{ssUx^cDQI{x^cDQI{ArYpP{ss[Ux]@hc{x]AP]g[}q^P{ssUx^h^}Y{KxWA8F_WBCUE]VyrvUy_tZjr~yXkI|[~K~K ~bJ~fgX|pXUyqsVy\qBjq{y[ny[EzyrvUyqx^RyyX]Xi\aGjjhGRvaGi gDjveGSKDjif[|s]VyrvUy_^Zy[X[jvgiKfiH{Eub~K~uT|e{H}\fF}fZZi\ziedXieS_y[EzyrvUyqxDjif[[xSH~As[sVyrv[SutQr~y[KjfaF|K{BsXvUyqsXSvKTq{y[f}K{BsXvUyqsXSyz[[x~detyvwK}rvK}v{H|erE|fwyurEXIyX@yyqsVyr}RzXX}RzX|pXUyqsVy_eSugXX}GR ]yX@yyqsVyr} yX]X}X~yVc:GZWCAT@]W{qpWxZt[hqxx]wH|q N|aI|]YY~s^WxtsW{_w@kt{{Xh x^E{{qpWxtx_P x]]YP_g kptF~_chF[P\|ESx^{[F{xtsW{q{@kt{{XZ c{Jft}`gG|XtDspY}aZw~fcZ~cQ}vtG~s|[axCr^sW{qpYSZd {X^YUY~s^WxtsW{\sXUpUY}[xFkp^JVuwEhgF{[F{xtsW{q{GSx {X^YscJ{[F{xtsW{q{GRN{{Y`crgWftxs{GXxD|csDfRW|csHtY}v]W{qpWxY`CQKxxY`CQKxCr^sW{qpYU^GhaxxZFP_dY}v]W{qpWxYkY}[xIxPB	8D\UBDWF_V~qqU{\vZmqy{[uIyq|HzqJ|[qX{s_U{rqV~_vBhry~Xi{XGz~qqU{rz^U~{[_XS f[hvvG{_bkDZU\}GPz_~[Gy{rqV~qzBhry~Xz^|uuyXz[~e[zvuF|v}yK hujX{f} }fa ne}kK[y[yAqXqV~qq[P\f~X_[V}X{s_U{rqV~\rZVvWXx[yDkfBSu\ kib]{KyAqXqV~qq[Qv	HSqy{[azKyAqXqV~qq[Qy}Xx[z}fbw~vuJHqHzvyK~euF{fu{uuFxX}J{XGz~qqU{rzUz}[}XzUz}[~p_V~qqU{_bTue[}XzDU ^{XGz~qqU{rz~X_[XyzQc8G\TDA
SWR
WS	
TRU QTSRrH[PD^PC
TYQBKBEY^Y^]\TBRQE@[EIC^CFH@T
FSBYUPSWBfKAUY]^WUPVPSTQ 	RPQ	PhU
PUTW	S
WURWqnR

QPWPSUTSSSW	PW	VQT	V U
TQRQQYCF@AQT TE\RTQ_XDZS^@[VXE:D^TCBPWVPU
	 WPQU RqTZY\SYE\V\B_]
W\RBHGFY]\^^YWAWREC^FIF]CCK@WESAZUSVTBeNBU\^^TUSVUPWQ	WST	SmUST	QPShU
	VSW
RP	WWST	STPU
QSTQ R
	WVPRVZDFBBVTVE_U WS__G]S\CYV_F	8EB^]S^TT PTUWP SVS	R
pU_TW\R]^USVUPWQ	WST	SmUST	QPShU
	VSW
RP	WWST	STPU
QSTQ R
	WVPRVZDFBBVTVE_U WS__G]S\CYV_F	8G\TDA
P SR	QTRQ Q Sr][^ZW^P]USU\QCIAC[_\___RCWQDBXCKF^BENBUFR@_WQVWCdHGW\]_UWPWSUUPWRRQmTSUSSRnW
PVU
SUWTRRQWRTSSUS TRTPQ	P_FDBAP V WDZW TR^YB_Q\@XWYC	8D]UBDWUPW		WSSQ	 RVPwQX[\PXCQVR\S@KADXX\\]_UDWSG@XDH
F\AEIARDQBXTVVU@fH@T
\_\WT RTSRRS 	WPRVmW	SWTQQ oR

QPWPSUTSSQW	PW	VQT	V U
TQRQQYCF@AQT TE\RTQ_XDZS^@[VXE:D^TCBSV	RTP
VWPR PQqP_UU_TE\U_T@IBFX__
\_\WCTTGB[FHE[AFKAUCQ@ZTQUR@dKBT_X\UTUTPPUSTRQQnWPUSVQmTSSU	PPTQRQQRRW
PPUPW WWST	SZEDADSVTD_TQQ^ZG\Q_E[WZF	;A^UAA
UP	S

 RP
W  P	rU_VRV_UWSWT^REK@F[^^Y]^WBURB@YFKD]DDKBTETBZWPTTEfIBW^^YWWSQRPTV UPSPoRP	SWU	UVUoW		 QSTUPUWPSPT 	SR
SQW	SU	WTRRQZFE@BQ WQF_WWT\XG_P^C^UXF:G[WCA QW  Q
 TUU UrU\UVZWUCU\QCIAC[_\___RCWQDBXCKF^BENBUFR@_WQVWCdHGW\]_UWPWSUUPWRRQmTUPUT
T 	TSn`jWU WPTRWTUSVUP	Po  WTTVUQSUPTSPRS 	 W	
 UTSSSXFFACS TWC]WVRYZE_S_BXPZD;F\RACUFyyqsXTX~yq{HyX@|s[sVy_uHyX]VyDREeX]Td
]^A^Y^]h^zAG[Ebs\\~j\Y@oB_BzAWkgDFxB^TyeESH]G|fGRegGi]TeYR_}Bj Ze\[|szyrv[ie`Zy[XUy_VEjfSFja_ib~Atc]Vyr}ERxy[XUyXc}H~Atc]Vyr}Bjq{yr~J~Xp[je}X}qffK|fwIjf~Fied\}H~XsF}uz}XdXifn[|szyrv[ie^Zy[XUyXwHyX@|s[sVy_yXUa{yr}ZTj`GyX@|s[sVy\^Tq{yr}SK{Bt`XUyqxUiu^yX]Vy\DR_gX|pyyqsXQvHTq{yr}\Red_RfbGj wX|pyyqsXSvqQq{yr~DU\ViSyeeUuUGyX@|s[sVy_eASK{yr}RzX|pyyqsXSByX]VyX~|s\:GZWCAT@{{qpYU^{{qxIx^E~q[pWxYpJ{X^WxBWGfY\Ra_^@_\\_i[xCGX DdsWbXC\SzbnudHQP` Qz|}N ~_ \}|ESzgDh`ISeU_UsY{[F~r^sW{_w[kt{{q{YP`VJVjxEhkY~s{xtsYQuIUt{{qx sY~s{xtsYSe`Y~^sY|fc[sZY dD~s^]|aH|`dY~etcD|fhG|ssJ|vxhZ`Z{[F~r^sW{_w@kt{{qxH|^{Cvc^WxtxJkZY~^sYkjg SN{Cvc^WxtxEhj`Y~^sYV|Y}v{{qpYU^GhaxxtxEP \x^E~q[pWxZZFQ`Y~^sYk_]^RdI~_]x^E~q[pWxYpXVuVY~^sY~U`i|gcZ}N{Cvc^Wxtx Pz|Y~^sYVuIJx^E~q[pWxY|ESaxxt{YvcA	;C@_XS_
	SUPVPP 
SSV QqDCXFB]\\TUTPPUSTRQQnW	WPURUVmTSSU	PPRRW
PPUPW WWST	STVUQSYDEGASW VF\UTS\ZD]PY@YUZE	=D\WAB
SQPU

 WRU	VqVDTYH[S^VTYZ_\UWPT^REK@F[^^Y]^WBURB@YFKD]DDKBTETBZWPTTEfIBW^^YWWSQRPTV UPSPoEXYI]m oR

QPWPSUTSSSW	PW	VQT	V U
TQRQQYCF@AQT TE\RTQ_XDZS^@[VXE:D^TCBVP  
TUWP	  PTqQGSYJXZXYBY\USWT^REK@F[^^Y]^WBURB@YFKD]DDKBTETBZWPTTEfIBW^^YWWSQRPTV UPSPoBR]E^moR

QPWPSW		V T PURPT	S RTPQ	PWSU	QVWQW		TVUQSYDEGASW VF\UTS\ZD]PY@YUZE	=FB]XP^
RSTVQSVSUVTTSR
QVWpWBQ[J[[Y_G[^UVQTUTPPUSTRQQnDW_G^nnW
PVU
SUWTRRQWRTSSUS TRTPQ	P_FDBAP V WDZW TR^YB_Q\@XWYC	8D]UBDTVTS		WWS	P   TwJYPG_VVU_T@IBFX__
\_\WCTTGB[FHE[AFKAUCQ@ZTQUR@dKBT_X\UTUTPPUSTRQQnDW_G^nnW
PVU
SUWTRRQWRTSSUS TRTPQ	P_FDBAP V WDZW TR^YB_Q\@XWYC	88