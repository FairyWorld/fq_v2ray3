D]W@CWG]TyqsS{]tXjq{{ZkK|X{M|I}[L}dQZ|s]S{ssTy_tDhs{yXk{YExyqsS{sx\R|{Z]Zi_dAhhhERudAkgFju`AQIFjjc]~q]TyqsS{]^XyX]]ggv`\}g{GiXhY|c~uh_~gx_iH{@hZwiHp^twKi_k{YExyqsS{sxFjjc]}Yx SK{GqYsTyqs]QwtQq{{Y\jeJC~I{@s[sS{ssZSuMVs{yXcI{@s[sS{ssZSz]}Yx|d`r{twI}qsMt{I|fsM~d{yvw}ZKy[E{ssTyqxPxZ[xPxZ|s]S{ssTy\`QwgZ[xAP_y[E{ssTyqx{Z]Z}[{Ta:D_QACWE[UyqrW{_rYjqz{XqJ~q |K ~aH}vS[|s\W{quUy_u@hq}yXj {[CyyqrW{q~]R} {X[[T eYhurD|_ak @YR\~EP~\y[D{{quUyqy@hq}yX_]hXPZiX~~fW ubD|uqJ}aY|X\Z|fjkHzY~vjH}vuJ~qzCq[uUyqrYP_byX\YVy[|s\W{quUy\qXVuS[[zFh~DTe[~K}As[rW{qu[Su
IVq}yXb K}As[rW{qu[Sz~Y}[~}dav{vqJ}KrIv}H|frI~f}yvv}XyJy[D{{quUyqy Pzy[[y Pzy[|s\W{quUy\aQua[[yEP ^y[D{{quUyqy{X[[}[z{Tc	:D^UAAWD_U{wsW{^vYhw{{YiJ~^{I|J|wIYi[~u]W{pqU{Yt@hpy{^k {ZGy{wsW{pz]P| {Y_[PYd htvD~Y`kDYPZEP z\{]E{{pqU{wx@hpy{^pZkdapY ~g}^{D|ta}wY|IW~`Q|Ir_h^hX|gek]{CqZqU{wsYP^f{^]YV }[~u]W{pqU{ZpXVtW[}]{FQ rAhc[SdaD{]E{{pqU{wxGP z{^]Y|waH{]E{{pqU{wxGQJy{_``veU`w{wyE^DwyF^cWg[NwY~r_U{wsW{]bAQM{{]bAQM{CqZqU{wsYV{\Ehg{{^DPYgY~r_U{wsW{]i[}]{I{T@8B_UA@
QE_UzssU}_vYis{}XuJ}szK~YzqyApYsU}qq[jg^Y}X_[}Zc[xs_UzssU}_XDPc[{[zP^dUujQw^W}GixdXU bGPIDW_S[q]U}qqUz]^Y}X_[jgx[zH[H|gFy }Jjcy_iEgw nfuF~]gyf[H|wt^nvyzYEy}qqUzsxGnja[|YxWKyApYsU}qq[PwtUqyzYEPj~]I{Aw[qUzss[Wu	KWs{}Xa~I{Aw[qUzss[Wz}[|Yx}`btztwJyaqK~t{HxfqKd{}vu|ZJ}[GyzssU}qzQx[{[zQx[xs_UzssU}\bPwg[{[zGQ^}[GyzssU}qz zZ][y[yyUa>D\W@C STV WU
WRQST SVpJ[VG^TA W]S@KDFY]]\]ZWAVSG@]FIG\A@K@WDQBZUSWU@fMBU]_\WURTVPWS 	VPW	SlW
SQVW	PQQPWwmV
QSU
VP
WTPS
QW	RQ
RSW	RUWUPQQZGDBAQV RF_V TW\XG^Q\@]UXF
	8DXWCA	PTVRW
WVQQ  QrPX[\UZE_R^@Y^
WZQBKCD[]Z^]]UAQQE@ZDK@^CGIBW	FSBXWSPWBfJ@WZ]^WWPVQRWQ 	QPPSkU	UWQSSlW

RQWRRQTPPSW
PUSUW
S V	
	UTVQRXFFDAR T VF]WTS\[E_SZ@YU[D>FB]YQ\T RSP UTR WVU 
VrUYWW_V_^WPVQRWQ 	QPPSkU	UWQSSlW

RQWRRQTPPSW
PUSUW
S V	
	UTVQRXFFDAR T VF]WTS\[E_SZ@YU[D>D\W@CS PV	UWR
S QWp_[XYW]T_UU W\W@IBGY]\	\_\VAWWGB[GIFXAFJ@W@Q@[USVQ@dKCU\[\UUVTPQWS
	W RQ	SmW
SU	QUQmU
SRW
PQ	WRRQ	SQPWQSUQ W

VVPW	S[DFBGSTTD^U RQ^ZF]S\F[WZG	8B^UA@
 TQR W


QPPU  QVSsSZ[ZSX@ST V^Q@MBD[\^\[\U@UQGF[DKD^AFIBVFQDXWRTW@`K@W^]\QWPTPRVS	UVQRoW	QQPSQoV
QSU
VP
WTPSSW	RQ
RSW	RUWUPQQZGDBAQV RF_V TW\XG^Q\@]UXF
	8DXWCA	SP	QPRVWVV   VQrT]WUYWFX
U\PBKB@[_\^]\QCWPE@[@KF_CFMBUGSB\WQVVBfKDW\\^WWQVPVUQ WPQQmUSWSRSmWSUU
RVWUPQQV RUSSWS
W	QTPPS\FDB@S VVFYW US\ZA_Q\AYUZ@	8E\WAG WP
S

VR
Q
RtV_UVT]UQST	W^QAIBF]]^]_\WAUQFB[FMD^@FKDWFP@ZQSTWAdKBQ^]]UQPUPPWRURQSoVP 	PUV

WVQmQ

SSWQPUTRQSWPV
UQUU W

WRRQ	SZ@F@AST UD_QTP^ZGYS^@ZWZF:D_UAAUUQ
WQ
V Q rS_UU^UUE W\W@IBGY]\	\_\VAWWGB[GIFXAFJ@W@Q@[USVQ@dKCU\[\UUVTPQWS
	W RQ	SmWQVU	VWTPmdhWV	QSPPWWQSPURVo TV WVQSUU	VW
SSV	S	U WTPS
QZF@BC Q RTG_W VQ]XG_U\B[TXF8F_VCAUE{{qu[T[z{q}Ky[D~q[uUy\qJ{X[UyGVGc[]W`_^B^]\_hZxCG]Eaw^^~l_YCk@]B|BWhcFDxD]TzaGQH[D|bEPeaDi _VeZR\y@h \fXY~syyqrYkefYyX\W{_PFjeWDha\iazCvc[UyqyGP~yX\W{Xe}KzCvc[Uyqy@hq}yqzH|XvXjfyZqebI~fqJjezDkeb_}K|XuE}v~ Xb[iejY~syyqrYkeXYyX\W{XqKy[D~q[uUy\}ZWa}yqyXVjfDy[D~q[uUy_\Vq}yqyQK}Atc\W{q~Ujq\{X[Uy_FP_a[|s{{qu[Qu
JVq}yqy^Peb\RefEh q[|s{{qu[Suu Sq}yqzFW\PjSzagWuSDy[D~q[uUy\aCQK}yqy Pzy[|s{{qu[S @{X[Uy[z~q\:D^UAAWD y{wsYVZy{w{I{ZG|q]sW{]rH{^]W{FUGeY_Vc
_X@\^^_jYzCA[ G`qUa\A^UybjwfKQS{bQ|~J	~Y\~~GS|dDkdKScV_Vw[{]E~qZqU{Yt[hpy{wxYSdTHVl{Eki[~u{{pq[QsIVpy{w{ |w}[~u{{pq[SccY}Zq[|``[|wX[gD}w\_|gHdf[~cw|aF|`kGwqH|p{k^bX{]E~qZqU{Yt@hpy{w{HZyAve]W{pzHkYY}Zq[kld PJyAve]W{pzGhlcY}Zq[VY~r y{wsYV{\Ehg{{pzGP\{ZG|q]sW{^XDQcY}Zq[kY^^Q fK~Y|]{ZG|q]sW{]rZVsUY}Zq[~Vck|a`Z~JyAve]W{pzP|Y}Zq[VsJJ{ZG|q]sW{]~GSg{{py[veB	8GB]XU\
S
 VV VSR
PWT WrD@\D@]_\WQVPVUQ WPQQmUTS
WRQTmWSUU
RVV RUSSWS
W	QTPPSWVQSUZDFCCUTTF_UVQ\\G]S]B[U\F	9F^WGA
QSPV

UPU	VrVGP[J[U]VW]X]\SWS	W^QAIBF]]^]_\WAUQFB[FMD^@FKDWFP@ZQSTWAdKBQ^]]UQPUPPWRURQSoF\[K]koV
QSU
VP
WTPS
QW	RQ
RSW	RUWUPQQZGDBAQV RF_V TW\XG^Q\@]UXF
	8DXWCA	 VSTVWV	   VWrUEQYL[Z[]@[\SST	W^QAIBF]]^]_\WAUQFB[FMD^@FKDWFP@ZQSTWAdKBQ^]]UQPUPPWRURQSoAV_G^koV
QSU
VP
Q

R
 WPU	PVWP VVPW	SUPW
QRWQ 	Q
WVQSUZDFCCUTTF_UVQ\\G]S]B[U\F	9D@]^S^
VQTPSQVPU VRTPVSVTpTFSYJ]XY\CY\UUQWQVPVUQ WPQQm@U]GXmmU
SRW
PQ	WRRQ	SQPWQSUQ W

VVPW	S[DFBGSTTD^U RQ^ZF]S\F[WZG	8B^UA@
WRVS
	TQP
R  TsH[PA\UR
U\PBKB@[_\^]\QCWPE@[@KF_CFMBUGSB\WQVVBfKDW\\^WWQVPVUQ WPQQm@U]GXmmU
SRW
PQ	WRRQ	SQPWQSUQ W

VVPW	S[DFBGSTTD^U RQ^ZF]S\F[WZG	8>