D]WACWG]UyzsP{]tYjz{{ZwJ~z|IJ}}sBdcHyPE|{ssUyzx_Sgc[P{|s{AsPsP{ss[Q~MVs{yT[Vw`ZR@\Vg|@j~M~]Kj@{DqYsUyzs^Sgc[Px]hwg}nd_hc[iCM~dcK}CkC}dkKz[hd|Z}mkghZ~nw^~q]UyzsP{]^Tz{{^VHyPE|{ssUyzx@kh`]yS]^~`KR
d^PwgDyPE|{ssUyzx@PxyS]^|tcHyPE|{ssUyzx@QI{yRg`ugU}mw{t{E}S{CtYF}SQPt{}Cw^~q]UyzsP{^`AS@{{^`AS@{DqYsUyzs^Vx^Ejj{{]DRTg^~q]UyzsP{^k[P{N{WB:O_RAC\EXUyqsWp_qYjq{pXrJ~q wKJ}v{Evvn[|s]WpqvUy_t@cq~yXk p[@yyqsWpq}]R| pXX[T dYcuqD|_`` CYR\E[}\y[E{pqvUyqx@cq~yXpY`fP~e|]ufrJi_wDwv[YaYt_mZ|fpZwHv}v`Zt_bH~q{Cz[vUyqsY[_ayX]Y]z[|s]WpqvUy\pX]uP[[{FZuAQj`@`zDy[E{pqvUyqxG[}yX]YwvfHy[E{pqvUyqxGZK~yY`kwbU}fwJpv~E}X{Dtv\F}XQWtv~}HwYusXUyqsWp\eASK{p\eASK{Cz[vUyqsY]z[Eja{p_DR_gYusXUyqsWp\n[[{IpUG:D_UJAWE_^{tsW{_vRht{{XiA~]{I|K@|NHXeP~v]W{qq^{Zt@hqy{]k {[Gr{tsW{qzVP| {X_PVxVuXTV`JEhj~C~Z`k DRPYEPzW{^E{{qq^{tx@hqy{]YJhvy
|ZkI~eu|p{D|v}htY| vQ~csG}vWNpx\uekd{Cq[q^{tsYP_f	{]]YV}P~v]W{qq^{YpXVuWP}^{Fk 	LPZdZVqP~v]W{qq^{YpFQ\aP}^{ |v}P~v]W{qq^{YpJ{X_Pf\u`aqAcwWXq@^G}a @|NsGX_Cd{Cq[q^{tsYVuHC{]]YVuHC{^E{{qq^{tx WjrU{]]YP_	Lhd{Cq[q^{tsYV[y{]{Yq\ 8A_UAA
RE_U{sxU~_vYhsp~XiJ~ZpKyKKsH~[Gy{sxU~qzZSgh[x[y |spAt[qU{sx[Vu	HVsp~_z^P]o U H^P]w^{_bYP^tGU_f{YNy~qqU{ssBmqy{]^yv}EdxE{ff^kZpFyvWs[yeu ~dhKzHy}dZHzHqHYpAt[qU{sx[U_f{ZV[S}[~qVU~qqU{^{ZSuW[}YpDn X^hhw^{KyAqYxU~qq[Qw KSqy{ZhzKyAqYxU~qq[Qxt[x[z}f kt~vuHsxKzvyK~dx{fy{txKxX}J{YNy~qqU{ssUz}[}YsUz}[~qVU~qqU{^kTue[}YsGU ^{YNy~qqU{ss ~X_[YpyQc8FUWDA
ZTR
WS

U[U QT	ZRrH[PEWPC
WYQBKBDP]Y^]\UARQE@[D@C^CFIIW
FSBX\SSWBfK@\Y]^W\PVPRWQ 	 RPQ ShU
QUTW P
WURWqoR

XSWPPUTRZSW PW
VQU V \
WQRQ	XZCF@AXT TD_RTQ^QGZS^@[WQF:D^UJAPV_PU
WPXU 	SrTZY\SXL_V\B_\W\SKKGFY]\W]YWAWSL@^FIF\JCK@WDZBZUSVUKfNBU\_WWUR_UPWX 	WPT	Sm\SW	QQZhU
VSW
[P	WVPT	SUP\
QSWQ 	R
 WVPSVZDFBCVT_F_U VZ\_G]S\BPU_F	8DK]]S^]TST\TP 
SVS
R
pU_U^_R]^UR_UPWX 	WPT	Sm\SW	QQZhU
VSW
[P	WVPT	SUP\
QSWQ 	R
 WVPSVZDFBCVT_F_U VZ\_G]S\BPU_F	8FUWDA
Q	PR	QU[Q XSr][^[^]P]US
U\QB@BC[_\^V\RCWQEK[CKF^CFNBUFSI_WQVWBmKGW\]^\WPVPUUQW[QQmUS\SSS
mW
SVU
RUWT[QQWRUSS\SW	
RTPQ S_FDBA
S V VMZW TSWZB_Q\@Y^ZC	8D\\ADTUPW
WRPQ		S_SwQX[\QQ@QV
R\S@K@M[X\\]^\DWSG@YMK
F\AD@BRDQBQWVVU@fIIW
\_\WW RTR[RS  WPSVmW SWTQQfR

XSWPPUTRZQW PW
VQU V \
WQRQ	XZCF@AXT TD_RTQ^QGZS^@[WQF:D^UJASV QTP
	_WPR 	P	XrP_UU_UF\\\T@IBFYV\
\_\WJWTGB[FIF[AFK@\CQ@ZUXVR@dKBU\X\UUUTPP\S	WRQ	XmWSU	ZVQmUSS\
PP	WQRQ	XR[W
QSUQWWVPT	SZDMBDS_TD_U QQ^ZG]X\E[WZF	 8A^UAA

UPZ

RP
W
 P	rTVURV_UWZTUWQEK@F[_WY]^WC\QB@YFKM^DDKBUFTBZWQ]WEfIBWW]YWWPQRPUV \PSQfRP PWT
U	_UoW
 QSUUP\TPSQW 	RR
SXW	SUWT[QQZFDIAQ V QF_WTT\XG_QW@^UXF	3D[WCAQW X
WUT UrU]\UZWUC
U\QB@BC[_\^V\RCWQEK[CKF^CFNBUFSI_WQVWBmKGW\]^\WPVPUUQW[QQmUUP\T
	W 	TRm`jWV WSTRWUUSV\P	P f   VTU_UQS\PWSQRS  W	
UTRZSXFF@JS TTC]W_QYZE_S^K[PZD:O_RAC\EyyqsY][~yq{Ip[@|s[sWp\uHyX]WpGREeYTWd
]^@WY^]a^zAG[ Las\\~j]PCoB_Bz@^hgDFxB_]zeESH]FufGRegF` ]TeX[\}Bj Z vf\[|s{pqv[ie`[pXXUy_VDceSFja^`a~Atc]Wpq}ERx pXXUyXc tK~Atc]Wpq}Bjq{pq~J~XpZcf}X}qvefK|fwHce~Fied]tK~XsGtvz}XdY`en[|s{pqv[ie^[pXXUyXwIp[@|s[sWp\yXUa{pq}ZTj`Fp[@|s[sWp_^Tq{pq}SK{C}cXUyqx \ju^yX]Wp_DR_gYusyyqsYXuHTq{pq}\Red^[ebGj wYusyyqsYZuqQq{pq~DU\VhZzeeUuUFp[@|s[sWp\eASK{pq}RzYusyyqsYZ ByX]Wp[~|s\3DZWCAW@{{qqPV^{{qy@{^E~q[q^{YpJ{X_^{BWGgP_Ra_^I\\\_ 
j[xCGY	GdsWcXC\S{knudIXS` Qz}~N ~_U~|ESzfMk`ISeTVVsY{[Gwq^sW{_vRht{{qzPS`VJVjyLkkY~s r{tsYQu	@Vt{{qy	|sY~s r{tsYSeaP}^sY|fbR|sZY eM}s^]|a A`dY~eu|cD|fiNssJ|vykZ`Z{[Gwq^sW{_vIht{{qyA^{Cvc_^{txJk[P}^sYkjf	PN{Cvc_^{txEhjaP}^sYV}P~v{{qqPV^Ghay{txEP U{^E~q[q^{ZZFQaP}^sYk_\WQdI~_~T{^E~q[q^{YpXVuWP}^sY~Tci|gbS~N{Cvc_^{tx Pz}P}^sYVuHC{^E~q[q^{Y|ESay{t{Yvc@ 8C@_XS^	ZTP_SP 
R
SV QpM@XFB]]UUUTPP\S	WRQ	XmW	VSU	[UVmUSS\
PP	R[W
QSUQWWVPT	SU_UQSXMFGAST VF]\TS\ZETSY@YUZD =D\WACSQPV

WR\ 
	Vp_GTYH[S__WYZ_\U^SUWQEK@F[_WY]^WC\QB@YFKM^DDKBUFTBZWQ]WEfIBWW]YWWPQRPUV \PSQfFXYI]mfR

XSWPPUTRZSW PW
VQU V \
WQRQ	XZCF@AXT TD_RTQ^QGZS^@[WQF:D^UJA	_S  
	]VWP  	PUrQGSYJYS[YBY\UZTUWQEK@F[_WY]^WC\QB@YFKM^DDKBUFTBZWQ]WEfIBWW]YWWPQRPUV \PSQfAR]E^mfR

XSWPPW
V U P\RPW	R	RTPQ SWPUXVWX W	
	U_UQSXMFGAST VF]\TS\ZETSY@YUZD =FB]XQW
RSTVQSVR\ VT]PR
QVVyTBQ[J[ZP\G[^UWXUUTPP\S	WRQ	XmDW_G^omW
SVU
RUWT[QQWRUSS\SW	
RTPQ S_FDBA
S V VMZW TSWZB_Q\@Y^ZC	8D\\AD
WVTS TWR
P 	 	]wJYPG^UV\\T@IBFYV\
\_\WJWTGB[FIF[AFK@\CQ@ZUXVR@dKBU\X\UUUTPP\S	WRQ	XmDW_G^omW
SVU
RUWT[QQWRUSS\SW	
RTPQ S_FDBA
S V VMZW TSWZB_Q\@Y^ZC	88