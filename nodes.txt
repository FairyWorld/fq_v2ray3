D]WACWG]Uy{q^{]tYj{y{ZwJ~{	|I ~k@|tU[|y_^{ssUyUvIhs{yRi	{YEyy{q^{sx]R~	{Z][T
fPhwtD|UbRP^GRUf	{YEyy{q^{sxBj{y{ZpXjlzPh]H|lrT|dUF~eA}c}|a~gcEovQZpYiRrPc{AsQq^{ss[RUf	{Z][T}P~q]Uy{q^{^pZTWP}Y{DjUfJPw|AyJqYsUy{qPQwKT{y{Zc}AyJqYsUy{qPQx[Qzvf `ty|uA|IsK}|y@~ds|lq{t{KRqA{YEyy{q^{sxRp}P}YxRp}P~q]Uy{q^{^`SeP}YxGR
U{YEyy{q^{sx yR_PY{yVi8F_WCK
UE]WqsxUy_t[bspyXkHtZpK~KvIK}XsYtqVUyqsWq]Bjq{qZ`y[E{qsxUyqx_ZwyX]YZ]ojutFt]ki F[Z^tGRx^qYNyyqsWqssBjq{q]p~HwHa]c_|ftXvZ|F~ut\ac	~ectgpK~HYIasX} c vIpAs[sWqsx[R_d qZV[TYtqVUyqsWq^{ZTuUYwYpDSzd tIpAs[sWqsx[SuI\spyXc uIpAs[sWqsx[SzYwYs}d`vqt|J~asIutpK|fstdxyv{IwZxJy[E{qsxUyqx Zxt[[x Zxt[|s]WqsxUy\`[wl[[xEZ^y[E{qsxUyqxqZV[}[{{^a:D_UKCWE__yzsW{_vSjz{{Xi@|S{I|K~PIfaQ|x]W{qq_yTt@hqyySk {[GsyzsW{qzWR
| {X_QiTdEhjjNR~dEk eMj~`EQKMjacY~s__yzsW{_\SyS]Yhe~S}SQHkHiL~mQh[ ~tX~f[O~CQDebT~~|vqOiTkG{[GsyzsW{qzMjacY}[zS@{Cq[q_yzsYQuvQz{{[	OjnGPueNyPE{{qq_yzxGPzyS]Y|vaByPE{{qq_yzxGQKyyR``we_}mG{vyO}S{DvWL}}YWXy}}wY~s__yzsW{\bKS@{{\bKS@{Cq[q_yzsYVz\Ojj{{_NRTgY~s__yzsW{\iQP{I{U@:O_UAA
\E_U{syWp_vYhsqpXiJ~ZqIwK}sItvW[~qWWpqqU{]~@cqy{Za p[Gy{syWpqz]Pv pX_[VnYcuvD~]j` DYP^uE[z\{YO{pqqU{sr@cqy{]~Z`ea|]}JufihwmDwvyH}stevX~dqJt v^}t}JvfeHkcqCz[qU{syY[_f{ZWY]}[~qWWpqqU{^zX]uW[}YqFZ\fHSs Yus_U{syWp\rDQ^iYv[y|tuYus_U{syWp\rH{ZWYmY	w`cyHtf}UZyIt[ E}sGvaqKZWGtayAqYyWpqq[Vw@JpX_[Vw@Jp[Gy{syWpqzWhz\pX_[P]EcayAqYyWpqq[VYqpXy[q^3D\WAC STW
UX

WRPYV SWp@Y[G^UAW\SJIIFY]\V_WWAWSMBPFIF\KMK@WD[@ZUSVUJd@BU\_VUUR^[PWY	WRZ	Sm]SPVU 	P\PZUzmWQSU [P]VPSQU	R\
SYW	S	U	 WTZSQZFDHCQ V_F_W
VZ\XG_QVBPUXF	2FUWCAR TVR]
	U[QP 		QrQXQ^XZE_S^JT^
UWQBKBDQ_W^]\UC\QE@[DAM^CFIHUFSBX]Q]WBfK@]W]^W]PVPRUQ 	\PQQfU	XWSSSm]
SQURR\TPQQWRUYXWYW		U^[QSXLDIAS
V VF]]TS\ZEUQW@YUZD	3FB]XQV
T

	_SQ	UTRVTX 
WxWTWW_WU\]PVPRUQ 	\PQQfU	XWSSSm]
SQURR\TPQQWRUYXWYW		U^[QSXLDIAS
V VF]]TS\ZEUQW@YUZD	3D\WACS PW		TWRY QVpUYUYW]U_WX]^Z@IBFYW^\_\WKUZGB[FIDUAFK@]MQ@ZUYT\@dKBU^V\UU[TPP]S	URQ	YoWQU	[XQmU SS]PP	U_RQ	Y\ZW
QQUQ
 W WVRZ	SZDL@JS^TD_U_Q^ZG]Y^K[WZF	:O^UAA
 TPR
U

	\PPT   QVSrSPYWSX@S^
W^[B@BD[]^^V\UAU[EK[DKDTCFIBWLSIXWST]BmK@W^W^\WZVPRWQ	U[QSoU	Q\QYSoWQSU [P]VPS
SU	R\
SYW	S	U	 WTZSQZFDHCQ V_F_W
VZ\XG_QVBPUXF	2FUWCAQ]	QQRV	U[W 
[QrU]]WTWFY

U\QBA@M[_\^W^\CWQEJYMKF^CD@BUFSHQWQVWBlIIW\]^]WPVR[UQ
 WZSQmU S]SSS	oW
QXU
R[WTZSQW	RUSS]	SU 	\TPQQQFDBAQ V VLTW TSVXL_Q\@Y_XM	8D\]CJ]R
S WR\ 	R	yV_UWTWW\STW^Q@IHDP]^\_VUAUQGBQD@D^ALIIWFQ@X\STW@dA@\^]\U\PTZRWS	 UR[ SoWR	PU V
]VPg\

YQWPR UTR[ SWPWXQUX ]	
U_RQ	YXMF@AYT TD]\TQ^PETS^@[WPD :D^UKCTU	Q
 WP 	V  
P p^_UU_UWH]^Z@IBFYW^\_\WKUZGB[FIDUAFK@]MQ@ZUYT\@dKBU^V\UU[TPP]S	URQ	YoWP	[U	\WVPmehUV	\SQZUWPQ]UR[o 	T V
WVPS	XU	[W QSW	Q	U]VPSQPDMBCQ_TFUU VQ\XM]X\B[UXL	 8F_WCK
UE{qsx[T[{qspKy[E~{YxUy\pJqZVUyGWMn[]WaU\B^\\U	h[xIEPEav^T|a_YCj@W@qBWhbFNzI]Tz`G[JVD|cEZglDi _\gZR\x@bQfYYtq	yyqsYagkYyX]Wq]]FjeVDbc\ia{C|aVUyqxGZsyX]WqZh}K{C|aVUyqx@bspyq{HvZ{XjfxZus	ecItd|Jje{Dago_}KvZxE}v uZo[iekYtq	yyqsYagUYyX]WqZ|Ky[E~{YxUy\|Z]cpyqxX\hkDy[E~{YxUy_\\spyqx[IpAtc]WqssUjp\qZVUy_FZ]l[|s{qsx[QuJ\spyqx^Zgo\RegEb|[|s{qsx[Sut Yspyq{F]^]jSz`g]w^Dy[E~{YxUy\`C[Ipyqx Zxt[|s{qsx[S @qZVUy[{~{^	:D_UKCWE syzsYV[yyz{I{[GvsPsW{\rByS]W{GUEeY_Wc ]U@\^T]jYpAL[ Gaq_a]ATXybkwlKQSzbSq~K	|T\~ ~MQqdDkeAQnV_Vv[yPE~q[q_yTt[hqyyzxYSeTBTa{Ek iQ|x{{qqQS~IVqyyz{ |v}Q|x{{qqQQncY}[qQ~m`[|vXQ}gD}v\U~jHefQ|nw| aL~mkGvqB~}{k_bRyPE~q[q_yTt@hqyyz{H[yKth]W{qzBi
YY}[qQiad PKyKth]W{qzMjacY}[qQT
Y~s syzsYVz\Ojj{{qzMR\{[GvsPsW{_XNS
cY}[qQiT^^QfA|T|]{[GvsPsW{\rPT~UY}[qQ|
Vc a~l`Z~KyKth]W{qzRqY}[qQT~JJ{[GvsPsW{\~MQj{{qyQthB	8FBWZX\
S
V[ VSRPVTZrD@]DJ__\WPVR[UQ
 WZSQmU TS]RPToW
QXU
R[W	RUSS]	SU 	\TPQQWVPS	XZDFBCXT^D_U V[^QG]S\BQWQF	8FTUJA
QYR	V UZ U 		TrVGQ[@YX]VW\XW^^WSW^Q@IHDP]^\_VUAUQGBQD@D^ALIIWFQ@X\STW@dA@\^]\U\PTZRWS	 UR[ SoF][A_foWQSU [P]VPSQU	R\
SYW	S	U	 WTZSQZFDHCQ V_F_W
VZ\XG_QVBPUXF	2FUWCAVS
TV	U[	 
[WrTE[[A[Z[\@Q^^STW^Q@IHDP]^\_VUAUQGBQD@D^ALIIWFQ@X\STW@dA@\^]\U\PTZRWS	 UR[ SoAW_M\foWQSU [P\

S W
R U	Z[WP WVRZ	SU P]
QSU Q 		\
WVPS	XZDFBCXT^D_U V[^QG]S\BQWQF	8DJ_SS^ WQV]S[TPU T_TPWYTTpTGSSHPXY\BYVWUQWPVR[UQ
 WZSQmAUWEUmmU SS]PP	U_RQ	Y\ZW
QQUQ
 W WVRZ	SZDL@JS^TD_U_Q^ZG]Y^K[WZF	:O^UAA
WSVQ
	T	\P
R TrHQRL\US

U\QBA@M[_\^W^\CWQEJYMKF^CD@BUFSHQWQVWBlIIW\]^]WPVR[UQ
 WZSQmAUWEUmmU SS]PP	U_RQ	Y\ZW
QQUQ
 W WVRZ	SZDL@JS^TD_U_Q^ZG]Y^K[WZF	:3