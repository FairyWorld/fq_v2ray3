D]W@C	WG]TypqS{]tXjpy{ZwK~p|IpY{@sZqS{ssZid\_{Z]Z~Ya]~q]TypqS{]ZES a]}YxZjdXV]@jd^hcXjtN~]_TpyGqYsTypq]SgcZZzXwgK}t}kI_}tv\~d`_}Y[@kdUD}p Ntt[}wT^tZda]~q]TypqS{]_Tpy{^VIyZG{ssTypzCkh`\yY_]~|YjdXQ^YEyZG{ssTypzCPxyY_]|tcIyZG{ssTypzCQI{yXd`ugT}g}C{t{D}Y}@tG}waStk}Iu]~q]TypqS{^`@SJy{^`@SJyGqYsTypq]Vx^Dj`y{]ER^e]~q]TypqS{^kZZyM{WB
:E]QACVG[UyqrWz]rYjqzzZmJ|XzI}I |XvJ~c}As[rWzsu[ie_[zZ[[~XbYq[UyqrWz]\DSbY|Y~Gjja[jgGjzeZRfGSKFP]W[|s\WzsuUy__[zZ[[u}Z~bY~XbDj}K~[ ~Zq |euZjJeF}_z }dvZv~}J_y[D{zsuUyqyEihe[[yPI}As[rWzsu[Suu Rs}y[
 P]rXQKYq[UyqrWz^vDS\bY|Y}~v~Yq[UyqrWz^vHyX\Yg[wbarH~daU}XrI~IE}KG}suE~X\J~c}As[rWzsu[TuKJzZ[[TuKJzYCyyqrWzs~Ujq\zZ[[R_
Eic}As[rWzsu[T[zzZ}[s\9FYWCA	UC]W{pqTyYt[hpyy^kH~YyJ~M~YiDy]E{{pqTywxXSdaZ]{|py@s]sW{pqZQsJVpyyZV\k^b[RM[Vd~AjsJ~^	JjM{CqZqTywsYSdaZ]{k^u~t\kJ^~px]~gb^~pUDkYajgH|tvY}^gkY[JpY~r_TywsW{^_Tw{{]TIy]E{{pqTywxGkkb\y^]Y~ T\jl`_hkyEy]E{{pqTywxGP zy^]Y|waIy]E{{pqTywxGQJyy_``veT}`wJ{wyD}^Dw}G}pcWwi}NwY~r_TywsW{]b@SM{{]b@SM{CqZqTywsYV{\Djg{{^ERYgY~r_TywsW{]iZ]{I{T@
:B_UA@
QE_UzsrW}_vYisz}XiJZzIzKJ}cHyXy[q\W}qqUz]u@nqyzZj }[GyzsrW}qz]Q} }X_[WxyPuX_WgKEnj~H]am DYQ^~EVz\zYD{}qqUzsy@nqyz]zzvv_}JeZxf\^~bDzueKicm_j[daXzfejZiZmea}czCw[qUzsrYV_fzZ\YP}[q\W}qqUz^qXPuW[|YzFn_fGjfF}[GyzsrW}qzEQy }X_[}tbJ}[GyzsrW}qzEPIz}YbaufWyfuJztzGyX}F~t~DyvaU~tjyHu[q\W}qqUz^aCWKyz^aCWKyApYrW}qq[Wx_Gnayz]FV_e[q\W}qqUz^jY{[yKzWC	>D\W@C	 STVUU
WRQRV  SVpKYVG^TA	 W]SAIDFY]]]_ZWAVSFB]FIG\@@K@WDP@ZUSWUAdMBU]_]UURUVPWR	VRW	SlVSQVU	PQQQUwmVQSUVP
VVPS
QU	RQ
RRW	R	UWUQSQZGDCCQVRF_VVW\XG^Q]B]UXF
	9FXWCA	RTVRV
UVQQ  	QrPXZ^UZE_R^AY^
UZQBKCDZ_Z^]]UCQQE@ZDJ@^CGICU	FSBXVQPWBfJ@VZ]^WVPVQRUQ 	
QPP
QkU	UW
SSSlV
RQURR
QTPP
QW
RURUW
RV		UUVQRXGDDARV VF]VTS\[E^QZ@YU[D
	>FB]YQ]
T	RSP UTR W TU 
VsWYWW_V^\VPVQRUQ 	
QPP
QkU	UW
SSSlV
RQURR
QTPP
QW
RURUW
RV		UUVQRXGDDARV VF]VTS\[E^QZ@YU[D
	>D\W@C	S PV	
UWR
R  QWp^YXYW]T_WU V^W@IBGY\^	\_\V@UWGB[GIDXAFJ@V@Q@[URTQ@dKCU^[\UUVTPQVS
	U RQ	RoW
QU	PUQmUSRVPQ	URRQ	RQQWQQUQW
VVRW	S[DG@GSUTD^URQ^ZF]R^F[WZG	
:B^UA@
 TQRU


QPPU 
 QVSsS[YZSX@SU
 V^PBMBD[\^^[\U@UPEF[DKD_CFIBVGSDXWRTVB`K@W^\^QWQVPRVQ	UVQRoU	QQPRSoVQSUVP
VVPSSU	RQ
RRW	R	UWUQSQZGDCCQVRF_VVW\XG^Q]B]UXF
	9FXWCA	QP	QPRVUVV  VQrT]VWYWFX
U\PBJ@@[_\^\^QCWPEAY@KF_CDMBUGSC\WQVVBgIDW\\^VWQVRVUQWQSQmUSVSRSoWQUU
RVWUQSQV	 RUSSV	S
U	 QTPP
Q\FDB@ Q VVGYW US]XA_Q\AYTX@	8E\VCG VR
SVRQ 
R
	tV_UVT\WQST	W^QAICD]]^]_]UAUQFBZDMD^@GIDWFP@XQSTWAdJ@Q^]]UQPUQRWR	URPSoVR 	PUV

VVQlQ

RQWQRUTRPSW
PVUQU
U V	

URRQ	RX@F@ART UD]QTP^[EYS^@ZW[D:D_U@CUUQWQ	V  Q pS_UU^UWE V^W@IBGY\^	\_\V@UWGB[GIDXAFJ@V@Q@[URTQ@dKCU^[\UUVTPQVS
	U RQ	RoWQ	VU	WW
VPmdhUV	QSPQUWQQPUR
Vo TVWVQS	UU	VWQSV	Q	U
 VVPS
Q[D@BC QRTG^U VQ]XF]U\B[TXG	8F_VC@
UE{zsu[T[zzs}Ky[D~pYuUy\qJzZ[UyGVFc[]W`^\B^]\^hZxBE]Eaw^_|l_YCk@\@|BWhcFEzD]TzaGPJ[D|bEQgaDi _WgZR\y@i\fXYqyyqrYjgfYyX\Wz]PFjeWDic\iazCwa[UyqyGQ~yX\WzZe}KzCwa[Uyqy@is}yqzH}ZvXjfyZ~sebIdqJjezDjgb_}K}ZuE}v~ ~Zb[iejYqyyqrYjgXYyX\WzZqKy[D~pYuUy\}ZVc}yqyXWhfDy[D~pYuUy_\Ws}yqyPI}Atc\Wzs~Ujq\zZ[Uy_FQ]a[|s{zsu[Qu
JWs}yqy^Qgb\RefEiq[|s{zsu[Suu Rs}yqzFV^PjSzagVwSDy[D~pYuUy\aCPI}yqy Qxy[|s{zsu[S @zZ[Uy[z~p^:D^U@CWD xywsYVZyyw{I{ZG}s]sW{]rIy^]W{FUEeY_Vc]X@\^_]jY{AA[ G`qTa\A_UybjwgKQS{bS|~J	|Y\~~FQ|dDkdJQcV_Vw[y]E~qZqTyYt[hpyywxYSdTITl{EkiZ|u{{pqZSsIVpyyw{ |w}Z|u{{pqZQccY}ZqZ~``[|wXZ}gD}w\^~gHdfZ|cw|aG~`kGwqI~p{k^bYy]E~qZqTyYt@hpyyw{HZy@te]W{pzIiYY}ZqZild PJy@te]W{pzFjlcY}ZqZTY~r xywsYV{\Djg{{pzFR\{ZG}s]sW{^XEScY}ZqZiY^^Q fJ|Y|]{ZG}s]sW{]r[TsUY}ZqZ|Vcj~a`Z~Jy@te]W{pzR|Y}ZqZTsJJ{ZG}s]sW{]~FQg{{pyZteB	8GB\ZU\

S
V V VSRPWTWrD@\DA__\ WQVRVUQWQSQmU
TS
VRQT oWQUU
RVV	 RUSSV	S
U	 QTPP
QWVQS	UZDFCCUTUD_UVP^\G]S]BZW\F	9F_UGA
QRRVUQU 	
TrVGP[KYU]VW]X\^SWS	W^QAICD]]^]_]UAUQFBZDMD^@GIDWFP@XQSTWAdJ@Q^]]UQPUQRWR	URPSoF\[J_koVQSUVP
VVPS
QU	RQ
RRW	R	UWUQSQZGDCCQVRF_VVW\XG^Q]B]UXF
	9FXWCA	 VSTVUV	  VWrUEP[L[Z[]@Z^SST	W^QAICD]]^]_]UAUQFBZDMD^@GIDWFP@XQSTWAdJ@Q^]]UQPUQRWR	URPSoAV_F\koVQSUVP
Q

RWRU	QVW
P VVRW	SUPV
QRUQ 	Q

WVQS	UZDFCCUTUD_UVP^\G]S]BZW\F	9DA_^S^ VQVPSPTPU TRTPVRTTpTFSXH]XY\CY]WUQ WQVRVUQWQSQm@U\EXmmUSRVPQ	URRQ	RQQWQQUQW
VVRW	S[DG@GSUTD^URQ^ZF]R^F[WZG	
:B^UA@
WRVQ
	TQP
R TsHZRA\UR
U\PBJ@@[_\^\^QCWPEAY@KF_CDMBUGSC\WQVVBgIDW\\^VWQVRVUQWQSQm@U\EXmmUSRVPQ	URRQ	RQQWQQUQW
VVRW	S[DG@GSUTD^URQ^ZF]R^F[WZG	
:>