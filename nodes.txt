D]WAB
WG]UxsrV{]tYksz{ZwJs|IJ|drDZc xYDz{ssUxsyYSgc[~Yz|s{ArYrV{ss[Pw
KVs{x^aHVh`]k^eBP]dHRIZVg|@kwK~]KkIzBqYsUxsrXSgc[~Yz tkZX|YZgj~d`Ykw~Ek]k |cX}tYEhJrK}dwH~gjX~q]UxsrV{]^Usz{^VHxYDz{ssUxsyFkh`]xZ\X~|DS]iAhwdGUw_YPs
[}q\V{ssUx^qGQ^c[~Yz|t[}q\V{ssUx^qK{Z][e[
t`csJ|dvVZsK|YIsH|crHZ]E|czBqYsUxsrXVwJHxZ\XVwJHxYDz{ssUxsyWhp^xZ\XP]GkczBqYsUxsrXVY{xZzXq^;F^TACUD^UyqsVy^wYjq{yYtJ~q~JJ}vUD}Y| y[EzyppUyqxYQd`[[{~pxAs[sVypp[QuKTpxy_]TtcZRKZTd@juK|^KjK{BsZpUyqsXQd`[[x[~tt}e{H}J _~vg|gcXiecEgd}[~wgYi_|\g{ZjXgX|r^UyqsVy^^Tq{y]UHy[EzyppUyqxFikc]yX]X| gESudHRdHTq
X|r^UyqsVy]sDS\cXZx~vX|r^UyqsVy]sHyX]XdXwbasI}gdU}XsH}ZJ}qK}`pK}X]F}`xAs[sVypp[TuJKyY^[TuJKyZFyyqsVyp{Ujp]yY^[R_Dj`xAs[sVypp[T[{yYx[s\:E\WCAVF]W{qpWz\t[hqxz[wH|q }HHvdE~[{[F{zrsW{q{XRfcY}[x}r{Cq[pWzrsYSuJWr{{\U\j\`XPK[Wf|BhuJ\IhKxCpXsW{qpYRfcY}[{]~Kc}udGiXk c]e`Yf|D|fd]Kje`]|Xx ~vwG|ehYp]W{qpWz\\Vqxz_VJ{[F{zrsW{q{Gji`_{X^Y|FPe \P\|@keFFzXE{{qpWzrxGP{ z[]Y|v`JzXE{{qpWzrxGQKxzZ``wdW~ewJ{vxG~[{DfpD~KwWXx~uwY~s^WzrsW{\cCPH{{\cCPH{Cq[pWzrsYVz]Gib{{_FQ\gY~s^WzrsW{\hY|X{I{UA	9G_UAATE_U{rqTx_vYhryxXiJ~[yJKKrK~vS[~p_TxqqU{\vCkqy{[ix[Gy{rqTxqz]P~xX_[k\fFkjjDPvfFh eGhvbFRKGhiaZ}s_U{rqTx_\Y{[_ZXeK|f~Z_}F|[aka hua }f\_KWG|vj^h[v^hXu|[}x[Gy{rqTxqzGhiaZ~[zQHy@r[qU{rqZRuvSryx[	_PvvSyD{XGxxqqU{rzDSz{[_ZvaH{XGxxqqU{rzDRKy{ZccweUe}DxvyE[yG|fqFKuT|XyuuZ}s_U{rqTx\bAQHyx\bAQHy@r[qU{rqZUz\Ehbyx_DP\eZ}s_U{rqTx\i[}XyJxU@8G\VBA
SUT
WS	
TRS QTSTrH[PD^VC
V_QBKBEY\_^]\T@TQE@[EIE^CFH@VFSBYURUWBfKAU_]^WUPVPSVQ 	TPQ	RnU
PSTW	Q
W
SRWqnT

QRWPQUTSSSW	PWPQT	P U

VWRQQ[EF@AQT TE^TTQ_XF\S^@[VXG:D^TC@PWVPU
	WPQS RsRZY\SYE^P\B_]
W\RBJAFY]\^\_WAWREAXFIF]CEK@WESCZUSVTBgHBU\^^VUSVSPWQ	WQR	SmUSV	QPSnU
	PSW
RP	WWQR	STPU
QSVQ T
	 WVPR
PZDFBB PTVG_U WS]YG]S\CYTYF	8EB\[S^T	T RRUUP UVST
pU_TW^T]^ USVSPWQ	WQR	SmUSV	QPSnU
	PSW
RP	WWQR	STPU
QSVQ T
	 WVPR
PZDFBB PTVG_U WS]YG]S\CYTYF	8G\VBA
P QT	
WTRQ QUr][^ZW\V]USU\QCICE[_\__]TCWQDBZEKF^BGHBUFR@YWQVWCdJAW\]_UWPWQSUPWRPQmTSUSSRlW
RPU
SSWTRPQW
RT	SSU
S VTTPQ	RYFDBAR V WD\W TR^[D_Q\@XW[E	8D]U@BUSPW	WSQW	 RVRqQX[\PXAQVT\S@KADZ^\\]_UBWSG@XDJF\AEICTDQBXVPVU@fH@V\_\WVRTSRTS 	
WPR
PmW	SW
RQQ oT

QRWPQUTSS	QW	PWPQT	P U

VWRQQ[EF@AQT TE^TTQ_XF\S^@[VXG:D^TC@SV	PRP
VWPT PQsV_UU_TGZU]R@IBFX_]\_\WCVRGB[FHG]AFKAUEQ@ZTQWT@dKBT]^\UTSTPPUSVRQQlWRUSPQmT	SSUPPVWRQQTRW
PRUPWWWQR	SZEDCBSVTD_TWQ^ZG\Q]C[WZF	9G^UAA
UP	S

TP
W P	rU_TTV_UWSUT^PCK@F[^^_]^WBUPD@YFKD_BDKBTGRBZWPTVCfIBW^\_WWQWRPTP UPSPoTP	QWUUVSoW	QSTSPUUPSPV	ST
SQW	S
 U	WTRPQZFE@@Q WWF_WUR\XG_P^AXUXF:E]WCAWW  Q	
 VSU 
SrU\UT\WUCU\QCICE[_\__]TCWQDBZEKF^BGHBUFR@YWQVWCdJAW\]_UWPWQSUPWRPQmTSPUT
V	TSlfjWW WRRRWTSSVUP	Po  WTTVSQSUPVSPTS 	W	
 
UTSSSXFFACS TUE]WVP_ZE_S_BZVZD;F^TACUDyyqsXTZxyq{HyZF|s[sVy]sHyX]VyFTEeX]Vb
]^A^_^]hXzAG[E`u\\~j\YBiB_BzAWiaDFxB^T{cESH]G| `GRegGi]TeYR]{Bj ZgZ[|szypp[ie`ZyY^Uy_VEjdUFja_i`xAtc]Vyp{ERxyY^UyXc}JxAtc]Vyp{Bjq{ypxJ~Xp[jg{X}qd`K|fwIjdxFied\}J~XsF}w|}XdXidh[|szypp[ie^ZyY^UyXwHyZF|s[sVy]XUa{yp{ZTj`GyZF|s[sVy^^Tq{yp{SK{Btb^UyqxUks^yX]Vy^DR_gX|ryyqsXQtHTq{yp{\Red_RddGj wX|ryyqsXStwQq{ypxDU\ViS{ceUuUGyZF|s[sVy]cASK{yp{RzX|ryyqsXSByX]VyZx|s\:E\WCAVF{{qpYWX{{qxIzXE~q[pWz_pJ{X^WzDWGfY^Ta_^@]\\_k[xCGX FbsWb^C\SzbhudHQRy` Qz|H ~_ \|ESzgDjfISeU_WuY{[F~pXsW{_w[ir{{q{YRfVJVjxEjkY~s{zrsYQuIWr{{qx }uY~s{zrsYSe`Y|XsY|fc[}uZY dD|u^]|aH~fdY~et}cD|fhG~usJ|vxj\`Z{[F~pXsW{_w@ir{{qxH~X{Cvc^WzrxJkZY|XsYkjg QH{Cvc^WzrxEhj`Y|XsYV|Yp{{qpYWy^GhaxzrxEP \zXE~q[pWz\ZFQ`Y|XsYk_]^PdI~_]zXE~q[pWz_pXVuVY|XsY~Ubi|gcZH{Cvc^Wzrx Pz|Y|XsYVuIJzXE~q[pWz_|ESaxzr{YvcA	9E@_XS_
	SUPVRP 
S UV QqDA^FB]\\	TSTPPUSVRQQlW	WRURSVmT	SSUPPTRW
PRUPWWWQR	STVSQSYDGAASU VF\UTS\ZD]R_@YUZE	
;D\WAB
SQPW

 WRU 	VqVFRYH[S^VV_Z_\UWRT^PCK@F[^^_]^WBUPD@YFKD_BDKBTGRBZWPTVCfIBW^\_WWQWRPTP UPSPoG^YI]m oT

QRWPQUTSSSW	PWPQT	P U

VWRQQ[EF@AQT TE^TTQ_XF\S^@[VXG:D^TC@VR	  
TWWP	 PTsWGSYJXZZ_BY\USUT^PCK@F[^^_]^WBUPD@YFKD_BDKBTGRBZWPTVCfIBW^\_WWQWRPTP UPSPo@T]E^moT

QRWPQW	P T	 PURPV	S TTPQ	RWQU	QPWQW 	TVSQSYDGAASU VF\UTS\ZD]R_@YUZE	
;FB]XP^	
TSTVQSVSUVTTQT
QVWpUDQ[J[[Y]A[^UVQ	TSTPPUSVRQQlBW_G^nlW
RPU
SSWTRPQW
RT	SSU
S VTTPQ	RYFDBAR V WD\W TR^[D_Q\@XW[E	8D]U@BVPTS		UWSP   TqJYPG_TPU]R@IBFX_]\_\WCVRGB[FHG]AFKAUEQ@ZTQWT@dKBT]^\UTSTPPUSVRQQlBW_G^nlW
RPU
SSWTRPQW
RT	SSU
S VTTPQ	RYFDBAR V WD\W TR^[D_Q\@XW[E	88