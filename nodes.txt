D]WABWG]UxqsP{]tYkq{{ZwJq|I~qO|dw[}s]P{ssUx_tGhs{xXk{YEyxqsP{sx]S|{Z][h_dBhhhDSudBkgGku`BQIGkjc^~q]UxqsP{]^YxX]^hdkH~vhZ|ZUFkex_hsuc~dYK|HkCh]hX|H{tUHX{YEyxqsP{sxGkjc^}YxRK{DqYsUxqs^QwtPq{{YSdBhs
[}s]P{ssUx\pAQ^c[~[{|t[}s]P{ssUx\pM{Z][eYr`csJ|HsPZsK|[OYKKsOt]E|a{DqYsUxqs^VwJHxX]^VwJHx[E|{ssUxqxWhp^xX]^P]Gka{DqYsUxqs^VY{xX{^q^;D_RACWEXUyqsV{_qYjq{{XrJ~q|K}qIvn[|s]V{qvUy_tAhq~yXk{[@yyqsV{q}]R|{XX[T dXhuqD|_` k CYR\DP}\y[Ez{qvUyqxAhq~yXxZhuaXje`Y~fn}ugE|v\ jqhX~|fQKhXfi_h_nH~[{Bq[vUyqsXP_ayX]XVz[|s]V{qvUy\pYVuP[[{GkeeYS_dKQK[|s]V{qvUy\pGQ\f[[{|vz[|s]V{qvUy\pK{XX[dYt`avJ}fVXvK}[I[K~KsIvXE}a{Bq[vUyqsXVuOHyX]XVuOHy[Ez{qvUyqxWju^yX]XP_Gja{Bq[vUyqsXV[~yX{Xq\:D_TAAWE^U{tsW{_wYht{{XtJ|t |K}dHfV[~v]W{qpU{Zt@hqx{]k {[Fy{tsW{q{]P| {X^[PZd huwD~Z`k EYPYEP{\{^E{{qpU{tx@hqx{]Y vt}cZZ~e|JhcsD|vtH}t|Xh~`|\}fsZpg |e|H^{Cq[pU{tsYP_g{]]YV|[~v]W{qpU{YpXVuV[}^{FQ YZVZgF{[Fy{tsW{q{EPx {X^[|scJ{[Fy{tsW{q{EQN{{Yb`rgWft{s{GXxFc{DXRUcsvt[~v]W{qpU{Y`CQKx{Y`CQKxAq^sW{qp[V^Ghax{ZFP_d[~v]W{qpU{YkY}[xK{PB	8D\WADWF]U~qqU{\tYmqy{[wJyq|HzqJK{[{s_U{rsU~_vBhr{~Xi{XEy~qqU{rx]U~{[][SzzVvZ_SeHGhi|H{_bkFYU\}GPx\~[Gy{rsU~qzBhr{~Xj^|uYEy_e~f`YzH[F|uQ za k[ZZ{f}Hk\czv}J}fky[yAqXsU~qq[P\d~X_[V[{s_U{rsU~\rZVvU[x[yDSi|AneY~H{At[qU{rs[Tu	KVr{~XaH{At[qU{rs[Tz}[}Xx}cbt{uwJzaqKu{K{fuK~e{~vuE}[sJ~[Gy{rsU~qzPy[x[zPy[{s_U{rsU~\bQvg[x[zGP^~[Gy{rsU~qz {[][z[yyT`=D\WAB STW	 WV

	WRPSTSWqJ[UG^U@W\R@KGFY]\\]YWAWRG@^FIF]ACK@WEQBZUSVT@fNBU\^\WUSTUPWS 	WPT	SmW
SPWW	P	RPPWtmW	
 QST
UPWTPSPW 	SR
SSW	SU	WTPQQZFEBAQ W QF_W TT\XG_P\@^UXF8D[WCAPTVSW
 WUQP   QrQY[\VZE_S_@Z^
WYQBKBE[]Y^]\TARQE@[EKC^CFHBW
FSBYWSSWBfKAWY]^WWPVPSWQ RPQShUVWQSSmW

SPWRSRTPQSWPU	SVWS W
	TTUQSYFFGAS T VF\WTS\ZD_SY@YUZE=FB]XP\T
 QSQUTS VVV 
W	rUZWW_W_^WPVPSWQ RPQShUVWQSSmW

SPWRSRTPQSWPU	SVWS W
	TTUQSYFFGAS T VF\WTS\ZD_SY@YUZE=D\WABS PWT WRSQVq_[[YW]U^UVW\T@IBFX]\
\_\WAWTGB[FHF[AFKAWCQ@ZTSVR@dKBT\X\UTUTPPWSWRQSmWSUQVQmT
SSW
PPWQRQSRPW
PSUP W
WWPT	SZEFBDSTTD_T QQ^ZG\S\E[WZF8A^UAA TPS W

RPPT QVSrRZ[YSX@RTW_Q@NBD[]_\X\UATQGE[DKE^AFIBWFQGXWSUW@cK@W_]\RWPTPRWS	TUQSnW	PRQSQoW	
 QST
UPWTPS
RW 	SR
SSW	SU	WTPQQZFEBAQ W QF_W TT\XG_P\@^UXF8D[WCASS	QQSV WUW  UQrU\WUZWFYU\QCKBC[_\_]\RCWQD@[CKF^BFNBUFRB_WQVWCfKGW\]_WWPWPUUP WPQQmTSWSSRmW
SVU
SUWTPQQWRTSSWS WRTPQS_FDBAS V WFZW TR\ZB_Q\@XUZC	8D]WAD	WP 
S	

 WS
RSwV_UWU]URSTW^Q@HBF^]^\^\WAUQGC[FND^AFKGWFQAZRSTW@eKBR^]\TRPTPPWSUSQSoWP	PTV
WVPmR

SSWPPUTSQSWPW
VQTV W
WQRQSZCF@AST TE_RTQ_ZGZS^@[VZF:D^TAATTQ
	
WP
 VPrP_UU_TUFW\T@IBFX]\
\_\WAWTGB[FHF[AFKAWCQ@ZTSVR@dKBT\X\UTUTPPWSWRQSmWPUUVWTPmeiWVRSQPWWPSSUSUo T W WVPRVUUW
SSWS	TWTPSPZFCBCP QTF_W VQ\YG_V\B[UYF8F_WBAUEz{qv[T[{{q~Ky[Eq[vUy\pK{XXUyGWG`[]Wa	_^B^\]_h[yCG^Eav_^~o_YCjA]BBWhbGDxG]Tz`FQHXD|cDPebDi ^VeZR\xAh _fYX~syyqsXkeeYyX]V{_SFjeVEha\ia{BvcXUyqxFP}yX]V{Xf}K{BvcXUyqxAhq~yq{I|XuXjfx[qecH~frJje{Ekea_}K |XvE}vXa[iekX~syyqsXke[YyX]V{XrKy[Eq[vUy\|[Wa~yqxYVjeDy[Eq[vUy_]Vq~yqxQK~Atc]V{q}Ujp]{XXUy_GP_b[|sz{qv[QuKVq~yqx_Pea\RegDh r[|sz{qv[SutSq~yq{GW\SjSz`fWuPDy[Eq[vUy\`BQK~yqxPzz[|sz{qv[S A{XXUy[{q\:D_TAAWEy{tsYV[x{t{I{[F|q^sW{\sH{]]W{GTGeY_Wb
_[@\_^_ jXzCB[ GapUa]@^Vybkvf KQSzcQ~K~Z\~ GSdDkeKS`V_VvZ{^E~q[pU{Zt[hqx{txYSeUHVo{Ek h[~v{{qp[QpIVqx{t{ |v|[~v{{qp[S`cY}[p[|c`[|vY[gD}v]_|dHeg[~`w| `F|ckGvpH|s{k_cX{^E~q[pU{Zt@hqx{t{H[xAvf]W{q{HkYY}[p[kod PKxAvf]W{q{GhocY}[p[VY~sy{tsYVz]Ehd{{q{GP\{[F|q^sW{_YDQcY}[p[kZ^^QgK~Z|]{[F|q^sW{\sZVpUY}[p[~Vc k|b`Z~KxAvf]W{q{PY}[p[VpJJ{[F|q^sW{\GSd{{qx[vfB	8FC]XV\
S  VU VSS
PVU TrD@]E@]_\WPWPUUP WPQQmTTSWRPUmW
SVU
SUWRTSSWS WRTPQSWVPRVZDFBBVTTF_U WQ\_G]S\C[U_F	8G^WDA
PSPV

TPUVrVGQZJ[V]VW\Y]\PWSW^Q@HBF^]^\^\WAUQGC[FND^AFKGWFQAZRSTW@eKBR^]\TRPTPPWSUSQSoF]ZK]hoW	
 QST
UPWTPSPW 	SR
SSW	SU	WTPQQZFEBAQ W QF_W TT\XG_P\@^UXF8D[WCAVS
TV WU	  UWrTDQYO[Z[\A[\PSTW^Q@HBF^]^\^\WAUQGC[FND^AFKGWFQAZRSTW@eKBR^]\TRPTPPWSUSQSoAW^G^hoW	
 QST
UPR

S
 W
PUPUWP WWPT	STPW
QSWQ R
WVPRVZDFBBVTTF_U WQ\_G]S\C[U_F	8E@]]S^
WPTSRQVPU VQTPW	SV TpTGRYJ^XY\BX\UUQWPWPUUP WPQQmAT]G[mmT
SSW
PPWQRQSRPW
PSUP W
WWPT	SZEFBDSTTD_T QQ^ZG\S\E[WZF8A^UAAWSWS
	TRP
S  TrI[PB\USU\QCKBC[_\_]\RCWQD@[CKF^BFNBUFRB_WQVWCfKGW\]_WWPWPUUP WPQQmAT]G[mmT
SSW
PPWQRQSRPW
PSUP W
WWPT	SZEFBDSTTD_T QQ^ZG\S\E[WZF8=