D]W@CWG]Tyqp_{]tXjqx{ZkK|XxA|II}q@|ZcZ|s^_{ssTy_wHhs{yXh{YExyqp_{sx\R{Z]ZR_ghwtE|_c	kFXR\|MPx]y[Fs{ssTyq{Hhs{y_{R|JwiXh@~d }u`L|tkI~[hZ{|et
|JUKiedBk]t[i[xKqYsTyqpQP]dyX^QVZ|s^_{ssTy\sPVwUZ[xNk@RugVhc
Z|s^_{ssTy\sNQ^cZ[x|tZ|s^_{ssTy\sB{Z]ZdY}`csK}fd_ZsJ}KOYKqpAd]I}axKqYsTyqpQVwJIyX^QVwJIy[Fs{ssTyq{Whp_yX^QP]FjaxKqYsTyqpQVY{yXxQq^:D\]ACWFWUyqrW{\~Yjqz{[}J~q |H}[Iu[[|s\W{ryUy_u@hrqyXj {XOyyqrW{rr]R} {[W[TzyVvP_TeKEhivH|_akLYR\~EPr\y[D{{ryUyqy@hrqyXz|K[~_f~ebY}f~D|ui~aYhfnZ|fj}vuH}He[|uyJi[zCqXyUyqrYP\nyX\YVu[|s\W{ryUy\qXVv_[[zFk@DTu[\~HqAs[rW{ry[Su
IVrqyXb HqAs[rW{ry[Sz~Y}Xr}dav{u}J}arIuqH|frI~e}yvzH}[uJy[D{{ryUyqy Pyu[[y Pyu[|s\W{ryUy\aQvm[[yEP^y[D{{ryUyqy{[W[}[z{T`:D^UABWD_Ux{sW{^vYk{{{YuJ{ |J{H|pyArQsW{pq[ho^[{Y_[RcY~r_Ux{sW{^XDRcY}Zzkox[kdGkpdZSbGRAFQ^S[}y]W{pqUxU^[{Y_[kog }gqgD|IS|{ kYy}otX}t}F~x]Iv^hBtZd}ExQE{{pqUx{xEhka[~QxQJyArQsW{pq[Rt SpyxQ\kkzATk
Y~r_Ux{sW{]rDRVcY}Zy|Y~r_Ux{sW{]rHxR]YfX	wcksHg}U|RsIJ E|QH}pqK|l]J`yArQsW{pq[UJJ{Y_[UJJ{ZGyx{sW{pzT`p\{Y_[SUEh`yArQsW{pq[UQ{{Yy[rV8E]WBKVG]VqqqUz]tZbqyzZkItXyK}IIwaJ|tcXts_UzssVq_vBis{qXizYEzqqqUzsx^Z~zZ]Xa_fGihhGZufGjgDbubGPIDbja[q]VqqqUz]^ZqX_[~dU bf[}]kEv_}Jicbeb_dYa_aF}JUKvff^idVZbfiKzYEzqqqUzsxDbja[|Yx[KyApYsVqqq[PwtYqyzYEajzKVc
Xts_UzssVq\rDP^cXw[y}tXts_UzssVq\rHzZ]XlY	wacsIuHqU~ZsHuK E~YIwqqK~d]KuayApYsVqqq[WwJKqX_[WwJKq[GyzssVqqzVhp]qX_[Q]DbayApYsVqqq[WY{qXy[p^2D\W@C STV TY
 	WRQSW 	SVpJXZG^TAW]S@HHFY]]\^VWAVSGCQFIG\ALK@WDQAZUSWU@eABU]_\TURTZPWS	VS[	SlW	SQVT	P]QPT{mV	QSU
ZP
WWPS
QT	R]
RSW	R	UWUPRQZGDBBQV^F_V W[\XG^Q\CQUXF
	8GTWCA	STVRW 
TZQQ  QrPX[_YZE_R^@U^
TVQBKCD[^V^]]UB]QE@ZDKL^CGIBTFSBXWP\WBfJ@WV]^WWPVQRTQ 	]PPPgU	YWRSSlW	
RQT RR]TPPPW
SUSYW
SV				UTZQRXFEHAR W VF]W
TS\[E_PV@YU[D2FB]YQ\T ^SPUTRWUY 
VrVUWW_V_]WPVQRTQ 	]PPPgU	YWRSSlW	
RQT RR]TPPPW
SUSYW
SV				UTZQRXFEHAR W VF]W
TS\[E_PV@YU[D2D\W@CS PV	U 	WR
S 
QWp_XTYW]T_VY W_[@IBGY]_\_\VAT[GB[GIETAFJ@WLQ@[USU]@dKCU_W\UUZTPQWS
	TRQ	SnW
PU	QYQmU
 SRW	PQ	T^RQ	S]PWQPUQ W

 VVS[	S[DFAKST
TD^U^Q^ZF]S_J[WZG	;N^UA@
	 TQR T


 ]PPU   QVSsSZXVSX@STV^QCABD[\^_W\U@UQDJ[DKD^BFIBVFRHXWRTWClK@W^]_]WPWPRVP
	UZQRoT	Q]PSR	oV	QSU
ZP
WWPSST	R]
RSW	R	UWUPRQZGDBBQV^F_V W[\XG^Q\CQUXF
	8GTWCA	P\	QPR VTZV   ZQrT]WVUWFX
U\PBKAL[_\^]_]CWPE@XLKF_CEABUGSBPWQVVBfHHW\\^WWQVSZUQ WPRQmUSWSRSnWPYU
RZWUPRQVRU SSWS
T	]TPPPPFDB@P VVFUW US\YM_Q\AYUYL	8E\WBK WS
S
	VR	]
RxV_UVT]V]ST	W^QAIBEQ]^]_\TAUQFB[EAD^@FHHWFP@Y]STWAdKA]^]]U]PUPSWRURQSoVS	PUV

WVQm]

SPWQSUTRQSWPV	YQUY W

T^RQ	SYLF@AS
T UD\]TP^ZDUS^@ZWZE:D_UABUUQ
WQ
V Q q__UU^UVI W_[@IBGY]_\_\VAT[GB[GIETAFJ@WLQ@[USU]@dKCU_W\UUZTPQWS
	TRQ	SnWQZU	V WWPmdhTV	]SPPTWQP\URZo 
TV WVQSYU	ZW
PSV	P
	U  WWPS
QZELBC Q^TG_T VQ]XG\Y\B[TXF8F_VCAUE{{ry[T[z{rqKy[D~qXyUy\qJ{[WUyGVGo[]W`_]B^]\_hZxCDQEaw^^}`_YCk@]ApBWhcFD{H]TzaGQKWD|bEPfmDi _Vf	ZR\y@hPfXY~pyyqrYkfjYyX\W{\\FjeWDhb\iazCv`WUyqyGPryX\W{[i}KzCv`WUyqy@hrqyqzH|[zXjfyZrebI~e}JjezDkfn_}K|[yE}v~ [n[iejY~pyyqrYkfTYyX\W{[}Ky[D~qXyUy\}ZWbqyqyXVijDy[D~qXyUy_\VrqyqyQHqAtc\W{rrUjq\{[WUy_FP\m[|s{{ry[Qu
JVrqyqy^Pfn\RefEh}[|s{{ry[Suu SrqyqzFW_\jSzagWv_Dy[D~qXyUy\aCQHqyqy Pyu[|s{{ry[S @{[WUy[z~q_:D^UABWD yx{sYVZyx{{I{ZG|rQsW{]rHxR]W{FUDeY_Vc
\T@\^^\jYz@M[ G`qUa\A^YybjwfKQS{bRp~J	}U\~~GPpdDkdKPoV_Vw[xQE~qZqUxUt[hpyx{xYSdTHU`{Eki[}y{{pq[RIVpyx{{ |w}[}y{{pq[PocY}Zq[l`[|wX[|
gD}w\_kHdf[}ow|aFlkGwqH|{k^bXxQE~qZqUxUt@hpyx{{HZyAui]W{pzHhYY}Zq[h`d PJyAui]W{pzGk`cY}Zq[UY~r yx{sYV{\Ekk{{pzGS
\{ZG|rQsW{^XDRcY}Zq[hU^^Q fK}U|]{ZG|rQsW{]rZUUY}Zq[}Vckm`Z~JyAui]W{pzSpY}Zq[UJJ{ZG|rQsW{]~GPk{{py[uiB	8GB][Y\
	S
 VZ VSR		PWT[rD@\D@^_\WQVSZUQ WPRQmUTS
WRQTnWPYU
RZVRU SSWS
T	]TPPPWVQSYZDFCCYTTE_UVQ_PG]S]B[VPF	9F^TKA
QSSV
	 UPU	UrVGP[JXY]VW]X]__WS	W^QAIBEQ]^]_\TAUQFB[EAD^@FHHWFP@Y]STWAdKA]^]]U]PUPSWRURQSoF\[K^goV	QSU
ZP
WWPS
QT	R]
RSW	R	UWUPRQZGDBBQV^F_V W[\XG^Q\CQUXF
	8GTWCA	VS TVTZ	   ZWrUEQZ@[Z[]@[__ST	W^QAIBEQ]^]_\TAUQFB[EAD^@FHHWFP@Y]STWAdKA]^]]U]PUPSWRURQSoAV_G]goV	QSU
ZP
]

R
WSU	PZWP VVS[	SUPW
QRTQ 	]
WVQSYZDFCCYTTE_UVQ_PG]S]B[VPF	9D@^RS^	VQW\SQUPU U^TPVSUTpTFSYIQXY\CY\VUQWQVSZUQ WPRQm@U]DTmmU
 SRW	PQ	T^RQ	S]PWQPUQ W

 VVS[	S[DFAKST
TD^U^Q^ZF]S_J[WZG	;N^UA@
WRVP
	T ]P
R TsH[SM\UR
U\PBKAL[_\^]_]CWPE@XLKF_CEABUGSBPWQVVBfHHW\\^WWQVSZUQ WPRQm@U]DTmmU
 SRW	PQ	T^RQ	S]PWQPUQ W

 VVS[	S[DFAKST
TD^U^Q^ZF]S_J[WZG	;2