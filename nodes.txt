D]W@CWG]TyqsV{]tXjq{{ZwK~q|I ~[I}tZ|s]V{ssTy_tAhs{yXk{YExyqsV{sx\R|{Z]Zi_dDhhhERudDkgFju`DQIFjjcX~q]TyqsV{]^XyX]Xwg}HYItG} {hs}fkF~dY ~vgEkZYK~u|ZhZh_~Xs {YExyqsV{sxFjjcX}Yx SK{BqYsTyqsXQwtQq{{YETj`KSg`_|K{BqYsTyqsXQwJTq{{Zc}K{BqYsTyqsXQxZ[x~f `uyvwKssJ}v{K~dsJ|f{I{twXsI{YExyqsV{sxRzX}YxRzX~q]TyqsV{^`SugX}YxFR ]{YExyqsV{sxyX]XY{xVc8F_VCAUE\W{qpUy_u[hqxyXvH|q~K}q}[zCq[pUyqrYke]YyX\Y|X`[|s\W{qpUy_[FQ`[[yhe{YieEhzgXQ aEQKDS_PY~s^UyqrW{_]YyX\YhXY~fy[|HRFifz|[}Hr~etJiefD|vt} fH]X~vT{[FyyqrW{q{GjjbY}[{SKzCq[pUyqrYQuwQqz{[ R_Xh dDy[D{{qpUyqyGP{yX\Y|v`Hy[D{{qpUyqyGQKxyY``wdU}fvJ{vxE}X~DvxF}XvWfh}vvY~s^UyqrW{\cASKz{\cASKzCq[pUyqrYVz]Ejaz{_DR_fY~s^UyqrW{\h[[zI{UA:D^UAAWD_U{rsW{^vYhr{{YuJ|r |J|bpyAqXsW{pq[kf^[{Y_[|[cY~r_U{rsW{^XDQcY}ZzQ_d StjPv\Q }GhydZSbGQHFQ^S[~p]W{pqU{\^[{Y_[h\wIkgu|[QDIeJ|r }guH~f{Hk}Fu{g\[|vgI}gS {XE{{pqU{rxEhka[}XxQJyAqXsW{pq[Qvt Spy{XGQ^fhfJh`[~p]W{pqU{_pFQ]a[}X{ |w}[~p]W{pqU{_pJ{Y_[fZu``qJewWYqKHGZ KbsH|Y_Eb{CqZqU{rsYVtHH{[]YVtHH{XE{{pqU{rx Wkr^{[]YP^	Ghb{CqZqU{rsYVZy{[{Yq] 8G_UA@
TE_UzssUx_vYis{xXuJ}sK|sJ|vW[q]UxqqUz]tBkqyzZkx[GyzssUxqz]Q|xX_[Q]dkuvD]`h DYQ^GSz\zYEyxqqUzsxBkqyzZ~fWJj]c}ev[~{FuuK|cZ~vXZgk kfjZjdp^vuJ}Y{Ar[qUzss[S_fzZ][U}[q]UxqqUz^pZUuW[|Y{Dh_fGis
[}s_UzssUx\rDP^c[~[y}t[}s_UzssUx\rHzZ][eY	wacsJ|feU~ZsK|K E~YK|aqJ}Z]E|ayApYsUxqq[WwJHxX_[WwJHx[GyzssUxqzVhp^xX_[Q]GkayApYsUxqq[WY{xXy[p^;D\W@C STV WP
 WRQST  SVpJ[SG^TAW]S@KAFY]]\]_WAVSG@XFIG\AEK@WDQBZUSWU@fHBU]_\WURTSPWS 	VPR	SlW
SQVW	PTQPWrmV
QSU
SP
WTPS
QW	RT
RSW	R UWUPQQZGDBAQV WF_V TR\XG^Q\@XUXF
	8D]WCA	PTVRW	
WSQQ  QrPX[\PZE_R^@\^
W_QBKCD[]_^]]UATQE@ZDKE^CGIBWFSBXWSUWBfJ@W_]^WWPVQRWQ 	TPPSnU	PWQSSlW

RQW	RRTTPPSW
PUSPW
S V	
 	UTSQRXFFAAR T VF]WTS\[E_S_@YU[D;FB]YQ\T WSPUTR WVP 
VrU\WW_V_^WPVQRWQ 	TPPSnU	PWQSSlW

RQW	RRTTPPSW
PUSPW
S V	
 	UTSQRXFFAAR T VF]WTS\[E_S_@YU[D;D\W@CS PV	U WR
S QWp_[]YW]T_UP W\R@IBGY]\\_\VAWRGB[GIF]AFJ@WEQ@[USVT@dKCU\^\UUSTPQWS
	WRQ	SmW
SU	QPQmU
	SRW
PQ	WWRQ	STPWQSUQ W

VVPR	S[DFBBSTTD^U WQ^ZF]S\C[WZG	8G^UA@
  TQR W


TPPU  QVSsSZ[_SX@STV^Q@HBD[\^\^\U@UQGC[DKD^AFIBVFQAXWRTW@eK@W^]\TWPTPRVS	USQRoW	QTPSQ oV
QSU
SP
WTPSSW	RT
RSW	R UWUPQQZGDBAQV WF_V TR\XG^Q\@XUXF
	8D]WCA	SU	QPR	VWSV   SQrT]WU\WFX
U\PBKBE[_\^]\TCWPE@[EKF_CFHBUGSBYWQVVBfKAW\\^WWQVPSUQ WPQQmUSWSRSmWSPU
RSWUPQQVRU	SSWS
W	TTPPSYFDB@S VVF\W US\ZD_Q\AYUZE	8E\WAB WP
S

VR
T
RqV_UVT]UTST	W^QAIBFX]^]_\WAUQFB[FHD^@FKAWFP@ZTSTWAdKBT^]]UTPUPPWRURQSoVP	PUV

WVQmT

SSWQPUTRQSWPV
PQUP W

WWRQ	SZEF@AST UD_TTP^ZG\S^@ZWZF:D_UAAUUQ
WQ
V Q rV_UU^UU@ W\R@IBGY]\\_\VAWRGB[GIF]AFJ@WEQ@[USVT@dKCU\^\UUSTPQWS
	WRQ	SmWQSU	V	WTPmdhWV	TSPPWWQSUURSo TV WVQSPU	SW
SSV	S	U	 WTPS
QZFEBC Q WTG_W VQ]XG_P\B[TXF8F_VCAUE{{qp[T[z{qxKy[D~q[pUy\qJ{X^UyGVGf[]W`_^B^]\_hZxCGXEaw^^~i_YCk@]ByBWhcFDxA]TzaGQH^D|bEPedDi _Ve ZR\y@h YfXY~syyqrYkecYyX\W{_UFjeWDha\iazCvc^UyqyGP{yX\W{X`}KzCvc^Uyqy@hqxyqzH|XsXjfyZqebI~ftJjezDkeg_}K|XpE}v~ Xg[iejY~syyqrYke]YyX\W{XtKy[D~q[pUy\}ZWaxyqyXVjcDy[D~q[pUy_\VqxyqyQKxAtc\W{q{Ujq\{X^Uy_FP_d[|s{{qp[Qu
JVqxyqy^Peg\RefEh t[|s{{qp[Suu SqxyqzFW\UjSzagWuVDy[D~q[pUy\aCQKxyqy Pz|[|s{{qp[S @{X^Uy[z~q\:D^UAAWD y{rsYVZy{r{I{ZG|qXsW{]rH{[]W{FUGeY_Vc
_]@\^^_jYzCD[ G`qUa\A^PybjwfKQS{bQy~J	~\\~~GSydDkdKSfV_Vw[{XE~qZqU{\t[hpy{rxYSdTHVi{Eki[~p{{pq[QvIVpy{r{ |w}[~p{{pq[SfcY}Zq[|e`[|wX[gD}w\_|bHdf[~fw|aF|ekGwqH|u{k^bX{XE~qZqU{\t@hpy{r{HZyAv`]W{pzHkYY}Zq[kid PJyAv`]W{pzGhicY}Zq[VY~r y{rsYV{\Ehb{{pzGP\{ZG|qXsW{^XDQcY}Zq[k\^^Q fK~\|]{ZG|qXsW{]rZVvUY}Zq[~Vck|d`Z~JyAv`]W{pzPyY}Zq[VvJJ{ZG|qXsW{]~GSb{{py[v`B	8GB]XP\
 S
 VS VSR
 PWT RrD@\D@]_\WQVPSUQ WPQQmUTS
WRQTmWSPU
RSVRU	SSWS
W	TTPPSWVQSPZDFCCPTTF_UVQ\YG]S]B[UYF	9F^WBA
QSPV

	UPU	VrVGP[J[P]VW]X]\VWS	W^QAIBFX]^]_\WAUQFB[FHD^@FKAWFP@ZTSTWAdKBT^]]UTPUPPWRURQSoF\[K]noV
QSU
SP
WTPS
QW	RT
RSW	R UWUPQQZGDBAQV WF_V TR\XG^Q\@XUXF
	8D]WCA	VS	TVWS	   SWrUEQYI[Z[]@[\VST	W^QAIBFX]^]_\WAUQFB[FHD^@FKAWFP@ZTSTWAdKBT^]]UTPUPPWRURQSoAV_G^noV
QSU
SP
T

R
 WPU	PSWP VVPR	SUPW
QRWQ 	T
WVQSPZDFCCPTTF_UVQ\YG]S]B[UYF	9D@][S^
VQTUSQVPU VWTPVSVTpTFSYJXXY\CY\UUQWQVPSUQ WPQQm@U]G]mmU
	SRW
PQ	WWRQ	STPWQSUQ W

VVPR	S[DFBBSTTD^U WQ^ZF]S\C[WZG	8G^UA@
WRVS
	TTP
R  TsH[PD\UR
U\PBKBE[_\^]\TCWPE@[EKF_CFHBUGSBYWQVVBfKAW\\^WWQVPSUQ WPQQm@U]G]mmU
	SRW
PQ	WWRQ	STPWQSUQ W

VVPR	S[DFBBSTTD^U WQ^ZF]S\C[WZG	8;