D]W@CWG]TyqsT{]tXjq{{ZkK|X{J|I}q }s{@s[sT{ssZie^X{Z]Z~XcZ~q]TyqsT{]ZEScZ}YxZje_V]@jeYhcXjuI~]_Tq{@qYsTyqsZSgcZ[{}tY }uc|I_jXZX~dcie{Gkg|^}KKhw`^}u|^ZdX~eZ~q]TyqsT{]_Tq{{^VIy[Ex{ssTyqxDkh`\yX]Z~VJRQE{YExyqsT{sxDRx{Z]Z~vcI{YExyqsT{sxDSK{{[cbwgTdDyv{DZG}v{GZT}XtwZ|s]T{ssTy\`@QI{y\`@QI{@s[sT{ssZTz^Dhc{y_EP]gZ|s]T{ssTy\kZ}Y{JyUB
8F_VCAUE\W{qrUy_u[hqzyXjH~XzK~KH}aJ}[zCq[rUyqrYke_YyX\Y|Xb[|s\W{qrUy_[FQb[[yheyYieEhzeXQ aEQKDS_PY~s\UyqrW{__YyX\Y}ebKje~X~FjXf|a}fa[~ev}XfD_a_vaZvjHifvH{[DyyqrW{qyGjjbY}[ySKzCq[rUyqrYQuuQqz{[
KjjqCke}^|KzCq[rUyqrYQu
KTqz{Xb}KzCq[rUyqrYQz~[[yfatyvvHKrK}vzJ~frK|fzJ{vzHXrH{[DyyqrW{qyRz~Y}[yRz~Y~s\UyqrW{\aSufY}[yGR \{[DyyqrW{qy yX\Y[zyVc8D^WCA	WD]W{pqU{^t[hpy{YwH|p|J}`p{CqZqU{psYkd\Y{Y]Y|Ya[~r]W{pqU{^ZFQ a[}ZxEhkbYkd
Eh{fXS`EQJDQ^QY~r_U{psW{^\Y{Y]Y|IT^hwVZhg}Fhgp\}` hY~gW twD|IihwhXhdvY|dk{ZGy{psW{pzGhkcY}ZzQJ{CqZqU{psYQtvSp{{Z	\Vd^CVp[~r]W{pqU{]pFQ]a[}Z{ |w}[~r]W{pqU{]pJ{Y_[fXu``qJggWYqKJGZ KJsII_E`{CqZqU{psYVtHH{Y]YVtHH{ZE{{pqU{px Wkr^{Y]YP^	Gh`{CqZqU{psYVZy{Y{Yq] 8E_UA@
VE_UzssUz_vYis{zXiJZ{K}K}Y}[yApYsUzqq[jg^YzX_[}Zc[s_UzssUz_XDPc[|[zP^dRujQw^P}GixdXR bGPIDP_S[q]UzqqUz]^YzX_[~dkiXj_~ggFjfaJis~Hz_d^XieuFj]kEiX\_~g}uiJzYEyzqqUzsxGija[|YxPKyApYsUzqq[PwtRqyzYDi_iDzYEyzqqUzsxEQzzZ][}vaHzYEyzqqUzsxEPKyz[baweU~dwJzvyE~ZF~vyF~ZU~X}~tw[s_UzssUz\bAPI{z\bAPI{Ap[qUzss[Wz\Eic{z_DQ]g[s_UzssUz\i[|Y{KzU@9F^W@A
QTV
WR


UPQ QT	QVrH[QE\TC
W]QBKCD[]]^]]UAVQE@ZDKG^CGIBWFSBXWSWWBfJ@W]]^WWPVQRWQ 	VPPSlU
QQTW
P
VQRWpoV

SSWQP
UTRQ
SWPV
RQUR W

WURQ	SZGF@AST UD_VTP^ZG^S^@ZWZF
:D_UAA	P
VTPU
WQSQ  SrPZY\RXG_R\B^\W]S@KCFY]]\]]WAVSG@ZFIG\AGK@WDQBZUSWU@fJBU]_\WURTQPWS 	VPP	SlWRW	QQQlU
RSWPP	VVPP	SU
PW
QRW
Q 	V
WVQSRZDFCCRTTF_UVQ\[G]S]B[U[F	9D@]YS^VUSPWTP WVR
V
pU^UU_V]^	URTQPWS 	VPP	SlWRW	QQQlU
RSWPP	VVPP	SU
PW
QRW
Q 	V
WVQSRZDFCCRTTF_UVQ\[G]S]B[U[F	9F^W@A
QPV	
UUP
QSWr][_[U]T]UR
 U\PBKBG[_\^]\VCWPE@[GKF_CFJBUGSB[WQVVBfKCW\\^WWQVPQUQ 
WPQQmU
SWSRSmWSRU
RQWUPQQVRUSSWS
W
	VTPPS[FDB@S VVF^W US\ZF_Q\AYUZG	8E\WA@TQPW


VRPU	
STSsQX[]QZ@QVV\S@J@F[\\\\^W@WSGAYFKF\ADKBVDQCZWRVU@gIBW\_\VWRTRPVSWQSRmWSVPQQmV

SSWQP
UTRQQWPV
RQUR W

WURQ	SZGF@AST UD_VTP^ZG^S^@ZWZF
:D_UAA	SWQPP	TWQ
V  Q	SrT_UU^UFX W\P@IBGY]\\_\VAWPGB[GIF_AFJ@WGQ@[USVV@dKCU\\\UUQTPQWS
	WRQ	SmW
SU	QRQmU
SRW
PQ	WURQ	SVPWQSUQ 
W

VVPP	S[DFB@STTD^U UQ^ZF]S\A[WZG	8E^UA@
 
UPQ

VP
V 
P	sT]UVV_UVQT	U\QAK@FZ_\]]^WCWQF@YFJF^@DKCUFPBZVQVWAfIBV\]]WVPURPUR 
WPS
QmVPPW
T

U	TQoV
QSU
QP
WTPS
QW	RV
RSW	RU
WUPQQZGDBAQV UF_V TP\XG^Q\@ZUXF
	8D_WCA	UW S
WQT  QrT]WU^WUB
 U\PBKBG[_\^]\VCWPE@[GKF_CFJBUGSB[WQVVBfKCW\\^WWQVPQUQ 
WPQQmUQQWT	W	TRmdjW
V VSPRWU
QSWWP	Q m  VTUTQQRWQWSQVSW	 UTRQ
SXFG@A S U TG]WTQ]ZE_R^@[TZD
:D_VACWEyyqrYV[zyqzI{[D|s[rW{\qHyX\W{GVEdY_W`
]^@\]^]jZzAGZ Gaw\\~k][CkB_B{@UhcDFxC_VzaESH\F~bGRefFk ]TeXP\yBj [ }fX[|s{{qr[iea[{X\Uy_WDheWFja^kazAtc\W{qyERy {X\UyXb KzAtc\W{qyBjqz{qzJ~XqZhfyX}q}ebK|fvHhezFiee]K~XrGv~}XeYkej[|s{{qr[ie_[{X\UyXvI{[D|s[rW{\}XUaz{qyZTjaF{[D|s[rW{_^Tqz{qySKzCvc\Uyqy Wjq^yX\W{_DR_fY~syyqrYSu
HTqz{qy\Ree^PefGj vY~syyqrYQuuQqz{qzDU\WhQzaeUuTF{[D|s[rW{\aASKz{qyRz~Y~syyqrYQ ByX\W{[z|s\8D^WCA	WD{{pq[VZ{{pyK{ZE~qZqU{]pJ{Y_U{FWGg[_Va__B\\\_ j[xCFYG`sWc\C\R{`judISS{` Q{}~J ~^^~|ES{fFkdISdT]VwY{ZG|qZsW{^vYhp{{pz[SdVJVkyGkkY~r y{psYQt	KVp{{py|wY~r y{psYSda[}ZsY|gbY|wZYeF}w^]|` JddY~du|cD|giEwsJ|wy k^`Z{ZG|qZsW{^vBhp{{pyJZ{Cvb_U{pxJk [[}ZsYkkfPJ{Cvb_U{pxEhka[}ZsYV }[~r{{pq[V{^Gh`y{pxEP^{ZE~qZqU{^ZFQ a[}ZsYk^\\Q dI~^~_{ZE~qZqU{]pXVtW[}ZsY~ Tci|fbX~J{Cvb_U{px P{}[}ZsYVtHH{ZE~qZqU{]|ES`y{p{Yvb@8G@_XR^	Q
TQTSP 
RWV PpF@\FB]]^UQTPQWS
	WRQ	SmW	
VS
U	PQVmU
SRW
PQ	VPWQSUQ 
W

VVPP	SUTQQRXFFCAR T VF]WTS\[E_S]@YU[D9D\W@CSQPV
WR
W 	VpTGPYH[R_TW]Z_\TUS	U\QAK@FZ_\]]^WCWQF@YFJF^@DKCUFPBZVQVWAfIBV\]]WVPURPUR 
WPS
QmF\YI]lmV

SSWQP
UTRQ
SWPV
RQUR W

WURQ	SZGF@AST UD_VTP^ZG^S^@ZWZF
:D_UAA		TS  	VVWQ  QUrUGSYKYX[]BY\TQT	U\QAK@FZ_\]]^WCWQF@YFJF^@DKCUFPBZVQVWAfIBV\]]WVPURPUR 
WPS
QmAV]E^lmV

SSWQP
V
R U P
WRQW	RVTPPSW
PUSRW
S V	
	UTQQRXFFCAR T VF]WTS\[E_S]@YU[D9FB]YQ\

VSTWQSVRW VUVPV
QVVrTFQ[JZZ[\C[^UWSUQTPQWS
	WRQ	Sm@W_G_o mWSRU
RQWUPQQVRUSSWS
W
	VTPPS[FDB@S VVF^W US\ZF_Q\AYUZG	8E\WA@WRTSTVR
P  	VsJYPF^UR W\P@IBGY]\\_\VAWPGB[GIF_AFJ@WGQ@[USVV@dKCU\\\UUQTPQWS
	WRQ	Sm@W_G_omWSRU
RQWUPQQVRUSSWS
W
	VTPPS[FDB@S VVF^W US\ZF_Q\AYUZG	89