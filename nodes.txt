D]WABWG]UxqpR{]tYkqx{ZkJ}XxL|IJ|[MZU[}s^R{ssUx_wEhs{xXh{YEyxqpR{sx]S{Z][Uz{VwZ_UeI@hh|H}_ckFYS\|@Px\x[F~{ssUxq{Ehs{xXpLkg`^XkY~ds  dA|t|_ka \}wk}fVO|gtY|uxM|d{J~qxFqYsUxqp\P]dxX^\V[}s^R{ssUx\s]VwU[~[xCVxxBRq	\~q]UxqpR{^pDR\`\}Y{v|\~q]UxqpR{^pHxX^\f[wcapMdwU|XpLYJ|[M|csE|v^Oc{Ar[pR{ss[UuIO{Z][UuIO{YEyxqpR{sxTjsY{Z][S_@hc{Ar[pR{ss[U[x{Z{[r\8F_WBAUE]V{rtUy_tZhr|yXwI|r~K|b}a{BqXtUyqsXkfYYyX]X|[d[|s]V{rtUy_ZGQd[[xDhigYie
DhycXQ `DQH DS_QX~pZUyqsV{\YYyX]X}uljewK|epFfHjXcK~f|j_cE|ed~XkI|[lEi cI{XByyqsV{rGjjcX}XSK{BqXtUyqsXQvsQq{{XYjj`YSfBDy[Ez{rtUyqxFPyX]X|udHy[Ez{rtUyqxFQH|yYa`t`U}fw {u|E}X{Ee|F}fgVut}HwX~pZUyqsV{_gASK{{_gASK{BqXtUyqsXVyYEja{{\ DR_gX~pZUyqsV{_l[[{H{VE:D_TABWE^UxvsW{_wYkv{{XhJ}_{I|K}_kH{[FyxvsW{q{ZPbcY}[x v{Cq[pUxvsYSuHUv{{_{^SXdP I^SX|\~_cYS[EP_gx\E{{qpUxvx@hqxxXw|vg^|_Y~etK|cD|v|vkXpE}bghuhk_x]hvpE~f{Cq[pUxvsYP_gx_]YV|[}t]W{qpUx[pXVuV[~\{FWeSXQF{[FyxvsW{q{ESx {X^[qcJ{[FyxvsW{q{ERL{{YbcpgWf|Exq{GXxF|a{DfdU|qsHt[}t]W{qpUx[`CQKxx[`CQKxAr\sW{qp[U}^GhaxxXFP_d[}t]W{qpUx[kY}[xKxRB	8D\WBFWF]V|qqU{\tZoqy{[wI{q|H{a|H{Bv[qU{rsXle\Y{[]X{Xa[~p]V|qqU{\ZGVa[}XxoezYkf
DozfXS`DVKDQ\QXys_U{rsV|_\Y{[]XlHv_husHxfyFk|[xa |e{Kyf\ZKsEx_u[p]o_a|fw |[Gy{rsV|qzGhicXz[zQH{Bv[qU{rsXVuvSr{|[	ASf]yKyAqXsV|qq[QvHQqy{[cxKyAqXsV|qq[QyXz[z}f`w|vuJHsHxvyK~ewHyfu{usFzX}J{XEz|qqU{rxWz}[}XxWz}[~p]V|qqU{_`Vue[}XxDW ^{XEz|qqU{rx|X_[X{zSc8G^TFA
QWP
WS
	
TPW QTQPrH[PD\RC
T[QBKBE[^[^]\TBPQE@[EKA^CFHBTFSBYWPQWBfKAW[]^WWPVPST Q PPQPjU
PWTWS
WWRWqnP

SPWPSUTSQSWPW	TQTT W
TSRQSYAF@AST TE\PTQ_ZDXS^@[VZE:D^TABPWTPU
	
 WPSWRqVZY\SYG\T\B_]W\R@HEFY]\\^[WAWRGC\FIF]AAK@WEQAZUSVT@eLBU\^\TUSTWPWS	WSV	SmWST	QPQjU
	TSW
PP	WWSV	STPW
QSTQ P
WVPRTZDFBBTTTE_U WQ_]G]S\C[V]F	8E@^_S^VT PVWWP QVS	P
pU_TU\P]^USTWPWS	WSV	SmWST	QPQjU
	TSW
PP	WWSV	STPW
QSTQ P
WVPRTZDFBBTTTE_U WQ_]G]S\C[V]F	8G^TFA
PSP	
STPQ S Qr][^ZU^R]USU\QCKAA[_\_]_PCWQD@XAKF^BELBUFRB]WQVWCfHEW\]_WWPWSWUP WPRQmTSWSSRnW
PTU
SWWTPRQWRTSSWS TPTPQP]FDBAP V WFXW TR\Y@_Q\@XUYA	8D]WBFWWPW	
	WSSS	RTPuQX[\PZCQVP\S@KAFXZ\\]_WFWSG@XFHF\AEKAPDQBZTTVU@fHBT\_\WTRTSPPS WPRTmWSWVQQ mP

SPWPSUTSQQWPW	TQTT W
TSRQSYAF@AST TE\PTQ_ZDXS^@[VZE:D^TABSVRVP
TWP
PPSqR_UU_TE^W_V@IBFX]_\_\WATVGB[FHEYAFKAWAQ@ZTSUP@dKBT_Z\UTWTPPWSTRQSnWP UQTQmT
SSW	PPTSRQSPPW
PP UP W
 WWSV	SZEFAFSTTD_TSQ^ZG\S_G[WZF;C^UAA
UP	Q

 PP
W   P	rU]VPV_UWQWT\RGK@F[^\[]^WBWR@@YFKF]FDKBTEVBZWPVTGfIBW\^[WWSSRPTT WPSPmPPSWU	UTWoW		QST
WPWWPSPT	SP
SSW	SU	WTPRQZFEBBQ WSF_W WV\XG_P\C\UXF8GYWCA SW  S
 TWU WrU\WVXWUCU\QCKAA[_\_]_PCWQD@XAKF^BELBUFRB]WQVWCfHEW\]_WWPWSWUP WPRQmTWPWT
T	TSnbjW
U WPVRWT
WSVWP	Pm  WTTTWQSWPTSPPS  W	
 UTSQSXFFAAS T WA]WTR[ZE_S_@XRZD;D\PACWFyyqsXVX|yq{H{XB|s[sV{_wHyX]V{DPEeX_Tf
]^A\[^]j\zAG[Gbq\\~j\[@mB_BzAUkeDFxB^VygESH]G~dGRegGk ]TeYP_Bj Z}e^[|sz{rt[ie`Z{[ZUy_VEhfQFja_kb|Atc]V{rERx{[ZUyXcH|Atc]V{rBjq{{r|J~Xp[heX}q}fdK|fwIhf|Fied\H~XsFux}XdXkfl[|sz{rt[ie^Z{[ZUyXwH{XB|s[sV{_{XUa{{rZTj`G{XB|s[sV{\ ^Tq{{rSK{Bv`ZUyqxWiw^yX]V{\ DR_gX~pyyqsXSvHTq{{r\Red_Pf`Gj wX~pyyqsXQvsQq{{r|DU\ViQygeUuUG{XB|s[sV{_gASK{{rRzX~pyyqsXQ ByX]V{X||s\8GXWCATB{{qp[U\{{qxKx\E~q[pUx[pJ{X^Ux@WGf[\Pa_^B_\\_i[xCGXDfsWbZC\Sz`ludHSP}` Qz|}L ~_ ^}|ESzgFhbISeU]UqY{[F|r\sW{_wYkv{{q{[PbVJVjxGhkY~syxvsYQuKUv{{qxqY~syxvsYSe`[~\sY|fcYqZY dF~q^]|aJ|bdY~etcD|fhE|qsJ|vx hX`Z{[F|r\sW{_wBkv{{qxJ|\{Cvc^UxvxJkZ[~\sYkjgSL{Cvc^UxvxEhj`[~\sYV|[}t{{qp[U}^GhaxxvxEP ^x\E~q[pUxXZFQ`[~\sYk_]\RdI~__x\E~q[pUx[pXVuV[~\sY~U`i|gcX}L{Cvc^Uxvx Pz|[~\sYVuIHx\E~q[pUx[|ESaxxv{YvcA;A@_XS_	QUPTPP 
SQV QqFCZFB]\^TWTPPWSTRQSnW	WPUPWVmT
SSW	PPPPW
PP UP W
 WWSV	STTWQSYFEEAS W VF\WTS\ZD_P[@YUZE?D\WABSQPU

 WRW	VqTDVYH[S^TT[Z_\UUPT\RGK@F[^\[]^WBWR@@YFKF]FDKBTEVBZWPVTGfIBW\^[WWSSRPTT WPSPmEZYI]m mP

SPWPSUTSQSWPW	TQTT W
TSRQSYAF@AST TE\PTQ_ZDXS^@[VZE:D^TABTP  
VUWP PTqSGSYJXXX[BY\UQWT\RGK@F[^\[]^WBWR@@YFKF]FDKBTEVBZWPVTGfIBW\^[WWSSRPTT WPSPmBP]E^mmP

SPWPSW		T T PWRPT	SPTPQPWS U	STWSW		TTWQSYFEEAS W VF\WTS\ZD_P[@YUZE?FB]XP\
PSTVQSVSW VTVSP
QVWrW@Q[J[[[_E[^UVSTWTPPWSTRQSnFW_G^n nW
PTU
SWWTPRQWRTSSWS TPTPQP]FDBAP V WFXW TR\Y@_Q\@XUYA	8D]WBFTTTS	WWS	P  VuJYPG_VTW_V@IBFX]_\_\WATVGB[FHEYAFKAWAQ@ZTSUP@dKBT_Z\UTWTPPWSTRQSnFW_G^nnW
PTU
SWWTPRQWRTSSWS TPTPQP]FDBAP V WFXW TR\Y@_Q\@XUYA	88