D]W@C	WG]Typq_{]tXjpy{ZkK|YyA|I }ZAJ{Z|r__{ssTy^vHhs{yYi{YExypq_{sx\R ~{Z]Zi^fMhhhERtfMkgFjtbMQIFjkaQ~q]Typq_{]^XyY_Qk]kDjgiBw{Gia}cig\S~dZXiI[L|YjtbRhtgig}
{YExypq_{sxFjkaQ}Yx SJyKqYsTypqQQwtQpy{YET^fAh]JETJQ~q]Typq_{^pES]aQ}Y{~w}Q~q]Typq_{^pIyY_Qf[vb`q@JsT}YqAID}J O}ssK~I_Bc{@sZq_{ssZTtHB{Z]ZTtHB{YExypq_{sxUkrT{Z]ZR^	Mhc{@sZq_{ssZTZy{Z{Zs] 8F_VC@
UE\WzsyUy_u[isqyXjHZqK~K|sK~vzYqWUyqrWz]~BjqzzZay[D{zsyUyqy_QvyX\YWn[juuF]ji G[Q^uGRy^zYOyyqrWzsrBjqzzZi~HT|d_|fuY~giF~vz~c	Z}vaZdPX} a]iZS vrisqAs[rWzsy[R_e zZW[T~YqWUyqrWz^zZTuTY|YqDT u@WwnK|KzCpYyUyqrYPwKTqzzZi}KzCpYyUyqrYPxu[[yg jtyvvH~IyK}vzJdyH|frzt}X~HzYOyyqrWzsrRz~Y|YrRz~YqWUyqrWz^jSufY|YrGR \zYOyyqrWzsr yX\Y~YqyVc9FUWCA	UO]W{pqTyUt[hpyyRkH~YyJ~A }`{{CqZqTy{sYkd\XyR]Y|YaZ|y]W{pqTyUZFQ aZQxEhkbXio
Eh{fYQ
`EQJESUQY~r_Ty{sW{^\XyR]Ykgf^|^Y|tuGi
 hZ jd]~dyI}|YDhdjY~UdZkf[~lwI{ZGxy{sW{pzFj`cY}Zz SA{CqZqTy{sYQtvQ{{{Z	_TUdI~Jy@sQsW{pqZSIVpyyRc Jy@sQsW{pqZSpY}Zz|d`v{wuK~ksIwyI|lsJ~gqy|w}Y}KyQE{{pqTy{x P{}ZQx P{}Z|y]W{pqTyV`QteZQxEP_yQE{{pqTy{x{Y_Z}Q{{Tb:N_UA@
]E_UzsrWq_vYiszqXuJ}s vK|cuKyApYrWqqq[jg_[qX_[}ZbYts_UzsrWq_XDPbYw[zP^e YujQw\[}GixeZY bGPIF[_S[q\WqqqUz]_[qX_[jJTvey}dzDa_a}c bv}gyXwfuFi]yYvHqidjaHvYzYD{qqqUzsyEbja[|Yy[KyApYrWqqq[Pwu YqyzY
Z\bBQsYts_UzsrWq\rDP^bYw[y}t~Yts_UzsrWq\rHzZ\YlY	wacrHufuU~ZrIuK E~IGwqqJ}J\JuayApYrWqqq[WwKJqX_[WwKJq[GyzsrWqqzVhq\qX_[Q]
EbayApYrWqqq[WYzqXy[p^2D\W@C	 STVUY
	WRQRV  	SVpKYZG^TA	W]SAIHFY]]]_VWAVSFBQFIG\@LK@WDP@ZUSWUAdABU]_]UURUZPWR	VR[	SlVSQVU	P]QQU{mVQSUZP
VVPS
QU	R]
RRW	R		UWUQSQZGDCCQV^F_VV[\XG^Q]BQUXF
	9FTWCA	RTVRV 
UZQQ  	QrPXZ^YZE_R^AU^
UVQBKCDZ_V^]]UC]QE@ZDJL^CGICUFSBXVQ\WBfJ@VV]^WVPVQRUQ 	
]PP
QgU	YW
SSSlV
RQU RR
]TPP
QW
RURYW
RV			UUZQRXGDHARV VF]V
TS\[E^QV@YU[D
	2FB]YQ]
T	^SPUTR W TY 
VsWUWW_V^\VPVQRUQ 	
]PP
QgU	YW
SSSlV
RQU RR
]TPP
QW
RURYW
RV			UUZQRXGDHARV VF]V
TS\[E^QV@YU[D
	2D\W@C	S PV	
U	WR
R  
QWp^YTYW]T_WY V^[@IBGY\^\_\V@U[GB[GIDTAFJ@VLQ@[URT]@dKCU^W\UUZTPQVS
	URQ	RoW
QU	PYQmU SRVPQ	U^RQ	R]QWQQUQW
VVR[	S[DG@KSU
TD^U^Q^ZF]R^J[WZG	
:N^UA@
	 TQRU


]PPU 
 QVSsS[YVSX@SU
V^PBABD[\^^W\U@UPEJ[DKD_CFIBVGSHXWRTVBlK@W^\^]WQVPRVQ
	UZQRoU	Q]PRS	oVQSUZP
VVPSSU	R]
RRW	R		UWUQSQZGDCCQV^F_VV[\XG^Q]BQUXF
	9FTWCA	Q\	QPR VUZV  ZQrT]VWUWFX
U\PBJ@L[_\^\^]CWPEAYLKF_CDABUGSCPWQVVBgIHW\\^VWQVRZUQWQSQmUSVSRSoWQYU
RZWUQSQV	RU SSV	S
U	 ]TPP
QPFDB@ Q VVGUW US]XM_Q\AYTXL	8E\VCK VR
SVR] 
R
	xV_UVT\W]ST	W^QAICDQ]^]_]UAUQFBZDAD^@GIHWFP@X]STWAdJ@]^]]U]PUQRWR	URPSoVR	PUV

VVQl]

RQWQRUTRPSW
PVYQU
Y V	

U^RQ	RXLF@AR
T UD]]TP^[EUS^@ZW[D:D_U@CUUQWQ	V  Q p__UU^UWI V^[@IBGY\^\_\V@U[GB[GIDTAFJ@VLQ@[URT]@dKCU^W\UUZTPQVS
	URQ	RoWQ	ZU	W W
VPmdhUV	]SPQUWQQ\UR
Zo 
TVWVQS	YU	ZWQSV	Q
	U
  VVPS
Q[DLBC Q^TG^U VQ]XF]Y\B[TXG	8F_VC@
UE{zsy[T[zzsqKy[D~pYyUy\qJzZWUyGVFo[]W`^\B^]\^hZxBEQEaw^_|`_YCk@\@pBWhcFEzH]TzaGPJWD|bEQgmDi _Wg	ZR\y@iPfXYqyyqrYjgjYyX\Wz]\FjeWDic\iazCwaWUyqyGQryX\WzZi}KzCwaWUyqy@isqyqzH}ZzXjfyZ~sebId}JjezDjgn_}K}ZyE}v~ ~Zn[iejYqyyqrYjgTYyX\WzZ}Ky[D~pYyUy\}ZVcqyqyXWhjDy[D~pYyUy_\WsqyqyPIqAtc\WzsrUjq\zZWUy_FQ]m[|s{zsy[Qu
JWsqyqy^Qgn\RefEi}[|s{zsy[Suu RsqyqzFV^\jSzagVw_Dy[D~pYyUy\aCPIqyqy Qxu[|s{zsy[S @zZWUy[z~p^:D^U@CWD xy{sYVZyy{{I{ZG}sQsW{]rIyR]W{FUEeY_Vc]T@\^_]jY{AM[ G`qTa\A_YybjwgKQS{bSp~J	|U\~~FQpdDkdJQoV_Vw[yQE~qZqTyUt[hpyy{xYSdTIT`{EkiZ|y{{pqZSIVpyy{{ |w}Z|y{{pqZQocY}ZqZ~l`[|wXZ}
gD}w\^~kHdfZ|ow|aG~lkGwqI~|{k^bYyQE~qZqTyUt@hpyy{{HZy@ti]W{pzIiYY}ZqZi`d PJy@ti]W{pzFj`cY}ZqZTY~r xy{sYV{\Djk{{pzFR
\{ZG}sQsW{^XEScY}ZqZiU^^Q fJ|U|]{ZG}sQsW{]r[TUY}ZqZ|Vcj~m`Z~Jy@ti]W{pzRpY}ZqZTJJ{ZG}sQsW{]~FQk{{pyZtiB	8GB\ZY\

	S
V Z VSR	PWT[rD@\DA__\ WQVRZUQWQSQmU
TS
VRQT oWQYU
RZV	RU SSV	S
U	 ]TPP
QWVQS	YZDFCCYTUD_UVP^PG]S]BZWPF	9F_UKA
QRRV UQU 	
TrVGP[KYY]VW]X\^_WS	W^QAICDQ]^]_]UAUQFBZDAD^@GIHWFP@X]STWAdJ@]^]]U]PUQRWR	URPSoF\[J_goVQSUZP
VVPS
QU	R]
RRW	R		UWUQSQZGDCCQV^F_VV[\XG^Q]BQUXF
	9FTWCA	VS TVUZ	  ZWrUEP[@[Z[]@Z^_ST	W^QAICDQ]^]_]UAUQFBZDAD^@GIHWFP@X]STWAdJ@]^]]U]PUQRWR	URPSoAV_F\goVQSUZP
]

RWRU	QZW
P VVR[	SUPV
QRUQ 	]

WVQS	YZDFCCYTUD_UVP^PG]S]BZWPF	9DA_RS^ VQV\SPTPU T^TPVRTTpTFSXHQXY\CY]WUQ WQVRZUQWQSQm@U\ETmmU SRVPQ	U^RQ	R]QWQQUQW
VVR[	S[DG@KSU
TD^U^Q^ZF]R^J[WZG	
:N^UA@
WRVQ
	T]P
R TsHZRM\UR
U\PBJ@L[_\^\^]CWPEAYLKF_CDABUGSCPWQVVBgIHW\\^VWQVRZUQWQSQm@U\ETmmU SRVPQ	U^RQ	R]QWQQUQW
VVR[	S[DG@KSU
TD^U^Q^ZF]R^J[WZG	
:2