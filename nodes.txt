D]W@CWG]TyrrW{]tXjrz{ZkK|[zI|I ~HIY{@sXrW{ssZif_[{Z]Z~[bY~q]TyrrW{]ZESbY}YxFjia[kg
FjyeZS`FSHFQ]QZ|p\W{ssTy\_[{Z]Z~y[}gx^iffDkJsDjr hwc|fuY|JkG~vyXhZcj[jHd|_yXD{{ssTyryEhhcZXyQI{@sXrW{ssZSvu Ss{yX
JQwtYjbY~q]TyrrW{^pES_bY}Y{~u~Y~q]TyrrW{^pIy[\Yf[vbbrHdgT}[rIID}bJssDu\Jc{@sXrW{ssZTvKJ{Z]ZTvKJ{YExyrrW{sxUiq\{Z]ZR\
Ehc{@sXrW{ssZTXz{Z{Zs_8F_VCB	UE\WxpqUy_u[kpyyXjH}YyK~KI`K}vfY}r_UyqrWx^vBjqzxYiy[D{xpqUyqy_S ~yX\Yh^fGjjiFStfGi fEktbGSKEkka[|s\WxpqUy__[xY_[~Hbkw} jXjDhI}E~q ITX|fT~duFjeyZhgjXjeu]w[Hy[D{xpqUyqyEkka[[yRJyAs[rWxpq[Suu Ppyy[
]PkaDy[D{xpqUyqyGS zyX\YwaHy[D{xpqUyqyGRJyyY`cveU}f~GxwyE}X~D|wuF}HrW|wW}HvY}r_UyqrWx]bASKzx]bASKzCrZqUyqrYU{\Ejazx^DR_fY}r_UyqrWx]i[[zIxT@:D^UB@
WD_VzssW{^vZis{{YiIZ{I|J~I ZyBpYsW{pqXjg^[{Y_X}ZcY~r_VzssW{^XGPcY}ZzP^d Stj Qw\Q }DixdZSbDPIFQ^SXq]W{pqVz]^[{Y_X~Zwkdi}dD|Y[|s |wSdYI}gyE}tkY[Ij|[kgyIzYE{{pqVzsxEhkaX|YxQJyBpYsW{pqXPwt SpyzYJkk[GzYE{{pqVzsxGP zzZ]Y|waKzYE{{pqVzsxGQJyz[``veV~dwH{wyF~ZDwuE~JsWwW~JwY~r_VzssW{]bBPI{{]bBPI{CqZqVzssYV{\Fic{{^GQ]gY~r_VzssW{]iX|Y{I{T@9F_UA@
UE_UzspTy_vYisxyXiJZxJ~KK}s}ayApYpTyqq[jg]XyX_[}Z`Z|s_UzspTy_XDP`Z[zig{XieGixgYQ bGPIES_S[q^TyqqUz]]XyX_[}ZxKiHfZjxG~X\[~s}u}KdZjuuF|dR}e~_itZD~vi zYFxyqqUzs{Fjja[|Y{ SKyApYpTyqq[PwwQqyzYCR\~igwX|KyApYpTyqq[PwJTqyzZ`}KyApYpTyqq[Px|Z[z}g cuyvuJ~IpJ}vyHdpK|f}EztpX}JzYFxyqqUzs{Rz}[|Y{Rz}[q^TyqqUz^cSue[|Y{FR ^zYFxyqqUzs{yX_[~YxxVc9F]VCA
RUU
WR	
USR QT 	RUrH[QE_WC
V^QBKCDX\^^]]U@UQE@ZDHD^CGIAVFSBXTRTWBfJ@T^]^WTPVQRVQ 	UPPRoU
QRTW
Q
V
RRWpoU

PRWQQ	UTRR	SWPVQQUQ T


VVRQ	P[DF@APT UD^UTP^YF]S^@ZWYG	:D_UB@
P
VWPU	WQPR SsSZY\RXD^Q\B^\W]SCJ@FY]]_\^WAVSDAYFIG\BDK@WDRCZUSWUCgIBU]__VURWRPWP	VQS	SlTRV	QQRoU
QSWSP	VVQS	SU	PT
QRV	Q 	 U
 WVQS
QZDFCC QTWG_UVR]XG]S]BXTXF	9DC\ZS^UURSTUP TVRU
pU^UV^U]^	 URWRPWP	VQS	SlTRV	QQRoU
QSWSP	VVQS	SU	PT
QRV	Q 	 U
 WVQS
QZDFCC QTWG_UVR]XG]S]BXTXF	9F]VCA
QQU		
VUS	Q PTr][_[V\W]UR
U\PBHCD[_\^^]UCWPECZDKF_CGIBUGSAXWQVVBeJ@W\\^TWQVQRUQ	WSPQmU	STSRSlWRQU
RRWUSPQV
RUSST
S
V		UTPPRXFDB@R VVE]W US_[E_Q\AYV[D	8E\T@CURPW		VRQV	 
SWRpQX[]QYAQVU\S@J@EZ_\\\^TCWSGAYEJF\ADHCUDQCYVQVU@gIAV\_\VVRTRSUS
WQS
QmWSV
SQQnU

PRWQQ	UTRRQWPVQQUQ T


VVRQ	P[DF@APT UD^UTP^YF]S^@ZWYG	:D_UB@
SWPSP	WWQ	U Q	PsW_UU^UG[ T]S@IBGY^]\_\VBVSGB[GIG\AFJ@TDQ@[UPWU@dKCU]_\UURTPQTS
	VRQ	PlW
RU	RQQmU	SRTPQ	VVRQ	PUSWQRUQ	W
	VVQS	S[DECCSWTD^UVQ^ZF]P]B[WZG	9F^UA@

UPR

 UP
V 	P	sT^TUV_UVRU
U_PBK@FZ__^]^WCTPE@YFJE_CDKCUGSBZVQUVBfIBV_\^WVQVRPUQ 
TPS
QnUPQW
T	U	WRoVQSU	RP
TUPS
QV	RU
RPW	R
U 	WUSPQZGDA@QVVF_VUS\XG^Q_AYUXF
	;E\WCA	VW P
 VRT   
RrT]TT]WUB
U\PBHCD[_\^^]UCWPECZDKF_CGIBUGSAXWQVVBeJ@W\\^TWQVQRUQ	WSPQmURQTT	V	TRlgjW	W VRSRWU	RSWTP	Q n  VTUWRQRTQVSQUSW	
UTRR	SXFG@BS UUD]WWP^ZE_R^CZWZD
:G^UACTD yyqrYUZyyqzIxZG|s[rWx]rHyX\WxFUEdY\Vc
]^@_^^]iYzAGZ D`t\\~k]XBhB_B{@Vi`DFxC_U{bESH\F} aGRefFh]TeXS]zBj [ ~g[[|s{xpq[iea[xY_Uy_WDkdTFja^h`yAtc\WxpzERy xY_UyXb |JyAtc\WxpzBjqzxpyJ~XqZkgzX}q~daK|fvHkdyFiee]|J ~XrG|w}}XeYhdi[|s{xpq[ie_[xY_UyXvIxZG|s[rWx]~XUazxpzZTjaFxZG|s[rWx^^TqzxpzSKzCub_Uyqy Tkr^yX\Wx^DR_fY}r yyqrYPt	HTqzxpz\Ree^SdeGj vY}r yyqrYRtvQqzxpyDU\WhR{beUuTFxZG|s[rWx]bASKzxpzRz~Y}r yyqrYRByX\WxZy|s\;E]WCA	VG{{pqXWY{{pyHzYE~qZqVz^pJ{Y_VzEWGgX^Ua__A]\\_ k[xCFYFcsWc _C\R{ciudIPRx` Q{}I ~^]|ES{fEjgISdT^WtY{ZGpYsW{^vZis{{pzXRgVJVkyDjkY~r zzssYQt	HWs{{py}tY~r zzssYSdaX|YsY|gbZ}tZYeE|t^]|` I~gdY~du }cD|giF~tsJ|wyj]`Z{ZGpYsW{^vAis{{pyI~Y{Cvb_VzsxJk [X|YsYkkfQI{Cvb_VzsxEhkaX|YsYV }Xq{{pqXWx^Gh`yzsxEP]zYE~qZqVz]ZFQ aX|YsYk^\_PdI~^~\zYE~qZqVz^pXVtWX|YsY~ Tbi|fb[I{Cvb_Vzsx P{}X|YsYVtHKzYE~qZqVz^|ES`yzs{Yvb@9D@_XR^	R	T QWRP 
R TV PpEA_FB]]]	URTPQTS
	VRQ	PlW	
VR	U	SRVmU	SRTPQ	USWQRUQ	W
	VVQS	SUWRQRXEG@ARU VF]TTS\[E\R^@YU[D
:D\W@CSQPW 
WR
T 	VpWFSYH[R_WV^Z_\TVR
U_PBK@FZ__^]^WCTPE@YFJE_CDKCUGSBZVQUVBfIBV_\^WVQVRPUQ 
TPS
QnG_YI]lnU

PRWQQ	UTRR	SWPVQQUQ T


VVRQ	P[DF@APT UD^UTP^YF]S^@ZWYG	:D_UB@
	WR  	UWWQ  QUsVGSYKY[Z^BY\TRU
U_PBK@FZ__^]^WCTPE@YFJE_CDKCUGSBZVQUVBfIBV_\^WVQVRPUQ 
TPS
Qn@U]E^lnU

PRWQQ	VQ U P
TRQV	RUTPPRW
QUPQW
PV		UWRQRXEG@ARU VF]TTS\[E\R^@YU[D
:FB]YQ_	

USTWQSVRTVUUQU
QVVqUEQ[JZZX]@[^UWP	URTPQTS
	VRQ	PlCW_G_olWRQU
RRWUSPQV
RUSST
S
V		UTPPRXFDB@R VVE]W US_[E_Q\AYV[D	8E\T@CVQTSU VRP   	UpJYPF^TQ T]S@IBGY^]\_\VBVSGB[GIG\AFJ@TDQ@[UPWU@dKCU]_\UURTPQTS
	VRQ	PlCW_G_o lWRQU
RRWUSPQV
RUSST
S
V		UTPPRXFDB@R VVE]W US_[E_Q\AYV[D	89