D]WACWG]Uy{qT{]tYj{y{ZwJ~{|IkKdk[|y_T{ssUyUvChs{yRi{YEyy{qT{sx]R~{Z][RUfhwtD|UbkFYRV}FPx\yQGx{ssUy{zChs{yRukgw j|i~g|X~o}G|tQK}kZ|c|oeZk|yIht ky@qYsUy{qZP]dyR_ZV[|y_T{ssUyVr[VwU[QyESwdZjbJhh|H|Ay@qYsUy{qZQwKT{y{Zc}Ay@qYsUy{qZQx[Qz|f `ty|uK|csK}|yJ~ds|lqI{tsER}K{YEyy{qT{sxRp}Z}YxRp}Z~q]Uy{qT{^`SeZ}YxGR
_{YEyy{qT{sx yR_ZY{yVi8F_WCK
UE]WqsrUy_t[bszyXwHvs~KHutfG}fUYtq\UyqsWq]uBjq{qZjy[E{qsrUyqx_Z}yX]Y\e[jutFt]aYR\EZ]ey[E{qsrUyqx@bszy_{aZrjXwtgvi_wDvtaY}KXu~ |edZa]j~ t]vJbKja{C{YrUyqsYZ]eyX]Y\~[|s]WqsrUy\pX\wT[[{F[_\R[
Ytq\UyqsWq^qDS\cYwYz~vYtq\UyqsWq^qHyX]Yl[
wbasHudPU}XsIuYEqGuIrE}v]JuczAs[sWqsr[TuJJqZ\[TuJJqYDyyqsWqsyUjp\qZ\[R_EbczAs[sWqsr[T[{qZz[s\2F^WCAUD]W{qq_y^t[hqyyYkH~XyA~JqAp{Cq[q_ypsYke\SyY]Y|XaQ|r]W{qq_y^ZFQaQZxYheTT^CheRj`[huB|^\VqyKsZsW{qqQQdcY}[zRjdh]hfa	~pY|u}
|g`Y|HaLiYg |K @}gYhfW
}I`ZueQ|r]W{qq_y^\Vqyy]VJ{[GsypsW{qzOik`_{X_Q| |Fk \TT{YF{[GsypsW{qzOR x {X_Q~wcJ{[GsypsW{qzOSJ{{YhbvgWf}Oyw{GXyL}wUDv}_}wsHuQ|r]W{qq_y]`CQKyy]`CQKyKsZsW{qqQT{^Ghayy^FP_eQ|r]W{qq_y]kY}[yAyTB	8D]]C@WGWWzqqU{]~[iqy{ZaHXyK|IJ~qJ|t}Ys_U{syWz_vBhsqzXi{YO{zqqU{sr_Q~{ZWYW f[hw~F_bkL[Q\}GPr^z[Gy{syWzqzBhsqz_yKJTZifW~dyI~_iF|wq}q tz]f}aH}ufYkuG}qyAqYyWzqq[P]n zX_[VuYs_U{syWz\rZVw_Y|[yDh]IQefK~IqCp[qU{syYPu	KVsqzXaIqCp[qU{syYPz}[}Yrgbt{t}H~KqKtqIfq~dyJzvqE}ZuHz[Gy{syWzqzPxuY|[zPxuYs_U{syWz\bQwmY|[zGP\z[Gy{syWzqz {ZWY~[yyTa9D\WAC STW
UR

WRPYV SWp@YQG^UAW\SJICFY]\V_]WAWSMBZFIF\KGK@WD[@ZUSVUJdJBU\_VUUR^QPWY	WRP	Sm]SPVU
	PVPZUpmWQSU QP]VPSQU	RV
SYW	S	U	
WTZSQZFDHCQ VUF_W
VP\XG_QVBZUXF	2F_WCAR
TVR]
	UQQP 		QrQXQ^RZE_S^J^^
U]QBKBDQ_]^]\UCVQE@[DAG^CFIHUFSBX]QWWBfK@]]]^W]PVPRUQ 	VPQQlU	RWSSSm]
SQURRVTPQQWRUYRWYW		U^QQSXLDCAS
V VF]]TS\ZEUQ]@YUZD	9FB]XQV
T

	USQ	UTRVTR 
WxW^WW_WU\	]PVPRUQ 	VPQQlU	RWSSSm]
SQURRVTPQQWRUYRWYW		U^QQSXLDCAS
V VF]]TS\ZEUQ]@YUZD	9D\WACS PW	TWRY QVpUY_YW]U_WR]^P@IBFYW^\_\WKUPGB[FID_AFK@]GQ@ZUYTV@dKBU^\\UUQTPP]S	URQ	YoWQU	[RQmU SS]PP	UURQ	YVZW
QQUQ

W WVRP	SZDL@@S^TD_UUQ^ZG]Y^A[WZF	:E^UAA
 TPR
U

	VPPT  
QVSrSPY]SX@S^
W^[BJBD[]^^\\UAU[EA[DKDTCFIBWLSCXWST]BgK@W^W^VWZVPRWQ	UQQSoU	QVQYSoWQSU QP]VPS
SU	RV
SYW	S	U	
WTZSQZFDHCQ VUF_W
VP\XG_QVBZUXF	2F_WCAQW	QQRV	UQW 
QQrU]]W^WFY
 U\QBA@G[_\^W^VCWQEJYGKF^CDJBUFSH[WQVWBlICW\]^]WPVRQUQ

WZSQmU
S]SSS	oW
QRU
RQWTZSQW	RUSS]	SU
	VTPQQ[FDBAQ V VL^W TSVXF_Q\@Y_XG	8D\]C@]R
S WRV R	sV_UWTWWVSTW^Q@IHDZ]^\_VUAUQGBQDJD^ALICWFQ@XVSTW@dA@V^]\UVPTZRWS	
UR[
SoWR	PU
V
]VPgV

YQWPR
UTR[
SWPWRQUR ]	
UURQ	YXGF@AYT TD]VTQ^PE^S^@[WPD
:D^UKC	TUQ
 WP 	V   P pT_UU_UWB]^P@IBFYW^\_\WKUPGB[FID_AFK@]GQ@ZUYTV@dKBU^\\UUQTPP]S	URQ	YoWP	QU	\WVPmehUV	VSQZUWPQWURQo 	T V
WVPS	RU	QW QSW	Q	U]VPSQPDGBCQUTFUU VQ\XM]R\B[UXL	
8F_WCK
UE{qsr[T[{qszKy[E~{YrUy\pJqZ\UyGWMd[]WaU\B^\\Uh[xIEZEav^T|k_YCj@W@{BWhbFNzC]Tz`G[J\D|cEZgfDi _\gZR\x@b[fYYtqyyqsYagaYyX]Wq]WFjeVDbc\ia{C|a\UyqxGZyyX]WqZb}K{C|a\Uyqx@bszyq{HvZqXjfxZusecItdvJje{Dage_}KvZrE}v uZe[iekYtqyyqsYag_YyX]WqZvKy[E~{YrUy\|Z]czyqxX\haDy[E~{YrUy_\\szyqx[IzAtc]WqsyUjp\qZ\Uy_FZ]f[|s{qsr[QuJ\szyqx^Zge\RegEbv[|s{qsr[Sut Yszyq{F]^WjSz`g]wTDy[E~{YrUy\`C[Izyqx Zx~[|s{qsr[S @qZ\Uy[{~{^:D_UKC	WE sypsYV[yyp{I{[GvsZsW{\rByY]W{GUEeY_Wc ]_@\^T]jYpAF[ Gaq_a]ATRybkwlKQSzbS{~K	|^\~ ~MQ{dDkeAQdV_Vv[yZE~q[q_y^t[hqyypxYSeTBTk{Ek iQ|r{{qqQStIVqyyp{ |v}Q|r{{qqQQdcY}[qQ~g`[|vXQ}gD}v\U~`HefQ|dw| aL~gkGvqB~w{k_bRyZE~q[q_y^t@hqyyp{H[yKtb]W{qzBi YY}[qQikd PKyKtb]W{qzMjkcY}[qQT Y~s sypsYVz\Oj`{{qzMR\{[GvsZsW{_XNS cY}[qQi^^^QfA|^|]{[GvsZsW{\rPTtUY}[qQ| Vc a~f`Z~KyKtb]W{qzR{Y}[qQTtJJ{[GvsZsW{\~MQ`{{qyQtbB	8FBWZR\
S
VQ VSRPVTPrD@]DJ__\WPVRQUQ

WZSQmU
TS]RPToW
QRU
RQW	RUSS]	SU
	VTPQQWVPS	RZDFBCRT^D_U V[^[G]S\BQW[F	8FTU@A
QYRV UZ
U 	TrVGQ[@YR]VW\XW^TWSW^Q@IHDZ]^\_VUAUQGBQDJD^ALICWFQ@XVSTW@dA@V^]\UVPTZRWS	
UR[
SoF][A_loWQSU QP]VPSQU	RV
SYW	S	U	
WTZSQZFDHCQ VUF_W
VP\XG_QVBZUXF	2F_WCAVS
TV	UQ	 
QWrTE[[K[Z[\@Q^TSTW^Q@IHDZ]^\_VUAUQGBQDJD^ALICWFQ@XVSTW@dA@V^]\UVPTZRWS	
UR[
SoAW_M\loWQSU QPV

S W
R
U	ZQWP WVRP	SU
P]
QSU
Q 		V
WVPS	RZDFBCRT^D_U V[^[G]S\BQW[F	8DJ_YS^
WQVWS[TPU TUTPWYTTpTGSSHZXY\BYVWUQWPVRQUQ

WZSQmAUWE_mmU SS]PP	UURQ	YVZW
QQUQ

W WVRP	SZDL@@S^TD_UUQ^ZG]Y^A[WZF	:E^UAA
WSVQ
	T	VP
R TrHQRF\US
 U\QBA@G[_\^W^VCWQEJYGKF^CDJBUFSH[WQVWBlICW\]^]WPVRQUQ

WZSQmAUWE_mmU SS]PP	UURQ	YVZW
QQUQ

W WVRP	SZDL@@S^TD_UUQ^ZG]Y^A[WZF	:9