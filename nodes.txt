D]W@CWG]TyqqQ{]tXjqy {ZkK|XyO|I }qNZQZ|s_Q{ssTy_vFhs{yXi{YExyqqQ{sx\R~{Z]Zi_fChhhERufCkgFjubCQIFjja_~q]TyqqQ{]^XyX__}dY}X~^hZkG~ue|c}ua~gx^}fuB|]gK}Xu}ddZiej[{YExyqqQ{sxFjja_}Yx SKyEqYsTyqq_QwtQqy {YS_vhgEEy[G}{ssTyqzAPxyX__|tcIy[G}{ssTyqzAQI{yYf`ugT}f}A{t{D}X}Bt{G}viQZw}vu_~q]TyqqQ{^`@SKy {^`@SKyEqYsTyqq_Vx^Djay {]ER_e_~q]TyqqQ{^kZ[yO{WB
:D]SACWGYUyqrW{]pYjqz{ZoJ|XzI|IHaJYAs[rW{sw[ie_[{ZY[~XbY~qYUyqrW{]^DSbY}Y|jey[kgGjzeZSdGSKFQ]U[|s\W{swUy__[{ZY[jX~|Zw~_~Dkg|_i[ |dc |ey[wcFiXfkZg }vPG|p_y[D{{swUyqyEhhg[[yQIAs[rW{sw[Suu Ssy[
_kh]Dy[D{{swUyqyGP|yX\Y|tgHy[D{{swUyqyGQIyY``ucU}fvJ{tE}X~DtF}vjWZs}vvY~qYUyqrW{^dASKz{^dASKzCqYwUyqrYVxZEjaz{]DR_fY~qYUyqrW{^o[[zI{WF:D^UACWD_UyusW{^vYju{{YiJ|\{I|JeIgW[|w]W{pqUy[t@hpyy\k {ZGyyusW{pz]R| {Y_[R[d htvD|[`kDYRXEP z\y_E{{pqUyux@hpyy\d[}wSibsH~gabD|wvZ~O|de |bgH|~Zi\dZwqje{CqZqUyusYP^fy\]YV }[|w]W{pqUyXpXVtW[_{Fhkj^SX^YPb|O{CqZqUyusYQt	KTu{{Ya}O{CqZqUyusYQ{}[_xfbtyrwH|`qK}r{J~gqK|bs{wyJ\sH{ZGyyusW{pzR~Y}ZzR~Y~r_UyusW{]bSqgY}ZzGR\{ZGyyusW{pz y\]YZyyVg8E]WCEVG]WqqUz]t[lqyzZwHxq}Ixa|c{Cu[qUzssYoe\YzZ]YxXa[q]WqqUz]ZFUa[|Yx U\fRwhTu^PElzfXR`EUKDP]QYzs_UzssW_\YzZ]YoXS}ZgxveFi]|[{[ jZ|\zeujZgDlfT[iwdY{XT^j]{[GyzssWqzGihcYy[zPI{Cu[qUzssYUuvRs{[	EP][Re~RgEzKyApYsWqq[PwIRqyzZc {KyApYsWqq[PxYy[z}g `vvuJ~csI{vyHdsIzfq zt{HyXqJzYE{qqUzsx Tz}[|Yx Tz}[q]WqqUz^`Uue[|YxET ^zYE{qqUzsxX_[~Y{{Pc9F^UEA
QVS
WR

UPT QT 	QSrH[QE\QC
UXQBKCD[_X^]]UCSQE@ZDKB^CGIBUFSBXWQRWBfJ@WX]^WWPVQRUQ 	SPPQiU
QTTW
R
V	TRWpoS

SQWQRUTRQSWPVWQUW W	

UPRQ	SXBF@AST UD]STP^ZE[S^@ZWZD:D_UACP
VTPU
WQS T  SpUZY\RXG]W\B^\W]S@IFFY]]\_XWAVSGB_FIG\ABK@WDQ@ZUSWU@dOBU]_\UURTTPWS	VRU	SlWRU 	QQQiU
WSWPP	VVRU	SUPW
QRUQ 	S
WVQS	WZDFCCWTTD_UVQ^^G]S]B[W^F	9D@_\S^VUQUWVP RVRS
pU^UU]S]^	URTTPWS	VRU	SlWRU 	QQQiU
WSWPP	VVRU	SUPW
QRUQ 	S
WVQS	WZDFCCWTTD_UVQ^^G]S]B[W^F	9F^UEA
QRS	
	PUPQ SRr][_[U_Q]UR
U\PBK@B[_\^]^SCWPE@YBKF_CDOBUGSB^WQVVBfIFW\\^WWQVRTUQ WPSQmUSWSRSoWQWU
RTWUPSQV	RUSSW	S
U	STPPQ^FDB@Q VVF[W US\XC_Q\AYUXB	8E\WCEVTPW
VRRP	 
STQvQX[]QZBQVS\S@J@FYY\\\^WEWSGAYFIF\ADK@SDQCZUWVU@gIBU\_\VURTRPSS	WQS	WmWSV	UQQmS

SQWQRUTRQQWPVWQUW W	

UPRQ	SXBF@AST UD]STP^ZE[S^@ZWZD:D_UACSWSUP	TWQ
 S  Q	SpQ_UU^UD] W^U@IBGY]^\_\VAUUGB[GIDZAFJ@WBQ@[USTS@dKCU^Y\UUTTPQWS
	URQ	SoW
QU	QWQmU
SRWPQ	UPRQ	SSPWQQUQ W

VVRU	S[DF@ESTTD^UPQ^ZF]S^D[WZG	:@^UA@

UPQ 

SP
V P	sT]WSV_UVQVU\SDK@FZ_\X]^WCWSC@YFJF\EDKCUDUBZVQVUDfIBV\_XWVRPRPUW 
WPS
QmSPRW
TU	TToVQSU
TP
WVPS
QU	RS
RSW	R	UWUPSQZGDBCQVPF_V VU\XG^Q\B_UXF
	8FZWCA	PW S
UTT   	TrT]WW[WUB
U\PBK@B[_\^]^SCWPE@YBKF_CDOBUGSB^WQVVBfIFW\\^WWQVRTUQ WPSQmUTQWT	U	TRoajW
T VQURWU
TSWWP	Q m VTUTTQRWQU SQSSW		UTRQSXFG@AS U VB]WTSXZE_R^@YQZD
:D]SACWGyyqrYVYyqzI{YA|s[rW{^tHyX\W{ESEdY_Ue
]^@\X^]j_zAGZ Gcr\\~k][AnB_B{@UjfDFxC_VxdESH\F~gGRefFk]TeXP^|Bj [ }d][|s{{sw[iea[{ZYUy_WDhgRFja^kcAtc\W{s|ERy {ZYUyXb IAtc\W{s|Bjqz{sJ~XqZhd|X}q}ggK|fvHhgFiee]I~XrGt{}XeYkgo[|s{{sw[ie_[{ZYUyXvI{YA|s[rW{^xXUaz{s|ZTjaF{YA|s[rW{]^Tqz{s|SKzCvaYUyqy Wht^yX\W{]DR_fY~qyyqrYSwHTqz{s|\Ree^PgcGj vY~qyyqrYQwpQqz{sDU\WhQxdeUuTF{YA|s[rW{^dASKz{s|Rz~Y~qyyqrYQByX\W{Y|s\8F[WCA	UA{{pq[T_{{pyKy_E~qZqUyXpJ{Y_UyCWGg[]Sa__B^ \\_ h[xCFYEesWcYC\R{`oudISQ~` Q{}|O ~^^||ES{fFiaISdT]TrY{ZG|s_sW{^vYju{{pz[QaVJVkyGikY~r yyusYQt	KTu{{py~rY~r yyusYSda[_sY|gbY~rZYeFr^]|` J}adY~du~cD|giE}rsJ|wy i[`Z{ZG|s_sW{^vBju{{pyJ}_{Cvb_UyuxJk [[_sYkkfRO{Cvb_UyuxEhka[_sYV }[|w{{pq[T~^Gh`yyuxEP^y_E~qZqUy[ZFQ a[_sYk^\\SdI~^~_y_E~qZqUyXpXVtW[_sY~ Tai|fbX|O{Cvb_Uyux P{}[_sYVtHHy_E~qZqUyX|ES`yyu{Yvb@:B@_XR^	QTQTQP 
RRV PpFBYFB]]^
UTTPQWS
	URQ	SoW	
VQU	PTVmU
SRWPQ	SPWQQUQ W

VVRU	SUTTQRXFDFAR V VF]WTS\[E_QX@YU[D	<D\W@CSQPT
WR
W 	VpTEUYH[R_TUXZ_\TUQU\SDK@FZ_\X]^WCWSC@YFJF\EDKCUDUBZVQVUDfIBV\_XWVRPRPUW 
WPS
QmDYYI]lmS

SQWQRUTRQSWPVWQUW W	

UPRQ	SXBF@AST UD]STP^ZE[S^@ZWZD:D_UAC	TQ  	VTWQ  QUpPGSYKYXYXBY\TQVU\SDK@FZ_\X]^WCWSC@YFJF\EDKCUDUBZVQVUDfIBV\_XWVRPRPUW 
WPS
QmCS]E^lmS

SQWQRVW U P
WRQU 	RSTPPQW
RUSWW
SV		UTTQRXFDFAR V VF]WTS\[E_QX@YU[D	<FB]YQ\


SSTWQSVRWVUVRS
QVVrVCQ[JZZ[^F[^UWS
UTTPQWS
	URQ	SoEW_G_o oWQWU
RTWUPSQV	RUSSW	S
U	STPPQ^FDB@Q VVF[W US\XC_Q\AYUXB	8E\WCEUWTSVVR P   	VvJYPF^WW W^U@IBGY]^\_\VAUUGB[GIDZAFJ@WBQ@[USTS@dKCU^Y\UUTTPQWS
	URQ	SoEW_G_ooWQWU
RTWUPSQV	RUSSW	S
U	STPPQ^FDB@Q VVF[W US\XC_Q\AYUXB	89