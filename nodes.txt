D]WACWG]UytsP{]tYjt{{ZkJ|]{N|I~^O|JY[|v]P{ssUyZtGhs{y]k{YEyytsP{sx]R|{Z][iZdBhhhDRpdBkgGjp`BQIGjoc^~q]UytsP{]^Yy]]^|`^j`{hwF}ct]hs~`c~gw jc{C}t`^}M^^}tYH~]M{YEyytsP{sxGjoc^}YxSN{DqYsUyts^QwtQt{{YYSZ^Sg\|N{DqYsUyts^QwKTt{{Zc}N{DqYsUyts^Qx[^xxf `tyswMssK}s{N~ds|c{{tsJ]sO{YEyytsP{sxR^}YxR^~q]UytsP{^`Spg^}YxGR[{YEyytsP{sx y]]^Y{yVf
8F_WCDUE]W~qvUy_t[mq~yXkH{X~K~KIzaJ~f{Y{sXUyqsW~_qBjq{~Xny[E{~qvUyqx_UyyX]YS a[jutF{_eYR\EU_ay[E{~qvUyqx@mq~y_x]xezjXU{ea^iXUDyv~ iKyfbH|fwImfy[~vtYmfb}a{Ct[vUyqsYU_ayX]YSz[|s]W~qvUy\pXSuP[[{FT_aAQed]{K~As[sW~qv[SuISq~yXc zK~As[sW~qv[SzYx[}}d`v~vrJ~KsIzv~K|fs{f~yvsHxXvJy[E{~qvUyqx Uzz[[x Uzz[|s]W~qvUy\`Tub[[xEU ^y[E{~qvUyqx~XX[}[{{Qc
:D_UDAWE_P{tsW{_v\ht{{XuO|t |KOscEfe{^E{{qqP{txXSea^}^{|qyDq^sW{qq^SpJVqy{YV\k_b_PN[Ve~EhpJ~_	NhN{Cq[qP{tsYSea^}^{keuZkJha hsQ ~fb^|scD}eeh^ hXf\k]`Zkfb^Y~s_P{tsW{_[Vt{{\TM{^E{{qqP{txGkjbX{]]Y~rNk`^Jha^~v]W{qqP{YpFQ\a^}^{ |v}^~v]W{qqP{YpJ{X_^f\u`aqOcWXqN^G|K N|NsGf_@d{Cq[qP{tsYVuHM{]]YVuHM{^E{{qqP{tx Wjr[{]]YP_	Bhd{Cq[qP{tsYV[y{]{Yq\ 
8A_UAA
RE_U{svU~_vYhs~~XuJ|syKJtzGzf[{Y@y~qqU{s}ZVea[}Y~ yqyAqYvU~qq[SwHSqy{]^SubZPIYSe~@hwH{_	KhI~At[qU{sv[Vea[}Y~zHj_}de^y[ gnH{faKk]rFnXyJIXyfihZbHmfW}tn[{s_U{svU~_^Vs~~\TH{Y@y~qqU{s}Enjb]{ZX[{ \GVwaKmj~~I~At[qU{sv[Tu	KVs~~XaI~At[qU{sv[Tz}[}Y}}cbt{trJyaqKt~K{fq~d~~vqJ}ZvJ~[Gy{svU~qzPxz[x[zPxz[{s_U{svU~\bQwb[x[zGP^~[Gy{svU~qz {ZX[z[yyTa
=D\WAC STWWV

WRPVT SWpO[UG^UAW\SEKGFY]\Y]YWAWSB@^FIF\DCK@WDTBZUSVUEfNBU\_YWURQUPWV 	WPT	SmR
SPVW	PRPUWtmW
 QSUUPRTPSQW 	RR
SVW	SUWTUQQZFDGAQ V QF_WTT\XG_QY@^UXF	=D[WCAPTVRR
WUQP  QrQX^\VZE_S^EZ^
WYQBKBD^]Y^]\UARQE@[DNC^CFIGW
FSBXRSSWBfK@RY]^WRPVPRWQ 	RPQShU	 VWQSSmR

SQWRRRTPQSWPUVVWV W	
	UQUQSXCFGAST VF]RTS\ZEZSY@YUZD=FB]XQYT
QSQUTR VVV 
WwUZWW_WZ^RPVPRWQ 	RPQShU	 VWQSSmR

SQWRRRTPQSWPUVVWV W	
	UQUQSXCFGAST VF]RTS\ZEZSY@YUZD=D\WACS PW	TWRV QVpZ[[YW]U_UVR\T@IBFYX\
\_\WDWTGB[FI
F[AFK@RCQ@ZUVVR@dKBU
\X\UU UTPPRS	WRQ	VmWSU	TVQmUSSR
PP	WQRQ	VRUW
QSUQWWVPT	SZDCBDSQTD_U QQ^ZG]V\E[WZF	8A^UAA
 TPRW

RPPT  QVSrS_[YSX@SQW^T@NBD[]^
\X\UAUTGE[DKD[AFIBWCQGXWSTR@cK@W^X\RWUTPRWS	UUQSoW	QRQVQoW
 QSUUPRTPS
SW 	RR
SVW	SUWTUQQZFDGAQ V QF_WTT\XG_QY@^UXF	=D[WCASS	QQRVWUW UQrU]RUZWFY
U\QBNBC[_\^X\RCWQEE[CKF^CFNBUFSG_WQVWBcKGW\]^RWPVPUUQWUQQmUSRSSSmW
SVU
RUWTUQQWRUSSRSW	RTPQS_FDBAS V VCZW TSYZB_Q\@YPZC	8D\RADRP 
S
 WR
RRwV_UWTXURSTW^Q@IGF^]^\_YWAUQGB^FND^ACKGWFQ@ZRSTW@dNBR^]\URPTUPWSURTSoWP	PUV
RVPhR

VSWPPUTRTSWPW
VQUV R
WQRQ	VZCF@AVT TD_RTQ^_GZS^@[W_F:D^UDATUQ
WP V P  rP_UU_UUFR\T@IBFYX\
\_\WDWTGB[FI
F[AFK@RCQ@ZUVVR@dKBU
\X\UU UTPPRS	WRQ	VmWPUU	SWTPmehWV	RSQUWWPSSURUo T VWVPSVU	UWSSW	S	URTPSQ_FCBCQ QTFZW VQ\XB_V\B[UXC8F_WCDUE{~qv[T[{~q~Ky[E~t[vUy\pJ~XXUyGWB`[]WaZ^B^\\Zh[xFG^Eav^[~o_YCj@XBBWhbFAxG]Tz`GTHXD|cEUebDi _SeZR\x@m _fYY{syyqsYneeYyX]W~_SFjeVDma\ia{CscXUyqxGU}yX]W~Xf}K{CscXUyqx@mq~yq{HyXuXjfxZzqecI{frJje{Dnea_}KyXvE}v zXa[iekY{syyqsYne[YyX]W~XrKy[E~t[vUy\|ZRa~yqxXSjeDy[E~t[vUy_\Sq~yqxTK~Atc]W~q}Ujp\~XXUy_FU_b[|s{~qv[QuJSq~yqx^Uea\RegEm r[|s{~qv[Sut Vq~yq{FR\SjSz`gRuPDy[E~t[vUy\`CTK~yqx Uzz[|s{~qv[S @~XXUy[{~t\:D_UDAWE |{tsYV[y{t{I{[Gyq^sW{\rM{]]W{GUGeY_Wc_[@\^[_ jYCB[ GaqPa]A[Vybkwc KQSzbQ~K	~Z\~ ~BSdDkeNS`V_Vv[{^E~q[qP{Zt[hqy{txYSeTMVo{Ek i^~v{{qq^QpIVqy{t{ |v}^~v{{qq^S`cY}[q^|c`[|vX^gD}v\Z|dHef^~`w| aC|ckGvqM|s{k_b]{^E~q[qP{Zt@hqy{t{H[yDvf]W{qzMkYY}[q^kod PKyDvf]W{qzBhocY}[q^VY~s |{tsYVz\@hd{{qzBP\{[Gyq^sW{_XAQcY}[q^kZ^^QfN~Z|]{[Gyq^sW{\r_VpUY}[q^~Vc n|b`Z~KyDvf]W{qzPY}[q^VpJJ{[Gyq^sW{\~BSd{{qy^vfB	8FBXXV\
S VU VSR
PVT TrD@]DE]_\WPVPUUQWUQQmUTSRRPTmW
SVU
RUWRUSSRSW	RTPQSWVPSVZDFBCVTQF_U VT\_G]S\B^U_F	8F[WDA
QVPV
UUU	VrVGQ[O[V]VW\XX\PWSW^Q@IGF^]^\_YWAUQGB^FND^ACKGWFQ@ZRSTW@dNBR^]\URPTUPWSURTSoF][N]hoW
 QSUUPRTPSQW 	RR
SVW	SUWTUQQZFDGAQ V QF_WTT\XG_QY@^UXF	=D[WCAVS
TVWU	 UWrTETYO[Z[\@^\PSTW^Q@IGF^]^\_YWAUQGB^FND^ACKGWFQ@ZRSTW@dNBR^]\URPTUPWSURTSoAW_B^hoW
 QSUUPR

S W
PU	UUWP WVPT	SU PR
QSWQ 	R
WVPSVZDFBCVTQF_U VT\_G]S\B^U_F	8DE]]S^
WQTSSTVPU VQTPWVV TpTGS\J^XY\BYYUUQWPVPUUQWUQQmAUXG[mmUSSR
PP	WQRQ	VRUW
QSUQWWVPT	SZDCBDSQTD_U QQ^ZG]V\E[WZF	8A^UAA
WSVS
	TRP
R  TrH^PB\US
U\QBNBC[_\^X\RCWQEE[CKF^CFNBUFSG_WQVWBcKGW\]^RWPVPUUQWUQQmAUXG[mmUSSR
PP	WQRQ	VRUW
QSUQWWVPT	SZDCBDSQTD_U QQ^ZG]V\E[WZF	8=