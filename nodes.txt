D]W@CWG]TyrqS{]tXjry{ZwK~r|I}r|Y{@sXqS{ssZif\_{Z]Z~[a]~q]TyrqS{]ZESa]}Yx jfz_kg
Fjyf^S`FSHBQ]QZ|p_S{ssTy\\_{Z]Zieak]cIjuu@kJQjr hdk |e\^ggGju}kjvzXht|YyXG{ssTyrzAhhcZXzQI{@sXqS{ssZSvvSs{yX	kgJ@|HyGqYsTyrq]QwJTry{Zc}HyGqYsTyrq]QxZXz{f `uyuuLIsJ}uyN~dsK|eq{twJ[}L{YExyrqS{sxRy}]}YxRy}]~q]TyrqS{^`Sve]}YxFRX{YExyrqS{sxy[_]Y{xV`	8F_VCB
UE\WxsuUy_u[ks}yXvHs ~K|c K~f~Y}q[UyqrWx]rBjqzxZmy[D{xsuUyqy_SzyX\YUx~Tu[]UgLGjj}J}]fi G[S^yGRy^xYCyyqrWxs~Bjqzx]}}He]|Z\^|efH|dSF~vuZ~s[i_u]}gfZ}fyZtuE~fv|c}As[rWxsu[R_e xZ[[T~Y}q[UyqrWx^vZTuTY~Y}Di 
ERzBjeZkc[|s\WxsuUy\qFR^e[[z ty[|s\WxsuUy\qJxZ[[dY
uccuJ}fvW|ZuK}KG|cE~qrH|Z[H}azCrYuUyqrYUwLHyX\YUwLHy[D{xsuUyqy Thv^yX\YS]GjazCrYuUyqrYUY}yXzYr^:D^UBCWD_VywsW{^vZjw{{YiI|^{I|JH}wH}w}X|u]W{pqVyYt@hpyy^k {ZGzywsW{pz^R| {Y_XiYdEhkjGRsdEkeDjs`EQJDjlcY~r_VywsW{^\Zy^]YkYf]sxX|w}Ejpp\|Z ~`c~dvXcwDdvZst\aI}Yh\{ZGzywsW{pzDjlcY}ZzSM{CqZqVywsYQtvQw{{Z	XicF\~JyBs]sW{pqXSsIVpyy^c JyBs]sW{pqXS|Y}Zz~d`v{wuK}wsIwyK|`sH~gqypwI}Y}Iy]E{{pqVywx P{}X]x P{}X|u]W{pqVyZ`QteX]xEP]y]E{{pqVywx{Y_X}]{{Tb:B_UA@
QE_UzspW}_vYisx}XuJ}s zK~sHyXe[q^W}qqUz]w@nqyzZh }[GyzspW}qz]Q }X_[Q]g nuvD]cm DYQ^|EVz\zYF{}qqUzs{@nqyz]`y jYidVxfuK~JZDzu~_}I XnuygZne}Eid]zveK|cxCw[qUzspYV_fzZ^YP}[q^W}qqUz^sXPuW[|YxFUu	KRhAFV\bZQs	Yxs_UzspW}\rDP^`Y{[y}t|Yxs_UzspW}\rHzZ^Y`Y	wacpHyfeU~ZpIyK E~cGzqqJ~Z^JyayApYpW}qq[WwIJ}X_[WwIJ}[GyzspW}qzVhs\}X_[Q]EnayApYpW}qq[WYx}Xy[p^>D\W@C STVUU
WRQPV SVpIYVG^TA W]SCIDFY]]__ZWAVSDB]FIG\B@K@WDR@ZUSWUCdMBU]__UURWVPWP	VRW	SlTSQVU	PQQSUwmVQSU	VP
TVPS
QU	RQ
RPW	R	U WUSSQZGDACQVRF_VVW\XG^Q_B]UXF
	;FXWCA	RTVRT
 UVQQ   	QrPXX^UZE_R^CY^
UZQBKCDX_Z^]]UCQQE@ZDH@^CGIAU	FSBXTQPWBfJ@TZ]^WTPVQRUQ 	QPPQkU	UWSSSlT
RQURRQTPPQW
RUPUW
PV		UWVQRXEDDARV VF]TTS\[E\QZ@YU[D	>FB]YQ_
T	RSP  UTRWTU 
VqWYWW_V\\TPVQRUQ 	QPPQkU	UWSSSlT
RQURRQTPPQW
RUPUW
PV		UWVQRXEDDARV VF]TTS\[E\QZ@YU[D	>D\W@CS PV	UWR
P QWp\YXYW]T_WU T^W@IBGY^^	\_\VBUWGB[GIDXAFJ@T@Q@[UPTQ@dKCU^[\UUVTPQTS
	U RQ	PoW
QU	RUQmU	SRTPQ	URRQ	PQSWQQUQW
	VVRW	S[DE@GSWTD^URQ^ZF]P^F[WZG	:B^UA@
 TQRU


 QPPU  QVSsSYYZSX@SW
 V^RBMBD[\^^[\U@UREF[DKD]CFIBVESDXWRTTB`K@W^^^QWSVPRVQ	UVQRoU	QQPPSoVQSU	VP
TVPSSU	RQ
RPW	R	U WUSSQZGDACQVRF_VVW\XG^Q_B]UXF
	;FXWCA	QP	QPRV UVV  VQrT]TWYWFX
U\PBH@@[_\^^^QCWPECY@KF_CDMBUGSA\WQVVBeIDW\\^TWQVRVUQWSSQmUSTSRS oWQUU
RVWUSSQV	 RUSST	S
U	QTPPQ\FDB@Q VVEYW US_XA_Q\AYVX@	8E\TCG TR
S	VRQ 
R	tV_UVT^WQST	W^QAIAD]]^]__UAUQFBXDMD^@EIDWFP@XQSTWAdH@Q^]]UQPUSRWR	URRSoVR 	PUV

TVQnQ

PQWQRUTRRSWPVUQUU T	

URRQ	PX@F@APT UD]QTP^YEYS^@ZWYD:D_UBCUUQ	WQ		V  Q pS_UU^UWE T^W@IBGY^^	\_\VBUWGB[GIDXAFJ@T@Q@[UPTQ@dKCU^[\UUVTPQTS
	U RQ	PoWQ	VU	UWVPmdhUV	QSPSUWQQPURVo  TVWVQS	UU	VW	QSV	Q	U TVPS
QYD@BC QRTG\U VQ]XD]U\B[TXE	8F_VCB
UE{xsu[T[zxs}Ky[D~rYuUy\qJxZ[UyGVDc[]W`\\B^]\\hZx@E]Eaw^]|l_YCk@^@|BWhcFGzD]TzaGRJ[D|bESgaDi _UgZR\y@k\fXY}qyyqrYhgfYyX\Wx]PFjeWDkc\iazCua[UyqyGS~yX\WxZe}KzCua[Uyqy@ks}yqzHZvXjfyZ|sebI}dqJjezDhgb_}KZuE}v~ |Zb[iejY}qyyqrYhgXYyX\WxZqKy[D~rYuUy\}ZTc}yqyXUhfDy[D~rYuUy_\Us}yqyRI}Atc\Wxs~Ujq\xZ[Uy_FS]a[|s{xsu[Qu
JUs}yqy^Sgb\RefEkq[|s{xsu[Suu Ps}yqzFT^PjSzagTwSDy[D~rYuUy\aCRI}yqy Sxy[|s{xsu[S @xZ[Uy[z~r^:D^UBCWD zywsYVZyyw{I{ZGs]sW{]rKy^]W{FUEeY_Vc	]X@\^]]jYyAA[ G`qVa\A]UybjweKQS{bS|~J	|Y\~~DQ|dDkdHQcV_Vw[y]E~qZqVyYt[hpyywxYSdTKTl{EkiX|u{{pqXSsIVpyyw{ |w}X|u{{pqXQccY}ZqX~``[|wXX}gD}w\\~gHdfX|cw|aE~`kGwqK~p{k^b[y]E~qZqVyYt@hpyyw{HZyBte]W{pzKiYY}ZqXild PJyBte]W{pzDjlcY}ZqXTY~r zywsYV{\Fjg{{pzDR\{ZGs]sW{^XGScY}ZqXiY^^Q fH|Y|]{ZGs]sW{]rYTsUY}ZqX|Vch~a`Z~JyBte]W{pzR|Y}ZqXTsJJ{ZGs]sW{]~DQg{{pyXteB	8GB^ZU\
S
VV VSRPWTWrD@\DC__\WQVRVUQWSSQmUTS
TRQToWQUU
RVV	 RUSST	S
U	QTPPQWVQS	UZDFCCUTWD_UVR^\G]S]BXW\F	9F]UGA
QPRV	USU 	TrVGP[IYU]VW]X^^SWS	W^QAIAD]]^]__UAUQFBXDMD^@EIDWFP@XQSTWAdH@Q^]]UQPUSRWR	URRSoF\[H_koVQSU	VP
TVPS
QU	RQ
RPW	R	U WUSSQZGDACQVRF_VVW\XG^Q_B]UXF
	;FXWCA	 VSTV UV	  VWrUER[L[Z[]@X^SST	W^QAIAD]]^]__UAUQFBXDMD^@EIDWFP@XQSTWAdH@Q^]]UQPUSRWR	URRSoAV_D\koVQSU	VP
Q

R	WRU	SVWP VVRW	SUPT
QRUQ 	 Q
WVQS	UZDFCCUTWD_UVR^\G]S]BXW\F	9DC_^S^VQVPSRTPU TRTPVPTTpTFSZH]XY\CY_WUQWQVRVUQWSSQm@U^EXmmU	SRTPQ	URRQ	PQSWQQUQW
	VVRW	S[DE@GSWTD^URQ^ZF]P^F[WZG	:B^UA@
WRVQ
	T QP
R TsHXRA\UR
U\PBH@@[_\^^^QCWPECY@KF_CDMBUGSA\WQVVBeIDW\\^TWQVRVUQWSSQm@U^EXmmU	SRTPQ	URRQ	PQSWQQUQW
	VVRW	S[DE@GSWTD^URQ^ZF]P^F[WZG	:>