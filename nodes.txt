D]W@C	WG]TypqU{]tXjpy{ZkK|YyK|IJ~`Jd{Z|r_U{ssTy^vBhs{yYi{YExypqU{sx\R ~{Z]ZR^fhwtE|^bkFXR]}GPx]yZGy{ssTypzBhs{yYiJdZYiYr[~dcjwiF|tU ~` hdxX|gihwd_~jYgg}JyAqYsTypq[P]dyY_[VZ|r_U{ssTy]rZVwUZZyDVwtD|JyAqYsTypq[QwJTpy{Zc}JyAqYsTypq[QxZZz}f `uywuJ|csJ}wyH~dsI|gqK{tsYqJ{YExypqU{sxR{}[}YxR{}[~q]TypqU{^`Ste[}YxFR^{YExypqU{sxyY_[Y{xVb8F_VC@
UE\WzssUy_u[is{yXjHZ{K~KJ}cK}XjYq]UyqrWz]tBjqzzZky[D{zssUyqy_Q|yX\YWxxTu[]WgJGjj}J]`i G[Q^GRy^zYEyyqrWzsxBjqzzZZZi_a]jJ{E|faZjJYF~u~G}s}fzGg{E}vfj|Yi_}\}I{As[rWzss[R_e zZ][T~Yq]UyqrWz^pZTuTY|Y{DR _CI{As[rWzss[Su
IWs{yXb ~I{As[rWzss[Sz~Y|Yx}davztwJ}arI~t{H|frJdsKyvr|ZsJy[D{zssUyqy Qx[[y Qx[|s\WzssUy\aPwg[[yEQ^y[D{zssUyqyzZ][}[z{Ua:D^U@CWD_TyqsW{^vXjq{{YiK|X{I|J~KJy@s[sW{pqZie^[{Y_Z~XcY~r_TyqsW{^XEScY}Zz jex[kdFjzdZSbFSKFQ^SZ|s]W{pqTy_^[{Y_Zj_tYgv_iXwD}gX^}q |IqJ|ew kgyGju|XkIqj_c}wTZy[E{{pqTyqxEhkaZ[xQJy@s[sW{pqZSut Spyy[HVdv@Qeh~Jy@s[sW{pqZSuIVpyyXc Jy@s[sW{pqZSzY}Zz|d`v{wuK}KsIwyI|fsJ~gqJyvs}YqKy[E{{pqTyqx P{}Z[x P{}Z|s]W{pqTy\`QteZ[xEP_y[E{{pqTyqx{Y_Z}[{{Tb:D_UA@
WE_UzsrW{_vYisz{XiJZzI|KK|cI|vy[q\W{qqUz]u@hqyzZj {[GyzsrW{qz]Q} {X_[j]eEhjjDQweEk eGiwaEQKGihbY~s_UzsrW{_\YzZ\Y|HbZ|wyYhXuFitz}a jZuX~eu}ZjD_iEjJvkfb_|tf{[GyzsrW{qzGihbY}[zPIzCq[qUzsrYQuvRsz{[	^QweZVzzBj_XP[[q\W{qqUz^qFQ\a[|Yz |v}[q\W{qqUz^qJ{X_[g[
u`aqJ~JrWXqK~IGK E~YrG|f_E~czCq[qUzsrYVuHHzZ\YVuHHzYD{{qqUzsy Wjr^zZ\YP_	GiczCq[qUzsrYV[yzZzYq\ 9F_UAA
PVW
WR

UQP QT 	PWrH[QE]UC
U\QBKCDZ_\^]]UCWQE@ZDJF^CGICUFSBXVQVWBfJ@V\]^WVPVQRUQ 	
WPP
QmU
QPTW

R
V	PRWpoW

RQWQRUTRPSW
PVSQU
S V	

UTRQ	RXFF@AR T UD]WTP^[E_S^@ZW[D:D_U@CP
VUPUWQR P  SpQZY\RXF]S\B^\	W]SAIBFY]]]_\WAVSFB[FIG\@FK@WDP@ZUSWUAdKBU]_]UURUPPWR	VRQ	SlVRU	QQPmU
SSWQP	VVRQ	SUPV
QRUQ 	W

WVQS	SZDFCCSTUD_UVP^ZG]S]BZWZF	9DA_XS^W
UQQVVP  VVRW
pU^UT]W]^	URUPPWR	VRQ	SlVRU	QQPmU
SSWQP	VVRQ	SUPV
QRUQ 	W

WVQS	SZDFCCSTUD_UVP^ZG]S]BZWZF	9F_UAA
QRW		TUQQ RVr][_[T_U]UR
U\PBJ@F[_\^\^WCWPEAYFKF_CDKBUGSCZWQVVBgIBW\\^VWQVRPUQWQSQmUSVSRS oWQSU
RPWUQSQV	RU
SSV	S
U	 WTPP
QZFDB@ Q VVG_W US]XG_Q\AYTXF	8E\VCAVPPWVRRT	 
SUQrQX[]Q[BQV W\S@J@GY]\\\^VAWSGAYGIF\ADJ@WDQC[USVU@gICU\_\VURTRQWS
	WQS	SmW
SV	QQQlW

RQWQRUTRP
QW
PVSQU
S V	

UTRQ	RXFF@AR T UD]WTP^[E_S^@ZW[D:D_U@CSW
SQP	UWQ W  Q	RpU_UU^UDY V^Q@IBGY\^\_\V@UQGB[GID^AFJ@VFQ@[URTW@dKCU^]\UUPTPQVS
	URQ	RoW
QU	PSQmU
SRVPQ	UTRQ	RWQWQQUQW
VVRQ	S[DG@ASU TD^UTQ^ZF]R^@[WZG	
:D^UA@

UPP 

WP
V  P	sT\WWV_UVPVU]S@K@FZ_]\]^WCVSG@YFJG\ADKCUDQBZVQWU@fIBV]_\WVRTRPUS 
VPS
QlWP
RW
TU	UPoVQSUPP
VVPS
QU	RW
RRW	R	UWUQSQZGDCCQVTF_VVQ\XG^Q]B[UXF
	9F^WCA	TW R

UPT  	PrT]VW_WUB
U\PBJ@F[_\^\^WCWPEAYFKF_CDKBUGSCZWQVVBgIBW\\^VWQVRPUQWQSQmUPQVT	U	TRoejWT VQQRWUPSWVP	Q l V TUUPQRVQUSQWS
W		UTRPSXFG@@S UVF]WUS\ZE_R^AYUZD
:E]WACVGyyqrYWY{yqzIzYE|s[rWz^pHyX\WzEWEdY^Ua
]^@]\^]k[zAGZ Fcv\\~k]ZAjB_B{@TjbDFxC_Wx`ESH\FcGRefFj]TeXQ^xBj [ |dY[|s{zss[iea[zZ]Uy_WDigVFja^jc{Atc\WzsxERy zZ]UyXb ~I{Atc\WzsxBjqzzs{J~XqZidxX}q|gcK|fvHig{Fiee]~I~XrG~t}XeYjgk[|s{zss[ie_[zZ]UyXvIzYE|s[rWz^|XUazzsxZTjaFzYE|s[rWz]^TqzzsxSKzCwa]Uyqy Vhp^yX\Wz]DR_fYqyyqrYRwHTqzzsx\Ree^QggGj vYqyyqrYPwtQqzzs{DU\WhPx`eUuTFzYE|s[rWz^`ASKzzsxRz~YqyyqrYPByX\WzY{|s\9F_WCA	UE{{pqZT[{{pyJy[E~qZqTy\pJ{Y_TyGWGgZ]Wa__C^\\_  h[xCFYEasWc]C\R{akudIRQz` Q{}|K ~^_| |ES{fGieISdT\TvY{ZG}s[sW{^vXjq{{pzZQeVJVkyFi kY~r xyqsYQt	JTq{{py~vY~r xyqsYSdaZ[sY|gbX~vZYeGv^]|` K}edY~du~ cD|giD}vsJ|wyi_`Z{ZG}s[sW{^vCjq{{pyK}[{Cvb_TyqxJk [Z[sYkkfRK{Cvb_TyqxEhkaZ[sYV }Z|s{{pqZTz^Gh`yyqxEP_y[E~qZqTy_ZFQ aZ[sYk^\]SdI~^~^y[E~qZqTy\pXVtWZ[sY~ Ta i|fbY|K{Cvb_Tyqx P{}Z[sYVtHIy[E~qZqTy\|ES`yyq{Yvb@
:F@_XR^		PTQUQP 
R VV PpGB]FB]]_
UPTPQVS
	URQ	RoW	
VQU	QPVmU
SRVPQ	WQWQQUQW
VVRQ	SUUPQRXGDBARV VF]V TS\[E^Q\@YU[D
	8D\W@C	SQPT
WR
V  	VpUEQYH[R_UU\Z_\TTQU]S@K@FZ_]\]^WCVSG@YFJG\ADKCUDQBZVQWU@fIBV]_\WVRTRPUS 
VPS
QlD]YI]llW

RQWQRUTRPSW
PVSQU
S V	

UTRQ	RXFF@AR T UD]WTP^[E_S^@ZW[D:D_U@C	UQ
  	WTWQ
  QUpTGSYKYYY\BY\TPVU]S@K@FZ_]\]^WCVSG@YFJG\ADKCUDQBZVQWU@fIBV]_\WVRTRPUS 
VPS
QlCW]E^llW

RQWQRVS U
 P
VRQU	RWTPP
QW
RURSW
RV		UUPQRXGDBARV VF]V TS\[E^Q\@YU[D
	8FB]YQ]


WSTWQSVRVVUWRW
QVVsVGQ[JZZZ^B[^UWR
UPTPQVS
	URQ	RoAW_G_ooWQSU
RPWUQSQV	RU
SSV	S
U	 WTPP
QZFDB@ Q VVG_W US]XG_Q\AYTXF	8E\VCA USTS
VVRP   	WrJYPF^WS V^Q@IBGY\^\_\V@UQGB[GID^AFJ@VFQ@[URTW@dKCU^]\UUPTPQVS
	URQ	RoAW_G_ooWQSU
RPWUQSQV	RU
SSV	S
U	 WTPP
QZFDB@ Q VVG_W US]XG_Q\AYTXF	89